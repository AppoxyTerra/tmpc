	.file	"main.cpp"
 # GNU C++20 (GCC) version 11.2.0 (x86_64-w64-mingw32)
 #	compiled by GNU C version 11.2.0, GMP version 6.2.1, MPFR version 4.1.0-p13, MPC version 1.2.1, isl version isl-0.24-GMP

 # GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
 # options passed: -mtune=generic -march=x86-64 -g -O0 -std=c++20 -ffast-math
	.text
.Ltext0:
	.file 0 "C:/Users/pluto/Desktop/tmpc/not_temp/3738" "main.cpp"
	.section	.text$_ZSt21is_constant_evaluatedv,"x"
	.linkonce discard
	.globl	_ZSt21is_constant_evaluatedv
	.def	_ZSt21is_constant_evaluatedv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt21is_constant_evaluatedv
_ZSt21is_constant_evaluatedv:
.LFB270:
	.file 1 "c:/users/pluto/scoop/apps/gcc/current/include/c++/11.2.0/type_traits"
	.loc 1 3325 3
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI0:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1:
	.seh_endprologue
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\type_traits:3325:   { return __builtin_is_constant_evaluated(); }
	.loc 1 3325 44
	movl	$0, %eax	 #, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\type_traits:3325:   { return __builtin_is_constant_evaluated(); }
	.loc 1 3325 47
	popq	%rbp	 #
.LCFI2:
	ret	
.LFE270:
	.seh_endproc
	.section	.text$_ZnwyPv,"x"
	.linkonce discard
	.globl	_ZnwyPv
	.def	_ZnwyPv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZnwyPv
_ZnwyPv:
.LFB432:
	.file 2 "c:/users/pluto/scoop/apps/gcc/current/include/c++/11.2.0/new"
	.loc 2 175 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI3:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI4:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # D.14769, D.14769
	movq	%rdx, 24(%rbp)	 # __p, __p
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\new:175: { return __p; }
	.loc 2 175 10
	movq	24(%rbp), %rax	 # __p, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\new:175: { return __p; }
	.loc 2 175 15
	popq	%rbp	 #
.LCFI5:
	ret	
.LFE432:
	.seh_endproc
	.section	.text$_ZdlPvS_,"x"
	.linkonce discard
	.globl	_ZdlPvS_
	.def	_ZdlPvS_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZdlPvS_
_ZdlPvS_:
.LFB434:
	.loc 2 180 67
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI6:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI7:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # D.14777, D.14777
	movq	%rdx, 24(%rbp)	 # D.14778, D.14778
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\new:180: inline void operator delete  (void*, void*) _GLIBCXX_USE_NOEXCEPT { }
	.loc 2 180 69
	nop	
	popq	%rbp	 #
.LCFI8:
	ret	
.LFE434:
	.seh_endproc
	.section	.text$_ZSt17__size_to_integery,"x"
	.linkonce discard
	.globl	_ZSt17__size_to_integery
	.def	_ZSt17__size_to_integery;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt17__size_to_integery
_ZSt17__size_to_integery:
.LFB704:
	.file 3 "c:/users/pluto/scoop/apps/gcc/current/include/c++/11.2.0/bits/stl_algobase.h"
	.loc 3 1014 45
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI9:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI10:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __n, __n
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:1014:   __size_to_integer(unsigned long long __n) { return __n; }
	.loc 3 1014 54
	movq	16(%rbp), %rax	 # __n, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:1014:   __size_to_integer(unsigned long long __n) { return __n; }
	.loc 3 1014 59
	popq	%rbp	 #
.LCFI11:
	ret	
.LFE704:
	.seh_endproc
	.section	.text$_ZN5ColoraSE7Vector3,"x"
	.linkonce discard
	.align 2
	.globl	_ZN5ColoraSE7Vector3
	.def	_ZN5ColoraSE7Vector3;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN5ColoraSE7Vector3
_ZN5ColoraSE7Vector3:
.LFB1117:
	.file 4 "c:/users/pluto/scoop/apps/gcc/current/include/c++/11.2.0/raylib/raylib.h"
	.loc 4 267 12
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI12:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI13:
	leaq	(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI14:
	.seh_endprologue
	movq	%rcx, 24(%rbp)	 # this, this
	movq	%rdx, %rbx	 #, tmp93
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:268:         r = (unsigned char)(vec.x*255.0f);
	.loc 4 268 33
	movss	(%rbx), %xmm1	 # vec.x, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:268:         r = (unsigned char)(vec.x*255.0f);
	.loc 4 268 34
	movss	.LC0(%rip), %xmm0	 #, tmp94
	mulss	%xmm1, %xmm0	 # _1, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:268:         r = (unsigned char)(vec.x*255.0f);
	.loc 4 268 13
	cvttss2sil	%xmm0, %eax	 # _2, tmp96
	movl	%eax, %edx	 # tmp95, _3
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:268:         r = (unsigned char)(vec.x*255.0f);
	.loc 4 268 11
	movq	24(%rbp), %rax	 # this, tmp97
	movb	%dl, (%rax)	 # _3, this_11(D)->r
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:269:         g = (unsigned char)(vec.y*255.0f);
	.loc 4 269 33
	movss	4(%rbx), %xmm1	 # vec.y, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:269:         g = (unsigned char)(vec.y*255.0f);
	.loc 4 269 34
	movss	.LC0(%rip), %xmm0	 #, tmp98
	mulss	%xmm1, %xmm0	 # _4, _5
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:269:         g = (unsigned char)(vec.y*255.0f);
	.loc 4 269 13
	cvttss2sil	%xmm0, %eax	 # _5, tmp100
	movl	%eax, %edx	 # tmp99, _6
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:269:         g = (unsigned char)(vec.y*255.0f);
	.loc 4 269 11
	movq	24(%rbp), %rax	 # this, tmp101
	movb	%dl, 1(%rax)	 # _6, this_11(D)->g
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:270:         b = (unsigned char)(vec.z*255.0f);
	.loc 4 270 33
	movss	8(%rbx), %xmm1	 # vec.z, _7
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:270:         b = (unsigned char)(vec.z*255.0f);
	.loc 4 270 34
	movss	.LC0(%rip), %xmm0	 #, tmp102
	mulss	%xmm1, %xmm0	 # _7, _8
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:270:         b = (unsigned char)(vec.z*255.0f);
	.loc 4 270 13
	cvttss2sil	%xmm0, %eax	 # _8, tmp104
	movl	%eax, %edx	 # tmp103, _9
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:270:         b = (unsigned char)(vec.z*255.0f);
	.loc 4 270 11
	movq	24(%rbp), %rax	 # this, tmp105
	movb	%dl, 2(%rax)	 # _9, this_11(D)->b
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:271:         a = (unsigned char)(255);
	.loc 4 271 11
	movq	24(%rbp), %rax	 # this, tmp106
	movb	$-1, 3(%rax)	 #, this_11(D)->a
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:272:         return *this;
	.loc 4 272 17
	movq	24(%rbp), %rax	 # this, _16
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:273:     }
	.loc 4 273 5
	popq	%rbx	 #
.LCFI15:
	popq	%rbp	 #
.LCFI16:
	ret	
.LFE1117:
	.seh_endproc
	.text
	.globl	_Zpl
	.def	_Zpl;	.scl	2;	.type	32;	.endef
	.seh_proc	_Zpl
_Zpl:
.LFB1118:
	.loc 4 1643 36
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI17:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI18:
	.seh_endprologue
	movl	%ecx, 16(%rbp)	 # a, a
	movl	%edx, 24(%rbp)	 # b, b
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1644:     return {a.r + b.r, a.g + b.g, a.b + b.b, (a.a == 255 && b.a == 255) ? 255 : a.a + b.a};
	.loc 4 1644 15
	movzbl	16(%rbp), %ecx	 # a.r, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1644:     return {a.r + b.r, a.g + b.g, a.b + b.b, (a.a == 255 && b.a == 255) ? 255 : a.a + b.a};
	.loc 4 1644 21
	movzbl	24(%rbp), %edx	 # b.r, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1644:     return {a.r + b.r, a.g + b.g, a.b + b.b, (a.a == 255 && b.a == 255) ? 255 : a.a + b.a};
	.loc 4 1644 17
	addl	%ecx, %edx	 # _1, _3
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1644:     return {a.r + b.r, a.g + b.g, a.b + b.b, (a.a == 255 && b.a == 255) ? 255 : a.a + b.a};
	.loc 4 1644 90
	movb	%dl, %al	 # _3, D.127123
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1644:     return {a.r + b.r, a.g + b.g, a.b + b.b, (a.a == 255 && b.a == 255) ? 255 : a.a + b.a};
	.loc 4 1644 26
	movzbl	17(%rbp), %ecx	 # a.g, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1644:     return {a.r + b.r, a.g + b.g, a.b + b.b, (a.a == 255 && b.a == 255) ? 255 : a.a + b.a};
	.loc 4 1644 32
	movzbl	25(%rbp), %edx	 # b.g, _5
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1644:     return {a.r + b.r, a.g + b.g, a.b + b.b, (a.a == 255 && b.a == 255) ? 255 : a.a + b.a};
	.loc 4 1644 28
	addl	%ecx, %edx	 # _4, _6
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1644:     return {a.r + b.r, a.g + b.g, a.b + b.b, (a.a == 255 && b.a == 255) ? 255 : a.a + b.a};
	.loc 4 1644 90
	movb	%dl, %ah	 # _6, D.127123
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1644:     return {a.r + b.r, a.g + b.g, a.b + b.b, (a.a == 255 && b.a == 255) ? 255 : a.a + b.a};
	.loc 4 1644 37
	movzbl	18(%rbp), %ecx	 # a.b, _7
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1644:     return {a.r + b.r, a.g + b.g, a.b + b.b, (a.a == 255 && b.a == 255) ? 255 : a.a + b.a};
	.loc 4 1644 43
	movzbl	26(%rbp), %edx	 # b.b, _8
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1644:     return {a.r + b.r, a.g + b.g, a.b + b.b, (a.a == 255 && b.a == 255) ? 255 : a.a + b.a};
	.loc 4 1644 39
	addl	%ecx, %edx	 # _7, _9
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1644:     return {a.r + b.r, a.g + b.g, a.b + b.b, (a.a == 255 && b.a == 255) ? 255 : a.a + b.a};
	.loc 4 1644 90
	movzbl	%dl, %edx	 # _9, tmp98
	sall	$16, %edx	 #, tmp99
	andl	$-16711681, %eax	 #, tmp100
	orl	%edx, %eax	 # tmp99, tmp101
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1644:     return {a.r + b.r, a.g + b.g, a.b + b.b, (a.a == 255 && b.a == 255) ? 255 : a.a + b.a};
	.loc 4 1644 49
	movzbl	19(%rbp), %edx	 # a.a, _10
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1644:     return {a.r + b.r, a.g + b.g, a.b + b.b, (a.a == 255 && b.a == 255) ? 255 : a.a + b.a};
	.loc 4 1644 90
	cmpb	$-1, %dl	 #, _10
	jne	.L11	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1644:     return {a.r + b.r, a.g + b.g, a.b + b.b, (a.a == 255 && b.a == 255) ? 255 : a.a + b.a};
	.loc 4 1644 63 discriminator 2
	movzbl	27(%rbp), %edx	 # b.a, _11
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1644:     return {a.r + b.r, a.g + b.g, a.b + b.b, (a.a == 255 && b.a == 255) ? 255 : a.a + b.a};
	.loc 4 1644 58 discriminator 2
	cmpb	$-1, %dl	 #, _11
	je	.L12	 #,
.L11:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1644:     return {a.r + b.r, a.g + b.g, a.b + b.b, (a.a == 255 && b.a == 255) ? 255 : a.a + b.a};
	.loc 4 1644 83 discriminator 3
	movzbl	19(%rbp), %ecx	 # a.a, _12
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1644:     return {a.r + b.r, a.g + b.g, a.b + b.b, (a.a == 255 && b.a == 255) ? 255 : a.a + b.a};
	.loc 4 1644 89 discriminator 3
	movzbl	27(%rbp), %edx	 # b.a, _13
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1644:     return {a.r + b.r, a.g + b.g, a.b + b.b, (a.a == 255 && b.a == 255) ? 255 : a.a + b.a};
	.loc 4 1644 90 discriminator 3
	addl	%ecx, %edx	 # _12, iftmp.0_14
	jmp	.L13	 #
.L12:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1644:     return {a.r + b.r, a.g + b.g, a.b + b.b, (a.a == 255 && b.a == 255) ? 255 : a.a + b.a};
	.loc 4 1644 90 is_stmt 0 discriminator 4
	movl	$-1, %edx	 #, iftmp.0_14
.L13:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1644:     return {a.r + b.r, a.g + b.g, a.b + b.b, (a.a == 255 && b.a == 255) ? 255 : a.a + b.a};
	.loc 4 1644 90 discriminator 6
	movzbl	%dl, %edx	 # iftmp.0_14, tmp102
	sall	$24, %edx	 #, tmp103
	andl	$16777215, %eax	 #, tmp104
	orl	%edx, %eax	 # tmp103, tmp105
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1645: }
	.loc 4 1645 1 is_stmt 1 discriminator 6
	popq	%rbp	 #
.LCFI19:
	ret	
.LFE1118:
	.seh_endproc
	.globl	_Zmi
	.def	_Zmi;	.scl	2;	.type	32;	.endef
	.seh_proc	_Zmi
_Zmi:
.LFB1119:
	.loc 4 1646 36
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI20:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI21:
	.seh_endprologue
	movl	%ecx, 16(%rbp)	 # a, a
	movl	%edx, 24(%rbp)	 # b, b
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1647:     return {a.r - b.r, a.g - b.g, a.b - b.b, (a.a == 255 && b.a == 255) ? 255 : a.a - b.a};
	.loc 4 1647 15
	movzbl	16(%rbp), %edx	 # a.r, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1647:     return {a.r - b.r, a.g - b.g, a.b - b.b, (a.a == 255 && b.a == 255) ? 255 : a.a - b.a};
	.loc 4 1647 21
	movzbl	24(%rbp), %ecx	 # b.r, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1647:     return {a.r - b.r, a.g - b.g, a.b - b.b, (a.a == 255 && b.a == 255) ? 255 : a.a - b.a};
	.loc 4 1647 17
	subl	%ecx, %edx	 # _2, _3
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1647:     return {a.r - b.r, a.g - b.g, a.b - b.b, (a.a == 255 && b.a == 255) ? 255 : a.a - b.a};
	.loc 4 1647 90
	movb	%dl, %al	 # _3, D.127130
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1647:     return {a.r - b.r, a.g - b.g, a.b - b.b, (a.a == 255 && b.a == 255) ? 255 : a.a - b.a};
	.loc 4 1647 26
	movzbl	17(%rbp), %edx	 # a.g, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1647:     return {a.r - b.r, a.g - b.g, a.b - b.b, (a.a == 255 && b.a == 255) ? 255 : a.a - b.a};
	.loc 4 1647 32
	movzbl	25(%rbp), %ecx	 # b.g, _5
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1647:     return {a.r - b.r, a.g - b.g, a.b - b.b, (a.a == 255 && b.a == 255) ? 255 : a.a - b.a};
	.loc 4 1647 28
	subl	%ecx, %edx	 # _5, _6
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1647:     return {a.r - b.r, a.g - b.g, a.b - b.b, (a.a == 255 && b.a == 255) ? 255 : a.a - b.a};
	.loc 4 1647 90
	movb	%dl, %ah	 # _6, D.127130
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1647:     return {a.r - b.r, a.g - b.g, a.b - b.b, (a.a == 255 && b.a == 255) ? 255 : a.a - b.a};
	.loc 4 1647 37
	movzbl	18(%rbp), %edx	 # a.b, _7
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1647:     return {a.r - b.r, a.g - b.g, a.b - b.b, (a.a == 255 && b.a == 255) ? 255 : a.a - b.a};
	.loc 4 1647 43
	movzbl	26(%rbp), %ecx	 # b.b, _8
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1647:     return {a.r - b.r, a.g - b.g, a.b - b.b, (a.a == 255 && b.a == 255) ? 255 : a.a - b.a};
	.loc 4 1647 39
	subl	%ecx, %edx	 # _8, _9
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1647:     return {a.r - b.r, a.g - b.g, a.b - b.b, (a.a == 255 && b.a == 255) ? 255 : a.a - b.a};
	.loc 4 1647 90
	movzbl	%dl, %edx	 # _9, tmp98
	sall	$16, %edx	 #, tmp99
	andl	$-16711681, %eax	 #, tmp100
	orl	%edx, %eax	 # tmp99, tmp101
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1647:     return {a.r - b.r, a.g - b.g, a.b - b.b, (a.a == 255 && b.a == 255) ? 255 : a.a - b.a};
	.loc 4 1647 49
	movzbl	19(%rbp), %edx	 # a.a, _10
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1647:     return {a.r - b.r, a.g - b.g, a.b - b.b, (a.a == 255 && b.a == 255) ? 255 : a.a - b.a};
	.loc 4 1647 90
	cmpb	$-1, %dl	 #, _10
	jne	.L16	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1647:     return {a.r - b.r, a.g - b.g, a.b - b.b, (a.a == 255 && b.a == 255) ? 255 : a.a - b.a};
	.loc 4 1647 63 discriminator 2
	movzbl	27(%rbp), %edx	 # b.a, _11
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1647:     return {a.r - b.r, a.g - b.g, a.b - b.b, (a.a == 255 && b.a == 255) ? 255 : a.a - b.a};
	.loc 4 1647 58 discriminator 2
	cmpb	$-1, %dl	 #, _11
	je	.L17	 #,
.L16:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1647:     return {a.r - b.r, a.g - b.g, a.b - b.b, (a.a == 255 && b.a == 255) ? 255 : a.a - b.a};
	.loc 4 1647 83 discriminator 3
	movzbl	19(%rbp), %edx	 # a.a, _12
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1647:     return {a.r - b.r, a.g - b.g, a.b - b.b, (a.a == 255 && b.a == 255) ? 255 : a.a - b.a};
	.loc 4 1647 89 discriminator 3
	movzbl	27(%rbp), %ecx	 # b.a, _13
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1647:     return {a.r - b.r, a.g - b.g, a.b - b.b, (a.a == 255 && b.a == 255) ? 255 : a.a - b.a};
	.loc 4 1647 90 discriminator 3
	subl	%ecx, %edx	 # _13, iftmp.1_14
	jmp	.L18	 #
.L17:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1647:     return {a.r - b.r, a.g - b.g, a.b - b.b, (a.a == 255 && b.a == 255) ? 255 : a.a - b.a};
	.loc 4 1647 90 is_stmt 0 discriminator 4
	movl	$-1, %edx	 #, iftmp.1_14
.L18:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1647:     return {a.r - b.r, a.g - b.g, a.b - b.b, (a.a == 255 && b.a == 255) ? 255 : a.a - b.a};
	.loc 4 1647 90 discriminator 6
	movzbl	%dl, %edx	 # iftmp.1_14, tmp102
	sall	$24, %edx	 #, tmp103
	andl	$16777215, %eax	 #, tmp104
	orl	%edx, %eax	 # tmp103, tmp105
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1648: }
	.loc 4 1648 1 is_stmt 1 discriminator 6
	popq	%rbp	 #
.LCFI22:
	ret	
.LFE1119:
	.seh_endproc
	.globl	_Zml
	.def	_Zml;	.scl	2;	.type	32;	.endef
	.seh_proc	_Zml
_Zml:
.LFB1120:
	.loc 4 1652 36
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI23:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI24:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movl	%ecx, 16(%rbp)	 # a, a
	movl	%edx, 24(%rbp)	 # b, b
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1653:     return ColorTint(a, b);
	.loc 4 1653 21
	movl	24(%rbp), %eax	 # b, tmp84
	movl	%eax, %edx	 # tmp84,
	movl	16(%rbp), %ecx	 # a,
	call	ColorTint	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1654: }
	.loc 4 1654 1
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI25:
	ret	
.LFE1120:
	.seh_endproc
	.align 2
	.globl	_ZN5Color4fromE7Vector4
	.def	_ZN5Color4fromE7Vector4;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN5Color4fromE7Vector4
_ZN5Color4fromE7Vector4:
.LFB1121:
	.loc 4 1665 32
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI26:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI27:
	subq	$72, %rsp	 #,
	.seh_stackalloc	72
.LCFI28:
	leaq	64(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 64
.LCFI29:
	.seh_endprologue
	movq	%rcx, %rbx	 #, tmp84
	movq	(%rbx), %rax	 # vec, tmp85
	movq	8(%rbx), %rdx	 # vec,
	movq	%rax, -16(%rbp)	 # tmp85, vec
	movq	%rdx, -8(%rbp)	 #, vec
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1666:     return ColorFromNormalized(vec);
	.loc 4 1666 31
	movq	-16(%rbp), %rax	 # vec, tmp86
	movq	-8(%rbp), %rdx	 # vec,
	movq	%rax, -32(%rbp)	 # tmp86,
	movq	%rdx, -24(%rbp)	 #,
	leaq	-32(%rbp), %rax	 #, tmp87
	movq	%rax, %rcx	 # tmp87,
	call	ColorFromNormalized	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1667: }
	.loc 4 1667 1
	addq	$72, %rsp	 #,
	popq	%rbx	 #
.LCFI30:
	popq	%rbp	 #
.LCFI31:
	ret	
.LFE1121:
	.seh_endproc
	.align 2
	.globl	_ZN5Color4fromEf
	.def	_ZN5Color4fromEf;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN5Color4fromEf
_ZN5Color4fromEf:
.LFB1122:
	.loc 4 1669 28
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI32:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI33:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI34:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI35:
	.seh_endprologue
	movss	%xmm0, 32(%rbp)	 # t, t
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1670:     return rgb(sinf(t)*127.0f+127.0f,sinf(t+2.0f/3.0f*PI)*127.0f+127.0f,sinf(t+4.0f/3.0f*PI)*127.0f+127.0f);
	.loc 4 1670 12
	movss	32(%rbp), %xmm0	 # t,
	call	sinf	 #
	movss	.LC1(%rip), %xmm1	 #, tmp98
	addss	%xmm0, %xmm1	 # _1, _2
	movss	.LC2(%rip), %xmm0	 #, tmp99
	mulss	%xmm1, %xmm0	 # _2, _3
	cvttss2sil	%xmm0, %eax	 # _3, tmp101
	movb	%al, %bl	 # _4, D.127141
	movss	32(%rbp), %xmm1	 # t, tmp102
	movss	.LC3(%rip), %xmm0	 #, tmp103
	addss	%xmm0, %xmm1	 # tmp103, tmp102
	movd	%xmm1, %eax	 # tmp102, _5
	movd	%eax, %xmm0	 # _5,
	call	sinf	 #
	movss	.LC1(%rip), %xmm1	 #, tmp104
	addss	%xmm0, %xmm1	 # _6, _7
	movss	.LC2(%rip), %xmm0	 #, tmp105
	mulss	%xmm1, %xmm0	 # _7, _8
	cvttss2sil	%xmm0, %eax	 # _8, tmp107
	movb	%al, %bh	 # _9, D.127141
	movss	32(%rbp), %xmm1	 # t, tmp108
	movss	.LC4(%rip), %xmm0	 #, tmp109
	addss	%xmm0, %xmm1	 # tmp109, tmp108
	movd	%xmm1, %eax	 # tmp108, _10
	movd	%eax, %xmm0	 # _10,
	call	sinf	 #
	movss	.LC1(%rip), %xmm1	 #, tmp110
	addss	%xmm0, %xmm1	 # _11, _12
	movss	.LC2(%rip), %xmm0	 #, tmp111
	mulss	%xmm1, %xmm0	 # _12, _13
	cvttss2sil	%xmm0, %eax	 # _13, tmp113
	movzbl	%al, %eax	 # _14, tmp114
	sall	$16, %eax	 #, tmp115
	movl	%ebx, %edx	 # D.127141, D.127141
	andl	$-16711681, %edx	 #, D.127141
	orl	%edx, %eax	 # tmp116, tmp117
	movl	%eax, %ebx	 # tmp117, D.127141
	movl	%ebx, %eax	 # D.127141, D.127141
	orl	$-16777216, %eax	 #, D.127141
	movl	%eax, %ebx	 # tmp119, D.127141
	movl	%ebx, %eax	 # D.127141, <retval>
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1671: }
	.loc 4 1671 1
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI36:
	popq	%rbp	 #
.LCFI37:
	ret	
.LFE1122:
	.seh_endproc
	.align 2
	.globl	_ZN5Color4fromE7Vector3
	.def	_ZN5Color4fromE7Vector3;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN5Color4fromE7Vector3
_ZN5Color4fromE7Vector3:
.LFB1123:
	.loc 4 1673 32
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI38:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI39:
	subq	$72, %rsp	 #,
	.seh_stackalloc	72
.LCFI40:
	leaq	64(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 64
.LCFI41:
	.seh_endprologue
	movq	%rcx, %rbx	 #, tmp84
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1675:     ret = vec;
	.loc 4 1675 11
	movq	(%rbx), %rax	 # vec, tmp85
	movq	%rax, -32(%rbp)	 # tmp85,
	movl	8(%rbx), %eax	 # vec, tmp86
	movl	%eax, -24(%rbp)	 # tmp86,
	leaq	-32(%rbp), %rdx	 #, tmp87
	leaq	-4(%rbp), %rax	 #, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZN5ColoraSE7Vector3	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1676:     return ret;
	.loc 4 1676 12
	movl	-4(%rbp), %eax	 # ret, D.127143
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1677: }
	.loc 4 1677 1
	addq	$72, %rsp	 #,
	popq	%rbx	 #
.LCFI42:
	popq	%rbp	 #
.LCFI43:
	ret	
.LFE1123:
	.seh_endproc
	.align 2
	.globl	_ZNK5Color5toHSVEv
	.def	_ZNK5Color5toHSVEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNK5Color5toHSVEv
_ZNK5Color5toHSVEv:
.LFB1124:
	.loc 4 1679 30
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI44:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI45:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, 24(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1679: Vector3 Color::toHSV() const { return ColorToHSV(*this); }
	.loc 4 1679 49
	movq	16(%rbp), %rax	 # .result_ptr, tmp82
	movq	24(%rbp), %rdx	 # this, tmp83
	movl	(%rdx), %edx	 # *this_2(D),
	movq	%rax, %rcx	 # tmp82,
	call	ColorToHSV	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1679: Vector3 Color::toHSV() const { return ColorToHSV(*this); }
	.loc 4 1679 55
	nop	
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1679: Vector3 Color::toHSV() const { return ColorToHSV(*this); }
	.loc 4 1679 58
	movq	16(%rbp), %rax	 # .result_ptr,
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI46:
	ret	
.LFE1124:
	.seh_endproc
	.align 2
	.globl	_ZN5Color7fromHSVE7Vector3
	.def	_ZN5Color7fromHSVE7Vector3;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN5Color7fromHSVE7Vector3
_ZN5Color7fromHSVE7Vector3:
.LFB1125:
	.loc 4 1680 35
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI47:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI48:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI49:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI50:
	.seh_endprologue
	movq	%rcx, %rbx	 #, tmp87
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1680: Color Color::fromHSV(Vector3 vec) { return ColorFromHSV(vec.x, vec.y, vec.z); }
	.loc 4 1680 56
	movss	8(%rbx), %xmm1	 # vec.z, _1
	movss	4(%rbx), %xmm0	 # vec.y, _2
	movl	(%rbx), %eax	 # vec.x, _3
	movaps	%xmm1, %xmm2	 # _1,
	movaps	%xmm0, %xmm1	 # _2,
	movd	%eax, %xmm0	 # _3,
	call	ColorFromHSV	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1680: Color Color::fromHSV(Vector3 vec) { return ColorFromHSV(vec.x, vec.y, vec.z); }
	.loc 4 1680 79
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI51:
	popq	%rbp	 #
.LCFI52:
	ret	
.LFE1125:
	.seh_endproc
	.align 2
	.globl	_ZN5Color8setAlphaEf
	.def	_ZN5Color8setAlphaEf;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN5Color8setAlphaEf
_ZN5Color8setAlphaEf:
.LFB1126:
	.loc 4 1682 37
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI53:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI54:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movss	%xmm1, 24(%rbp)	 # alpha, alpha
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1683:     return *this = ColorAlpha(*this, alpha);
	.loc 4 1683 30
	movss	24(%rbp), %xmm0	 # alpha, tmp84
	movq	16(%rbp), %rax	 # this, tmp85
	movaps	%xmm0, %xmm1	 # tmp84,
	movl	(%rax), %ecx	 # MEM[(const struct Color &)this_2(D)],
	call	ColorAlpha	 #
	movl	%eax, %edx	 # tmp86, tmp87
	movq	16(%rbp), %rax	 # this, tmp88
	movl	%edx, (%rax)	 # tmp87, *this_2(D)
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1683:     return *this = ColorAlpha(*this, alpha);
	.loc 4 1683 43
	movq	16(%rbp), %rax	 # this, _5
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1684: }
	.loc 4 1684 1
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI55:
	ret	
.LFE1126:
	.seh_endproc
	.align 2
	.globl	_ZN5Color6randomEv
	.def	_ZN5Color6randomEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN5Color6randomEv
_ZN5Color6randomEv:
.LFB1127:
	.loc 4 1686 23
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI56:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI57:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI58:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI59:
	.seh_endprologue
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1687:     return rgb(GetRandomValue(0, 255), GetRandomValue(0, 255), GetRandomValue(0, 255));
	.loc 4 1687 12
	movl	$255, %edx	 #,
	movl	$0, %ecx	 #,
	call	GetRandomValue	 #
	movb	%al, %bl	 # _2, D.127154
	movl	$255, %edx	 #,
	movl	$0, %ecx	 #,
	call	GetRandomValue	 #
	movb	%al, %bh	 # _4, D.127154
	movl	$255, %edx	 #,
	movl	$0, %ecx	 #,
	call	GetRandomValue	 #
	movzbl	%al, %eax	 # _6, tmp90
	sall	$16, %eax	 #, tmp91
	movl	%ebx, %edx	 # D.127154, D.127154
	andl	$-16711681, %edx	 #, D.127154
	orl	%edx, %eax	 # tmp92, tmp93
	movl	%eax, %ebx	 # tmp93, D.127154
	movl	%ebx, %eax	 # D.127154, D.127154
	orl	$-16777216, %eax	 #, D.127154
	movl	%eax, %ebx	 # tmp95, D.127154
	movl	%ebx, %eax	 # D.127154, <retval>
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1688: }
	.loc 4 1688 1
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI60:
	popq	%rbp	 #
.LCFI61:
	ret	
.LFE1127:
	.seh_endproc
	.align 2
	.globl	_ZN5Color7randhueEv
	.def	_ZN5Color7randhueEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN5Color7randhueEv
_ZN5Color7randhueEv:
.LFB1128:
	.loc 4 1690 24
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI62:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI63:
	subq	$64, %rsp	 #,
	.seh_stackalloc	64
	.seh_endprologue
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1691:     return fromHSV({GetRandomValue(0, 10000)/10000.0f, 1.0f, 1.0f});
	.loc 4 1691 35
	movl	$10000, %edx	 #,
	movl	$0, %ecx	 #,
	call	GetRandomValue	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1691:     return fromHSV({GetRandomValue(0, 10000)/10000.0f, 1.0f, 1.0f});
	.loc 4 1691 45
	pxor	%xmm0, %xmm0	 # _2
	cvtsi2ssl	%eax, %xmm0	 # _1, _2
	movss	.LC5(%rip), %xmm1	 #, tmp87
	divss	%xmm1, %xmm0	 # tmp87, _3
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1691:     return fromHSV({GetRandomValue(0, 10000)/10000.0f, 1.0f, 1.0f});
	.loc 4 1691 19
	movss	%xmm0, -12(%rbp)	 # _3, D.127160.x
	movss	.LC1(%rip), %xmm0	 #, tmp88
	movss	%xmm0, -8(%rbp)	 # tmp88, D.127160.y
	movss	.LC1(%rip), %xmm0	 #, tmp89
	movss	%xmm0, -4(%rbp)	 # tmp89, D.127160.z
	movq	-12(%rbp), %rax	 # D.127160, tmp90
	movq	%rax, -32(%rbp)	 # tmp90,
	movl	-4(%rbp), %eax	 # D.127160, tmp91
	movl	%eax, -24(%rbp)	 # tmp91,
	leaq	-32(%rbp), %rax	 #, tmp92
	movq	%rax, %rcx	 # tmp92,
	call	_ZN5Color7fromHSVE7Vector3	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raylib.h:1692: }
	.loc 4 1692 1
	addq	$64, %rsp	 #,
	popq	%rbp	 #
.LCFI64:
	ret	
.LFE1128:
	.seh_endproc
	.section	.text$_Z11Vector2Zerov,"x"
	.linkonce discard
	.globl	_Z11Vector2Zerov
	.def	_Z11Vector2Zerov;	.scl	2;	.type	32;	.endef
	.seh_proc	_Z11Vector2Zerov
_Z11Vector2Zerov:
.LFB1139:
	.file 5 "c:/users/pluto/scoop/apps/gcc/current/include/c++/11.2.0/raylib/raymath.h"
	.loc 5 224 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI65:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI66:
	subq	$16, %rsp	 #,
	.seh_stackalloc	16
	.seh_endprologue
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:225:     Vector2 result = { 0.0f, 0.0f };
	.loc 5 225 13
	pxor	%xmm0, %xmm0	 # tmp84
	movss	%xmm0, -8(%rbp)	 # tmp84, result.x
	pxor	%xmm0, %xmm0	 # tmp85
	movss	%xmm0, -4(%rbp)	 # tmp85, result.y
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:227:     return result;
	.loc 5 227 12
	movq	-8(%rbp), %rax	 # result, D.127211
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:228: }
	.loc 5 228 1
	addq	$16, %rsp	 #,
	popq	%rbp	 #
.LCFI67:
	ret	
.LFE1139:
	.seh_endproc
	.section	.text$_Z10Vector2Onev,"x"
	.linkonce discard
	.globl	_Z10Vector2Onev
	.def	_Z10Vector2Onev;	.scl	2;	.type	32;	.endef
	.seh_proc	_Z10Vector2Onev
_Z10Vector2Onev:
.LFB1140:
	.loc 5 232 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI68:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI69:
	subq	$16, %rsp	 #,
	.seh_stackalloc	16
	.seh_endprologue
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:233:     Vector2 result = { 1.0f, 1.0f };
	.loc 5 233 13
	movss	.LC1(%rip), %xmm0	 #, tmp84
	movss	%xmm0, -8(%rbp)	 # tmp84, result.x
	movss	.LC1(%rip), %xmm0	 #, tmp85
	movss	%xmm0, -4(%rbp)	 # tmp85, result.y
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:235:     return result;
	.loc 5 235 12
	movq	-8(%rbp), %rax	 # result, D.127216
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:236: }
	.loc 5 236 1
	addq	$16, %rsp	 #,
	popq	%rbp	 #
.LCFI70:
	ret	
.LFE1140:
	.seh_endproc
	.section	.text$_Z10Vector2Add7Vector2S_,"x"
	.linkonce discard
	.globl	_Z10Vector2Add7Vector2S_
	.def	_Z10Vector2Add7Vector2S_;	.scl	2;	.type	32;	.endef
	.seh_proc	_Z10Vector2Add7Vector2S_
_Z10Vector2Add7Vector2S_:
.LFB1141:
	.loc 5 240 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI71:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI72:
	subq	$16, %rsp	 #,
	.seh_stackalloc	16
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # v1, v1
	movq	%rdx, 24(%rbp)	 # v2, v2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:241:     Vector2 result = { v1.x + v2.x, v1.y + v2.y };
	.loc 5 241 27
	movss	16(%rbp), %xmm1	 # v1.x, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:241:     Vector2 result = { v1.x + v2.x, v1.y + v2.y };
	.loc 5 241 34
	movss	24(%rbp), %xmm0	 # v2.x, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:241:     Vector2 result = { v1.x + v2.x, v1.y + v2.y };
	.loc 5 241 29
	addss	%xmm1, %xmm0	 # _1, _3
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:241:     Vector2 result = { v1.x + v2.x, v1.y + v2.y };
	.loc 5 241 49
	movss	%xmm0, -8(%rbp)	 # _3, result.x
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:241:     Vector2 result = { v1.x + v2.x, v1.y + v2.y };
	.loc 5 241 40
	movss	20(%rbp), %xmm1	 # v1.y, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:241:     Vector2 result = { v1.x + v2.x, v1.y + v2.y };
	.loc 5 241 47
	movss	28(%rbp), %xmm0	 # v2.y, _5
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:241:     Vector2 result = { v1.x + v2.x, v1.y + v2.y };
	.loc 5 241 42
	addss	%xmm1, %xmm0	 # _4, _6
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:241:     Vector2 result = { v1.x + v2.x, v1.y + v2.y };
	.loc 5 241 49
	movss	%xmm0, -4(%rbp)	 # _6, result.y
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:243:     return result;
	.loc 5 243 12
	movq	-8(%rbp), %rax	 # result, D.127167
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:244: }
	.loc 5 244 1
	addq	$16, %rsp	 #,
	popq	%rbp	 #
.LCFI73:
	ret	
.LFE1141:
	.seh_endproc
	.section	.text$_Z15Vector2AddValue7Vector2f,"x"
	.linkonce discard
	.globl	_Z15Vector2AddValue7Vector2f
	.def	_Z15Vector2AddValue7Vector2f;	.scl	2;	.type	32;	.endef
	.seh_proc	_Z15Vector2AddValue7Vector2f
_Z15Vector2AddValue7Vector2f:
.LFB1142:
	.loc 5 248 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI74:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI75:
	subq	$16, %rsp	 #,
	.seh_stackalloc	16
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # v, v
	movss	%xmm1, 24(%rbp)	 # add, add
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:249:     Vector2 result = { v.x + add, v.y + add };
	.loc 5 249 26
	movss	16(%rbp), %xmm0	 # v.x, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:249:     Vector2 result = { v.x + add, v.y + add };
	.loc 5 249 28
	addss	24(%rbp), %xmm0	 # add, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:249:     Vector2 result = { v.x + add, v.y + add };
	.loc 5 249 45
	movss	%xmm0, -8(%rbp)	 # _2, result.x
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:249:     Vector2 result = { v.x + add, v.y + add };
	.loc 5 249 37
	movss	20(%rbp), %xmm0	 # v.y, _3
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:249:     Vector2 result = { v.x + add, v.y + add };
	.loc 5 249 39
	addss	24(%rbp), %xmm0	 # add, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:249:     Vector2 result = { v.x + add, v.y + add };
	.loc 5 249 45
	movss	%xmm0, -4(%rbp)	 # _4, result.y
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:251:     return result;
	.loc 5 251 12
	movq	-8(%rbp), %rax	 # result, D.127187
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:252: }
	.loc 5 252 1
	addq	$16, %rsp	 #,
	popq	%rbp	 #
.LCFI76:
	ret	
.LFE1142:
	.seh_endproc
	.section	.text$_Z15Vector2Subtract7Vector2S_,"x"
	.linkonce discard
	.globl	_Z15Vector2Subtract7Vector2S_
	.def	_Z15Vector2Subtract7Vector2S_;	.scl	2;	.type	32;	.endef
	.seh_proc	_Z15Vector2Subtract7Vector2S_
_Z15Vector2Subtract7Vector2S_:
.LFB1143:
	.loc 5 256 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI77:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI78:
	subq	$16, %rsp	 #,
	.seh_stackalloc	16
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # v1, v1
	movq	%rdx, 24(%rbp)	 # v2, v2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:257:     Vector2 result = { v1.x - v2.x, v1.y - v2.y };
	.loc 5 257 27
	movss	16(%rbp), %xmm0	 # v1.x, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:257:     Vector2 result = { v1.x - v2.x, v1.y - v2.y };
	.loc 5 257 34
	movss	24(%rbp), %xmm1	 # v2.x, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:257:     Vector2 result = { v1.x - v2.x, v1.y - v2.y };
	.loc 5 257 29
	subss	%xmm1, %xmm0	 # _2, _3
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:257:     Vector2 result = { v1.x - v2.x, v1.y - v2.y };
	.loc 5 257 49
	movss	%xmm0, -8(%rbp)	 # _3, result.x
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:257:     Vector2 result = { v1.x - v2.x, v1.y - v2.y };
	.loc 5 257 40
	movss	20(%rbp), %xmm0	 # v1.y, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:257:     Vector2 result = { v1.x - v2.x, v1.y - v2.y };
	.loc 5 257 47
	movss	28(%rbp), %xmm1	 # v2.y, _5
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:257:     Vector2 result = { v1.x - v2.x, v1.y - v2.y };
	.loc 5 257 42
	subss	%xmm1, %xmm0	 # _5, _6
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:257:     Vector2 result = { v1.x - v2.x, v1.y - v2.y };
	.loc 5 257 49
	movss	%xmm0, -4(%rbp)	 # _6, result.y
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:259:     return result;
	.loc 5 259 12
	movq	-8(%rbp), %rax	 # result, D.127172
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:260: }
	.loc 5 260 1
	addq	$16, %rsp	 #,
	popq	%rbp	 #
.LCFI79:
	ret	
.LFE1143:
	.seh_endproc
	.section	.text$_Z20Vector2SubtractValue7Vector2f,"x"
	.linkonce discard
	.globl	_Z20Vector2SubtractValue7Vector2f
	.def	_Z20Vector2SubtractValue7Vector2f;	.scl	2;	.type	32;	.endef
	.seh_proc	_Z20Vector2SubtractValue7Vector2f
_Z20Vector2SubtractValue7Vector2f:
.LFB1144:
	.loc 5 264 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI80:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI81:
	subq	$16, %rsp	 #,
	.seh_stackalloc	16
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # v, v
	movss	%xmm1, 24(%rbp)	 # sub, sub
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:265:     Vector2 result = { v.x - sub, v.y - sub };
	.loc 5 265 26
	movss	16(%rbp), %xmm0	 # v.x, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:265:     Vector2 result = { v.x - sub, v.y - sub };
	.loc 5 265 28
	subss	24(%rbp), %xmm0	 # sub, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:265:     Vector2 result = { v.x - sub, v.y - sub };
	.loc 5 265 45
	movss	%xmm0, -8(%rbp)	 # _2, result.x
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:265:     Vector2 result = { v.x - sub, v.y - sub };
	.loc 5 265 37
	movss	20(%rbp), %xmm0	 # v.y, _3
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:265:     Vector2 result = { v.x - sub, v.y - sub };
	.loc 5 265 39
	subss	24(%rbp), %xmm0	 # sub, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:265:     Vector2 result = { v.x - sub, v.y - sub };
	.loc 5 265 45
	movss	%xmm0, -4(%rbp)	 # _4, result.y
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:267:     return result;
	.loc 5 267 12
	movq	-8(%rbp), %rax	 # result, D.127192
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:268: }
	.loc 5 268 1
	addq	$16, %rsp	 #,
	popq	%rbp	 #
.LCFI82:
	ret	
.LFE1144:
	.seh_endproc
	.section	.text$_Z13Vector2Length7Vector2,"x"
	.linkonce discard
	.globl	_Z13Vector2Length7Vector2
	.def	_Z13Vector2Length7Vector2;	.scl	2;	.type	32;	.endef
	.seh_proc	_Z13Vector2Length7Vector2
_Z13Vector2Length7Vector2:
.LFB1145:
	.loc 5 272 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI83:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI84:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # v, v
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:273:     float result = sqrtf((v.x*v.x) + (v.y*v.y));
	.loc 5 273 29
	movss	16(%rbp), %xmm1	 # v.x, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:273:     float result = sqrtf((v.x*v.x) + (v.y*v.y));
	.loc 5 273 33
	movss	16(%rbp), %xmm0	 # v.x, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:273:     float result = sqrtf((v.x*v.x) + (v.y*v.y));
	.loc 5 273 30
	mulss	%xmm0, %xmm1	 # _2, _3
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:273:     float result = sqrtf((v.x*v.x) + (v.y*v.y));
	.loc 5 273 41
	movss	20(%rbp), %xmm2	 # v.y, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:273:     float result = sqrtf((v.x*v.x) + (v.y*v.y));
	.loc 5 273 45
	movss	20(%rbp), %xmm0	 # v.y, _5
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:273:     float result = sqrtf((v.x*v.x) + (v.y*v.y));
	.loc 5 273 42
	mulss	%xmm2, %xmm0	 # _4, _6
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:273:     float result = sqrtf((v.x*v.x) + (v.y*v.y));
	.loc 5 273 25
	addss	%xmm0, %xmm1	 # _6, _3
	movd	%xmm1, %eax	 # _3, _7
	movd	%eax, %xmm0	 # _7,
	call	sqrtf	 #
	movd	%xmm0, %eax	 #, tmp91
	movl	%eax, -4(%rbp)	 # tmp91, result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:275:     return result;
	.loc 5 275 12
	movss	-4(%rbp), %xmm0	 # result, _10
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:276: }
	.loc 5 276 1
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI85:
	ret	
.LFE1145:
	.seh_endproc
	.section	.text$_Z16Vector2LengthSqr7Vector2,"x"
	.linkonce discard
	.globl	_Z16Vector2LengthSqr7Vector2
	.def	_Z16Vector2LengthSqr7Vector2;	.scl	2;	.type	32;	.endef
	.seh_proc	_Z16Vector2LengthSqr7Vector2
_Z16Vector2LengthSqr7Vector2:
.LFB1146:
	.loc 5 280 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI86:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI87:
	subq	$16, %rsp	 #,
	.seh_stackalloc	16
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # v, v
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:281:     float result = (v.x*v.x) + (v.y*v.y);
	.loc 5 281 23
	movss	16(%rbp), %xmm1	 # v.x, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:281:     float result = (v.x*v.x) + (v.y*v.y);
	.loc 5 281 27
	movss	16(%rbp), %xmm0	 # v.x, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:281:     float result = (v.x*v.x) + (v.y*v.y);
	.loc 5 281 24
	mulss	%xmm0, %xmm1	 # _2, _3
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:281:     float result = (v.x*v.x) + (v.y*v.y);
	.loc 5 281 35
	movss	20(%rbp), %xmm2	 # v.y, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:281:     float result = (v.x*v.x) + (v.y*v.y);
	.loc 5 281 39
	movss	20(%rbp), %xmm0	 # v.y, _5
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:281:     float result = (v.x*v.x) + (v.y*v.y);
	.loc 5 281 36
	mulss	%xmm2, %xmm0	 # _4, _6
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:281:     float result = (v.x*v.x) + (v.y*v.y);
	.loc 5 281 11
	addss	%xmm1, %xmm0	 # _3, tmp90
	movss	%xmm0, -4(%rbp)	 # tmp90, result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:283:     return result;
	.loc 5 283 12
	movss	-4(%rbp), %xmm0	 # result, _9
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:284: }
	.loc 5 284 1
	addq	$16, %rsp	 #,
	popq	%rbp	 #
.LCFI88:
	ret	
.LFE1146:
	.seh_endproc
	.section	.text$_Z17Vector2DotProduct7Vector2S_,"x"
	.linkonce discard
	.globl	_Z17Vector2DotProduct7Vector2S_
	.def	_Z17Vector2DotProduct7Vector2S_;	.scl	2;	.type	32;	.endef
	.seh_proc	_Z17Vector2DotProduct7Vector2S_
_Z17Vector2DotProduct7Vector2S_:
.LFB1147:
	.loc 5 288 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI89:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI90:
	subq	$16, %rsp	 #,
	.seh_stackalloc	16
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # v1, v1
	movq	%rdx, 24(%rbp)	 # v2, v2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:289:     float result = (v1.x*v2.x + v1.y*v2.y);
	.loc 5 289 24
	movss	16(%rbp), %xmm1	 # v1.x, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:289:     float result = (v1.x*v2.x + v1.y*v2.y);
	.loc 5 289 29
	movss	24(%rbp), %xmm0	 # v2.x, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:289:     float result = (v1.x*v2.x + v1.y*v2.y);
	.loc 5 289 25
	mulss	%xmm0, %xmm1	 # _2, _3
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:289:     float result = (v1.x*v2.x + v1.y*v2.y);
	.loc 5 289 36
	movss	20(%rbp), %xmm2	 # v1.y, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:289:     float result = (v1.x*v2.x + v1.y*v2.y);
	.loc 5 289 41
	movss	28(%rbp), %xmm0	 # v2.y, _5
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:289:     float result = (v1.x*v2.x + v1.y*v2.y);
	.loc 5 289 37
	mulss	%xmm2, %xmm0	 # _4, _6
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:289:     float result = (v1.x*v2.x + v1.y*v2.y);
	.loc 5 289 11
	addss	%xmm1, %xmm0	 # _3, tmp90
	movss	%xmm0, -4(%rbp)	 # tmp90, result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:291:     return result;
	.loc 5 291 12
	movss	-4(%rbp), %xmm0	 # result, _9
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:292: }
	.loc 5 292 1
	addq	$16, %rsp	 #,
	popq	%rbp	 #
.LCFI91:
	ret	
.LFE1147:
	.seh_endproc
	.section	.text$_Z15Vector2Distance7Vector2S_,"x"
	.linkonce discard
	.globl	_Z15Vector2Distance7Vector2S_
	.def	_Z15Vector2Distance7Vector2S_;	.scl	2;	.type	32;	.endef
	.seh_proc	_Z15Vector2Distance7Vector2S_
_Z15Vector2Distance7Vector2S_:
.LFB1148:
	.loc 5 296 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI92:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI93:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # v1, v1
	movq	%rdx, 24(%rbp)	 # v2, v2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:297:     float result = sqrtf((v1.x - v2.x)*(v1.x - v2.x) + (v1.y - v2.y)*(v1.y - v2.y));
	.loc 5 297 30
	movss	16(%rbp), %xmm0	 # v1.x, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:297:     float result = sqrtf((v1.x - v2.x)*(v1.x - v2.x) + (v1.y - v2.y)*(v1.y - v2.y));
	.loc 5 297 37
	movss	24(%rbp), %xmm2	 # v2.x, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:297:     float result = sqrtf((v1.x - v2.x)*(v1.x - v2.x) + (v1.y - v2.y)*(v1.y - v2.y));
	.loc 5 297 32
	movaps	%xmm0, %xmm1	 # _1, _1
	subss	%xmm2, %xmm1	 # _2, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:297:     float result = sqrtf((v1.x - v2.x)*(v1.x - v2.x) + (v1.y - v2.y)*(v1.y - v2.y));
	.loc 5 297 44
	movss	16(%rbp), %xmm0	 # v1.x, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:297:     float result = sqrtf((v1.x - v2.x)*(v1.x - v2.x) + (v1.y - v2.y)*(v1.y - v2.y));
	.loc 5 297 51
	movss	24(%rbp), %xmm2	 # v2.x, _5
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:297:     float result = sqrtf((v1.x - v2.x)*(v1.x - v2.x) + (v1.y - v2.y)*(v1.y - v2.y));
	.loc 5 297 46
	subss	%xmm2, %xmm0	 # _5, _6
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:297:     float result = sqrtf((v1.x - v2.x)*(v1.x - v2.x) + (v1.y - v2.y)*(v1.y - v2.y));
	.loc 5 297 39
	mulss	%xmm0, %xmm1	 # _6, _7
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:297:     float result = sqrtf((v1.x - v2.x)*(v1.x - v2.x) + (v1.y - v2.y)*(v1.y - v2.y));
	.loc 5 297 60
	movss	20(%rbp), %xmm0	 # v1.y, _8
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:297:     float result = sqrtf((v1.x - v2.x)*(v1.x - v2.x) + (v1.y - v2.y)*(v1.y - v2.y));
	.loc 5 297 67
	movss	28(%rbp), %xmm3	 # v2.y, _9
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:297:     float result = sqrtf((v1.x - v2.x)*(v1.x - v2.x) + (v1.y - v2.y)*(v1.y - v2.y));
	.loc 5 297 62
	movaps	%xmm0, %xmm2	 # _8, _8
	subss	%xmm3, %xmm2	 # _9, _8
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:297:     float result = sqrtf((v1.x - v2.x)*(v1.x - v2.x) + (v1.y - v2.y)*(v1.y - v2.y));
	.loc 5 297 74
	movss	20(%rbp), %xmm0	 # v1.y, _11
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:297:     float result = sqrtf((v1.x - v2.x)*(v1.x - v2.x) + (v1.y - v2.y)*(v1.y - v2.y));
	.loc 5 297 81
	movss	28(%rbp), %xmm3	 # v2.y, _12
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:297:     float result = sqrtf((v1.x - v2.x)*(v1.x - v2.x) + (v1.y - v2.y)*(v1.y - v2.y));
	.loc 5 297 76
	subss	%xmm3, %xmm0	 # _12, _13
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:297:     float result = sqrtf((v1.x - v2.x)*(v1.x - v2.x) + (v1.y - v2.y)*(v1.y - v2.y));
	.loc 5 297 69
	mulss	%xmm2, %xmm0	 # _10, _14
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:297:     float result = sqrtf((v1.x - v2.x)*(v1.x - v2.x) + (v1.y - v2.y)*(v1.y - v2.y));
	.loc 5 297 25
	addss	%xmm0, %xmm1	 # _14, _7
	movd	%xmm1, %eax	 # _7, _15
	movd	%eax, %xmm0	 # _15,
	call	sqrtf	 #
	movd	%xmm0, %eax	 #, tmp99
	movl	%eax, -4(%rbp)	 # tmp99, result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:299:     return result;
	.loc 5 299 12
	movss	-4(%rbp), %xmm0	 # result, _18
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:300: }
	.loc 5 300 1
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI94:
	ret	
.LFE1148:
	.seh_endproc
	.section	.text$_Z18Vector2DistanceSqr7Vector2S_,"x"
	.linkonce discard
	.globl	_Z18Vector2DistanceSqr7Vector2S_
	.def	_Z18Vector2DistanceSqr7Vector2S_;	.scl	2;	.type	32;	.endef
	.seh_proc	_Z18Vector2DistanceSqr7Vector2S_
_Z18Vector2DistanceSqr7Vector2S_:
.LFB1149:
	.loc 5 304 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI95:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI96:
	subq	$16, %rsp	 #,
	.seh_stackalloc	16
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # v1, v1
	movq	%rdx, 24(%rbp)	 # v2, v2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:305:     float result = ((v1.x - v2.x)*(v1.x - v2.x) + (v1.y - v2.y)*(v1.y - v2.y));
	.loc 5 305 25
	movss	16(%rbp), %xmm0	 # v1.x, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:305:     float result = ((v1.x - v2.x)*(v1.x - v2.x) + (v1.y - v2.y)*(v1.y - v2.y));
	.loc 5 305 32
	movss	24(%rbp), %xmm2	 # v2.x, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:305:     float result = ((v1.x - v2.x)*(v1.x - v2.x) + (v1.y - v2.y)*(v1.y - v2.y));
	.loc 5 305 27
	movaps	%xmm0, %xmm1	 # _1, _1
	subss	%xmm2, %xmm1	 # _2, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:305:     float result = ((v1.x - v2.x)*(v1.x - v2.x) + (v1.y - v2.y)*(v1.y - v2.y));
	.loc 5 305 39
	movss	16(%rbp), %xmm0	 # v1.x, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:305:     float result = ((v1.x - v2.x)*(v1.x - v2.x) + (v1.y - v2.y)*(v1.y - v2.y));
	.loc 5 305 46
	movss	24(%rbp), %xmm2	 # v2.x, _5
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:305:     float result = ((v1.x - v2.x)*(v1.x - v2.x) + (v1.y - v2.y)*(v1.y - v2.y));
	.loc 5 305 41
	subss	%xmm2, %xmm0	 # _5, _6
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:305:     float result = ((v1.x - v2.x)*(v1.x - v2.x) + (v1.y - v2.y)*(v1.y - v2.y));
	.loc 5 305 34
	mulss	%xmm0, %xmm1	 # _6, _7
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:305:     float result = ((v1.x - v2.x)*(v1.x - v2.x) + (v1.y - v2.y)*(v1.y - v2.y));
	.loc 5 305 55
	movss	20(%rbp), %xmm0	 # v1.y, _8
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:305:     float result = ((v1.x - v2.x)*(v1.x - v2.x) + (v1.y - v2.y)*(v1.y - v2.y));
	.loc 5 305 62
	movss	28(%rbp), %xmm3	 # v2.y, _9
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:305:     float result = ((v1.x - v2.x)*(v1.x - v2.x) + (v1.y - v2.y)*(v1.y - v2.y));
	.loc 5 305 57
	movaps	%xmm0, %xmm2	 # _8, _8
	subss	%xmm3, %xmm2	 # _9, _8
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:305:     float result = ((v1.x - v2.x)*(v1.x - v2.x) + (v1.y - v2.y)*(v1.y - v2.y));
	.loc 5 305 69
	movss	20(%rbp), %xmm0	 # v1.y, _11
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:305:     float result = ((v1.x - v2.x)*(v1.x - v2.x) + (v1.y - v2.y)*(v1.y - v2.y));
	.loc 5 305 76
	movss	28(%rbp), %xmm3	 # v2.y, _12
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:305:     float result = ((v1.x - v2.x)*(v1.x - v2.x) + (v1.y - v2.y)*(v1.y - v2.y));
	.loc 5 305 71
	subss	%xmm3, %xmm0	 # _12, _13
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:305:     float result = ((v1.x - v2.x)*(v1.x - v2.x) + (v1.y - v2.y)*(v1.y - v2.y));
	.loc 5 305 64
	mulss	%xmm2, %xmm0	 # _10, _14
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:305:     float result = ((v1.x - v2.x)*(v1.x - v2.x) + (v1.y - v2.y)*(v1.y - v2.y));
	.loc 5 305 11
	addss	%xmm1, %xmm0	 # _7, tmp98
	movss	%xmm0, -4(%rbp)	 # tmp98, result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:307:     return result;
	.loc 5 307 12
	movss	-4(%rbp), %xmm0	 # result, _17
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:308: }
	.loc 5 308 1
	addq	$16, %rsp	 #,
	popq	%rbp	 #
.LCFI97:
	ret	
.LFE1149:
	.seh_endproc
	.section	.text$_Z12Vector2Scale7Vector2f,"x"
	.linkonce discard
	.globl	_Z12Vector2Scale7Vector2f
	.def	_Z12Vector2Scale7Vector2f;	.scl	2;	.type	32;	.endef
	.seh_proc	_Z12Vector2Scale7Vector2f
_Z12Vector2Scale7Vector2f:
.LFB1152:
	.loc 5 343 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI98:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI99:
	subq	$16, %rsp	 #,
	.seh_stackalloc	16
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # v, v
	movss	%xmm1, 24(%rbp)	 # scale, scale
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:344:     Vector2 result = { v.x*scale, v.y*scale };
	.loc 5 344 26
	movss	16(%rbp), %xmm0	 # v.x, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:344:     Vector2 result = { v.x*scale, v.y*scale };
	.loc 5 344 27
	mulss	24(%rbp), %xmm0	 # scale, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:344:     Vector2 result = { v.x*scale, v.y*scale };
	.loc 5 344 45
	movss	%xmm0, -8(%rbp)	 # _2, result.x
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:344:     Vector2 result = { v.x*scale, v.y*scale };
	.loc 5 344 37
	movss	20(%rbp), %xmm0	 # v.y, _3
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:344:     Vector2 result = { v.x*scale, v.y*scale };
	.loc 5 344 38
	mulss	24(%rbp), %xmm0	 # scale, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:344:     Vector2 result = { v.x*scale, v.y*scale };
	.loc 5 344 45
	movss	%xmm0, -4(%rbp)	 # _4, result.y
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:346:     return result;
	.loc 5 346 12
	movq	-8(%rbp), %rax	 # result, D.127197
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:347: }
	.loc 5 347 1
	addq	$16, %rsp	 #,
	popq	%rbp	 #
.LCFI100:
	ret	
.LFE1152:
	.seh_endproc
	.section	.text$_Z15Vector2Multiply7Vector2S_,"x"
	.linkonce discard
	.globl	_Z15Vector2Multiply7Vector2S_
	.def	_Z15Vector2Multiply7Vector2S_;	.scl	2;	.type	32;	.endef
	.seh_proc	_Z15Vector2Multiply7Vector2S_
_Z15Vector2Multiply7Vector2S_:
.LFB1153:
	.loc 5 351 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI101:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI102:
	subq	$16, %rsp	 #,
	.seh_stackalloc	16
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # v1, v1
	movq	%rdx, 24(%rbp)	 # v2, v2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:352:     Vector2 result = { v1.x*v2.x, v1.y*v2.y };
	.loc 5 352 27
	movss	16(%rbp), %xmm1	 # v1.x, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:352:     Vector2 result = { v1.x*v2.x, v1.y*v2.y };
	.loc 5 352 32
	movss	24(%rbp), %xmm0	 # v2.x, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:352:     Vector2 result = { v1.x*v2.x, v1.y*v2.y };
	.loc 5 352 28
	mulss	%xmm1, %xmm0	 # _1, _3
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:352:     Vector2 result = { v1.x*v2.x, v1.y*v2.y };
	.loc 5 352 45
	movss	%xmm0, -8(%rbp)	 # _3, result.x
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:352:     Vector2 result = { v1.x*v2.x, v1.y*v2.y };
	.loc 5 352 38
	movss	20(%rbp), %xmm1	 # v1.y, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:352:     Vector2 result = { v1.x*v2.x, v1.y*v2.y };
	.loc 5 352 43
	movss	28(%rbp), %xmm0	 # v2.y, _5
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:352:     Vector2 result = { v1.x*v2.x, v1.y*v2.y };
	.loc 5 352 39
	mulss	%xmm1, %xmm0	 # _4, _6
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:352:     Vector2 result = { v1.x*v2.x, v1.y*v2.y };
	.loc 5 352 45
	movss	%xmm0, -4(%rbp)	 # _6, result.y
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:354:     return result;
	.loc 5 354 12
	movq	-8(%rbp), %rax	 # result, D.127177
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:355: }
	.loc 5 355 1
	addq	$16, %rsp	 #,
	popq	%rbp	 #
.LCFI103:
	ret	
.LFE1153:
	.seh_endproc
	.section	.text$_Z13Vector2Divide7Vector2S_,"x"
	.linkonce discard
	.globl	_Z13Vector2Divide7Vector2S_
	.def	_Z13Vector2Divide7Vector2S_;	.scl	2;	.type	32;	.endef
	.seh_proc	_Z13Vector2Divide7Vector2S_
_Z13Vector2Divide7Vector2S_:
.LFB1155:
	.loc 5 367 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI104:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI105:
	subq	$16, %rsp	 #,
	.seh_stackalloc	16
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # v1, v1
	movq	%rdx, 24(%rbp)	 # v2, v2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:368:     Vector2 result = { v1.x/v2.x, v1.y/v2.y };
	.loc 5 368 27
	movss	16(%rbp), %xmm0	 # v1.x, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:368:     Vector2 result = { v1.x/v2.x, v1.y/v2.y };
	.loc 5 368 32
	movss	24(%rbp), %xmm1	 # v2.x, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:368:     Vector2 result = { v1.x/v2.x, v1.y/v2.y };
	.loc 5 368 28
	divss	%xmm1, %xmm0	 # _2, _3
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:368:     Vector2 result = { v1.x/v2.x, v1.y/v2.y };
	.loc 5 368 45
	movss	%xmm0, -8(%rbp)	 # _3, result.x
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:368:     Vector2 result = { v1.x/v2.x, v1.y/v2.y };
	.loc 5 368 38
	movss	20(%rbp), %xmm0	 # v1.y, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:368:     Vector2 result = { v1.x/v2.x, v1.y/v2.y };
	.loc 5 368 43
	movss	28(%rbp), %xmm1	 # v2.y, _5
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:368:     Vector2 result = { v1.x/v2.x, v1.y/v2.y };
	.loc 5 368 39
	divss	%xmm1, %xmm0	 # _5, _6
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:368:     Vector2 result = { v1.x/v2.x, v1.y/v2.y };
	.loc 5 368 45
	movss	%xmm0, -4(%rbp)	 # _6, result.y
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:370:     return result;
	.loc 5 370 12
	movq	-8(%rbp), %rax	 # result, D.127182
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:371: }
	.loc 5 371 1
	addq	$16, %rsp	 #,
	popq	%rbp	 #
.LCFI106:
	ret	
.LFE1155:
	.seh_endproc
	.section	.text$_Z16Vector2Normalize7Vector2,"x"
	.linkonce discard
	.globl	_Z16Vector2Normalize7Vector2
	.def	_Z16Vector2Normalize7Vector2;	.scl	2;	.type	32;	.endef
	.seh_proc	_Z16Vector2Normalize7Vector2
_Z16Vector2Normalize7Vector2:
.LFB1156:
	.loc 5 375 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI107:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI108:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # v, v
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:376:     Vector2 result = { 0 };
	.loc 5 376 13
	movq	$0, -16(%rbp)	 #, result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:377:     float length = sqrtf((v.x*v.x) + (v.y*v.y));
	.loc 5 377 29
	movss	16(%rbp), %xmm1	 # v.x, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:377:     float length = sqrtf((v.x*v.x) + (v.y*v.y));
	.loc 5 377 33
	movss	16(%rbp), %xmm0	 # v.x, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:377:     float length = sqrtf((v.x*v.x) + (v.y*v.y));
	.loc 5 377 30
	mulss	%xmm0, %xmm1	 # _2, _3
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:377:     float length = sqrtf((v.x*v.x) + (v.y*v.y));
	.loc 5 377 41
	movss	20(%rbp), %xmm2	 # v.y, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:377:     float length = sqrtf((v.x*v.x) + (v.y*v.y));
	.loc 5 377 45
	movss	20(%rbp), %xmm0	 # v.y, _5
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:377:     float length = sqrtf((v.x*v.x) + (v.y*v.y));
	.loc 5 377 42
	mulss	%xmm2, %xmm0	 # _4, _6
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:377:     float length = sqrtf((v.x*v.x) + (v.y*v.y));
	.loc 5 377 25
	addss	%xmm0, %xmm1	 # _6, _3
	movd	%xmm1, %eax	 # _3, _7
	movd	%eax, %xmm0	 # _7,
	call	sqrtf	 #
	movd	%xmm0, %eax	 #, tmp95
	movl	%eax, -4(%rbp)	 # tmp95, length
.LBB18:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:379:     if (length > 0)
	.loc 5 379 5
	pxor	%xmm0, %xmm0	 # tmp96
	comiss	-4(%rbp), %xmm0	 # length, tmp96
	jnb	.L67	 #,
.LBB19:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:381:         float ilength = 1.0f/length;
	.loc 5 381 15
	movss	.LC1(%rip), %xmm0	 #, tmp98
	divss	-4(%rbp), %xmm0	 # length, tmp97
	movss	%xmm0, -8(%rbp)	 # tmp97, ilength
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:382:         result.x = v.x*ilength;
	.loc 5 382 22
	movss	16(%rbp), %xmm0	 # v.x, _8
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:382:         result.x = v.x*ilength;
	.loc 5 382 23
	mulss	-8(%rbp), %xmm0	 # ilength, _9
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:382:         result.x = v.x*ilength;
	.loc 5 382 18
	movss	%xmm0, -16(%rbp)	 # _9, result.x
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:383:         result.y = v.y*ilength;
	.loc 5 383 22
	movss	20(%rbp), %xmm0	 # v.y, _10
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:383:         result.y = v.y*ilength;
	.loc 5 383 23
	mulss	-8(%rbp), %xmm0	 # ilength, _11
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:383:         result.y = v.y*ilength;
	.loc 5 383 18
	movss	%xmm0, -12(%rbp)	 # _11, result.y
.L67:
.LBE19:
.LBE18:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:386:     return result;
	.loc 5 386 12
	movq	-16(%rbp), %rax	 # result, D.127247
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:387: }
	.loc 5 387 1
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI109:
	ret	
.LFE1156:
	.seh_endproc
	.section	.text$_Z18Vector2MoveTowards7Vector2S_f,"x"
	.linkonce discard
	.globl	_Z18Vector2MoveTowards7Vector2S_f
	.def	_Z18Vector2MoveTowards7Vector2S_f;	.scl	2;	.type	32;	.endef
	.seh_proc	_Z18Vector2MoveTowards7Vector2S_f
_Z18Vector2MoveTowards7Vector2S_f:
.LFB1161:
	.loc 5 444 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI110:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI111:
	subq	$64, %rsp	 #,
	.seh_stackalloc	64
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # v, v
	movq	%rdx, 24(%rbp)	 # target, target
	movss	%xmm2, 32(%rbp)	 # maxDistance, maxDistance
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:445:     Vector2 result = { 0 };
	.loc 5 445 13
	movq	$0, -24(%rbp)	 #, result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:447:     float dx = target.x - v.x;
	.loc 5 447 23
	movss	24(%rbp), %xmm0	 # target.x, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:447:     float dx = target.x - v.x;
	.loc 5 447 29
	movss	16(%rbp), %xmm1	 # v.x, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:447:     float dx = target.x - v.x;
	.loc 5 447 11
	subss	%xmm1, %xmm0	 # _2, tmp99
	movss	%xmm0, -4(%rbp)	 # tmp99, dx
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:448:     float dy = target.y - v.y;
	.loc 5 448 23
	movss	28(%rbp), %xmm0	 # target.y, _3
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:448:     float dy = target.y - v.y;
	.loc 5 448 29
	movss	20(%rbp), %xmm1	 # v.y, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:448:     float dy = target.y - v.y;
	.loc 5 448 11
	subss	%xmm1, %xmm0	 # _4, tmp100
	movss	%xmm0, -8(%rbp)	 # tmp100, dy
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:449:     float value = (dx*dx) + (dy*dy);
	.loc 5 449 22
	movss	-4(%rbp), %xmm0	 # dx, tmp101
	movaps	%xmm0, %xmm1	 # tmp101, tmp101
	mulss	%xmm0, %xmm1	 # tmp101, tmp101
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:449:     float value = (dx*dx) + (dy*dy);
	.loc 5 449 32
	movss	-8(%rbp), %xmm0	 # dy, tmp102
	mulss	%xmm0, %xmm0	 # tmp102, _6
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:449:     float value = (dx*dx) + (dy*dy);
	.loc 5 449 11
	addss	%xmm1, %xmm0	 # _5, tmp103
	movss	%xmm0, -12(%rbp)	 # tmp103, value
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:451:     if ((value == 0) || ((maxDistance >= 0) && (value <= maxDistance*maxDistance))) return target;
	.loc 5 451 5
	pxor	%xmm0, %xmm0	 # tmp104
	comiss	-12(%rbp), %xmm0	 # value, tmp104
	je	.L72	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:451:     if ((value == 0) || ((maxDistance >= 0) && (value <= maxDistance*maxDistance))) return target;
	.loc 5 451 22 discriminator 2
	pxor	%xmm0, %xmm0	 # tmp105
	comiss	32(%rbp), %xmm0	 # maxDistance, tmp105
	ja	.L73	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:451:     if ((value == 0) || ((maxDistance >= 0) && (value <= maxDistance*maxDistance))) return target;
	.loc 5 451 69 discriminator 3
	movss	32(%rbp), %xmm0	 # maxDistance, tmp106
	mulss	%xmm0, %xmm0	 # tmp106, _7
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:451:     if ((value == 0) || ((maxDistance >= 0) && (value <= maxDistance*maxDistance))) return target;
	.loc 5 451 45 discriminator 3
	comiss	-12(%rbp), %xmm0	 # value, _7
	jb	.L73	 #,
.L72:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:451:     if ((value == 0) || ((maxDistance >= 0) && (value <= maxDistance*maxDistance))) return target;
	.loc 5 451 92 discriminator 4
	movq	24(%rbp), %rax	 # target, D.127275
	jmp	.L77	 #
.L73:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:453:     float dist = sqrtf(value);
	.loc 5 453 23
	movl	-12(%rbp), %eax	 # value, tmp107
	movd	%eax, %xmm0	 # tmp107,
	call	sqrtf	 #
	movd	%xmm0, %eax	 #, tmp108
	movl	%eax, -16(%rbp)	 # tmp108, dist
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:455:     result.x = v.x + dx/dist*maxDistance;
	.loc 5 455 18
	movss	16(%rbp), %xmm1	 # v.x, _8
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:455:     result.x = v.x + dx/dist*maxDistance;
	.loc 5 455 24
	movss	-4(%rbp), %xmm0	 # dx, tmp109
	divss	-16(%rbp), %xmm0	 # dist, _9
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:455:     result.x = v.x + dx/dist*maxDistance;
	.loc 5 455 29
	mulss	32(%rbp), %xmm0	 # maxDistance, _10
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:455:     result.x = v.x + dx/dist*maxDistance;
	.loc 5 455 20
	addss	%xmm1, %xmm0	 # _8, _11
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:455:     result.x = v.x + dx/dist*maxDistance;
	.loc 5 455 14
	movss	%xmm0, -24(%rbp)	 # _11, result.x
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:456:     result.y = v.y + dy/dist*maxDistance;
	.loc 5 456 18
	movss	20(%rbp), %xmm1	 # v.y, _12
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:456:     result.y = v.y + dy/dist*maxDistance;
	.loc 5 456 24
	movss	-8(%rbp), %xmm0	 # dy, tmp110
	divss	-16(%rbp), %xmm0	 # dist, _13
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:456:     result.y = v.y + dy/dist*maxDistance;
	.loc 5 456 29
	mulss	32(%rbp), %xmm0	 # maxDistance, _14
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:456:     result.y = v.y + dy/dist*maxDistance;
	.loc 5 456 20
	addss	%xmm1, %xmm0	 # _12, _15
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:456:     result.y = v.y + dy/dist*maxDistance;
	.loc 5 456 14
	movss	%xmm0, -20(%rbp)	 # _15, result.y
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:458:     return result;
	.loc 5 458 12
	movq	-24(%rbp), %rax	 # result, D.127275
.L77:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:459: }
	.loc 5 459 1 discriminator 1
	addq	$64, %rsp	 #,
	popq	%rbp	 #
.LCFI112:
	ret	
.LFE1161:
	.seh_endproc
	.section	.text$_Z12Vector2Clamp7Vector2S_S_,"x"
	.linkonce discard
	.globl	_Z12Vector2Clamp7Vector2S_S_
	.def	_Z12Vector2Clamp7Vector2S_S_;	.scl	2;	.type	32;	.endef
	.seh_proc	_Z12Vector2Clamp7Vector2S_S_
_Z12Vector2Clamp7Vector2S_S_:
.LFB1163:
	.loc 5 472 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI113:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI114:
	subq	$16, %rsp	 #,
	.seh_stackalloc	16
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # v, v
	movq	%rdx, 24(%rbp)	 # min, min
	movq	%r8, 32(%rbp)	 # max, max
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:473:     Vector2 result = { 0 };
	.loc 5 473 13
	movq	$0, -8(%rbp)	 #, result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:475:     result.x = fminf(max.x, fmaxf(min.x, v.x));
	.loc 5 475 21
	movss	16(%rbp), %xmm1	 # v.x, _1
	movss	24(%rbp), %xmm0	 # min.x, _2
	maxss	%xmm0, %xmm1	 # _2, _3
	movss	32(%rbp), %xmm0	 # max.x, _4
	minss	%xmm1, %xmm0	 # _3, _5
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:475:     result.x = fminf(max.x, fmaxf(min.x, v.x));
	.loc 5 475 14
	movss	%xmm0, -8(%rbp)	 # _5, result.x
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:476:     result.y = fminf(max.y, fmaxf(min.y, v.y));
	.loc 5 476 21
	movss	20(%rbp), %xmm1	 # v.y, _6
	movss	28(%rbp), %xmm0	 # min.y, _7
	maxss	%xmm0, %xmm1	 # _7, _8
	movss	36(%rbp), %xmm0	 # max.y, _9
	minss	%xmm1, %xmm0	 # _8, _10
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:476:     result.y = fminf(max.y, fmaxf(min.y, v.y));
	.loc 5 476 14
	movss	%xmm0, -4(%rbp)	 # _10, result.y
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:478:     return result;
	.loc 5 478 12
	movq	-8(%rbp), %rax	 # result, D.127266
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:479: }
	.loc 5 479 1
	addq	$16, %rsp	 #,
	popq	%rbp	 #
.LCFI115:
	ret	
.LFE1163:
	.seh_endproc
	.section	.text$_Z17Vector2ClampValue7Vector2ff,"x"
	.linkonce discard
	.globl	_Z17Vector2ClampValue7Vector2ff
	.def	_Z17Vector2ClampValue7Vector2ff;	.scl	2;	.type	32;	.endef
	.seh_proc	_Z17Vector2ClampValue7Vector2ff
_Z17Vector2ClampValue7Vector2ff:
.LFB1164:
	.loc 5 483 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI116:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI117:
	subq	$64, %rsp	 #,
	.seh_stackalloc	64
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # v, v
	movss	%xmm1, 24(%rbp)	 # min, min
	movss	%xmm2, 32(%rbp)	 # max, max
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:484:     Vector2 result = v;
	.loc 5 484 13
	movq	16(%rbp), %rax	 # v, tmp98
	movq	%rax, -20(%rbp)	 # tmp98, result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:486:     float length = (v.x*v.x) + (v.y*v.y);
	.loc 5 486 23
	movss	16(%rbp), %xmm1	 # v.x, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:486:     float length = (v.x*v.x) + (v.y*v.y);
	.loc 5 486 27
	movss	16(%rbp), %xmm0	 # v.x, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:486:     float length = (v.x*v.x) + (v.y*v.y);
	.loc 5 486 24
	mulss	%xmm0, %xmm1	 # _2, _3
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:486:     float length = (v.x*v.x) + (v.y*v.y);
	.loc 5 486 35
	movss	20(%rbp), %xmm2	 # v.y, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:486:     float length = (v.x*v.x) + (v.y*v.y);
	.loc 5 486 39
	movss	20(%rbp), %xmm0	 # v.y, _5
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:486:     float length = (v.x*v.x) + (v.y*v.y);
	.loc 5 486 36
	mulss	%xmm2, %xmm0	 # _4, _6
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:486:     float length = (v.x*v.x) + (v.y*v.y);
	.loc 5 486 11
	addss	%xmm1, %xmm0	 # _3, tmp99
	movss	%xmm0, -4(%rbp)	 # tmp99, length
.LBB20:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:487:     if (length > 0.0f)
	.loc 5 487 5
	pxor	%xmm0, %xmm0	 # tmp100
	comiss	-4(%rbp), %xmm0	 # length, tmp100
	jnb	.L82	 #,
.LBB21:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:489:         length = sqrtf(length);
	.loc 5 489 23
	movl	-4(%rbp), %eax	 # length, tmp101
	movd	%eax, %xmm0	 # tmp101,
	call	sqrtf	 #
	movd	%xmm0, %eax	 #, tmp102
	movl	%eax, -4(%rbp)	 # tmp102, length
.LBB22:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:491:         if (length < min)
	.loc 5 491 9
	movss	24(%rbp), %xmm0	 # min, tmp103
	comiss	-4(%rbp), %xmm0	 # length, tmp103
	jbe	.L91	 #,
.LBB23:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:493:             float scale = min/length;
	.loc 5 493 19
	movss	24(%rbp), %xmm0	 # min, tmp105
	divss	-4(%rbp), %xmm0	 # length, tmp104
	movss	%xmm0, -12(%rbp)	 # tmp104, scale
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:494:             result.x = v.x*scale;
	.loc 5 494 26
	movss	16(%rbp), %xmm0	 # v.x, _7
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:494:             result.x = v.x*scale;
	.loc 5 494 27
	mulss	-12(%rbp), %xmm0	 # scale, _8
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:494:             result.x = v.x*scale;
	.loc 5 494 22
	movss	%xmm0, -20(%rbp)	 # _8, result.x
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:495:             result.y = v.y*scale;
	.loc 5 495 26
	movss	20(%rbp), %xmm0	 # v.y, _9
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:495:             result.y = v.y*scale;
	.loc 5 495 27
	mulss	-12(%rbp), %xmm0	 # scale, _10
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:495:             result.y = v.y*scale;
	.loc 5 495 22
	movss	%xmm0, -16(%rbp)	 # _10, result.y
.LBE23:
	jmp	.L82	 #
.L91:
.LBB24:
.LBB25:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:497:         else if (length > max)
	.loc 5 497 14
	movss	-4(%rbp), %xmm0	 # length, tmp106
	comiss	32(%rbp), %xmm0	 # max, tmp106
	jbe	.L82	 #,
.LBB26:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:499:             float scale = max/length;
	.loc 5 499 19
	movss	32(%rbp), %xmm0	 # max, tmp108
	divss	-4(%rbp), %xmm0	 # length, tmp107
	movss	%xmm0, -8(%rbp)	 # tmp107, scale
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:500:             result.x = v.x*scale;
	.loc 5 500 26
	movss	16(%rbp), %xmm0	 # v.x, _11
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:500:             result.x = v.x*scale;
	.loc 5 500 27
	mulss	-8(%rbp), %xmm0	 # scale, _12
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:500:             result.x = v.x*scale;
	.loc 5 500 22
	movss	%xmm0, -20(%rbp)	 # _12, result.x
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:501:             result.y = v.y*scale;
	.loc 5 501 26
	movss	20(%rbp), %xmm0	 # v.y, _13
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:501:             result.y = v.y*scale;
	.loc 5 501 27
	mulss	-8(%rbp), %xmm0	 # scale, _14
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:501:             result.y = v.y*scale;
	.loc 5 501 22
	movss	%xmm0, -16(%rbp)	 # _14, result.y
.L82:
.LBE26:
.LBE25:
.LBE24:
.LBE22:
.LBE21:
.LBE20:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:505:     return result;
	.loc 5 505 12
	movq	-20(%rbp), %rax	 # result, D.127261
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:506: }
	.loc 5 506 1
	addq	$64, %rsp	 #,
	popq	%rbp	 #
.LCFI118:
	ret	
.LFE1164:
	.seh_endproc
	.section	.text$_Z13Vector2Equals7Vector2S_,"x"
	.linkonce discard
	.globl	_Z13Vector2Equals7Vector2S_
	.def	_Z13Vector2Equals7Vector2S_;	.scl	2;	.type	32;	.endef
	.seh_proc	_Z13Vector2Equals7Vector2S_
_Z13Vector2Equals7Vector2S_:
.LFB1165:
	.loc 5 510 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI119:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI120:
	subq	$16, %rsp	 #,
	.seh_stackalloc	16
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # p, p
	movq	%rdx, 24(%rbp)	 # q, q
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:511:     int result = ((fabsf(p.x - q.x)) <= (EPSILON*fmaxf(1.0f, fmaxf(fabsf(p.x), fabsf(q.x))))) &&
	.loc 5 511 28
	movss	16(%rbp), %xmm0	 # p.x, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:511:     int result = ((fabsf(p.x - q.x)) <= (EPSILON*fmaxf(1.0f, fmaxf(fabsf(p.x), fabsf(q.x))))) &&
	.loc 5 511 34
	movss	24(%rbp), %xmm1	 # q.x, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:511:     int result = ((fabsf(p.x - q.x)) <= (EPSILON*fmaxf(1.0f, fmaxf(fabsf(p.x), fabsf(q.x))))) &&
	.loc 5 511 30
	subss	%xmm1, %xmm0	 # _2, _3
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:511:     int result = ((fabsf(p.x - q.x)) <= (EPSILON*fmaxf(1.0f, fmaxf(fabsf(p.x), fabsf(q.x))))) &&
	.loc 5 511 25
	movss	.LC7(%rip), %xmm1	 #, tmp107
	andps	%xmm0, %xmm1	 # _3, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:511:     int result = ((fabsf(p.x - q.x)) <= (EPSILON*fmaxf(1.0f, fmaxf(fabsf(p.x), fabsf(q.x))))) &&
	.loc 5 511 88
	movss	24(%rbp), %xmm0	 # q.x, _5
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:511:     int result = ((fabsf(p.x - q.x)) <= (EPSILON*fmaxf(1.0f, fmaxf(fabsf(p.x), fabsf(q.x))))) &&
	.loc 5 511 55
	movss	.LC7(%rip), %xmm2	 #, tmp108
	andps	%xmm0, %xmm2	 # _5, _6
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:511:     int result = ((fabsf(p.x - q.x)) <= (EPSILON*fmaxf(1.0f, fmaxf(fabsf(p.x), fabsf(q.x))))) &&
	.loc 5 511 76
	movss	16(%rbp), %xmm0	 # p.x, _7
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:511:     int result = ((fabsf(p.x - q.x)) <= (EPSILON*fmaxf(1.0f, fmaxf(fabsf(p.x), fabsf(q.x))))) &&
	.loc 5 511 55
	movss	.LC7(%rip), %xmm3	 #, tmp109
	andps	%xmm3, %xmm0	 # tmp109, _8
	maxss	%xmm0, %xmm2	 # _8, _9
	movss	.LC1(%rip), %xmm0	 #, tmp110
	maxss	%xmm0, %xmm2	 # tmp110, _10
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:511:     int result = ((fabsf(p.x - q.x)) <= (EPSILON*fmaxf(1.0f, fmaxf(fabsf(p.x), fabsf(q.x))))) &&
	.loc 5 511 49
	movss	.LC8(%rip), %xmm0	 #, tmp111
	mulss	%xmm2, %xmm0	 # _10, _11
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:511:     int result = ((fabsf(p.x - q.x)) <= (EPSILON*fmaxf(1.0f, fmaxf(fabsf(p.x), fabsf(q.x))))) &&
	.loc 5 511 95
	comiss	%xmm1, %xmm0	 # _4, _11
	jb	.L93	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:512:                   ((fabsf(p.y - q.y)) <= (EPSILON*fmaxf(1.0f, fmaxf(fabsf(p.y), fabsf(q.y)))));
	.loc 5 512 29 discriminator 1
	movss	20(%rbp), %xmm0	 # p.y, _12
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:512:                   ((fabsf(p.y - q.y)) <= (EPSILON*fmaxf(1.0f, fmaxf(fabsf(p.y), fabsf(q.y)))));
	.loc 5 512 35 discriminator 1
	movss	28(%rbp), %xmm1	 # q.y, _13
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:512:                   ((fabsf(p.y - q.y)) <= (EPSILON*fmaxf(1.0f, fmaxf(fabsf(p.y), fabsf(q.y)))));
	.loc 5 512 31 discriminator 1
	subss	%xmm1, %xmm0	 # _13, _14
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:512:                   ((fabsf(p.y - q.y)) <= (EPSILON*fmaxf(1.0f, fmaxf(fabsf(p.y), fabsf(q.y)))));
	.loc 5 512 26 discriminator 1
	movss	.LC7(%rip), %xmm1	 #, tmp112
	andps	%xmm0, %xmm1	 # _14, _15
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:512:                   ((fabsf(p.y - q.y)) <= (EPSILON*fmaxf(1.0f, fmaxf(fabsf(p.y), fabsf(q.y)))));
	.loc 5 512 89 discriminator 1
	movss	28(%rbp), %xmm0	 # q.y, _16
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:512:                   ((fabsf(p.y - q.y)) <= (EPSILON*fmaxf(1.0f, fmaxf(fabsf(p.y), fabsf(q.y)))));
	.loc 5 512 56 discriminator 1
	movss	.LC7(%rip), %xmm2	 #, tmp113
	andps	%xmm0, %xmm2	 # _16, _17
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:512:                   ((fabsf(p.y - q.y)) <= (EPSILON*fmaxf(1.0f, fmaxf(fabsf(p.y), fabsf(q.y)))));
	.loc 5 512 77 discriminator 1
	movss	20(%rbp), %xmm0	 # p.y, _18
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:512:                   ((fabsf(p.y - q.y)) <= (EPSILON*fmaxf(1.0f, fmaxf(fabsf(p.y), fabsf(q.y)))));
	.loc 5 512 56 discriminator 1
	movss	.LC7(%rip), %xmm3	 #, tmp114
	andps	%xmm3, %xmm0	 # tmp114, _19
	maxss	%xmm0, %xmm2	 # _19, _20
	movss	.LC1(%rip), %xmm0	 #, tmp115
	maxss	%xmm0, %xmm2	 # tmp115, _21
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:512:                   ((fabsf(p.y - q.y)) <= (EPSILON*fmaxf(1.0f, fmaxf(fabsf(p.y), fabsf(q.y)))));
	.loc 5 512 50 discriminator 1
	movss	.LC8(%rip), %xmm0	 #, tmp116
	mulss	%xmm2, %xmm0	 # _21, _22
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:511:     int result = ((fabsf(p.x - q.x)) <= (EPSILON*fmaxf(1.0f, fmaxf(fabsf(p.x), fabsf(q.x))))) &&
	.loc 5 511 95 discriminator 1
	comiss	%xmm1, %xmm0	 # _15, _22
	jb	.L93	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:511:     int result = ((fabsf(p.x - q.x)) <= (EPSILON*fmaxf(1.0f, fmaxf(fabsf(p.x), fabsf(q.x))))) &&
	.loc 5 511 95 is_stmt 0 discriminator 3
	movl	$1, %eax	 #, iftmp.2_23
	jmp	.L96	 #
.L93:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:511:     int result = ((fabsf(p.x - q.x)) <= (EPSILON*fmaxf(1.0f, fmaxf(fabsf(p.x), fabsf(q.x))))) &&
	.loc 5 511 95 discriminator 4
	movl	$0, %eax	 #, iftmp.2_23
.L96:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:511:     int result = ((fabsf(p.x - q.x)) <= (EPSILON*fmaxf(1.0f, fmaxf(fabsf(p.x), fabsf(q.x))))) &&
	.loc 5 511 9 is_stmt 1 discriminator 6
	movzbl	%al, %eax	 # iftmp.2_23, tmp117
	movl	%eax, -4(%rbp)	 # tmp117, result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:514:     return result;
	.loc 5 514 12 discriminator 6
	movl	-4(%rbp), %eax	 # result, _28
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:515: }
	.loc 5 515 1 discriminator 6
	addq	$16, %rsp	 #,
	popq	%rbp	 #
.LCFI121:
	ret	
.LFE1165:
	.seh_endproc
	.text
	.globl	_Zng7Vector2
	.def	_Zng7Vector2;	.scl	2;	.type	32;	.endef
	.seh_proc	_Zng7Vector2
_Zng7Vector2:
.LFB1245:
	.loc 5 2141 33
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI122:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI123:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # vec, vec
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2142:     return {-vec.x, -vec.y};
	.loc 5 2142 18
	movss	16(%rbp), %xmm0	 # vec.x, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2142:     return {-vec.x, -vec.y};
	.loc 5 2142 13
	movss	.LC9(%rip), %xmm1	 #, tmp88
	xorps	%xmm1, %xmm0	 # tmp88, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2142:     return {-vec.x, -vec.y};
	.loc 5 2142 27
	movd	%xmm0, %ecx	 # tmp89, tmp90
	movabsq	$-4294967296, %rdx	 #, tmp92
	andq	%rdx, %rax	 # tmp92, tmp91
	orq	%rcx, %rax	 # tmp90, tmp93
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2142:     return {-vec.x, -vec.y};
	.loc 5 2142 26
	movss	20(%rbp), %xmm0	 # vec.y, _3
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2142:     return {-vec.x, -vec.y};
	.loc 5 2142 21
	movss	.LC9(%rip), %xmm1	 #, tmp94
	xorps	%xmm1, %xmm0	 # tmp94, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2142:     return {-vec.x, -vec.y};
	.loc 5 2142 27
	movd	%xmm0, %edx	 # tmp95, tmp96
	salq	$32, %rdx	 #, tmp97
	movl	%eax, %eax	 # D.127163, tmp98
	orq	%rdx, %rax	 # tmp97, tmp99
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2143: }
	.loc 5 2143 1
	popq	%rbp	 #
.LCFI124:
	ret	
.LFE1245:
	.seh_endproc
	.globl	_Zpl7Vector2S_
	.def	_Zpl7Vector2S_;	.scl	2;	.type	32;	.endef
	.seh_proc	_Zpl7Vector2S_
_Zpl7Vector2S_:
.LFB1246:
	.loc 5 2145 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI125:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI126:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # a, a
	movq	%rdx, 24(%rbp)	 # b, b
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2145: OPWRAPPER(+, Vector2, Vector2, Vector2, Vector2Add);
	.loc 5 2145 1
	movq	24(%rbp), %rax	 # b, tmp84
	movq	%rax, %rdx	 # tmp84,
	movq	16(%rbp), %rcx	 # a,
	call	_Z10Vector2Add7Vector2S_	 #
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI127:
	ret	
.LFE1246:
	.seh_endproc
	.globl	_Zmi7Vector2S_
	.def	_Zmi7Vector2S_;	.scl	2;	.type	32;	.endef
	.seh_proc	_Zmi7Vector2S_
_Zmi7Vector2S_:
.LFB1247:
	.loc 5 2146 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI128:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI129:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # a, a
	movq	%rdx, 24(%rbp)	 # b, b
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2146: OPWRAPPER(-, Vector2, Vector2, Vector2, Vector2Subtract);
	.loc 5 2146 1
	movq	24(%rbp), %rax	 # b, tmp84
	movq	%rax, %rdx	 # tmp84,
	movq	16(%rbp), %rcx	 # a,
	call	_Z15Vector2Subtract7Vector2S_	 #
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI130:
	ret	
.LFE1247:
	.seh_endproc
	.globl	_Zml7Vector2S_
	.def	_Zml7Vector2S_;	.scl	2;	.type	32;	.endef
	.seh_proc	_Zml7Vector2S_
_Zml7Vector2S_:
.LFB1248:
	.loc 5 2147 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI131:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI132:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # a, a
	movq	%rdx, 24(%rbp)	 # b, b
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2147: OPWRAPPER(*, Vector2, Vector2, Vector2, Vector2Multiply);
	.loc 5 2147 1
	movq	24(%rbp), %rax	 # b, tmp84
	movq	%rax, %rdx	 # tmp84,
	movq	16(%rbp), %rcx	 # a,
	call	_Z15Vector2Multiply7Vector2S_	 #
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI133:
	ret	
.LFE1248:
	.seh_endproc
	.globl	_Zdv7Vector2S_
	.def	_Zdv7Vector2S_;	.scl	2;	.type	32;	.endef
	.seh_proc	_Zdv7Vector2S_
_Zdv7Vector2S_:
.LFB1249:
	.loc 5 2148 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI134:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI135:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # a, a
	movq	%rdx, 24(%rbp)	 # b, b
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2148: OPWRAPPER(/, Vector2, Vector2, Vector2, Vector2Divide);
	.loc 5 2148 1
	movq	24(%rbp), %rax	 # b, tmp84
	movq	%rax, %rdx	 # tmp84,
	movq	16(%rbp), %rcx	 # a,
	call	_Z13Vector2Divide7Vector2S_	 #
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI136:
	ret	
.LFE1249:
	.seh_endproc
	.globl	_Zpl7Vector2f
	.def	_Zpl7Vector2f;	.scl	2;	.type	32;	.endef
	.seh_proc	_Zpl7Vector2f
_Zpl7Vector2f:
.LFB1250:
	.loc 5 2150 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI137:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI138:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # a, a
	movss	%xmm1, 24(%rbp)	 # b, b
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2150: OPWRAPPER(+, Vector2, Vector2, float, Vector2AddValue);
	.loc 5 2150 1
	movss	24(%rbp), %xmm0	 # b, tmp84
	movaps	%xmm0, %xmm1	 # tmp84,
	movq	16(%rbp), %rcx	 # a,
	call	_Z15Vector2AddValue7Vector2f	 #
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI139:
	ret	
.LFE1250:
	.seh_endproc
	.globl	_Zmi7Vector2f
	.def	_Zmi7Vector2f;	.scl	2;	.type	32;	.endef
	.seh_proc	_Zmi7Vector2f
_Zmi7Vector2f:
.LFB1251:
	.loc 5 2151 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI140:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI141:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # a, a
	movss	%xmm1, 24(%rbp)	 # b, b
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2151: OPWRAPPER(-, Vector2, Vector2, float, Vector2SubtractValue);
	.loc 5 2151 1
	movss	24(%rbp), %xmm0	 # b, tmp84
	movaps	%xmm0, %xmm1	 # tmp84,
	movq	16(%rbp), %rcx	 # a,
	call	_Z20Vector2SubtractValue7Vector2f	 #
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI142:
	ret	
.LFE1251:
	.seh_endproc
	.globl	_Zml7Vector2f
	.def	_Zml7Vector2f;	.scl	2;	.type	32;	.endef
	.seh_proc	_Zml7Vector2f
_Zml7Vector2f:
.LFB1252:
	.loc 5 2152 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI143:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI144:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # a, a
	movss	%xmm1, 24(%rbp)	 # b, b
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2152: OPWRAPPER(*, Vector2, Vector2, float, Vector2Scale);
	.loc 5 2152 1
	movss	24(%rbp), %xmm0	 # b, tmp84
	movaps	%xmm0, %xmm1	 # tmp84,
	movq	16(%rbp), %rcx	 # a,
	call	_Z12Vector2Scale7Vector2f	 #
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI145:
	ret	
.LFE1252:
	.seh_endproc
	.globl	_Zeq7Vector2S_
	.def	_Zeq7Vector2S_;	.scl	2;	.type	32;	.endef
	.seh_proc	_Zeq7Vector2S_
_Zeq7Vector2S_:
.LFB1253:
	.loc 5 2154 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI146:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI147:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # a, a
	movq	%rdx, 24(%rbp)	 # b, b
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2154: OPWRAPPER(==, bool, Vector2, Vector2, Vector2Equals);
	.loc 5 2154 1
	movq	24(%rbp), %rax	 # b, tmp85
	movq	%rax, %rdx	 # tmp85,
	movq	16(%rbp), %rcx	 # a,
	call	_Z13Vector2Equals7Vector2S_	 #
	testl	%eax, %eax	 # _1
	setne	%al	 #, _4
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI148:
	ret	
.LFE1253:
	.seh_endproc
	.align 2
	.globl	_ZN7Vector24zeroEv
	.def	_ZN7Vector24zeroEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN7Vector24zeroEv
_ZN7Vector24zeroEv:
.LFB1254:
	.loc 5 2157 25
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI149:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI150:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2158:     return Vector2Zero();
	.loc 5 2158 23
	call	_Z11Vector2Zerov	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2159: }
	.loc 5 2159 1
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI151:
	ret	
.LFE1254:
	.seh_endproc
	.align 2
	.globl	_ZN7Vector23oneEv
	.def	_ZN7Vector23oneEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN7Vector23oneEv
_ZN7Vector23oneEv:
.LFB1255:
	.loc 5 2160 24
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI152:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI153:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2161:     return Vector2One();
	.loc 5 2161 22
	call	_Z10Vector2Onev	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2162: }
	.loc 5 2162 1
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI154:
	ret	
.LFE1255:
	.seh_endproc
	.align 2
	.globl	_ZNK7Vector24magnEv
	.def	_ZNK7Vector24magnEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNK7Vector24magnEv
_ZNK7Vector24magnEv:
.LFB1256:
	.loc 5 2164 29
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI155:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI156:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2165:     return Vector2Length(*this);
	.loc 5 2165 25
	movq	16(%rbp), %rax	 # this, tmp84
	movq	(%rax), %rcx	 # *this_2(D),
	call	_Z13Vector2Length7Vector2	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2166: }
	.loc 5 2166 1
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI157:
	ret	
.LFE1256:
	.seh_endproc
	.align 2
	.globl	_ZNK7Vector27magnSqrEv
	.def	_ZNK7Vector27magnSqrEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNK7Vector27magnSqrEv
_ZNK7Vector27magnSqrEv:
.LFB1257:
	.loc 5 2167 32
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI158:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI159:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2168:     return Vector2LengthSqr(*this);
	.loc 5 2168 28
	movq	16(%rbp), %rax	 # this, tmp84
	movq	(%rax), %rcx	 # *this_2(D),
	call	_Z16Vector2LengthSqr7Vector2	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2169: }
	.loc 5 2169 1
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI160:
	ret	
.LFE1257:
	.seh_endproc
	.align 2
	.globl	_ZNK7Vector25angleEv
	.def	_ZNK7Vector25angleEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNK7Vector25angleEv
_ZNK7Vector25angleEv:
.LFB1258:
	.loc 5 2170 30
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI161:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI162:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2171:     const float m = magn();
	.loc 5 2171 25
	movq	16(%rbp), %rcx	 # this,
	call	_ZNK7Vector24magnEv	 #
	movd	%xmm0, %eax	 #, tmp89
	movl	%eax, -4(%rbp)	 # tmp89, m
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2172:     const float a = atan2f(y/m, x/m)*RAD2DEG;
	.loc 5 2172 33
	movq	16(%rbp), %rax	 # this, tmp90
	movss	(%rax), %xmm0	 # this_7(D)->x, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2172:     const float a = atan2f(y/m, x/m)*RAD2DEG;
	.loc 5 2172 27
	movaps	%xmm0, %xmm1	 # _1, _1
	divss	-4(%rbp), %xmm1	 # m, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2172:     const float a = atan2f(y/m, x/m)*RAD2DEG;
	.loc 5 2172 28
	movq	16(%rbp), %rax	 # this, tmp91
	movss	4(%rax), %xmm0	 # this_7(D)->y, _3
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2172:     const float a = atan2f(y/m, x/m)*RAD2DEG;
	.loc 5 2172 27
	divss	-4(%rbp), %xmm0	 # m, _3
	movd	%xmm0, %eax	 # _3, _4
	movd	%eax, %xmm0	 # _4,
	call	atan2f	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2172:     const float a = atan2f(y/m, x/m)*RAD2DEG;
	.loc 5 2172 17
	movss	.LC10(%rip), %xmm1	 #, tmp93
	mulss	%xmm1, %xmm0	 # tmp93, tmp92
	movss	%xmm0, -8(%rbp)	 # tmp92, a
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2180:     return a;
	.loc 5 2180 12
	movss	-8(%rbp), %xmm0	 # a, _11
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2181: }
	.loc 5 2181 1
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI163:
	ret	
.LFE1258:
	.seh_endproc
	.align 2
	.globl	_ZNK7Vector24distES_
	.def	_ZNK7Vector24distES_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNK7Vector24distES_
_ZNK7Vector24distES_:
.LFB1259:
	.loc 5 2182 38
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI164:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI165:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # v, v
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2183:     return Vector2Distance(*this, v);
	.loc 5 2183 27
	movq	24(%rbp), %rax	 # v, tmp84
	movq	16(%rbp), %rcx	 # this, tmp85
	movq	%rax, %rdx	 # tmp84,
	movq	(%rcx), %rcx	 # *this_2(D),
	call	_Z15Vector2Distance7Vector2S_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2184: }
	.loc 5 2184 1
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI166:
	ret	
.LFE1259:
	.seh_endproc
	.align 2
	.globl	_ZNK7Vector27distSqrES_
	.def	_ZNK7Vector27distSqrES_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNK7Vector27distSqrES_
_ZNK7Vector27distSqrES_:
.LFB1260:
	.loc 5 2185 41
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI167:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI168:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # v, v
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2186:     return Vector2DistanceSqr(*this, v);
	.loc 5 2186 30
	movq	24(%rbp), %rax	 # v, tmp84
	movq	16(%rbp), %rcx	 # this, tmp85
	movq	%rax, %rdx	 # tmp84,
	movq	(%rcx), %rcx	 # *this_2(D),
	call	_Z18Vector2DistanceSqr7Vector2S_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2187: }
	.loc 5 2187 1
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI169:
	ret	
.LFE1260:
	.seh_endproc
	.align 2
	.globl	_ZNK7Vector23dotES_
	.def	_ZNK7Vector23dotES_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNK7Vector23dotES_
_ZNK7Vector23dotES_:
.LFB1261:
	.loc 5 2188 37
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI170:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI171:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # v, v
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2189:     return Vector2DotProduct(*this, v);
	.loc 5 2189 29
	movq	24(%rbp), %rax	 # v, tmp84
	movq	16(%rbp), %rcx	 # this, tmp85
	movq	%rax, %rdx	 # tmp84,
	movq	(%rcx), %rcx	 # *this_2(D),
	call	_Z17Vector2DotProduct7Vector2S_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2190: }
	.loc 5 2190 1
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI172:
	ret	
.LFE1261:
	.seh_endproc
	.align 2
	.globl	_ZN7Vector27setMagnEf
	.def	_ZN7Vector27setMagnEf;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN7Vector27setMagnEf
_ZN7Vector27setMagnEf:
.LFB1262:
	.loc 5 2192 38
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI173:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI174:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movss	%xmm1, 24(%rbp)	 # val, val
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2193:     return *this = Vector2Normalize(*this) * val;
	.loc 5 2193 46
	movq	16(%rbp), %rax	 # this, tmp85
	movq	(%rax), %rcx	 # MEM[(const struct Vector2 &)this_2(D)],
	call	_Z16Vector2Normalize7Vector2	 #
	movss	24(%rbp), %xmm0	 # val, tmp86
	movaps	%xmm0, %xmm1	 # tmp86,
	movq	%rax, %rcx	 # D.127242,
	call	_Zml7Vector2f	 #
	movq	%rax, %rdx	 # tmp87, tmp88
	movq	16(%rbp), %rax	 # this, tmp89
	movq	%rdx, (%rax)	 # tmp88, *this_2(D)
	movq	16(%rbp), %rax	 # this, _6
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2194: }
	.loc 5 2194 1
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI175:
	ret	
.LFE1262:
	.seh_endproc
	.align 2
	.globl	_ZN7Vector28setAngleEf
	.def	_ZN7Vector28setAngleEf;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN7Vector28setAngleEf
_ZN7Vector28setAngleEf:
.LFB1263:
	.loc 5 2195 39
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI176:
	subq	$64, %rsp	 #,
	.seh_stackalloc	64
.LCFI177:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI178:
	movaps	%xmm6, 0(%rbp)	 #,
	.seh_savexmm	%xmm6, 48
.LCFI179:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movss	%xmm1, 40(%rbp)	 # val, val
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2196:     const float m = this->magn();
	.loc 5 2196 31
	movq	32(%rbp), %rcx	 # this,
	call	_ZNK7Vector24magnEv	 #
	movd	%xmm0, %eax	 #, tmp88
	movl	%eax, -4(%rbp)	 # tmp88, m
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2197:     this->x = m*cosf(val);
	.loc 5 2197 21
	movl	40(%rbp), %eax	 # val, tmp89
	movd	%eax, %xmm0	 # tmp89,
	call	cosf	 #
	movd	%xmm0, %eax	 #, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2197:     this->x = m*cosf(val);
	.loc 5 2197 16
	movd	%eax, %xmm0	 # _1, _1
	mulss	-4(%rbp), %xmm0	 # m, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2197:     this->x = m*cosf(val);
	.loc 5 2197 13
	movq	32(%rbp), %rax	 # this, tmp90
	movss	%xmm0, (%rax)	 # _2, this_7(D)->x
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2198:     this->y = -m*sinf(val);
	.loc 5 2198 15
	movss	-4(%rbp), %xmm0	 # m, tmp91
	movss	.LC9(%rip), %xmm1	 #, tmp92
	movaps	%xmm0, %xmm6	 # tmp91, tmp91
	xorps	%xmm1, %xmm6	 # tmp92, tmp91
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2198:     this->y = -m*sinf(val);
	.loc 5 2198 22
	movl	40(%rbp), %eax	 # val, tmp93
	movd	%eax, %xmm0	 # tmp93,
	call	sinf	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2198:     this->y = -m*sinf(val);
	.loc 5 2198 17
	mulss	%xmm6, %xmm0	 # _3, _5
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2198:     this->y = -m*sinf(val);
	.loc 5 2198 13
	movq	32(%rbp), %rax	 # this, tmp94
	movss	%xmm0, 4(%rax)	 # _5, this_7(D)->y
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2199: }
	.loc 5 2199 1
	nop	
	movaps	0(%rbp), %xmm6	 #,
	addq	$64, %rsp	 #,
.LCFI180:
	popq	%rbp	 #
.LCFI181:
	ret	
.LFE1263:
	.seh_endproc
	.align 2
	.globl	_ZN7Vector25clampEff
	.def	_ZN7Vector25clampEff;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN7Vector25clampEff
_ZN7Vector25clampEff:
.LFB1264:
	.loc 5 2200 43
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI182:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI183:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movss	%xmm1, 24(%rbp)	 # m, m
	movss	%xmm2, 32(%rbp)	 # M, M
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2201:     return *this = Vector2ClampValue(*this, m, M);
	.loc 5 2201 37
	movss	32(%rbp), %xmm1	 # M, tmp84
	movss	24(%rbp), %xmm0	 # m, tmp85
	movq	16(%rbp), %rax	 # this, tmp86
	movaps	%xmm1, %xmm2	 # tmp84,
	movaps	%xmm0, %xmm1	 # tmp85,
	movq	(%rax), %rcx	 # MEM[(const struct Vector2 &)this_2(D)],
	call	_Z17Vector2ClampValue7Vector2ff	 #
	movq	%rax, %rdx	 # tmp87, tmp88
	movq	16(%rbp), %rax	 # this, tmp89
	movq	%rdx, (%rax)	 # tmp88, *this_2(D)
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2201:     return *this = Vector2ClampValue(*this, m, M);
	.loc 5 2201 49
	movq	16(%rbp), %rax	 # this, _6
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2202: }
	.loc 5 2202 1
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI184:
	ret	
.LFE1264:
	.seh_endproc
	.align 2
	.globl	_ZN7Vector25clampES_S_
	.def	_ZN7Vector25clampES_S_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN7Vector25clampES_S_
_ZN7Vector25clampES_S_:
.LFB1265:
	.loc 5 2203 47
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI185:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI186:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # m, m
	movq	%r8, 32(%rbp)	 # M, M
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2204:     return *this = Vector2Clamp(*this, m, M);
	.loc 5 2204 32
	movq	32(%rbp), %rdx	 # M, tmp84
	movq	24(%rbp), %rax	 # m, tmp85
	movq	16(%rbp), %rcx	 # this, tmp86
	movq	%rdx, %r8	 # tmp84,
	movq	%rax, %rdx	 # tmp85,
	movq	(%rcx), %rcx	 # MEM[(const struct Vector2 &)this_2(D)],
	call	_Z12Vector2Clamp7Vector2S_S_	 #
	movq	%rax, %rdx	 # tmp87, tmp88
	movq	16(%rbp), %rax	 # this, tmp89
	movq	%rdx, (%rax)	 # tmp88, *this_2(D)
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2204:     return *this = Vector2Clamp(*this, m, M);
	.loc 5 2204 44
	movq	16(%rbp), %rax	 # this, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2205: }
	.loc 5 2205 1
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI187:
	ret	
.LFE1265:
	.seh_endproc
	.align 2
	.globl	_ZN7Vector26moveToES_f
	.def	_ZN7Vector26moveToES_f;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN7Vector26moveToES_f
_ZN7Vector26moveToES_f:
.LFB1266:
	.loc 5 2206 58
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI188:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI189:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # target, target
	movss	%xmm2, 32(%rbp)	 # max_dist, max_dist
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2207:     return *this = Vector2MoveTowards(*this, target, max_dist);
	.loc 5 2207 38
	movss	32(%rbp), %xmm0	 # max_dist, tmp84
	movq	24(%rbp), %rax	 # target, tmp85
	movq	16(%rbp), %rcx	 # this, tmp86
	movaps	%xmm0, %xmm2	 # tmp84,
	movq	%rax, %rdx	 # tmp85,
	movq	(%rcx), %rcx	 # MEM[(const struct Vector2 &)this_2(D)],
	call	_Z18Vector2MoveTowards7Vector2S_f	 #
	movq	%rax, %rdx	 # tmp87, tmp88
	movq	16(%rbp), %rax	 # this, tmp89
	movq	%rdx, (%rax)	 # tmp88, *this_2(D)
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2207:     return *this = Vector2MoveTowards(*this, target, max_dist);
	.loc 5 2207 62
	movq	16(%rbp), %rax	 # this, _5
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2208: }
	.loc 5 2208 1
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI190:
	ret	
.LFE1266:
	.seh_endproc
	.align 2
	.globl	_ZN7Vector24copyEv
	.def	_ZN7Vector24copyEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN7Vector24copyEv
_ZN7Vector24copyEv:
.LFB1267:
	.loc 5 2209 25
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI191:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI192:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2210:     return {this->x, this->y};
	.loc 5 2210 19
	movq	16(%rbp), %rdx	 # this, tmp86
	movss	(%rdx), %xmm0	 # this_4(D)->x, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2210:     return {this->x, this->y};
	.loc 5 2210 29
	movd	%xmm0, %ecx	 # tmp87, tmp88
	movabsq	$-4294967296, %rdx	 #, tmp90
	andq	%rdx, %rax	 # tmp90, tmp89
	orq	%rcx, %rax	 # tmp88, tmp91
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2210:     return {this->x, this->y};
	.loc 5 2210 28
	movq	16(%rbp), %rdx	 # this, tmp92
	movss	4(%rdx), %xmm0	 # this_4(D)->y, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2210:     return {this->x, this->y};
	.loc 5 2210 29
	movd	%xmm0, %edx	 # tmp93, tmp94
	salq	$32, %rdx	 #, tmp95
	movl	%eax, %eax	 # D.127278, tmp96
	orq	%rdx, %rax	 # tmp95, tmp97
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\raylib\raymath.h:2211: }
	.loc 5 2211 1
	popq	%rbp	 #
.LCFI193:
	ret	
.LFE1267:
	.seh_endproc
	.section	.text$_Z6printfPKcz,"x"
	.linkonce discard
	.globl	_Z6printfPKcz
	.def	_Z6printfPKcz;	.scl	2;	.type	32;	.endef
	.seh_proc	_Z6printfPKcz
_Z6printfPKcz:
.LFB1277:
	.file 6 "c:/users/pluto/scoop/apps/gcc/current/x86_64-w64-mingw32/include/stdio.h"
	.loc 6 369 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI194:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI195:
	subq	$56, %rsp	 #,
	.seh_stackalloc	56
.LCFI196:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI197:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __format, __format
	movq	%rdx, 40(%rbp)	 #,
	movq	%r8, 48(%rbp)	 #,
	movq	%r9, 56(%rbp)	 #,
 # c:\users\pluto\scoop\apps\gcc\current\x86_64-w64-mingw32\include\stdio.h:371:   __builtin_va_list __local_argv; __builtin_va_start( __local_argv, __format );
	.loc 6 371 53
	leaq	40(%rbp), %rax	 #, tmp86
	movq	%rax, -16(%rbp)	 # tmp86, MEM[(char * *)&__local_argv]
 # c:\users\pluto\scoop\apps\gcc\current\x86_64-w64-mingw32\include\stdio.h:372:   __retval = __mingw_vfprintf( stdout, __format, __local_argv );
	.loc 6 372 30
	movq	-16(%rbp), %rbx	 # __local_argv, __local_argv.3_1
	movl	$1, %ecx	 #,
	movq	__imp___acrt_iob_func(%rip), %rax	 #, tmp87
	call	*%rax	 # tmp87
.LVL0:
	movq	%rbx, %r8	 # __local_argv.3_1,
	movq	32(%rbp), %rdx	 # __format,
	movq	%rax, %rcx	 # _2,
	call	__mingw_vfprintf	 #
	movl	%eax, -4(%rbp)	 # tmp88, __retval
 # c:\users\pluto\scoop\apps\gcc\current\x86_64-w64-mingw32\include\stdio.h:374:   return __retval;
	.loc 6 374 10
	movl	-4(%rbp), %eax	 # __retval, _11
 # c:\users\pluto\scoop\apps\gcc\current\x86_64-w64-mingw32\include\stdio.h:375: }
	.loc 6 375 1
	addq	$56, %rsp	 #,
	popq	%rbx	 #
.LCFI198:
	popq	%rbp	 #
.LCFI199:
	ret	
.LFE1277:
	.seh_endproc
	.section .rdata,"dr"
	.align 8
.LC11:
	.ascii "\33[1;31m[FATAL]\33[0m Assertion failed in %s:%i:\12\11%s\12\0"
	.text
	.globl	_Z8__assertbPKciS0_
	.def	_Z8__assertbPKciS0_;	.scl	2;	.type	32;	.endef
	.seh_proc	_Z8__assertbPKciS0_
_Z8__assertbPKciS0_:
.LFB1321:
	.file 7 "c:/users/pluto/scoop/apps/gcc/current/include/c++/11.2.0/utils/result.hpp"
	.loc 7 53 86
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI200:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI201:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movl	%ecx, %eax	 # condition, tmp83
	movq	%rdx, 24(%rbp)	 # file, file
	movl	%r8d, 32(%rbp)	 # line, line
	movq	%r9, 40(%rbp)	 # condition_str, condition_str
	movb	%al, 16(%rbp)	 # tmp84, condition
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\utils\result.hpp:54: 	if (!condition) {
	.loc 7 54 6
	movzbl	16(%rbp), %eax	 # condition, tmp85
	xorl	$1, %eax	 #, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\utils\result.hpp:54: 	if (!condition) {
	.loc 7 54 2
	testb	%al, %al	 # _1
	je	.L149	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\utils\result.hpp:55: 		printf("\033[1;31m[FATAL]\033[0m Assertion failed in %s:%i:\n\t%s\n", file, line, condition_str);
	.loc 7 55 9
	movq	40(%rbp), %rcx	 # condition_str, tmp86
	movl	32(%rbp), %edx	 # line, tmp87
	movq	24(%rbp), %rax	 # file, tmp88
	movq	%rcx, %r9	 # tmp86,
	movl	%edx, %r8d	 # tmp87,
	movq	%rax, %rdx	 # tmp88,
	leaq	.LC11(%rip), %rax	 #, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_Z6printfPKcz	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\utils\result.hpp:56: 		exit(1);
	.loc 7 56 7
	movl	$1, %ecx	 #,
	call	exit	 #
.L149:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\utils\result.hpp:58: }
	.loc 7 58 1
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI202:
	ret	
.LFE1321:
	.seh_endproc
	.section .rdata,"dr"
	.align 8
.LC12:
	.ascii "\33[1;31m[FATAL]\33[0m Assertion failed in %s:%i: %s\12\11%s\12\0"
	.text
	.globl	_Z9__assertmbPKciS0_S0_
	.def	_Z9__assertmbPKciS0_S0_;	.scl	2;	.type	32;	.endef
	.seh_proc	_Z9__assertmbPKciS0_S0_
_Z9__assertmbPKciS0_S0_:
.LFB1322:
	.loc 7 62 108
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI203:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI204:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movl	%ecx, %eax	 # condition, tmp83
	movq	%rdx, 24(%rbp)	 # file, file
	movl	%r8d, 32(%rbp)	 # line, line
	movq	%r9, 40(%rbp)	 # condition_str, condition_str
	movb	%al, 16(%rbp)	 # tmp84, condition
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\utils\result.hpp:63: 	if (!condition) {
	.loc 7 63 6
	movzbl	16(%rbp), %eax	 # condition, tmp85
	xorl	$1, %eax	 #, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\utils\result.hpp:63: 	if (!condition) {
	.loc 7 63 2
	testb	%al, %al	 # _1
	je	.L152	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\utils\result.hpp:64: 		printf("\033[1;31m[FATAL]\033[0m Assertion failed in %s:%i: %s\n\t%s\n", file, line, err_msg, condition_str);
	.loc 7 64 9
	movq	48(%rbp), %r8	 # err_msg, tmp86
	movl	32(%rbp), %ecx	 # line, tmp87
	movq	24(%rbp), %rax	 # file, tmp88
	movq	40(%rbp), %rdx	 # condition_str, tmp89
	movq	%rdx, 32(%rsp)	 # tmp89,
	movq	%r8, %r9	 # tmp86,
	movl	%ecx, %r8d	 # tmp87,
	movq	%rax, %rdx	 # tmp88,
	leaq	.LC12(%rip), %rax	 #, tmp90
	movq	%rax, %rcx	 # tmp90,
	call	_Z6printfPKcz	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\utils\result.hpp:65: 		exit(1);
	.loc 7 65 7
	movl	$1, %ecx	 #,
	call	exit	 #
.L152:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\utils\result.hpp:67: }
	.loc 7 67 1
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI205:
	ret	
.LFE1322:
	.seh_endproc
	.section	.text$_ZNSt14_Bit_referenceC1EPmm,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt14_Bit_referenceC1EPmm
	.def	_ZNSt14_Bit_referenceC1EPmm;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt14_Bit_referenceC1EPmm
_ZNSt14_Bit_referenceC1EPmm:
.LFB1841:
	.file 8 "c:/users/pluto/scoop/apps/gcc/current/include/c++/11.2.0/bits/stl_bvector.h"
	.loc 8 77 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI206:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI207:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __x, __x
	movl	%r8d, 32(%rbp)	 # __y, __y
.LBB27:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:78:     : _M_p(__x), _M_mask(__y) { }
	.loc 8 78 7
	movq	16(%rbp), %rax	 # this, tmp82
	movq	24(%rbp), %rdx	 # __x, tmp83
	movq	%rdx, (%rax)	 # tmp83, this_2(D)->_M_p
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:78:     : _M_p(__x), _M_mask(__y) { }
	.loc 8 78 18
	movq	16(%rbp), %rax	 # this, tmp84
	movl	32(%rbp), %edx	 # __y, tmp85
	movl	%edx, 8(%rax)	 # tmp85, this_2(D)->_M_mask
.LBE27:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:78:     : _M_p(__x), _M_mask(__y) { }
	.loc 8 78 33
	nop	
	popq	%rbp	 #
.LCFI208:
	ret	
.LFE1841:
	.seh_endproc
	.section	.text$_ZNKSt14_Bit_referencecvbEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt14_Bit_referencecvbEv
	.def	_ZNKSt14_Bit_referencecvbEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt14_Bit_referencecvbEv
_ZNKSt14_Bit_referencecvbEv:
.LFB1845:
	.loc 8 86 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI209:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI210:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:87:     { return !!(*_M_p & _M_mask); }
	.loc 8 87 18
	movq	16(%rbp), %rax	 # this, tmp88
	movq	(%rax), %rax	 # this_6(D)->_M_p, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:87:     { return !!(*_M_p & _M_mask); }
	.loc 8 87 17
	movl	(%rax), %edx	 # *_1, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:87:     { return !!(*_M_p & _M_mask); }
	.loc 8 87 25
	movq	16(%rbp), %rax	 # this, tmp89
	movl	8(%rax), %eax	 # this_6(D)->_M_mask, _3
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:87:     { return !!(*_M_p & _M_mask); }
	.loc 8 87 23
	andl	%edx, %eax	 # _2, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:87:     { return !!(*_M_p & _M_mask); }
	.loc 8 87 32
	testl	%eax, %eax	 # _4
	setne	%al	 #, _7
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:87:     { return !!(*_M_p & _M_mask); }
	.loc 8 87 35
	popq	%rbp	 #
.LCFI211:
	ret	
.LFE1845:
	.seh_endproc
	.section	.text$_ZNSt14_Bit_referenceaSEb,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt14_Bit_referenceaSEb
	.def	_ZNSt14_Bit_referenceaSEb;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt14_Bit_referenceaSEb
_ZNSt14_Bit_referenceaSEb:
.LFB1846:
	.loc 8 90 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI212:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI213:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movl	%edx, %eax	 # __x, tmp95
	movb	%al, 24(%rbp)	 # tmp96, __x
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:92:       if (__x)
	.loc 8 92 7
	cmpb	$0, 24(%rbp)	 #, __x
	je	.L157	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:93: 	*_M_p |= _M_mask;
	.loc 8 93 3
	movq	16(%rbp), %rax	 # this, tmp97
	movq	(%rax), %rax	 # this_15(D)->_M_p, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:93: 	*_M_p |= _M_mask;
	.loc 8 93 8
	movl	(%rax), %ecx	 # *_1, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:93: 	*_M_p |= _M_mask;
	.loc 8 93 11
	movq	16(%rbp), %rax	 # this, tmp98
	movl	8(%rax), %edx	 # this_15(D)->_M_mask, _3
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:93: 	*_M_p |= _M_mask;
	.loc 8 93 3
	movq	16(%rbp), %rax	 # this, tmp99
	movq	(%rax), %rax	 # this_15(D)->_M_p, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:93: 	*_M_p |= _M_mask;
	.loc 8 93 8
	orl	%ecx, %edx	 # _2, _5
	movl	%edx, (%rax)	 # _5, *_4
	jmp	.L158	 #
.L157:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:95: 	*_M_p &= ~_M_mask;
	.loc 8 95 3
	movq	16(%rbp), %rax	 # this, tmp100
	movq	(%rax), %rax	 # this_15(D)->_M_p, _6
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:95: 	*_M_p &= ~_M_mask;
	.loc 8 95 8
	movl	(%rax), %edx	 # *_6, _7
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:95: 	*_M_p &= ~_M_mask;
	.loc 8 95 12
	movq	16(%rbp), %rax	 # this, tmp101
	movl	8(%rax), %eax	 # this_15(D)->_M_mask, _8
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:95: 	*_M_p &= ~_M_mask;
	.loc 8 95 11
	notl	%eax	 # _8
	movl	%eax, %ecx	 # _8, _9
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:95: 	*_M_p &= ~_M_mask;
	.loc 8 95 3
	movq	16(%rbp), %rax	 # this, tmp102
	movq	(%rax), %rax	 # this_15(D)->_M_p, _10
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:95: 	*_M_p &= ~_M_mask;
	.loc 8 95 8
	andl	%ecx, %edx	 # _9, _11
	movl	%edx, (%rax)	 # _11, *_10
.L158:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:96:       return *this;
	.loc 8 96 15
	movq	16(%rbp), %rax	 # this, _18
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:97:     }
	.loc 8 97 5
	popq	%rbp	 #
.LCFI214:
	ret	
.LFE1846:
	.seh_endproc
	.section	.text$_ZNSt14_Bit_referenceaSERKS_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt14_Bit_referenceaSERKS_
	.def	_ZNSt14_Bit_referenceaSERKS_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt14_Bit_referenceaSERKS_
_ZNSt14_Bit_referenceaSERKS_:
.LFB1847:
	.loc 8 100 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI215:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI216:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __x, __x
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:101:     { return *this = bool(__x); }
	.loc 8 101 22
	movq	24(%rbp), %rax	 # __x, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZNKSt14_Bit_referencecvbEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:101:     { return *this = bool(__x); }
	.loc 8 101 30
	movzbl	%al, %eax	 # _1, _2
	movl	%eax, %edx	 # _2,
	movq	16(%rbp), %rcx	 # this,
	call	_ZNSt14_Bit_referenceaSEb	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:101:     { return *this = bool(__x); }
	.loc 8 101 33
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI217:
	ret	
.LFE1847:
	.seh_endproc
	.section	.text$_ZNSt18_Bit_iterator_baseC2EPmj,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt18_Bit_iterator_baseC2EPmj
	.def	_ZNSt18_Bit_iterator_baseC2EPmj;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt18_Bit_iterator_baseC2EPmj
_ZNSt18_Bit_iterator_baseC2EPmj:
.LFB1855:
	.loc 8 148 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI218:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI219:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __x, __x
	movl	%r8d, 32(%rbp)	 # __y, __y
.LBB28:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:149:     : _M_p(__x), _M_offset(__y) { }
	.loc 8 149 7
	movq	16(%rbp), %rax	 # this, tmp82
	movq	24(%rbp), %rdx	 # __x, tmp83
	movq	%rdx, (%rax)	 # tmp83, this_2(D)->_M_p
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:149:     : _M_p(__x), _M_offset(__y) { }
	.loc 8 149 18
	movq	16(%rbp), %rax	 # this, tmp84
	movl	32(%rbp), %edx	 # __y, tmp85
	movl	%edx, 8(%rax)	 # tmp85, this_2(D)->_M_offset
.LBE28:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:149:     : _M_p(__x), _M_offset(__y) { }
	.loc 8 149 35
	nop	
	popq	%rbp	 #
.LCFI220:
	ret	
.LFE1855:
	.seh_endproc
	.section	.text$_ZNSt18_Bit_iterator_base10_M_bump_upEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt18_Bit_iterator_base10_M_bump_upEv
	.def	_ZNSt18_Bit_iterator_base10_M_bump_upEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt18_Bit_iterator_base10_M_bump_upEv
_ZNSt18_Bit_iterator_base10_M_bump_upEv:
.LFB1857:
	.loc 8 152 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI221:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI222:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:154:       if (_M_offset++ == int(_S_word_bit) - 1)
	.loc 8 154 11
	movq	16(%rbp), %rax	 # this, tmp87
	movl	8(%rax), %eax	 # this_8(D)->_M_offset, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:154:       if (_M_offset++ == int(_S_word_bit) - 1)
	.loc 8 154 20
	leal	1(%rax), %ecx	 #, _3
	movq	16(%rbp), %rdx	 # this, tmp88
	movl	%ecx, 8(%rdx)	 # _3, this_8(D)->_M_offset
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:154:       if (_M_offset++ == int(_S_word_bit) - 1)
	.loc 8 154 23
	cmpl	$31, %eax	 #, _1
	sete	%al	 #, retval.22_10
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:154:       if (_M_offset++ == int(_S_word_bit) - 1)
	.loc 8 154 7
	testb	%al, %al	 # retval.22_10
	je	.L165	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:156: 	  _M_offset = 0;
	.loc 8 156 14
	movq	16(%rbp), %rax	 # this, tmp89
	movl	$0, 8(%rax)	 #, this_8(D)->_M_offset
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:157: 	  ++_M_p;
	.loc 8 157 6
	movq	16(%rbp), %rax	 # this, tmp90
	movq	(%rax), %rax	 # this_8(D)->_M_p, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:157: 	  ++_M_p;
	.loc 8 157 4
	leaq	4(%rax), %rdx	 #, _5
	movq	16(%rbp), %rax	 # this, tmp91
	movq	%rdx, (%rax)	 # _5, this_8(D)->_M_p
.L165:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:159:     }
	.loc 8 159 5
	nop	
	popq	%rbp	 #
.LCFI223:
	ret	
.LFE1857:
	.seh_endproc
	.section	.text$_ZNSt18_Bit_iterator_base12_M_bump_downEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt18_Bit_iterator_base12_M_bump_downEv
	.def	_ZNSt18_Bit_iterator_base12_M_bump_downEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt18_Bit_iterator_base12_M_bump_downEv
_ZNSt18_Bit_iterator_base12_M_bump_downEv:
.LFB1858:
	.loc 8 162 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI224:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI225:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:164:       if (_M_offset-- == 0)
	.loc 8 164 11
	movq	16(%rbp), %rax	 # this, tmp87
	movl	8(%rax), %eax	 # this_8(D)->_M_offset, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:164:       if (_M_offset-- == 0)
	.loc 8 164 20
	leal	-1(%rax), %ecx	 #, _3
	movq	16(%rbp), %rdx	 # this, tmp88
	movl	%ecx, 8(%rdx)	 # _3, this_8(D)->_M_offset
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:164:       if (_M_offset-- == 0)
	.loc 8 164 23
	testl	%eax, %eax	 # _1
	sete	%al	 #, retval.32_10
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:164:       if (_M_offset-- == 0)
	.loc 8 164 7
	testb	%al, %al	 # retval.32_10
	je	.L168	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:166: 	  _M_offset = int(_S_word_bit) - 1;
	.loc 8 166 14
	movq	16(%rbp), %rax	 # this, tmp89
	movl	$31, 8(%rax)	 #, this_8(D)->_M_offset
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:167: 	  --_M_p;
	.loc 8 167 6
	movq	16(%rbp), %rax	 # this, tmp90
	movq	(%rax), %rax	 # this_8(D)->_M_p, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:167: 	  --_M_p;
	.loc 8 167 4
	leaq	-4(%rax), %rdx	 #, _5
	movq	16(%rbp), %rax	 # this, tmp91
	movq	%rdx, (%rax)	 # _5, this_8(D)->_M_p
.L168:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:169:     }
	.loc 8 169 5
	nop	
	popq	%rbp	 #
.LCFI226:
	ret	
.LFE1858:
	.seh_endproc
	.section	.text$_ZNSt18_Bit_iterator_base7_M_incrEx,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt18_Bit_iterator_base7_M_incrEx
	.def	_ZNSt18_Bit_iterator_base7_M_incrEx;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt18_Bit_iterator_base7_M_incrEx
_ZNSt18_Bit_iterator_base7_M_incrEx:
.LFB1859:
	.loc 8 172 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI227:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI228:
	subq	$16, %rsp	 #,
	.seh_stackalloc	16
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __i, __i
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:174:       difference_type __n = __i + _M_offset;
	.loc 8 174 35
	movq	16(%rbp), %rax	 # this, tmp92
	movl	8(%rax), %eax	 # this_14(D)->_M_offset, _1
	movl	%eax, %edx	 # _1, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:174:       difference_type __n = __i + _M_offset;
	.loc 8 174 23
	movq	24(%rbp), %rax	 # __i, tmp96
	addq	%rdx, %rax	 # _2, tmp95
	movq	%rax, -8(%rbp)	 # tmp95, __n
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:175:       _M_p += __n / int(_S_word_bit);
	.loc 8 175 12
	movq	16(%rbp), %rax	 # this, tmp97
	movq	(%rax), %rcx	 # this_14(D)->_M_p, _3
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:175:       _M_p += __n / int(_S_word_bit);
	.loc 8 175 19
	movq	-8(%rbp), %rax	 # __n, tmp98
	leaq	31(%rax), %rdx	 #, tmp100
	testq	%rax, %rax	 # tmp99
	cmovs	%rdx, %rax	 # tmp100,, tmp99
	sarq	$5, %rax	 #, tmp101
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:175:       _M_p += __n / int(_S_word_bit);
	.loc 8 175 12
	salq	$2, %rax	 #, _6
	leaq	(%rcx,%rax), %rdx	 #, _7
	movq	16(%rbp), %rax	 # this, tmp102
	movq	%rdx, (%rax)	 # _7, this_14(D)->_M_p
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:176:       __n = __n % int(_S_word_bit);
	.loc 8 176 11
	movq	-8(%rbp), %rax	 # __n, tmp104
	cqto
	shrq	$59, %rdx	 #, tmp106
	addq	%rdx, %rax	 # tmp106, tmp107
	andl	$31, %eax	 #, tmp108
	subq	%rdx, %rax	 # tmp106, tmp109
	movq	%rax, -8(%rbp)	 # tmp109, __n
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:177:       if (__n < 0)
	.loc 8 177 7
	cmpq	$0, -8(%rbp)	 #, __n
	jns	.L170	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:179: 	  __n += int(_S_word_bit);
	.loc 8 179 8
	addq	$32, -8(%rbp)	 #, __n
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:180: 	  --_M_p;
	.loc 8 180 6
	movq	16(%rbp), %rax	 # this, tmp110
	movq	(%rax), %rax	 # this_14(D)->_M_p, _8
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:180: 	  --_M_p;
	.loc 8 180 4
	leaq	-4(%rax), %rdx	 #, _9
	movq	16(%rbp), %rax	 # this, tmp111
	movq	%rdx, (%rax)	 # _9, this_14(D)->_M_p
.L170:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:182:       _M_offset = static_cast<unsigned int>(__n);
	.loc 8 182 17
	movq	-8(%rbp), %rax	 # __n, tmp112
	movl	%eax, %edx	 # tmp112, _10
	movq	16(%rbp), %rax	 # this, tmp113
	movl	%edx, 8(%rax)	 # _10, this_14(D)->_M_offset
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:183:     }
	.loc 8 183 5
	nop	
	addq	$16, %rsp	 #,
	popq	%rbp	 #
.LCFI229:
	ret	
.LFE1859:
	.seh_endproc
	.section	.text$_ZStmiRKSt18_Bit_iterator_baseS1_,"x"
	.linkonce discard
	.globl	_ZStmiRKSt18_Bit_iterator_baseS1_
	.def	_ZStmiRKSt18_Bit_iterator_baseS1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZStmiRKSt18_Bit_iterator_baseS1_
_ZStmiRKSt18_Bit_iterator_baseS1_:
.LFB1862:
	.loc 8 224 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI230:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI231:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __x, __x
	movq	%rdx, 24(%rbp)	 # __y, __y
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:226:       return (int(_S_word_bit) * (__x._M_p - __y._M_p)
	.loc 8 226 39
	movq	16(%rbp), %rax	 # __x, tmp93
	movq	(%rax), %rdx	 # __x_11(D)->_M_p, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:226:       return (int(_S_word_bit) * (__x._M_p - __y._M_p)
	.loc 8 226 50
	movq	24(%rbp), %rax	 # __y, tmp94
	movq	(%rax), %rcx	 # __y_12(D)->_M_p, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:226:       return (int(_S_word_bit) * (__x._M_p - __y._M_p)
	.loc 8 226 44
	movq	%rdx, %rax	 # _1, _1
	subq	%rcx, %rax	 # _2, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:227: 	      + __x._M_offset - __y._M_offset);
	.loc 8 227 8
	leaq	0(,%rax,8), %rdx	 #, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:227: 	      + __x._M_offset - __y._M_offset);
	.loc 8 227 14
	movq	16(%rbp), %rax	 # __x, tmp95
	movl	8(%rax), %eax	 # __x_11(D)->_M_offset, _5
	movl	%eax, %eax	 # _5, _6
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:227: 	      + __x._M_offset - __y._M_offset);
	.loc 8 227 8
	addq	%rax, %rdx	 # _6, _7
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:227: 	      + __x._M_offset - __y._M_offset);
	.loc 8 227 30
	movq	24(%rbp), %rax	 # __y, tmp96
	movl	8(%rax), %eax	 # __y_12(D)->_M_offset, _8
	movl	%eax, %ecx	 # _8, _9
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:227: 	      + __x._M_offset - __y._M_offset);
	.loc 8 227 39
	movq	%rdx, %rax	 # _7, _7
	subq	%rcx, %rax	 # _9, _7
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:228:     }
	.loc 8 228 5
	popq	%rbp	 #
.LCFI232:
	ret	
.LFE1862:
	.seh_endproc
	.section	.text$_ZNSt13_Bit_iteratorC1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt13_Bit_iteratorC1Ev
	.def	_ZNSt13_Bit_iteratorC1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt13_Bit_iteratorC1Ev
_ZNSt13_Bit_iteratorC1Ev:
.LFB1865:
	.loc 8 241 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI233:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI234:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB29:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:241:     _Bit_iterator() : _Bit_iterator_base(0, 0) { }
	.loc 8 241 46
	movq	16(%rbp), %rax	 # this, _1
	movl	$0, %r8d	 #,
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # _1,
	call	_ZNSt18_Bit_iterator_baseC2EPmj	 #
.LBE29:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:241:     _Bit_iterator() : _Bit_iterator_base(0, 0) { }
	.loc 8 241 50
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI235:
	ret	
.LFE1865:
	.seh_endproc
	.section	.text$_ZNSt13_Bit_iteratorC1EPmj,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt13_Bit_iteratorC1EPmj
	.def	_ZNSt13_Bit_iteratorC1EPmj;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt13_Bit_iteratorC1EPmj
_ZNSt13_Bit_iteratorC1EPmj:
.LFB1868:
	.loc 8 243 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI236:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI237:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __x, __x
	movl	%r8d, 32(%rbp)	 # __y, __y
.LBB30:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:244:     : _Bit_iterator_base(__x, __y) { }
	.loc 8 244 34
	movq	16(%rbp), %rax	 # this, _1
	movl	32(%rbp), %ecx	 # __y, tmp83
	movq	24(%rbp), %rdx	 # __x, tmp84
	movl	%ecx, %r8d	 # tmp83,
	movq	%rax, %rcx	 # _1,
	call	_ZNSt18_Bit_iterator_baseC2EPmj	 #
.LBE30:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:244:     : _Bit_iterator_base(__x, __y) { }
	.loc 8 244 38
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI238:
	ret	
.LFE1868:
	.seh_endproc
	.section	.text$_ZNKSt13_Bit_iteratordeEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt13_Bit_iteratordeEv
	.def	_ZNKSt13_Bit_iteratordeEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt13_Bit_iteratordeEv
_ZNKSt13_Bit_iteratordeEv:
.LFB1870:
	.loc 8 251 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI239:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI240:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, 24(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:252:     { return reference(_M_p, 1UL << _M_offset); }
	.loc 8 252 37
	movq	24(%rbp), %rax	 # this, tmp85
	movl	8(%rax), %eax	 # this_5(D)->D.34297._M_offset, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:252:     { return reference(_M_p, 1UL << _M_offset); }
	.loc 8 252 46
	movl	$1, %edx	 #, tmp86
	movl	%eax, %ecx	 # _1, tmp89
	sall	%cl, %edx	 # tmp89, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:252:     { return reference(_M_p, 1UL << _M_offset); }
	.loc 8 252 24
	movq	24(%rbp), %rax	 # this, tmp87
	movq	(%rax), %rax	 # this_5(D)->D.34297._M_p, _3
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:252:     { return reference(_M_p, 1UL << _M_offset); }
	.loc 8 252 46
	movl	%edx, %r8d	 # _2,
	movq	%rax, %rdx	 # _3,
	movq	16(%rbp), %rcx	 # .result_ptr,
	call	_ZNSt14_Bit_referenceC1EPmm	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:252:     { return reference(_M_p, 1UL << _M_offset); }
	.loc 8 252 49
	movq	16(%rbp), %rax	 # .result_ptr,
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI241:
	ret	
.LFE1870:
	.seh_endproc
	.section	.text$_ZNSt13_Bit_iteratorppEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt13_Bit_iteratorppEv
	.def	_ZNSt13_Bit_iteratorppEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt13_Bit_iteratorppEv
_ZNSt13_Bit_iteratorppEv:
.LFB1871:
	.loc 8 255 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI242:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI243:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:257:       _M_bump_up();
	.loc 8 257 17
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt18_Bit_iterator_base10_M_bump_upEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:258:       return *this;
	.loc 8 258 15
	movq	16(%rbp), %rax	 # this, _5
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:259:     }
	.loc 8 259 5
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI244:
	ret	
.LFE1871:
	.seh_endproc
	.section	.text$_ZNSt13_Bit_iteratormmEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt13_Bit_iteratormmEv
	.def	_ZNSt13_Bit_iteratormmEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt13_Bit_iteratormmEv
_ZNSt13_Bit_iteratormmEv:
.LFB1873:
	.loc 8 270 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI245:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI246:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:272:       _M_bump_down();
	.loc 8 272 19
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt18_Bit_iterator_base12_M_bump_downEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:273:       return *this;
	.loc 8 273 15
	movq	16(%rbp), %rax	 # this, _5
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:274:     }
	.loc 8 274 5
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI247:
	ret	
.LFE1873:
	.seh_endproc
	.section	.text$_ZNSt13_Bit_iteratorpLEx,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt13_Bit_iteratorpLEx
	.def	_ZNSt13_Bit_iteratorpLEx;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt13_Bit_iteratorpLEx
_ZNSt13_Bit_iteratorpLEx:
.LFB1875:
	.loc 8 285 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI248:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI249:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __i, __i
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:287:       _M_incr(__i);
	.loc 8 287 14
	movq	16(%rbp), %rax	 # this, _1
	movq	24(%rbp), %rdx	 # __i, tmp85
	movq	%rax, %rcx	 # _1,
	call	_ZNSt18_Bit_iterator_base7_M_incrEx	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:288:       return *this;
	.loc 8 288 15
	movq	16(%rbp), %rax	 # this, _6
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:289:     }
	.loc 8 289 5
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI250:
	ret	
.LFE1875:
	.seh_endproc
	.section	.text$_ZNKSt13_Bit_iteratorixEx,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt13_Bit_iteratorixEx
	.def	_ZNKSt13_Bit_iteratorixEx;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt13_Bit_iteratorixEx
_ZNKSt13_Bit_iteratorixEx:
.LFB1877:
	.loc 8 299 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI251:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI252:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, 24(%rbp)	 # this, this
	movq	%r8, 32(%rbp)	 # __i, __i
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:300:     { return *(*this + __i); }
	.loc 8 300 24
	leaq	-16(%rbp), %rax	 #, tmp82
	movq	32(%rbp), %rcx	 # __i, tmp83
	movq	24(%rbp), %rdx	 # this, tmp84
	movq	%rcx, %r8	 # tmp83,
	movq	%rax, %rcx	 # tmp82,
	call	_ZStplRKSt13_Bit_iteratorx	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:300:     { return *(*this + __i); }
	.loc 8 300 27
	movq	16(%rbp), %rax	 # .result_ptr, tmp85
	leaq	-16(%rbp), %rdx	 #, tmp86
	movq	%rax, %rcx	 # tmp85,
	call	_ZNKSt13_Bit_iteratordeEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:300:     { return *(*this + __i); }
	.loc 8 300 30
	movq	16(%rbp), %rax	 # .result_ptr,
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI253:
	ret	
.LFE1877:
	.seh_endproc
	.section	.text$_ZStplRKSt13_Bit_iteratorx,"x"
	.linkonce discard
	.globl	_ZStplRKSt13_Bit_iteratorx
	.def	_ZStplRKSt13_Bit_iteratorx;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZStplRKSt13_Bit_iteratorx
_ZStplRKSt13_Bit_iteratorx:
.LFB1878:
	.loc 8 303 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI254:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI255:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, 24(%rbp)	 # __x, __x
	movq	%r8, 32(%rbp)	 # __n, __n
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:305:       iterator __tmp = __x;
	.loc 8 305 16
	movq	16(%rbp), %rcx	 # .result_ptr, tmp82
	movq	24(%rbp), %rax	 # __x, tmp83
	movq	8(%rax), %rdx	 # MEM[(const struct _Bit_iterator &)__x_2(D)],
	movq	(%rax), %rax	 # MEM[(const struct _Bit_iterator &)__x_2(D)], tmp84
	movq	%rax, (%rcx)	 # tmp84, <retval>
	movq	%rdx, 8(%rcx)	 #, <retval>
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:306:       __tmp += __n;
	.loc 8 306 16
	movq	32(%rbp), %rax	 # __n, tmp85
	movq	%rax, %rdx	 # tmp85,
	movq	16(%rbp), %rcx	 # .result_ptr,
	call	_ZNSt13_Bit_iteratorpLEx	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:307:       return __tmp;
	.loc 8 307 14
	nop	
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:308:     }
	.loc 8 308 5
	movq	16(%rbp), %rax	 # .result_ptr,
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI256:
	ret	
.LFE1878:
	.seh_endproc
	.section	.text$_ZNSt19_Bit_const_iteratorC1EPmj,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt19_Bit_const_iteratorC1EPmj
	.def	_ZNSt19_Bit_const_iteratorC1EPmj;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt19_Bit_const_iteratorC1EPmj
_ZNSt19_Bit_const_iteratorC1EPmj:
.LFB1886:
	.loc 8 336 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI257:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI258:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __x, __x
	movl	%r8d, 32(%rbp)	 # __y, __y
.LBB31:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:337:     : _Bit_iterator_base(__x, __y) { }
	.loc 8 337 34
	movq	16(%rbp), %rax	 # this, _1
	movl	32(%rbp), %ecx	 # __y, tmp83
	movq	24(%rbp), %rdx	 # __x, tmp84
	movl	%ecx, %r8d	 # tmp83,
	movq	%rax, %rcx	 # _1,
	call	_ZNSt18_Bit_iterator_baseC2EPmj	 #
.LBE31:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:337:     : _Bit_iterator_base(__x, __y) { }
	.loc 8 337 38
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI259:
	ret	
.LFE1886:
	.seh_endproc
	.section	.text$_ZNSt19_Bit_const_iteratorC1ERKSt13_Bit_iterator,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt19_Bit_const_iteratorC1ERKSt13_Bit_iterator
	.def	_ZNSt19_Bit_const_iteratorC1ERKSt13_Bit_iterator;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt19_Bit_const_iteratorC1ERKSt13_Bit_iterator
_ZNSt19_Bit_const_iteratorC1ERKSt13_Bit_iterator:
.LFB1889:
	.loc 8 339 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI260:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI261:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __x, __x
.LBB32:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:340:     : _Bit_iterator_base(__x._M_p, __x._M_offset) { }
	.loc 8 340 49
	movq	16(%rbp), %rax	 # this, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:340:     : _Bit_iterator_base(__x._M_p, __x._M_offset) { }
	.loc 8 340 40
	movq	24(%rbp), %rdx	 # __x, tmp85
	movl	8(%rdx), %ecx	 # __x_7(D)->D.34297._M_offset, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:340:     : _Bit_iterator_base(__x._M_p, __x._M_offset) { }
	.loc 8 340 30
	movq	24(%rbp), %rdx	 # __x, tmp86
	movq	(%rdx), %rdx	 # __x_7(D)->D.34297._M_p, _3
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:340:     : _Bit_iterator_base(__x._M_p, __x._M_offset) { }
	.loc 8 340 49
	movl	%ecx, %r8d	 # _2,
	movq	%rax, %rcx	 # _1,
	call	_ZNSt18_Bit_iterator_baseC2EPmj	 #
.LBE32:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:340:     : _Bit_iterator_base(__x._M_p, __x._M_offset) { }
	.loc 8 340 53
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI262:
	ret	
.LFE1889:
	.seh_endproc
	.section	.text$_ZNKSt19_Bit_const_iterator13_M_const_castEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt19_Bit_const_iterator13_M_const_castEv
	.def	_ZNKSt19_Bit_const_iterator13_M_const_castEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt19_Bit_const_iterator13_M_const_castEv
_ZNKSt19_Bit_const_iterator13_M_const_castEv:
.LFB1890:
	.loc 8 343 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI263:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI264:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, 24(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:344:     { return _Bit_iterator(_M_p, _M_offset); }
	.loc 8 344 34
	movq	24(%rbp), %rax	 # this, tmp84
	movl	8(%rax), %edx	 # this_4(D)->D.34475._M_offset, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:344:     { return _Bit_iterator(_M_p, _M_offset); }
	.loc 8 344 28
	movq	24(%rbp), %rax	 # this, tmp85
	movq	(%rax), %rax	 # this_4(D)->D.34475._M_p, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:344:     { return _Bit_iterator(_M_p, _M_offset); }
	.loc 8 344 43
	movl	%edx, %r8d	 # _1,
	movq	%rax, %rdx	 # _2,
	movq	16(%rbp), %rcx	 # .result_ptr,
	call	_ZNSt13_Bit_iteratorC1EPmj	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:344:     { return _Bit_iterator(_M_p, _M_offset); }
	.loc 8 344 46
	movq	16(%rbp), %rax	 # .result_ptr,
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI265:
	ret	
.LFE1890:
	.seh_endproc
	.section	.text$_ZNKSt19_Bit_const_iteratordeEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt19_Bit_const_iteratordeEv
	.def	_ZNKSt19_Bit_const_iteratordeEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt19_Bit_const_iteratordeEv
_ZNKSt19_Bit_const_iteratordeEv:
.LFB1891:
	.loc 8 347 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI266:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI267:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:348:     { return _Bit_reference(_M_p, 1UL << _M_offset); }
	.loc 8 348 42
	movq	16(%rbp), %rax	 # this, tmp87
	movl	8(%rax), %eax	 # this_5(D)->D.34475._M_offset, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:348:     { return _Bit_reference(_M_p, 1UL << _M_offset); }
	.loc 8 348 14
	movl	$1, %edx	 #, tmp88
	movl	%eax, %ecx	 # _1, tmp95
	sall	%cl, %edx	 # tmp95, tmp88
	movl	%edx, %ecx	 # tmp88, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:348:     { return _Bit_reference(_M_p, 1UL << _M_offset); }
	.loc 8 348 29
	movq	16(%rbp), %rax	 # this, tmp89
	movq	(%rax), %rdx	 # this_5(D)->D.34475._M_p, _3
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:348:     { return _Bit_reference(_M_p, 1UL << _M_offset); }
	.loc 8 348 14
	leaq	-16(%rbp), %rax	 #, tmp90
	movl	%ecx, %r8d	 # _2,
	movq	%rax, %rcx	 # tmp90,
	call	_ZNSt14_Bit_referenceC1EPmm	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:348:     { return _Bit_reference(_M_p, 1UL << _M_offset); }
	.loc 8 348 51
	leaq	-16(%rbp), %rax	 #, tmp91
	movq	%rax, %rcx	 # tmp91,
	call	_ZNKSt14_Bit_referencecvbEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:348:     { return _Bit_reference(_M_p, 1UL << _M_offset); }
	.loc 8 348 54
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI268:
	ret	
.LFE1891:
	.seh_endproc
	.section	.text$_ZNSt19_Bit_const_iteratorppEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt19_Bit_const_iteratorppEv
	.def	_ZNSt19_Bit_const_iteratorppEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt19_Bit_const_iteratorppEv
_ZNSt19_Bit_const_iteratorppEv:
.LFB1892:
	.loc 8 351 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI269:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI270:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:353:       _M_bump_up();
	.loc 8 353 17
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt18_Bit_iterator_base10_M_bump_upEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:354:       return *this;
	.loc 8 354 15
	movq	16(%rbp), %rax	 # this, _5
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:355:     }
	.loc 8 355 5
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI271:
	ret	
.LFE1892:
	.seh_endproc
	.section	.text$_ZNSt19_Bit_const_iteratorpLEx,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt19_Bit_const_iteratorpLEx
	.def	_ZNSt19_Bit_const_iteratorpLEx;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt19_Bit_const_iteratorpLEx
_ZNSt19_Bit_const_iteratorpLEx:
.LFB1896:
	.loc 8 381 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI272:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI273:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __i, __i
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:383:       _M_incr(__i);
	.loc 8 383 14
	movq	16(%rbp), %rax	 # this, _1
	movq	24(%rbp), %rdx	 # __i, tmp85
	movq	%rax, %rcx	 # _1,
	call	_ZNSt18_Bit_iterator_base7_M_incrEx	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:384:       return *this;
	.loc 8 384 15
	movq	16(%rbp), %rax	 # this, _6
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:385:     }
	.loc 8 385 5
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI274:
	ret	
.LFE1896:
	.seh_endproc
	.section	.text$_ZNKSt19_Bit_const_iteratorixEx,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt19_Bit_const_iteratorixEx
	.def	_ZNKSt19_Bit_const_iteratorixEx;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt19_Bit_const_iteratorixEx
_ZNKSt19_Bit_const_iteratorixEx:
.LFB1898:
	.loc 8 395 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI275:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI276:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __i, __i
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:396:     { return *(*this + __i); }
	.loc 8 396 24
	leaq	-16(%rbp), %rax	 #, tmp84
	movq	24(%rbp), %rdx	 # __i, tmp85
	movq	%rdx, %r8	 # tmp85,
	movq	16(%rbp), %rdx	 # this,
	movq	%rax, %rcx	 # tmp84,
	call	_ZStplRKSt19_Bit_const_iteratorx	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:396:     { return *(*this + __i); }
	.loc 8 396 14
	leaq	-16(%rbp), %rax	 #, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZNKSt19_Bit_const_iteratordeEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:396:     { return *(*this + __i); }
	.loc 8 396 30
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI277:
	ret	
.LFE1898:
	.seh_endproc
	.section	.text$_ZStplRKSt19_Bit_const_iteratorx,"x"
	.linkonce discard
	.globl	_ZStplRKSt19_Bit_const_iteratorx
	.def	_ZStplRKSt19_Bit_const_iteratorx;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZStplRKSt19_Bit_const_iteratorx
_ZStplRKSt19_Bit_const_iteratorx:
.LFB1899:
	.loc 8 399 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI278:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI279:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, 24(%rbp)	 # __x, __x
	movq	%r8, 32(%rbp)	 # __n, __n
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:401:       const_iterator __tmp = __x;
	.loc 8 401 22
	movq	16(%rbp), %rcx	 # .result_ptr, tmp82
	movq	24(%rbp), %rax	 # __x, tmp83
	movq	8(%rax), %rdx	 # MEM[(const struct _Bit_const_iterator &)__x_2(D)],
	movq	(%rax), %rax	 # MEM[(const struct _Bit_const_iterator &)__x_2(D)], tmp84
	movq	%rax, (%rcx)	 # tmp84, <retval>
	movq	%rdx, 8(%rcx)	 #, <retval>
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:402:       __tmp += __n;
	.loc 8 402 16
	movq	32(%rbp), %rax	 # __n, tmp85
	movq	%rax, %rdx	 # tmp85,
	movq	16(%rbp), %rcx	 # .result_ptr,
	call	_ZNSt19_Bit_const_iteratorpLEx	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:403:       return __tmp;
	.loc 8 403 14
	nop	
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:404:     }
	.loc 8 404 5
	movq	16(%rbp), %rax	 # .result_ptr,
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI280:
	ret	
.LFE1899:
	.seh_endproc
	.section	.text$_ZSt14__fill_bvectorPmjjb,"x"
	.linkonce discard
	.globl	_ZSt14__fill_bvectorPmjjb
	.def	_ZSt14__fill_bvectorPmjjb;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt14__fill_bvectorPmjjb
_ZSt14__fill_bvectorPmjjb:
.LFB1999:
	.loc 8 1332 3
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI281:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI282:
	subq	$16, %rsp	 #,
	.seh_stackalloc	16
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __v, __v
	movl	%edx, 24(%rbp)	 # __first, __first
	movl	%r8d, 32(%rbp)	 # __last, __last
	movl	%r9d, %eax	 # __x, tmp88
	movb	%al, 40(%rbp)	 # tmp89, __x
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1335:     const _Bit_type __fmask = ~0ul << __first;
	.loc 8 1335 21
	movl	24(%rbp), %eax	 # __first, tmp90
	movl	$-1, %edx	 #, tmp91
	movl	%eax, %ecx	 # tmp90, tmp107
	sall	%cl, %edx	 # tmp107, tmp91
	movl	%edx, %eax	 # tmp91, tmp92
	movl	%eax, -4(%rbp)	 # tmp92, __fmask
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1336:     const _Bit_type __lmask = ~0ul >> (_S_word_bit - __last);
	.loc 8 1336 52
	movl	$32, %eax	 #, tmp93
	subl	32(%rbp), %eax	 # __last, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1336:     const _Bit_type __lmask = ~0ul >> (_S_word_bit - __last);
	.loc 8 1336 21
	movl	$-1, %edx	 #, tmp94
	movl	%eax, %ecx	 # _1, tmp109
	shrl	%cl, %edx	 # tmp109, tmp94
	movl	%edx, %eax	 # tmp94, tmp95
	movl	%eax, -8(%rbp)	 # tmp95, __lmask
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1337:     const _Bit_type __mask = __fmask & __lmask;
	.loc 8 1337 21
	movl	-4(%rbp), %eax	 # __fmask, tmp99
	andl	-8(%rbp), %eax	 # __lmask, tmp98
	movl	%eax, -12(%rbp)	 # tmp98, __mask
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1339:     if (__x)
	.loc 8 1339 5
	cmpb	$0, 40(%rbp)	 #, __x
	je	.L202	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1340:       *__v |= __mask;
	.loc 8 1340 12
	movq	16(%rbp), %rax	 # __v, tmp100
	movl	(%rax), %eax	 # *__v_15(D), _2
	orl	-12(%rbp), %eax	 # __mask, _2
	movl	%eax, %edx	 # _2, _3
	movq	16(%rbp), %rax	 # __v, tmp101
	movl	%edx, (%rax)	 # _3, *__v_15(D)
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1343:   }
	.loc 8 1343 3
	jmp	.L204	 #
.L202:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1342:       *__v &= ~__mask;
	.loc 8 1342 12
	movq	16(%rbp), %rax	 # __v, tmp102
	movl	(%rax), %edx	 # *__v_15(D), _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1342:       *__v &= ~__mask;
	.loc 8 1342 15
	movl	-12(%rbp), %eax	 # __mask, tmp103
	notl	%eax	 # _5
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1342:       *__v &= ~__mask;
	.loc 8 1342 12
	andl	%eax, %edx	 # _5, _6
	movq	16(%rbp), %rax	 # __v, tmp104
	movl	%edx, (%rax)	 # _6, *__v_15(D)
.L204:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1343:   }
	.loc 8 1343 3
	nop	
	addq	$16, %rsp	 #,
	popq	%rbp	 #
.LCFI283:
	ret	
.LFE1999:
	.seh_endproc
	.section	.text$_ZSt9__fill_a1St13_Bit_iteratorS_RKb,"x"
	.linkonce discard
	.globl	_ZSt9__fill_a1St13_Bit_iteratorS_RKb
	.def	_ZSt9__fill_a1St13_Bit_iteratorS_RKb;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt9__fill_a1St13_Bit_iteratorS_RKb
_ZSt9__fill_a1St13_Bit_iteratorS_RKb:
.LFB2000:
	.loc 8 1348 3
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI284:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI285:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI286:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
.LCFI287:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI288:
	.seh_endprologue
	movq	%rcx, %rbx	 #, tmp106
	movq	%rdx, %rsi	 #, tmp107
	movq	%r8, 48(%rbp)	 # __x, __x
.LBB33:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1351:     if (__first._M_p != __last._M_p)
	.loc 8 1351 17
	movq	(%rbx), %rdx	 # __first.D.34297._M_p, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1351:     if (__first._M_p != __last._M_p)
	.loc 8 1351 32
	movq	(%rsi), %rax	 # __last.D.34297._M_p, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1351:     if (__first._M_p != __last._M_p)
	.loc 8 1351 5
	cmpq	%rax, %rdx	 # _2, _1
	je	.L206	 #,
.LBB34:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1353: 	_Bit_type* __first_p = __first._M_p;
	.loc 8 1353 13
	movq	(%rbx), %rax	 # __first.D.34297._M_p, tmp108
	movq	%rax, -8(%rbp)	 # tmp108, __first_p
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1354: 	if (__first._M_offset != 0)
	.loc 8 1354 14
	movl	8(%rbx), %eax	 # __first.D.34297._M_offset, _3
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1354: 	if (__first._M_offset != 0)
	.loc 8 1354 2
	testl	%eax, %eax	 # _3
	je	.L207	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1355: 	  __fill_bvector(__first_p++, __first._M_offset, _S_word_bit, __x);
	.loc 8 1355 64
	movq	48(%rbp), %rax	 # __x, tmp109
	movzbl	(%rax), %eax	 # *__x_29(D), _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1355: 	  __fill_bvector(__first_p++, __first._M_offset, _S_word_bit, __x);
	.loc 8 1355 18
	movzbl	%al, %r8d	 # _4, _5
	movl	8(%rbx), %edx	 # __first.D.34297._M_offset, _6
	movq	-8(%rbp), %rax	 # __first_p, __first_p.36_7
	leaq	4(%rax), %rcx	 #, tmp110
	movq	%rcx, -8(%rbp)	 # tmp110, __first_p
	movl	%r8d, %r9d	 # _5,
	movl	$32, %r8d	 #,
	movq	%rax, %rcx	 # __first_p.36_7,
	call	_ZSt14__fill_bvectorPmjjb	 #
.L207:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1358: 			 (__last._M_p - __first_p) * sizeof(_Bit_type));
	.loc 8 1358 13
	movq	(%rsi), %rax	 # __last.D.34297._M_p, _8
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1358: 			 (__last._M_p - __first_p) * sizeof(_Bit_type));
	.loc 8 1358 18
	subq	-8(%rbp), %rax	 # __first_p, _9
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1357: 	__builtin_memset(__first_p, __x ? ~0 : 0,
	.loc 8 1357 18
	movq	%rax, %rcx	 # _9, _10
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1357: 	__builtin_memset(__first_p, __x ? ~0 : 0,
	.loc 8 1357 30
	movq	48(%rbp), %rax	 # __x, tmp111
	movzbl	(%rax), %eax	 # *__x_29(D), _11
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1357: 	__builtin_memset(__first_p, __x ? ~0 : 0,
	.loc 8 1357 18
	testb	%al, %al	 # _11
	je	.L208	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1357: 	__builtin_memset(__first_p, __x ? ~0 : 0,
	.loc 8 1357 18 is_stmt 0 discriminator 1
	movl	$-1, %edx	 #, iftmp.37_25
	jmp	.L209	 #
.L208:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1357: 	__builtin_memset(__first_p, __x ? ~0 : 0,
	.loc 8 1357 18 discriminator 2
	movl	$0, %edx	 #, iftmp.37_25
.L209:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1357: 	__builtin_memset(__first_p, __x ? ~0 : 0,
	.loc 8 1357 18 discriminator 4
	movq	-8(%rbp), %rax	 # __first_p, tmp113
	movq	%rcx, %r8	 # _10,
	movq	%rax, %rcx	 # tmp113,
	call	memset	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1360: 	if (__last._M_offset != 0)
	.loc 8 1360 13 is_stmt 1 discriminator 4
	movl	8(%rsi), %eax	 # __last.D.34297._M_offset, _12
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1360: 	if (__last._M_offset != 0)
	.loc 8 1360 2 discriminator 4
	testl	%eax, %eax	 # _12
	je	.L211	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1361: 	  __fill_bvector(__last._M_p, 0, __last._M_offset, __x);
	.loc 8 1361 53
	movq	48(%rbp), %rax	 # __x, tmp114
	movzbl	(%rax), %eax	 # *__x_29(D), _13
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1361: 	  __fill_bvector(__last._M_p, 0, __last._M_offset, __x);
	.loc 8 1361 18
	movzbl	%al, %ecx	 # _13, _14
	movl	8(%rsi), %edx	 # __last.D.34297._M_offset, _15
	movq	(%rsi), %rax	 # __last.D.34297._M_p, _16
	movl	%ecx, %r9d	 # _14,
	movl	%edx, %r8d	 # _15,
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # _16,
	call	_ZSt14__fill_bvectorPmjjb	 #
.LBE34:
.LBE33:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1365:   }
	.loc 8 1365 3
	jmp	.L211	 #
.L206:
.LBB35:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1363:     else if (__first._M_offset != __last._M_offset)
	.loc 8 1363 22
	movl	8(%rbx), %edx	 # __first.D.34297._M_offset, _17
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1363:     else if (__first._M_offset != __last._M_offset)
	.loc 8 1363 42
	movl	8(%rsi), %eax	 # __last.D.34297._M_offset, _18
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1363:     else if (__first._M_offset != __last._M_offset)
	.loc 8 1363 10
	cmpl	%eax, %edx	 # _18, _17
	je	.L211	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1364:       __fill_bvector(__first._M_p, __first._M_offset, __last._M_offset, __x);
	.loc 8 1364 73
	movq	48(%rbp), %rax	 # __x, tmp115
	movzbl	(%rax), %eax	 # *__x_29(D), _19
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1364:       __fill_bvector(__first._M_p, __first._M_offset, __last._M_offset, __x);
	.loc 8 1364 21
	movzbl	%al, %r8d	 # _19, _20
	movl	8(%rsi), %ecx	 # __last.D.34297._M_offset, _21
	movl	8(%rbx), %edx	 # __first.D.34297._M_offset, _22
	movq	(%rbx), %rax	 # __first.D.34297._M_p, _23
	movl	%r8d, %r9d	 # _20,
	movl	%ecx, %r8d	 # _21,
	movq	%rax, %rcx	 # _23,
	call	_ZSt14__fill_bvectorPmjjb	 #
.L211:
.LBE35:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1365:   }
	.loc 8 1365 3
	nop	
	addq	$48, %rsp	 #,
	popq	%rbx	 #
.LCFI289:
	popq	%rsi	 #
.LCFI290:
	popq	%rbp	 #
.LCFI291:
	ret	
.LFE2000:
	.seh_endproc
	.section	.text$_ZSt3minIyERKT_S2_S2_,"x"
	.linkonce discard
	.globl	_ZSt3minIyERKT_S2_S2_
	.def	_ZSt3minIyERKT_S2_S2_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt3minIyERKT_S2_S2_
_ZSt3minIyERKT_S2_S2_:
.LFB4173:
	.loc 3 230 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI292:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI293:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __a, __a
	movq	%rdx, 24(%rbp)	 # __b, __b
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:235:       if (__b < __a)
	.loc 3 235 15
	movq	24(%rbp), %rax	 # __b, tmp86
	movq	(%rax), %rdx	 # *__b_5(D), _1
	movq	16(%rbp), %rax	 # __a, tmp87
	movq	(%rax), %rax	 # *__a_6(D), _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:235:       if (__b < __a)
	.loc 3 235 7
	cmpq	%rax, %rdx	 # _2, _1
	jnb	.L213	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:236: 	return __b;
	.loc 3 236 9
	movq	24(%rbp), %rax	 # __b, _3
	jmp	.L214	 #
.L213:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:237:       return __a;
	.loc 3 237 14
	movq	16(%rbp), %rax	 # __a, _3
.L214:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:238:     }
	.loc 3 238 5
	popq	%rbp	 #
.LCFI294:
	ret	
.LFE4173:
	.seh_endproc
	.section .rdata,"dr"
_ZN6__pstl9execution2v1L3seqE:
	.space 1
_ZN6__pstl9execution2v1L3parE:
	.space 1
_ZN6__pstl9execution2v1L9par_unseqE:
	.space 1
_ZN6__pstl9execution2v1L5unseqE:
	.space 1
	.align 4
_ZL4XMAX:
	.long	1153957888
	.align 4
_ZL4YMAX:
	.long	1147207680
	.globl	mpo
	.bss
	.align 8
mpo:
	.space 8
	.globl	wmpo
	.align 8
wmpo:
	.space 8
	.globl	mdt
	.align 8
mdt:
	.space 8
	.globl	dt
	.align 4
dt:
	.space 4
	.globl	actreg
	.data
	.align 16
actreg:
	.quad	_Z10f_ACT_NULLR5Blorb
	.quad	_Z18f_ACT_MOVE_FORWARDR5Blorb
	.section .rdata,"dr"
	.align 8
_ZL8act_outc:
	.long	1
	.long	1
	.section	.text$_ZN7OptimapIhiED1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZN7OptimapIhiED1Ev
	.def	_ZN7OptimapIhiED1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN7OptimapIhiED1Ev
_ZN7OptimapIhiED1Ev:
.LFB4654:
	.file 9 "optimap.hpp"
	.loc 9 7 8
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI295:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI296:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB36:
 # optimap.hpp:7: struct Optimap {
	.loc 9 7 8
	movq	16(%rbp), %rax	 # this, tmp84
	addq	$40, %rax	 #, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt6vectorIiSaIiEED1Ev	 #
	movq	16(%rbp), %rax	 # this, _2
	movq	%rax, %rcx	 # _2,
	call	_ZNSt6vectorIbSaIbEED1Ev	 #
.LBE36:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI297:
	ret	
.LFE4654:
	.seh_endproc
	.section	.text$_ZN3DDT4NodeC1E6Action,"x"
	.linkonce discard
	.align 2
	.globl	_ZN3DDT4NodeC1E6Action
	.def	_ZN3DDT4NodeC1E6Action;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN3DDT4NodeC1E6Action
_ZN3DDT4NodeC1E6Action:
.LFB4659:
	.file 10 "main.cpp"
	.loc 10 60 3
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI298:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI299:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI300:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI301:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movl	%edx, 40(%rbp)	 # act, act
.LBB37:
 # main.cpp:60: 		Node(Action act) { next.init(act_outc[act]); action = act; }
	.loc 10 60 20
	movq	32(%rbp), %rax	 # this, tmp88
	addq	$8, %rax	 #, _1
	movq	%rax, %rcx	 # _1,
.LEHB0:
	call	_ZN7OptimapIhiEC1Ev	 #
.LEHE0:
 # main.cpp:60: 		Node(Action act) { next.init(act_outc[act]); action = act; }
	.loc 10 60 31
	movq	32(%rbp), %rax	 # this, tmp89
	leaq	8(%rax), %rcx	 #, _2
 # main.cpp:60: 		Node(Action act) { next.init(act_outc[act]); action = act; }
	.loc 10 60 41
	movl	40(%rbp), %eax	 # act, act.8_3
 # main.cpp:60: 		Node(Action act) { next.init(act_outc[act]); action = act; }
	.loc 10 60 44
	cltq
	leaq	0(,%rax,4), %rdx	 #, tmp91
	leaq	_ZL8act_outc(%rip), %rax	 #, tmp92
	movl	(%rdx,%rax), %eax	 # act_outc[act.8_3], _4
 # main.cpp:60: 		Node(Action act) { next.init(act_outc[act]); action = act; }
	.loc 10 60 31
	movl	%eax, %edx	 # _4,
.LEHB1:
	call	_ZN7OptimapIhiE4initEi	 #
.LEHE1:
 # main.cpp:60: 		Node(Action act) { next.init(act_outc[act]); action = act; }
	.loc 10 60 55 discriminator 2
	movq	32(%rbp), %rax	 # this, tmp93
	movl	40(%rbp), %edx	 # act, tmp94
	movl	%edx, (%rax)	 # tmp94, this_7(D)->action
.LBE37:
 # main.cpp:60: 		Node(Action act) { next.init(act_outc[act]); action = act; }
	.loc 10 60 62 discriminator 2
	jmp	.L219	 #
.L218:
.LBB38:
 # main.cpp:60: 		Node(Action act) { next.init(act_outc[act]); action = act; }
	.loc 10 60 62 is_stmt 0
	movq	%rax, %rbx	 #, tmp96
	movq	32(%rbp), %rax	 # this, tmp95
	addq	$8, %rax	 #, _5
	movq	%rax, %rcx	 # _5,
	call	_ZN7OptimapIhiED1Ev	 #
	movq	%rbx, %rax	 # tmp96, D.129127
	movq	%rax, %rcx	 # D.129127,
.LEHB2:
	call	_Unwind_Resume	 #
	nop	
.LEHE2:
.L219:
.LBE38:
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI302:
	popq	%rbp	 #
.LCFI303:
	ret	
.LFE4659:
	.def	__gxx_personality_seh0;	.scl	2;	.type	32;	.endef
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA4659:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE4659-.LLSDACSB4659
.LLSDACSB4659:
	.uleb128 .LEHB0-.LFB4659
	.uleb128 .LEHE0-.LEHB0
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB1-.LFB4659
	.uleb128 .LEHE1-.LEHB1
	.uleb128 .L218-.LFB4659
	.uleb128 0
	.uleb128 .LEHB2-.LFB4659
	.uleb128 .LEHE2-.LEHB2
	.uleb128 0
	.uleb128 0
.LLSDACSE4659:
	.section	.text$_ZN3DDT4NodeC1E6Action,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZN3DDT4Node7addPathEhi,"x"
	.linkonce discard
	.align 2
	.globl	_ZN3DDT4Node7addPathEhi
	.def	_ZN3DDT4Node7addPathEhi;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN3DDT4Node7addPathEhi
_ZN3DDT4Node7addPathEhi:
.LFB4660:
	.loc 10 62 8 is_stmt 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI304:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI305:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI306:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI307:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movl	%edx, %eax	 # aout, tmp86
	movl	%r8d, 48(%rbp)	 # other, other
	movb	%al, 40(%rbp)	 # tmp87, aout
 # main.cpp:63: 			next[aout] = other;
	.loc 10 63 15
	movl	48(%rbp), %ebx	 # other, other.109_1
 # main.cpp:63: 			next[aout] = other;
	.loc 10 63 13
	movq	32(%rbp), %rax	 # this, tmp88
	leaq	8(%rax), %rcx	 #, _2
	movzbl	40(%rbp), %eax	 # aout, _3
	movl	%eax, %edx	 # _3,
	call	_ZN7OptimapIhiEixEh	 #
 # main.cpp:63: 			next[aout] = other;
	.loc 10 63 15
	movl	%ebx, (%rax)	 # other.109_1, *_4
 # main.cpp:64: 		}
	.loc 10 64 3
	nop	
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI308:
	popq	%rbp	 #
.LCFI309:
	ret	
.LFE4660:
	.seh_endproc
	.section	.text$_ZN3DDT4Node11getNextNodeER5BlorbN9__gnu_cxx17__normal_iteratorIPS0_St6vectorIS0_SaIS0_EEEE,"x"
	.linkonce discard
	.align 2
	.globl	_ZN3DDT4Node11getNextNodeER5BlorbN9__gnu_cxx17__normal_iteratorIPS0_St6vectorIS0_SaIS0_EEEE
	.def	_ZN3DDT4Node11getNextNodeER5BlorbN9__gnu_cxx17__normal_iteratorIPS0_St6vectorIS0_SaIS0_EEEE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN3DDT4Node11getNextNodeER5BlorbN9__gnu_cxx17__normal_iteratorIPS0_St6vectorIS0_SaIS0_EEEE
_ZN3DDT4Node11getNextNodeER5BlorbN9__gnu_cxx17__normal_iteratorIPS0_St6vectorIS0_SaIS0_EEEE:
.LFB4661:
	.loc 10 66 13
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI310:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI311:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # data, data
	movq	%r8, 32(%rbp)	 # begin, begin
 # main.cpp:67: 			ActionOutput output = actreg[action](data);
	.loc 10 67 33
	movq	16(%rbp), %rax	 # this, tmp94
	movl	(%rax), %eax	 # this_12(D)->action, _1
 # main.cpp:67: 			ActionOutput output = actreg[action](data);
	.loc 10 67 39
	cltq
	leaq	0(,%rax,8), %rdx	 #, tmp96
	leaq	actreg(%rip), %rax	 #, tmp97
	movq	(%rdx,%rax), %rdx	 # actreg[_2], _3
 # main.cpp:67: 			ActionOutput output = actreg[action](data);
	.loc 10 67 40
	movq	24(%rbp), %rax	 # data, tmp98
	movq	%rax, %rcx	 # tmp98,
	call	*%rdx	 # _3
.LVL1:
	movb	%al, -1(%rbp)	 # _15, output
 # main.cpp:68: 			if (next.contains(output)) {
	.loc 10 68 21
	movq	16(%rbp), %rax	 # this, tmp99
	leaq	8(%rax), %rcx	 #, _4
	movzbl	-1(%rbp), %eax	 # output, _5
	movl	%eax, %edx	 # _5,
	call	_ZNK7OptimapIhiE8containsEh	 #
 # main.cpp:68: 			if (next.contains(output)) {
	.loc 10 68 4
	testb	%al, %al	 # _18
	je	.L222	 #,
 # main.cpp:69: 				return next[output];
	.loc 10 69 23
	movq	16(%rbp), %rax	 # this, tmp100
	leaq	8(%rax), %rcx	 #, _6
	movzbl	-1(%rbp), %eax	 # output, _7
	movl	%eax, %edx	 # _7,
	call	_ZN7OptimapIhiEixEh	 #
	movl	(%rax), %eax	 # *_8, _9
	jmp	.L223	 #
.L222:
 # main.cpp:71: 				return -1;
	.loc 10 71 13
	movl	$-1, %eax	 #, _9
.L223:
 # main.cpp:73: 		}
	.loc 10 73 3
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI312:
	ret	
.LFE4661:
	.seh_endproc
	.section .rdata,"dr"
.LC15:
	.ascii "%i\0"
	.section	.text$_ZN3DDT4Node4drawE7Vector2,"x"
	.linkonce discard
	.align 2
	.globl	_ZN3DDT4Node4drawE7Vector2
	.def	_ZN3DDT4Node4drawE7Vector2;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN3DDT4Node4drawE7Vector2
_ZN3DDT4Node4drawE7Vector2:
.LFB4662:
	.loc 10 75 8
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI313:
	pushq	%rdi	 #
	.seh_pushreg	%rdi
.LCFI314:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI315:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI316:
	subq	$56, %rsp	 #,
	.seh_stackalloc	56
.LCFI317:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI318:
	.seh_endprologue
	movq	%rcx, 48(%rbp)	 # this, this
	movq	%rdx, 56(%rbp)	 # pos, pos
 # main.cpp:76: 			DrawCircleV(pos, 20.f, WHITE);
	.loc 10 76 15
	movb	$-1, %al	 #, D.128556
	movl	$-1, %edx	 #, tmp93
	movb	%dl, %ah	 # tmp93, D.128556
	orl	$16711680, %eax	 #, tmp95
	orl	$-16777216, %eax	 #, tmp97
	movq	56(%rbp), %rdx	 # pos, tmp98
	movl	%eax, %r8d	 # D.128556,
	movss	.LC13(%rip), %xmm1	 #,
	movq	%rdx, %rcx	 # tmp98,
	call	DrawCircleV	 #
 # main.cpp:77: 			DrawText(TextFormat("%i", (int)action), pos.x - 15, pos.y - 15, 30, BLACK);
	.loc 10 77 12
	movb	$0, %bl	 #, D.128557
	movl	$0, %eax	 #, tmp99
	movb	%al, %bh	 # tmp99, D.128557
	movl	%ebx, %eax	 # D.128557, D.128557
	andl	$-16711681, %eax	 #, D.128557
	movl	%eax, %ebx	 # tmp101, D.128557
	movl	%ebx, %eax	 # D.128557, D.128557
	orl	$-16777216, %eax	 #, D.128557
	movl	%eax, %ebx	 # tmp103, D.128557
 # main.cpp:77: 			DrawText(TextFormat("%i", (int)action), pos.x - 15, pos.y - 15, 30, BLACK);
	.loc 10 77 60
	movss	60(%rbp), %xmm0	 # pos.y, _1
 # main.cpp:77: 			DrawText(TextFormat("%i", (int)action), pos.x - 15, pos.y - 15, 30, BLACK);
	.loc 10 77 62
	movss	.LC14(%rip), %xmm1	 #, tmp104
	subss	%xmm1, %xmm0	 # tmp104, _2
 # main.cpp:77: 			DrawText(TextFormat("%i", (int)action), pos.x - 15, pos.y - 15, 30, BLACK);
	.loc 10 77 12
	cvttss2sil	%xmm0, %edi	 # _2, _3
 # main.cpp:77: 			DrawText(TextFormat("%i", (int)action), pos.x - 15, pos.y - 15, 30, BLACK);
	.loc 10 77 48
	movss	56(%rbp), %xmm0	 # pos.x, _4
 # main.cpp:77: 			DrawText(TextFormat("%i", (int)action), pos.x - 15, pos.y - 15, 30, BLACK);
	.loc 10 77 50
	movss	.LC14(%rip), %xmm1	 #, tmp105
	subss	%xmm1, %xmm0	 # tmp105, _5
 # main.cpp:77: 			DrawText(TextFormat("%i", (int)action), pos.x - 15, pos.y - 15, 30, BLACK);
	.loc 10 77 12
	cvttss2sil	%xmm0, %esi	 # _5, _6
 # main.cpp:77: 			DrawText(TextFormat("%i", (int)action), pos.x - 15, pos.y - 15, 30, BLACK);
	.loc 10 77 35
	movq	48(%rbp), %rax	 # this, tmp106
	movl	(%rax), %eax	 # this_20(D)->action, _7
 # main.cpp:77: 			DrawText(TextFormat("%i", (int)action), pos.x - 15, pos.y - 15, 30, BLACK);
	.loc 10 77 12
	movl	%eax, %edx	 # _8,
	leaq	.LC15(%rip), %rax	 #, tmp107
	movq	%rax, %rcx	 # tmp107,
	call	TextFormat	 #
	movl	%ebx, 32(%rsp)	 # D.128557,
	movl	$30, %r9d	 #,
	movl	%edi, %r8d	 # _3,
	movl	%esi, %edx	 # _6,
	movq	%rax, %rcx	 # _9,
	call	DrawText	 #
 # main.cpp:78: 		}
	.loc 10 78 3
	nop	
	addq	$56, %rsp	 #,
	popq	%rbx	 #
.LCFI319:
	popq	%rsi	 #
.LCFI320:
	popq	%rdi	 #
.LCFI321:
	popq	%rbp	 #
.LCFI322:
	ret	
.LFE4662:
	.seh_endproc
	.section	.text$_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE12_Vector_implD1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE12_Vector_implD1Ev
	.def	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE12_Vector_implD1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE12_Vector_implD1Ev
_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE12_Vector_implD1Ev:
.LFB4669:
	.file 11 "c:/users/pluto/scoop/apps/gcc/current/include/c++/11.2.0/bits/stl_vector.h"
	.loc 11 128 14
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI323:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI324:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB39:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:128:       struct _Vector_impl
	.loc 11 128 14
	movq	16(%rbp), %rcx	 # this,
	call	_ZNSaIN3DDT4NodeEED2Ev	 #
.LBE39:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI325:
	ret	
.LFE4669:
	.seh_endproc
	.section	.text$_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EEC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EEC2Ev
	.def	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EEC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EEC2Ev
_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EEC2Ev:
.LFB4670:
	.loc 11 288 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI326:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI327:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB40:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:288:       _Vector_base() = default;
	.loc 11 288 7
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE12_Vector_implC1Ev	 #
.LBE40:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI328:
	ret	
.LFE4670:
	.seh_endproc
	.section	.text$_ZNSt6vectorIN3DDT4NodeESaIS1_EEC1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorIN3DDT4NodeESaIS1_EEC1Ev
	.def	_ZNSt6vectorIN3DDT4NodeESaIS1_EEC1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorIN3DDT4NodeESaIS1_EEC1Ev
_ZNSt6vectorIN3DDT4NodeESaIS1_EEC1Ev:
.LFB4673:
	.loc 11 487 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI329:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI330:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB41:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:487:       vector() = default;
	.loc 11 487 7
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EEC2Ev	 #
.LBE41:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI331:
	ret	
.LFE4673:
	.seh_endproc
	.section	.text$_ZN3DDT4NodeD1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZN3DDT4NodeD1Ev
	.def	_ZN3DDT4NodeD1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN3DDT4NodeD1Ev
_ZN3DDT4NodeD1Ev:
.LFB4676:
	.loc 10 50 9
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI332:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI333:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB42:
 # main.cpp:50: 	struct Node {
	.loc 10 50 9
	movq	16(%rbp), %rax	 # this, tmp83
	addq	$8, %rax	 #, _1
	movq	%rax, %rcx	 # _1,
	call	_ZN7OptimapIhiED1Ev	 #
.LBE42:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI334:
	ret	
.LFE4676:
	.seh_endproc
	.section	.text$_ZN3DDTC1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZN3DDTC1Ev
	.def	_ZN3DDTC1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN3DDTC1Ev
_ZN3DDTC1Ev:
.LFB4678:
	.loc 10 84 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI335:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI336:
	subq	$120, %rsp	 #,
	.seh_stackalloc	120
.LCFI337:
	leaq	112(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 112
.LCFI338:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
.LBB43:
 # main.cpp:84: 	DDT() {
	.loc 10 84 8
	movq	32(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt6vectorIN3DDT4NodeESaIS1_EEC1Ev	 #
	movq	32(%rbp), %rax	 # this, tmp86
	movl	$0, 24(%rax)	 #, this_6(D)->current
 # main.cpp:85: 		nodes.push_back(Node(ACT_NULL));
	.loc 10 85 18
	movq	32(%rbp), %rbx	 # this, _2
 # main.cpp:85: 		nodes.push_back(Node(ACT_NULL));
	.loc 10 85 19
	leaq	-80(%rbp), %rax	 #, tmp87
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # tmp87,
.LEHB3:
	call	_ZN3DDT4NodeC1E6Action	 #
.LEHE3:
 # main.cpp:85: 		nodes.push_back(Node(ACT_NULL));
	.loc 10 85 18 discriminator 1
	leaq	-80(%rbp), %rax	 #, tmp88
	movq	%rax, %rdx	 # tmp88,
	movq	%rbx, %rcx	 # _2,
.LEHB4:
	call	_ZNSt6vectorIN3DDT4NodeESaIS1_EE9push_backEOS1_	 #
.LEHE4:
 # main.cpp:85: 		nodes.push_back(Node(ACT_NULL));
	.loc 10 85 19 discriminator 3
	leaq	-80(%rbp), %rax	 #, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZN3DDT4NodeD1Ev	 #
 # main.cpp:86: 		current = 0;
	.loc 10 86 11 discriminator 3
	movq	32(%rbp), %rax	 # this, tmp90
	movl	$0, 24(%rax)	 #, this_6(D)->current
.LBE43:
 # main.cpp:87: 	}
	.loc 10 87 2 discriminator 3
	jmp	.L234	 #
.L233:
.LBB44:
 # main.cpp:85: 		nodes.push_back(Node(ACT_NULL));
	.loc 10 85 19
	movq	%rax, %rbx	 #, tmp93
	leaq	-80(%rbp), %rax	 #, tmp91
	movq	%rax, %rcx	 # tmp91,
	call	_ZN3DDT4NodeD1Ev	 #
	jmp	.L231	 #
.L232:
 # main.cpp:87: 	}
	.loc 10 87 2
	movq	%rax, %rbx	 #, tmp92
.L231:
	movq	32(%rbp), %rax	 # this, _3
	movq	%rax, %rcx	 # _3,
	call	_ZNSt6vectorIN3DDT4NodeESaIS1_EED1Ev	 #
	movq	%rbx, %rax	 # tmp92, D.129129
	movq	%rax, %rcx	 # D.129129,
.LEHB5:
	call	_Unwind_Resume	 #
	nop	
.LEHE5:
.L234:
.LBE44:
	addq	$120, %rsp	 #,
	popq	%rbx	 #
.LCFI339:
	popq	%rbp	 #
.LCFI340:
	ret	
.LFE4678:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA4678:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE4678-.LLSDACSB4678
.LLSDACSB4678:
	.uleb128 .LEHB3-.LFB4678
	.uleb128 .LEHE3-.LEHB3
	.uleb128 .L232-.LFB4678
	.uleb128 0
	.uleb128 .LEHB4-.LFB4678
	.uleb128 .LEHE4-.LEHB4
	.uleb128 .L233-.LFB4678
	.uleb128 0
	.uleb128 .LEHB5-.LFB4678
	.uleb128 .LEHE5-.LEHB5
	.uleb128 0
	.uleb128 0
.LLSDACSE4678:
	.section	.text$_ZN3DDTC1Ev,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZN3DDTC1ERKS_,"x"
	.linkonce discard
	.align 2
	.globl	_ZN3DDTC1ERKS_
	.def	_ZN3DDTC1ERKS_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN3DDTC1ERKS_
_ZN3DDTC1ERKS_:
.LFB4681:
	.loc 10 89 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI341:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI342:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI343:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI344:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # copy, copy
.LBB45:
 # main.cpp:89: 	DDT(const DDT& copy) {
	.loc 10 89 23
	movq	32(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt6vectorIN3DDT4NodeESaIS1_EEC1Ev	 #
	movq	32(%rbp), %rax	 # this, tmp87
	movl	$0, 24(%rax)	 #, this_6(D)->current
 # main.cpp:90: 		nodes = copy.nodes; // copy
	.loc 10 90 16
	movq	40(%rbp), %rdx	 # copy, _2
	movq	32(%rbp), %rax	 # this, _3
	movq	%rax, %rcx	 # _3,
.LEHB6:
	call	_ZNSt6vectorIN3DDT4NodeESaIS1_EEaSERKS3_	 #
.LEHE6:
 # main.cpp:91: 		current = 0;
	.loc 10 91 11
	movq	32(%rbp), %rax	 # this, tmp88
	movl	$0, 24(%rax)	 #, this_6(D)->current
.LBE45:
 # main.cpp:92: 	}
	.loc 10 92 2
	jmp	.L238	 #
.L237:
.LBB46:
	movq	%rax, %rbx	 #, tmp89
	movq	32(%rbp), %rax	 # this, _4
	movq	%rax, %rcx	 # _4,
	call	_ZNSt6vectorIN3DDT4NodeESaIS1_EED1Ev	 #
	movq	%rbx, %rax	 # tmp89, D.129130
	movq	%rax, %rcx	 # D.129130,
.LEHB7:
	call	_Unwind_Resume	 #
	nop	
.LEHE7:
.L238:
.LBE46:
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI345:
	popq	%rbp	 #
.LCFI346:
	ret	
.LFE4681:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA4681:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE4681-.LLSDACSB4681
.LLSDACSB4681:
	.uleb128 .LEHB6-.LFB4681
	.uleb128 .LEHE6-.LEHB6
	.uleb128 .L237-.LFB4681
	.uleb128 0
	.uleb128 .LEHB7-.LFB4681
	.uleb128 .LEHE7-.LEHB7
	.uleb128 0
	.uleb128 0
.LLSDACSE4681:
	.section	.text$_ZN3DDTC1ERKS_,"x"
	.linkonce discard
	.seh_endproc
	.section .rdata,"dr"
	.align 8
.LC16:
	.ascii "(int)selected.next.size() == outc\0"
.LC17:
	.ascii "main.cpp\0"
.LC18:
	.ascii "Mutated %i time(s).\12\0"
	.section	.text$_ZN3DDT9mutate_ipEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZN3DDT9mutate_ipEv
	.def	_ZN3DDT9mutate_ipEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN3DDT9mutate_ipEv
_ZN3DDT9mutate_ipEv:
.LFB4682:
	.loc 10 95 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI347:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI348:
	subq	$152, %rsp	 #,
	.seh_stackalloc	152
.LCFI349:
	leaq	144(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 144
.LCFI350:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
 # main.cpp:96: 		int mutation_count = 0;
	.loc 10 96 7
	movl	$0, -4(%rbp)	 #, mutation_count
.LBB47:
 # main.cpp:97: 		for (int tries = 0; tries < (int)nodes.size(); tries++) {
	.loc 10 97 12
	movl	$0, -8(%rbp)	 #, tries
 # main.cpp:97: 		for (int tries = 0; tries < (int)nodes.size(); tries++) {
	.loc 10 97 3
	jmp	.L240	 #
.L248:
.LBB48:
 # main.cpp:98: 			Node& selected = nodes[nodes.size() - tries - 1]; // Mutate over last mutations (idk, maybe it won't work)
	.loc 10 98 51
	movq	32(%rbp), %rbx	 # this, _1
 # main.cpp:98: 			Node& selected = nodes[nodes.size() - tries - 1]; // Mutate over last mutations (idk, maybe it won't work)
	.loc 10 98 37
	movq	32(%rbp), %rax	 # this, _2
	movq	%rax, %rcx	 # _2,
	call	_ZNKSt6vectorIN3DDT4NodeESaIS1_EE4sizeEv	 #
 # main.cpp:98: 			Node& selected = nodes[nodes.size() - tries - 1]; // Mutate over last mutations (idk, maybe it won't work)
	.loc 10 98 42
	movl	-8(%rbp), %edx	 # tries, tmp124
	movslq	%edx, %rdx	 # tmp124, _4
 # main.cpp:98: 			Node& selected = nodes[nodes.size() - tries - 1]; // Mutate over last mutations (idk, maybe it won't work)
	.loc 10 98 40
	subq	%rdx, %rax	 # _4, _5
 # main.cpp:98: 			Node& selected = nodes[nodes.size() - tries - 1]; // Mutate over last mutations (idk, maybe it won't work)
	.loc 10 98 51
	subq	$1, %rax	 #, _6
	movq	%rax, %rdx	 # _6,
	movq	%rbx, %rcx	 # _1,
	call	_ZNSt6vectorIN3DDT4NodeESaIS1_EEixEy	 #
	movq	%rax, -24(%rbp)	 # tmp125, selected
 # main.cpp:99: 			const int outc = act_outc[selected.action];
	.loc 10 99 39
	movq	-24(%rbp), %rax	 # selected, tmp126
	movl	(%rax), %eax	 # selected_60->action, _7
 # main.cpp:99: 			const int outc = act_outc[selected.action];
	.loc 10 99 14
	cltq
	leaq	0(,%rax,4), %rdx	 #, tmp128
	leaq	_ZL8act_outc(%rip), %rax	 #, tmp129
	movl	(%rdx,%rax), %eax	 # act_outc[_8], tmp130
	movl	%eax, -28(%rbp)	 # tmp130, outc
 # main.cpp:100: 			if ((int)selected.next.size() >= outc) {
	.loc 10 100 31
	movq	-24(%rbp), %rax	 # selected, tmp131
	addq	$8, %rax	 #, _9
	movq	%rax, %rcx	 # _9,
.LEHB8:
	call	_ZNK7OptimapIhiE4sizeEv	 #
 # main.cpp:100: 			if ((int)selected.next.size() >= outc) {
	.loc 10 100 34
	cmpl	%eax, -28(%rbp)	 # _10, outc
	setle	%al	 #, retval.102_64
 # main.cpp:100: 			if ((int)selected.next.size() >= outc) {
	.loc 10 100 4
	testb	%al, %al	 # retval.102_64
	je	.L241	 #,
 # main.cpp:101: 				assert((int)selected.next.size() == outc);
	.loc 10 101 5 discriminator 1
	movq	-24(%rbp), %rax	 # selected, tmp132
	addq	$8, %rax	 #, _11
	movq	%rax, %rcx	 # _11,
	call	_ZNK7OptimapIhiE4sizeEv	 #
	cmpl	%eax, -28(%rbp)	 # _12, outc
	sete	%al	 #, _13
	movzbl	%al, %eax	 # _13, _14
	leaq	.LC16(%rip), %r9	 #,
	movl	$101, %r8d	 #,
	leaq	.LC17(%rip), %rdx	 #, tmp133
	movl	%eax, %ecx	 # _14,
	call	_Z8__assertbPKciS0_	 #
 # main.cpp:102: 				continue;
	.loc 10 102 5 discriminator 1
	jmp	.L242	 #
.L241:
.LBB49:
 # main.cpp:104: 			for (ActionOutput aoi = 0; aoi < outc; aoi++) {
	.loc 10 104 22
	movb	$0, -9(%rbp)	 #, aoi
 # main.cpp:104: 			for (ActionOutput aoi = 0; aoi < outc; aoi++) {
	.loc 10 104 4
	jmp	.L243	 #
.L247:
 # main.cpp:105: 				if ((!selected.next.contains(aoi)) && rand()%2) {
	.loc 10 105 33
	movq	-24(%rbp), %rax	 # selected, tmp134
	leaq	8(%rax), %rcx	 #, _15
	movzbl	-9(%rbp), %eax	 # aoi, _16
	movl	%eax, %edx	 # _16,
	call	_ZNK7OptimapIhiE8containsEh	 #
 # main.cpp:105: 				if ((!selected.next.contains(aoi)) && rand()%2) {
	.loc 10 105 10
	xorl	$1, %eax	 #, _18
 # main.cpp:105: 				if ((!selected.next.contains(aoi)) && rand()%2) {
	.loc 10 105 40
	testb	%al, %al	 # _18
	je	.L244	 #,
 # main.cpp:105: 				if ((!selected.next.contains(aoi)) && rand()%2) {
	.loc 10 105 47 discriminator 1
	call	rand	 #
 # main.cpp:105: 				if ((!selected.next.contains(aoi)) && rand()%2) {
	.loc 10 105 49 discriminator 1
	andl	$1, %eax	 #, _21
 # main.cpp:105: 				if ((!selected.next.contains(aoi)) && rand()%2) {
	.loc 10 105 40 discriminator 1
	testl	%eax, %eax	 # _21
	je	.L244	 #,
 # main.cpp:105: 				if ((!selected.next.contains(aoi)) && rand()%2) {
	.loc 10 105 40 is_stmt 0 discriminator 3
	movl	$1, %eax	 #, iftmp.104_43
	jmp	.L245	 #
.L244:
 # main.cpp:105: 				if ((!selected.next.contains(aoi)) && rand()%2) {
	.loc 10 105 40 discriminator 4
	movl	$0, %eax	 #, iftmp.104_43
.L245:
 # main.cpp:105: 				if ((!selected.next.contains(aoi)) && rand()%2) {
	.loc 10 105 5 is_stmt 1 discriminator 6
	testb	%al, %al	 # iftmp.104_43
	je	.L246	 #,
 # main.cpp:106: 					nodes.push_back(Node((Action)(rand()%ACT_COUNT)));
	.loc 10 106 21
	movq	32(%rbp), %rbx	 # this, _22
 # main.cpp:106: 					nodes.push_back(Node((Action)(rand()%ACT_COUNT)));
	.loc 10 106 40
	call	rand	 #
 # main.cpp:106: 					nodes.push_back(Node((Action)(rand()%ACT_COUNT)));
	.loc 10 106 42
	cltd
	shrl	$31, %edx	 #, tmp136
	addl	%edx, %eax	 # tmp136, tmp137
	andl	$1, %eax	 #, tmp138
	subl	%edx, %eax	 # tmp136, tmp139
 # main.cpp:106: 					nodes.push_back(Node((Action)(rand()%ACT_COUNT)));
	.loc 10 106 22
	movl	%eax, %edx	 # _24, _25
	leaq	-112(%rbp), %rax	 #, tmp140
	movq	%rax, %rcx	 # tmp140,
	call	_ZN3DDT4NodeC1E6Action	 #
.LEHE8:
 # main.cpp:106: 					nodes.push_back(Node((Action)(rand()%ACT_COUNT)));
	.loc 10 106 21
	leaq	-112(%rbp), %rax	 #, tmp141
	movq	%rax, %rdx	 # tmp141,
	movq	%rbx, %rcx	 # _22,
.LEHB9:
	call	_ZNSt6vectorIN3DDT4NodeESaIS1_EE9push_backEOS1_	 #
.LEHE9:
 # main.cpp:106: 					nodes.push_back(Node((Action)(rand()%ACT_COUNT)));
	.loc 10 106 22 discriminator 2
	leaq	-112(%rbp), %rax	 #, tmp142
	movq	%rax, %rcx	 # tmp142,
	call	_ZN3DDT4NodeD1Ev	 #
 # main.cpp:107: 					selected.addPath(aoi, (NodeIndex)(nodes.size()-1));
	.loc 10 107 50 discriminator 2
	movq	32(%rbp), %rax	 # this, _26
	movq	%rax, %rcx	 # _26,
	call	_ZNKSt6vectorIN3DDT4NodeESaIS1_EE4sizeEv	 #
 # main.cpp:107: 					selected.addPath(aoi, (NodeIndex)(nodes.size()-1));
	.loc 10 107 52 discriminator 2
	subl	$1, %eax	 #, _29
 # main.cpp:107: 					selected.addPath(aoi, (NodeIndex)(nodes.size()-1));
	.loc 10 107 22 discriminator 2
	movl	%eax, %ecx	 # _29, _30
	movzbl	-9(%rbp), %edx	 # aoi, _31
	movq	-24(%rbp), %rax	 # selected, tmp143
	movl	%ecx, %r8d	 # _30,
	movq	%rax, %rcx	 # tmp143,
.LEHB10:
	call	_ZN3DDT4Node7addPathEhi	 #
 # main.cpp:108: 					mutation_count++;
	.loc 10 108 20 discriminator 2
	addl	$1, -4(%rbp)	 #, mutation_count
.L246:
 # main.cpp:104: 			for (ActionOutput aoi = 0; aoi < outc; aoi++) {
	.loc 10 104 4 discriminator 2
	movzbl	-9(%rbp), %eax	 # aoi, aoi.105_32
	addl	$1, %eax	 #, tmp144
	movb	%al, -9(%rbp)	 # tmp144, aoi
.L243:
 # main.cpp:104: 			for (ActionOutput aoi = 0; aoi < outc; aoi++) {
	.loc 10 104 31 discriminator 1
	movzbl	-9(%rbp), %eax	 # aoi, _33
 # main.cpp:104: 			for (ActionOutput aoi = 0; aoi < outc; aoi++) {
	.loc 10 104 35 discriminator 1
	cmpl	%eax, -28(%rbp)	 # _33, outc
	jg	.L247	 #,
.L242:
.LBE49:
.LBE48:
 # main.cpp:97: 		for (int tries = 0; tries < (int)nodes.size(); tries++) {
	.loc 10 97 3 discriminator 2
	addl	$1, -8(%rbp)	 #, tries
.L240:
 # main.cpp:97: 		for (int tries = 0; tries < (int)nodes.size(); tries++) {
	.loc 10 97 46 discriminator 1
	movq	32(%rbp), %rax	 # this, _34
	movq	%rax, %rcx	 # _34,
	call	_ZNKSt6vectorIN3DDT4NodeESaIS1_EE4sizeEv	 #
 # main.cpp:97: 		for (int tries = 0; tries < (int)nodes.size(); tries++) {
	.loc 10 97 29 discriminator 1
	cmpl	%eax, -8(%rbp)	 # _36, tries
	setl	%al	 #, retval.106_55
	testb	%al, %al	 # retval.106_55
	jne	.L248	 #,
.LBE47:
 # main.cpp:112: 		printf("Mutated %i time(s).\n", mutation_count);
	.loc 10 112 9
	movl	-4(%rbp), %eax	 # mutation_count, tmp145
	movl	%eax, %edx	 # tmp145,
	leaq	.LC18(%rip), %rax	 #, tmp146
	movq	%rax, %rcx	 # tmp146,
	call	_Z6printfPKcz	 #
 # main.cpp:113: 		return *this;
	.loc 10 113 11
	movq	32(%rbp), %rax	 # this, _57
	jmp	.L252	 #
.L251:
.LBB52:
.LBB51:
.LBB50:
 # main.cpp:106: 					nodes.push_back(Node((Action)(rand()%ACT_COUNT)));
	.loc 10 106 22
	movq	%rax, %rbx	 #, tmp149
	leaq	-112(%rbp), %rax	 #, tmp148
	movq	%rax, %rcx	 # tmp148,
	call	_ZN3DDT4NodeD1Ev	 #
	movq	%rbx, %rax	 # tmp149, D.129131
	movq	%rax, %rcx	 # D.129131,
	call	_Unwind_Resume	 #
.LEHE10:
.L252:
.LBE50:
.LBE51:
.LBE52:
 # main.cpp:114: 	}
	.loc 10 114 2
	addq	$152, %rsp	 #,
	popq	%rbx	 #
.LCFI351:
	popq	%rbp	 #
.LCFI352:
	ret	
.LFE4682:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA4682:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE4682-.LLSDACSB4682
.LLSDACSB4682:
	.uleb128 .LEHB8-.LFB4682
	.uleb128 .LEHE8-.LEHB8
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB9-.LFB4682
	.uleb128 .LEHE9-.LEHB9
	.uleb128 .L251-.LFB4682
	.uleb128 0
	.uleb128 .LEHB10-.LFB4682
	.uleb128 .LEHE10-.LEHB10
	.uleb128 0
	.uleb128 0
.LLSDACSE4682:
	.section	.text$_ZN3DDT9mutate_ipEv,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZN3DDTD1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZN3DDTD1Ev
	.def	_ZN3DDTD1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN3DDTD1Ev
_ZN3DDTD1Ev:
.LFB4686:
	.loc 10 47 8
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI353:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI354:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB53:
 # main.cpp:47: struct DDT {
	.loc 10 47 8
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt6vectorIN3DDT4NodeESaIS1_EED1Ev	 #
.LBE53:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI355:
	ret	
.LFE4686:
	.seh_endproc
	.section	.text$_ZN3DDT6updateER5Blorb,"x"
	.linkonce discard
	.align 2
	.globl	_ZN3DDT6updateER5Blorb
	.def	_ZN3DDT6updateER5Blorb;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN3DDT6updateER5Blorb
_ZN3DDT6updateER5Blorb:
.LFB4687:
	.loc 10 122 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI356:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI357:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI358:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI359:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # data, data
 # main.cpp:123: 		if (current == -1) {
	.loc 10 123 7
	movq	32(%rbp), %rax	 # this, tmp90
	movl	24(%rax), %eax	 # this_10(D)->current, _1
 # main.cpp:123: 		if (current == -1) {
	.loc 10 123 3
	cmpl	$-1, %eax	 #, _1
	jne	.L255	 #,
 # main.cpp:124: 			current = 0;
	.loc 10 124 12
	movq	32(%rbp), %rax	 # this, tmp91
	movl	$0, 24(%rax)	 #, this_10(D)->current
.L255:
 # main.cpp:126: 		current = nodes[current].getNextNode(data, nodes.begin());
	.loc 10 126 26
	movq	32(%rbp), %rax	 # this, _2
 # main.cpp:126: 		current = nodes[current].getNextNode(data, nodes.begin());
	.loc 10 126 19
	movq	32(%rbp), %rdx	 # this, tmp92
	movl	24(%rdx), %edx	 # this_10(D)->current, _3
 # main.cpp:126: 		current = nodes[current].getNextNode(data, nodes.begin());
	.loc 10 126 26
	movslq	%edx, %rdx	 # _3, _4
	movq	%rax, %rcx	 # _2,
	call	_ZNSt6vectorIN3DDT4NodeESaIS1_EEixEy	 #
	movq	%rax, %rbx	 #, _5
 # main.cpp:126: 		current = nodes[current].getNextNode(data, nodes.begin());
	.loc 10 126 39
	movq	32(%rbp), %rax	 # this, _6
	movq	%rax, %rcx	 # _6,
	call	_ZNSt6vectorIN3DDT4NodeESaIS1_EE5beginEv	 #
	movq	%rax, %rdx	 #, D.127304
	movq	40(%rbp), %rax	 # data, tmp93
	movq	%rdx, %r8	 # D.127304,
	movq	%rax, %rdx	 # tmp93,
	movq	%rbx, %rcx	 # _5,
	call	_ZN3DDT4Node11getNextNodeER5BlorbN9__gnu_cxx17__normal_iteratorIPS0_St6vectorIS0_SaIS0_EEEE	 #
 # main.cpp:126: 		current = nodes[current].getNextNode(data, nodes.begin());
	.loc 10 126 11
	movq	32(%rbp), %rdx	 # this, tmp94
	movl	%eax, 24(%rdx)	 # _7, this_10(D)->current
 # main.cpp:127: 	}
	.loc 10 127 2
	nop	
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI360:
	popq	%rbp	 #
.LCFI361:
	ret	
.LFE4687:
	.seh_endproc
	.section	.text$_ZN3DDT4drawE7Vector2i,"x"
	.linkonce discard
	.align 2
	.globl	_ZN3DDT4drawE7Vector2i
	.def	_ZN3DDT4drawE7Vector2i;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN3DDT4drawE7Vector2i
_ZN3DDT4drawE7Vector2i:
.LFB4688:
	.loc 10 129 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI362:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI363:
	subq	$72, %rsp	 #,
	.seh_stackalloc	72
.LCFI364:
	leaq	64(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 64
.LCFI365:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # pos, pos
	movl	%r8d, 48(%rbp)	 # index, index
 # main.cpp:130: 		Node& n = nodes[index];
	.loc 10 130 24
	movq	32(%rbp), %rax	 # this, _1
	movl	48(%rbp), %edx	 # index, tmp107
	movslq	%edx, %rdx	 # tmp107, _2
	movq	%rax, %rcx	 # _1,
	call	_ZNSt6vectorIN3DDT4NodeESaIS1_EEixEy	 #
	movq	%rax, -16(%rbp)	 # tmp108, n
.LBB54:
 # main.cpp:131: 		for (int i = 0; i < act_outc[n.action]; i++) {
	.loc 10 131 12
	movl	$0, -4(%rbp)	 #, i
 # main.cpp:131: 		for (int i = 0; i < act_outc[n.action]; i++) {
	.loc 10 131 3
	jmp	.L257	 #
.L259:
.LBB55:
 # main.cpp:133: 				pos.x + (i - act_outc[n.action]/2),
	.loc 10 133 9
	movss	40(%rbp), %xmm1	 # pos.x, _3
 # main.cpp:133: 				pos.x + (i - act_outc[n.action]/2),
	.loc 10 133 29
	movq	-16(%rbp), %rax	 # n, tmp109
	movl	(%rax), %eax	 # n_32->action, _4
 # main.cpp:133: 				pos.x + (i - act_outc[n.action]/2),
	.loc 10 133 35
	cltq
	leaq	0(,%rax,4), %rdx	 #, tmp111
	leaq	_ZL8act_outc(%rip), %rax	 #, tmp112
	movl	(%rdx,%rax), %eax	 # act_outc[_5], _6
 # main.cpp:133: 				pos.x + (i - act_outc[n.action]/2),
	.loc 10 133 36
	movl	%eax, %edx	 # _6, tmp113
	shrl	$31, %edx	 #, tmp113
	addl	%edx, %eax	 # tmp113, tmp114
	sarl	%eax	 # tmp115
	negl	%eax	 # tmp115
	movl	%eax, %edx	 # tmp115, _7
 # main.cpp:133: 				pos.x + (i - act_outc[n.action]/2),
	.loc 10 133 16
	movl	-4(%rbp), %eax	 # i, tmp116
	addl	%edx, %eax	 # _7, _8
 # main.cpp:133: 				pos.x + (i - act_outc[n.action]/2),
	.loc 10 133 11
	pxor	%xmm0, %xmm0	 # _9
	cvtsi2ssl	%eax, %xmm0	 # _8, _9
	addss	%xmm1, %xmm0	 # _3, _10
 # main.cpp:135: 			};
	.loc 10 135 4
	movss	%xmm0, -24(%rbp)	 # _10, next_pos.x
 # main.cpp:134: 				pos.y + 50.f
	.loc 10 134 9
	movss	44(%rbp), %xmm1	 # pos.y, _11
 # main.cpp:134: 				pos.y + 50.f
	.loc 10 134 11
	movss	.LC19(%rip), %xmm0	 #, tmp117
	addss	%xmm1, %xmm0	 # _11, _12
 # main.cpp:135: 			};
	.loc 10 135 4
	movss	%xmm0, -20(%rbp)	 # _12, next_pos.y
 # main.cpp:136: 			DrawLineV(
	.loc 10 136 13
	movb	$-126, %bl	 #, D.128548
	movl	$-126, %eax	 #, tmp118
	movb	%al, %bh	 # tmp118, D.128548
	movl	%ebx, %eax	 # D.128548, D.128548
	andl	$-16711681, %eax	 #, D.128548
	orl	$8519680, %eax	 #, tmp121
	movl	%eax, %ebx	 # tmp121, D.128548
	movl	%ebx, %eax	 # D.128548, D.128548
	orl	$-16777216, %eax	 #, D.128548
	movl	%eax, %ebx	 # tmp123, D.128548
	movq	-24(%rbp), %rdx	 # next_pos, tmp124
	movq	40(%rbp), %rax	 # pos, tmp125
	movl	%ebx, %r8d	 # D.128548,
	movq	%rax, %rcx	 # tmp125,
	call	DrawLineV	 #
 # main.cpp:141: 			if (n.next.contains((ActionOutput)i)) {
	.loc 10 141 23
	movq	-16(%rbp), %rax	 # n, tmp126
	leaq	8(%rax), %rcx	 #, _13
	movl	-4(%rbp), %eax	 # i, tmp127
	movzbl	%al, %eax	 # _14, _15
	movl	%eax, %edx	 # _15,
	call	_ZNK7OptimapIhiE8containsEh	 #
 # main.cpp:141: 			if (n.next.contains((ActionOutput)i)) {
	.loc 10 141 4
	testb	%al, %al	 # _43
	je	.L258	 #,
 # main.cpp:142: 				this->draw(next_pos, n.next[(ActionOutput)i]);
	.loc 10 142 48
	movq	-16(%rbp), %rax	 # n, tmp128
	leaq	8(%rax), %rcx	 #, _16
	movl	-4(%rbp), %eax	 # i, tmp129
	movzbl	%al, %eax	 # _17, _18
	movl	%eax, %edx	 # _18,
	call	_ZN7OptimapIhiEixEh	 #
 # main.cpp:142: 				this->draw(next_pos, n.next[(ActionOutput)i]);
	.loc 10 142 15
	movl	(%rax), %edx	 # *_19, _20
	movq	-24(%rbp), %rax	 # next_pos, tmp130
	movl	%edx, %r8d	 # _20,
	movq	%rax, %rdx	 # tmp130,
	movq	32(%rbp), %rcx	 # this,
	call	_ZN3DDT4drawE7Vector2i	 #
.L258:
.LBE55:
 # main.cpp:131: 		for (int i = 0; i < act_outc[n.action]; i++) {
	.loc 10 131 3 discriminator 2
	addl	$1, -4(%rbp)	 #, i
.L257:
 # main.cpp:131: 		for (int i = 0; i < act_outc[n.action]; i++) {
	.loc 10 131 34 discriminator 1
	movq	-16(%rbp), %rax	 # n, tmp131
	movl	(%rax), %eax	 # n_32->action, _21
 # main.cpp:131: 		for (int i = 0; i < act_outc[n.action]; i++) {
	.loc 10 131 40 discriminator 1
	cltq
	leaq	0(,%rax,4), %rdx	 #, tmp133
	leaq	_ZL8act_outc(%rip), %rax	 #, tmp134
	movl	(%rdx,%rax), %eax	 # act_outc[_22], _23
 # main.cpp:131: 		for (int i = 0; i < act_outc[n.action]; i++) {
	.loc 10 131 21 discriminator 1
	cmpl	%eax, -4(%rbp)	 # _23, i
	jl	.L259	 #,
.LBE54:
 # main.cpp:145: 		n.draw(pos);
	.loc 10 145 9
	movq	40(%rbp), %rdx	 # pos, tmp135
	movq	-16(%rbp), %rax	 # n, tmp136
	movq	%rax, %rcx	 # tmp136,
	call	_ZN3DDT4Node4drawE7Vector2	 #
 # main.cpp:146: 	}
	.loc 10 146 2
	nop	
	addq	$72, %rsp	 #,
	popq	%rbx	 #
.LCFI366:
	popq	%rbp	 #
.LCFI367:
	ret	
.LFE4688:
	.seh_endproc
	.section	.text$_ZN5BlorbC1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZN5BlorbC1Ev
	.def	_ZN5BlorbC1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN5BlorbC1Ev
_ZN5BlorbC1Ev:
.LFB4691:
	.loc 10 160 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI368:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI369:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB56:
 # main.cpp:160: 	Blorb() {}
	.loc 10 160 10
	movq	16(%rbp), %rax	 # this, tmp84
	movss	.LC20(%rip), %xmm0	 #, tmp85
	movss	%xmm0, (%rax)	 # tmp85, this_4(D)->pos.x
	movq	16(%rbp), %rax	 # this, tmp86
	movss	.LC21(%rip), %xmm0	 #, tmp87
	movss	%xmm0, 4(%rax)	 # tmp87, this_4(D)->pos.y
	movq	16(%rbp), %rax	 # this, tmp88
	pxor	%xmm0, %xmm0	 # tmp89
	movss	%xmm0, 8(%rax)	 # tmp89, this_4(D)->angle
	movq	16(%rbp), %rax	 # this, tmp90
	addq	$16, %rax	 #, _1
	movq	%rax, %rcx	 # _1,
	call	_ZN3DDTC1Ev	 #
.LBE56:
 # main.cpp:160: 	Blorb() {}
	.loc 10 160 11
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI370:
	ret	
.LFE4691:
	.seh_endproc
	.section	.text$_ZNSt12_Vector_baseI5BlorbSaIS0_EE12_Vector_implD1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt12_Vector_baseI5BlorbSaIS0_EE12_Vector_implD1Ev
	.def	_ZNSt12_Vector_baseI5BlorbSaIS0_EE12_Vector_implD1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt12_Vector_baseI5BlorbSaIS0_EE12_Vector_implD1Ev
_ZNSt12_Vector_baseI5BlorbSaIS0_EE12_Vector_implD1Ev:
.LFB4697:
	.loc 11 128 14
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI371:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI372:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB57:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:128:       struct _Vector_impl
	.loc 11 128 14
	movq	16(%rbp), %rcx	 # this,
	call	_ZNSaI5BlorbED2Ev	 #
.LBE57:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI373:
	ret	
.LFE4697:
	.seh_endproc
	.section	.text$_ZNSt12_Vector_baseI5BlorbSaIS0_EEC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt12_Vector_baseI5BlorbSaIS0_EEC2Ev
	.def	_ZNSt12_Vector_baseI5BlorbSaIS0_EEC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt12_Vector_baseI5BlorbSaIS0_EEC2Ev
_ZNSt12_Vector_baseI5BlorbSaIS0_EEC2Ev:
.LFB4698:
	.loc 11 288 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI374:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI375:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB58:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:288:       _Vector_base() = default;
	.loc 11 288 7
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt12_Vector_baseI5BlorbSaIS0_EE12_Vector_implC1Ev	 #
.LBE58:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI376:
	ret	
.LFE4698:
	.seh_endproc
	.section	.text$_ZNSt6vectorI5BlorbSaIS0_EEC1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorI5BlorbSaIS0_EEC1Ev
	.def	_ZNSt6vectorI5BlorbSaIS0_EEC1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorI5BlorbSaIS0_EEC1Ev
_ZNSt6vectorI5BlorbSaIS0_EEC1Ev:
.LFB4701:
	.loc 11 487 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI377:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI378:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB59:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:487:       vector() = default;
	.loc 11 487 7
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt12_Vector_baseI5BlorbSaIS0_EEC2Ev	 #
.LBE59:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI379:
	ret	
.LFE4701:
	.seh_endproc
	.globl	bs
	.bss
	.align 16
bs:
	.space 24
	.globl	hovered_index
	.data
	.align 4
hovered_index:
	.long	-1
	.text
	.align 2
	.globl	_ZN5Blorb6updateEv
	.def	_ZN5Blorb6updateEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN5Blorb6updateEv
_ZN5Blorb6updateEv:
.LFB4702:
	.loc 10 169 21
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI380:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI381:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI382:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
.LCFI383:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI384:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
 # main.cpp:170: 	ddt.update(*this);
	.loc 10 170 12
	movq	32(%rbp), %rax	 # this, tmp101
	addq	$16, %rax	 #, _1
	movq	32(%rbp), %rdx	 # this,
	movq	%rax, %rcx	 # _1,
	call	_ZN3DDT6updateER5Blorb	 #
 # main.cpp:171: 	DrawCircleV(pos, size, RED);
	.loc 10 171 13
	movl	-4(%rbp), %ecx	 # %sfp, D.127290
	movb	$-26, %cl	 #, D.127290
	movl	$41, %eax	 #, tmp102
	movb	%al, %ch	 # tmp102, D.127290
	andl	$-16711681, %ecx	 #, D.127290
	movl	%ecx, %eax	 # D.127290, tmp104
	orl	$3604480, %eax	 #, tmp105
	orl	$-16777216, %eax	 #, D.127290
	movl	%eax, %edx	 # tmp107, D.127290
	movq	32(%rbp), %rax	 # this, tmp108
	movl	%edx, %r8d	 # D.127290,
	movss	.LC22(%rip), %xmm1	 #,
	movq	(%rax), %rcx	 # this_13(D)->pos,
	call	DrawCircleV	 #
 # main.cpp:172: 	DrawLineV(
	.loc 10 172 11
	movb	$0, %bl	 #, D.127291
	movl	$-28, %eax	 #, tmp109
	movb	%al, %bh	 # tmp109, D.127291
	movl	%ebx, %eax	 # D.127291, D.127291
	andl	$-16711681, %eax	 #, D.127291
	orl	$3145728, %eax	 #, tmp112
	movl	%eax, %ebx	 # tmp112, D.127291
	movl	%ebx, %eax	 # D.127291, D.127291
	orl	$-16777216, %eax	 #, D.127291
	movl	%eax, %ebx	 # tmp114, D.127291
 # main.cpp:174: 		Vector2Add(pos, Vector2Scale({cosf(angle), -sinf(angle)}, size)),
	.loc 10 174 37
	movq	32(%rbp), %rax	 # this, tmp115
	movl	8(%rax), %eax	 # this_13(D)->angle, _2
	movd	%eax, %xmm0	 # _2,
	call	cosf	 #
 # main.cpp:172: 	DrawLineV(
	.loc 10 172 11
	movd	%xmm0, %edx	 # tmp116, tmp117
	movabsq	$-4294967296, %rax	 #, tmp119
	andq	%rsi, %rax	 # D.127292, tmp118
	orq	%rdx, %rax	 # tmp117, tmp120
	movq	%rax, %rsi	 # tmp120, D.127292
 # main.cpp:174: 		Vector2Add(pos, Vector2Scale({cosf(angle), -sinf(angle)}, size)),
	.loc 10 174 51
	movq	32(%rbp), %rax	 # this, tmp121
	movl	8(%rax), %eax	 # this_13(D)->angle, _4
	movd	%eax, %xmm0	 # _4,
	call	sinf	 #
	movd	%xmm0, %eax	 #, _5
 # main.cpp:174: 		Vector2Add(pos, Vector2Scale({cosf(angle), -sinf(angle)}, size)),
	.loc 10 174 46
	movss	.LC9(%rip), %xmm0	 #, tmp122
	movd	%eax, %xmm2	 # _5, _5
	xorps	%xmm0, %xmm2	 # tmp122, _5
	movaps	%xmm2, %xmm0	 # _5, _6
 # main.cpp:172: 	DrawLineV(
	.loc 10 172 11
	movd	%xmm0, %eax	 # tmp123, tmp124
	salq	$32, %rax	 #, tmp125
	movl	%esi, %edx	 # D.127292, tmp126
	orq	%rdx, %rax	 # tmp126, tmp127
	movq	%rax, %rsi	 # tmp127, D.127292
	movss	.LC22(%rip), %xmm1	 #,
	movq	%rsi, %rcx	 # D.127292,
	call	_Z12Vector2Scale7Vector2f	 #
	movq	%rax, %rdx	 #, D.127293
	movq	32(%rbp), %rax	 # this, tmp128
	movq	(%rax), %rcx	 # this_13(D)->pos,
	call	_Z10Vector2Add7Vector2S_	 #
	movq	%rax, %rdx	 #, D.127294
	movq	32(%rbp), %rax	 # this, tmp129
	movl	%ebx, %r8d	 # D.127291,
	movq	(%rax), %rcx	 # this_13(D)->pos,
	call	DrawLineV	 #
 # main.cpp:177: 	if (Vector2Distance(pos, wmpo) < size) {
	.loc 10 177 21
	movq	wmpo(%rip), %rax	 # wmpo, tmp130
	movq	32(%rbp), %rcx	 # this, tmp131
	movq	%rax, %rdx	 # tmp130,
	movq	(%rcx), %rcx	 # this_13(D)->pos,
	call	_Z15Vector2Distance7Vector2S_	 #
	movd	%xmm0, %eax	 #, _7
 # main.cpp:177: 	if (Vector2Distance(pos, wmpo) < size) {
	.loc 10 177 33
	movd	%eax, %xmm3	 # _7, _7
	comiss	.LC22(%rip), %xmm3	 #, _7
	setb	%al	 #, retval.4_31
 # main.cpp:177: 	if (Vector2Distance(pos, wmpo) < size) {
	.loc 10 177 2
	testb	%al, %al	 # retval.4_31
	je	.L265	 #,
 # main.cpp:178: 		hovered_index = (int)(this - bs.data());
	.loc 10 178 39
	leaq	bs(%rip), %rax	 #, tmp132
	movq	%rax, %rcx	 # tmp132,
	call	_ZNSt6vectorI5BlorbSaIS0_EE4dataEv	 #
	movq	%rax, %rdx	 #, _8
 # main.cpp:178: 		hovered_index = (int)(this - bs.data());
	.loc 10 178 30
	movq	32(%rbp), %rax	 # this, tmp133
	subq	%rdx, %rax	 # _8, _9
	sarq	$4, %rax	 #, _9
	movq	%rax, %rdx	 # _9, tmp134
	movabsq	$-6148914691236517205, %rax	 #, tmp136
	imulq	%rdx, %rax	 # tmp134, tmp135
 # main.cpp:178: 		hovered_index = (int)(this - bs.data());
	.loc 10 178 17
	movl	%eax, hovered_index(%rip)	 # _11, hovered_index
.L265:
 # main.cpp:180: 	return AUM_NONE;
	.loc 10 180 9
	movl	$0, %eax	 #, _34
 # main.cpp:181: }
	.loc 10 181 1
	addq	$48, %rsp	 #,
	popq	%rbx	 #
.LCFI385:
	popq	%rsi	 #
.LCFI386:
	popq	%rbp	 #
.LCFI387:
	ret	
.LFE4702:
	.seh_endproc
	.globl	_Z10f_ACT_NULLR5Blorb
	.def	_Z10f_ACT_NULLR5Blorb;	.scl	2;	.type	32;	.endef
	.seh_proc	_Z10f_ACT_NULLR5Blorb
_Z10f_ACT_NULLR5Blorb:
.LFB4703:
	.loc 10 183 23
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI388:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI389:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # self, self
 # main.cpp:184: 	return 0;
	.loc 10 184 9
	movl	$0, %eax	 #, _1
 # main.cpp:185: }
	.loc 10 185 1
	popq	%rbp	 #
.LCFI390:
	ret	
.LFE4703:
	.seh_endproc
	.globl	_Z18f_ACT_MOVE_FORWARDR5Blorb
	.def	_Z18f_ACT_MOVE_FORWARDR5Blorb;	.scl	2;	.type	32;	.endef
	.seh_proc	_Z18f_ACT_MOVE_FORWARDR5Blorb
_Z18f_ACT_MOVE_FORWARDR5Blorb:
.LFB4704:
	.loc 10 187 31
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI391:
	subq	$64, %rsp	 #,
	.seh_stackalloc	64
.LCFI392:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI393:
	movaps	%xmm6, 0(%rbp)	 #,
	.seh_savexmm	%xmm6, 48
.LCFI394:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # self, self
 # main.cpp:188: 	const float fwspeed = 2.f;
	.loc 10 188 14
	movss	.LC23(%rip), %xmm0	 #, tmp95
	movss	%xmm0, -4(%rbp)	 # tmp95, fwspeed
 # main.cpp:189: 	self.pos.x += cosf(self.angle) * fwspeed;
	.loc 10 189 13
	movq	32(%rbp), %rax	 # self, tmp96
	movss	(%rax), %xmm6	 # self_14(D)->pos.x, _1
 # main.cpp:189: 	self.pos.x += cosf(self.angle) * fwspeed;
	.loc 10 189 20
	movq	32(%rbp), %rax	 # self, tmp97
	movl	8(%rax), %eax	 # self_14(D)->angle, _2
	movd	%eax, %xmm0	 # _2,
	call	cosf	 #
 # main.cpp:189: 	self.pos.x += cosf(self.angle) * fwspeed;
	.loc 10 189 33
	addss	%xmm0, %xmm0	 # _3, _4
 # main.cpp:189: 	self.pos.x += cosf(self.angle) * fwspeed;
	.loc 10 189 13
	addss	%xmm6, %xmm0	 # _1, _5
	movq	32(%rbp), %rax	 # self, tmp98
	movss	%xmm0, (%rax)	 # _5, self_14(D)->pos.x
 # main.cpp:190: 	self.pos.y += -sinf(self.angle) * fwspeed;
	.loc 10 190 13
	movq	32(%rbp), %rax	 # self, tmp99
	movss	4(%rax), %xmm6	 # self_14(D)->pos.y, _6
 # main.cpp:190: 	self.pos.y += -sinf(self.angle) * fwspeed;
	.loc 10 190 21
	movq	32(%rbp), %rax	 # self, tmp100
	movl	8(%rax), %eax	 # self_14(D)->angle, _7
	movd	%eax, %xmm0	 # _7,
	call	sinf	 #
	movd	%xmm0, %eax	 #, _8
 # main.cpp:190: 	self.pos.y += -sinf(self.angle) * fwspeed;
	.loc 10 190 16
	movss	.LC9(%rip), %xmm0	 #, tmp101
	movd	%eax, %xmm1	 # _8, _8
	xorps	%xmm0, %xmm1	 # tmp101, _8
	movaps	%xmm1, %xmm0	 # _8, _9
 # main.cpp:190: 	self.pos.y += -sinf(self.angle) * fwspeed;
	.loc 10 190 34
	addss	%xmm0, %xmm0	 # _9, _10
 # main.cpp:190: 	self.pos.y += -sinf(self.angle) * fwspeed;
	.loc 10 190 13
	addss	%xmm6, %xmm0	 # _6, _11
	movq	32(%rbp), %rax	 # self, tmp102
	movss	%xmm0, 4(%rax)	 # _11, self_14(D)->pos.y
 # main.cpp:191: 	return 0;
	.loc 10 191 9
	movl	$0, %eax	 #, _17
 # main.cpp:192: }
	.loc 10 192 1
	movaps	0(%rbp), %xmm6	 #,
	addq	$64, %rsp	 #,
.LCFI395:
	popq	%rbp	 #
.LCFI396:
	ret	
.LFE4704:
	.seh_endproc
	.section	.text$_ZN5BlorbD1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZN5BlorbD1Ev
	.def	_ZN5BlorbD1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN5BlorbD1Ev
_ZN5BlorbD1Ev:
.LFB4708:
	.loc 10 154 8
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI397:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI398:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB60:
 # main.cpp:154: struct Blorb {
	.loc 10 154 8
	movq	16(%rbp), %rax	 # this, tmp83
	addq	$16, %rax	 #, _1
	movq	%rax, %rcx	 # _1,
	call	_ZN3DDTD1Ev	 #
.LBE60:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI399:
	ret	
.LFE4708:
	.seh_endproc
	.text
	.globl	_Z10spawnBlorbi
	.def	_Z10spawnBlorbi;	.scl	2;	.type	32;	.endef
	.seh_proc	_Z10spawnBlorbi
_Z10spawnBlorbi:
.LFB4705:
	.loc 10 194 43
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI400:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI401:
	subq	$104, %rsp	 #,
	.seh_stackalloc	104
.LCFI402:
	leaq	96(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 96
.LCFI403:
	.seh_endprologue
	movl	%ecx, 32(%rbp)	 # start_mutation_count, start_mutation_count
 # main.cpp:195: 	bs.push_back(Blorb());
	.loc 10 195 15
	leaq	-64(%rbp), %rax	 #, tmp85
	movq	%rax, %rcx	 # tmp85,
.LEHB11:
	call	_ZN5BlorbC1Ev	 #
.LEHE11:
 # main.cpp:195: 	bs.push_back(Blorb());
	.loc 10 195 14
	leaq	-64(%rbp), %rax	 #, tmp86
	movq	%rax, %rdx	 # tmp86,
	leaq	bs(%rip), %rax	 #, tmp87
	movq	%rax, %rcx	 # tmp87,
.LEHB12:
	call	_ZNSt6vectorI5BlorbSaIS0_EE9push_backEOS0_	 #
.LEHE12:
 # main.cpp:195: 	bs.push_back(Blorb());
	.loc 10 195 15 discriminator 2
	leaq	-64(%rbp), %rax	 #, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZN5BlorbD1Ev	 #
.LBB61:
 # main.cpp:196: 	for(int i = 0; i < start_mutation_count; i++) {
	.loc 10 196 10 discriminator 2
	movl	$0, -4(%rbp)	 #, i
 # main.cpp:196: 	for(int i = 0; i < start_mutation_count; i++) {
	.loc 10 196 2 discriminator 2
	jmp	.L273	 #
.L274:
 # main.cpp:197: 		bs.back().ddt.mutate_ip();
	.loc 10 197 10 discriminator 3
	leaq	bs(%rip), %rax	 #, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZNSt6vectorI5BlorbSaIS0_EE4backEv	 #
 # main.cpp:197: 		bs.back().ddt.mutate_ip();
	.loc 10 197 26 discriminator 3
	addq	$16, %rax	 #, _2
	movq	%rax, %rcx	 # _2,
.LEHB13:
	call	_ZN3DDT9mutate_ipEv	 #
 # main.cpp:196: 	for(int i = 0; i < start_mutation_count; i++) {
	.loc 10 196 2 discriminator 3
	addl	$1, -4(%rbp)	 #, i
.L273:
 # main.cpp:196: 	for(int i = 0; i < start_mutation_count; i++) {
	.loc 10 196 19 discriminator 1
	movl	-4(%rbp), %eax	 # i, tmp90
	cmpl	32(%rbp), %eax	 # start_mutation_count, tmp90
	jl	.L274	 #,
.LBE61:
 # main.cpp:199: }
	.loc 10 199 1
	jmp	.L277	 #
.L276:
 # main.cpp:195: 	bs.push_back(Blorb());
	.loc 10 195 15
	movq	%rax, %rbx	 #, tmp92
	leaq	-64(%rbp), %rax	 #, tmp91
	movq	%rax, %rcx	 # tmp91,
	call	_ZN5BlorbD1Ev	 #
	movq	%rbx, %rax	 # tmp92, D.129136
	movq	%rax, %rcx	 # D.129136,
	call	_Unwind_Resume	 #
	nop	
.LEHE13:
.L277:
 # main.cpp:199: }
	.loc 10 199 1
	addq	$104, %rsp	 #,
	popq	%rbx	 #
.LCFI404:
	popq	%rbp	 #
.LCFI405:
	ret	
.LFE4705:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA4705:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE4705-.LLSDACSB4705
.LLSDACSB4705:
	.uleb128 .LEHB11-.LFB4705
	.uleb128 .LEHE11-.LEHB11
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB12-.LFB4705
	.uleb128 .LEHE12-.LEHB12
	.uleb128 .L276-.LFB4705
	.uleb128 0
	.uleb128 .LEHB13-.LFB4705
	.uleb128 .LEHE13-.LEHB13
	.uleb128 0
	.uleb128 0
.LLSDACSE4705:
	.text
	.seh_endproc
	.globl	camera
	.bss
	.align 16
camera:
	.space 24
	.def	__main;	.scl	2;	.type	32;	.endef
	.section .rdata,"dr"
.LC24:
	.ascii "Name of the window here.\0"
	.text
	.globl	main
	.def	main;	.scl	2;	.type	32;	.endef
	.seh_proc	main
main:
.LFB4709:
	.loc 10 203 12
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI406:
	pushq	%rdi	 #
	.seh_pushreg	%rdi
.LCFI407:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI408:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI409:
	subq	$104, %rsp	 #,
	.seh_stackalloc	104
.LCFI410:
	leaq	96(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 96
.LCFI411:
	.seh_endprologue
 # main.cpp:203: int main() {
	.loc 10 203 12
	call	__main	 #
 # main.cpp:204: 	SetTargetFPS(60);
	.loc 10 204 14
	movl	$60, %ecx	 #,
	call	SetTargetFPS	 #
 # main.cpp:205: 	InitWindow(XMAX, YMAX, "Name of the window here.");
	.loc 10 205 12
	leaq	.LC24(%rip), %r8	 #,
	movl	$900, %edx	 #,
	movl	$1600, %ecx	 #,
	call	InitWindow	 #
 # main.cpp:207: 	camera.offset = {XMAX/2.f, YMAX/2.f};
	.loc 10 207 16
	movss	.LC20(%rip), %xmm0	 #, tmp108
	movss	%xmm0, camera(%rip)	 # tmp108, camera.offset.x
	movss	.LC21(%rip), %xmm0	 #, tmp109
	movss	%xmm0, 4+camera(%rip)	 # tmp109, camera.offset.y
 # main.cpp:208: 	camera.target = {XMAX/2.f, YMAX/2.f};
	.loc 10 208 16
	movss	.LC20(%rip), %xmm0	 #, tmp110
	movss	%xmm0, 8+camera(%rip)	 # tmp110, camera.target.x
	movss	.LC21(%rip), %xmm0	 #, tmp111
	movss	%xmm0, 12+camera(%rip)	 # tmp111, camera.target.y
 # main.cpp:209: 	camera.zoom = 1.f;
	.loc 10 209 14
	movss	.LC1(%rip), %xmm0	 #, tmp112
	movss	%xmm0, 20+camera(%rip)	 # tmp112, camera.zoom
 # main.cpp:210: 	camera.rotation = 0.f;
	.loc 10 210 18
	pxor	%xmm0, %xmm0	 # tmp113
	movss	%xmm0, 16+camera(%rip)	 # tmp113, camera.rotation
.LBB62:
 # main.cpp:213: 	for (int i = 0; i < 1; i++) {
	.loc 10 213 11
	movl	$0, -4(%rbp)	 #, i
 # main.cpp:213: 	for (int i = 0; i < 1; i++) {
	.loc 10 213 2
	jmp	.L279	 #
.L280:
 # main.cpp:214: 		spawnBlorb(3);
	.loc 10 214 13 discriminator 3
	movl	$3, %ecx	 #,
	call	_Z10spawnBlorbi	 #
 # main.cpp:213: 	for (int i = 0; i < 1; i++) {
	.loc 10 213 2 discriminator 3
	addl	$1, -4(%rbp)	 #, i
.L279:
 # main.cpp:213: 	for (int i = 0; i < 1; i++) {
	.loc 10 213 20 discriminator 1
	cmpl	$0, -4(%rbp)	 #, i
	jle	.L280	 #,
.LBE62:
 # main.cpp:217: 	while (!WindowShouldClose()) {
	.loc 10 217 2
	jmp	.L281	 #
.L289:
.LBB63:
 # main.cpp:218: 		if (IsMouseButtonDown(MOUSE_LEFT_BUTTON)) {
	.loc 10 218 24
	movl	$0, %ecx	 #,
	call	IsMouseButtonDown	 #
 # main.cpp:218: 		if (IsMouseButtonDown(MOUSE_LEFT_BUTTON)) {
	.loc 10 218 3
	testb	%al, %al	 # _45
	je	.L282	 #,
 # main.cpp:219: 			camera.target = Vector2Subtract(camera.target, mdt);
	.loc 10 219 35
	movq	mdt(%rip), %rdx	 # mdt, tmp114
	movq	8+camera(%rip), %rax	 # camera.target, tmp115
	movq	%rax, %rcx	 # tmp115,
	call	_Z15Vector2Subtract7Vector2S_	 #
	movq	%rax, 8+camera(%rip)	 # tmp116, camera.target
.L282:
 # main.cpp:222: 		BeginDrawing();
	.loc 10 222 15
	call	BeginDrawing	 #
 # main.cpp:223: 			ClearBackground(BLACK);
	.loc 10 223 19
	movb	$0, %bl	 #, D.128463
	movl	$0, %eax	 #, tmp117
	movb	%al, %bh	 # tmp117, D.128463
	movl	%ebx, %eax	 # D.128463, D.128463
	andl	$-16711681, %eax	 #, D.128463
	movl	%eax, %ebx	 # tmp119, D.128463
	movl	%ebx, %eax	 # D.128463, D.128463
	orl	$-16777216, %eax	 #, D.128463
	movl	%eax, %ebx	 # tmp121, D.128463
	movl	%ebx, %ecx	 # D.128463,
	call	ClearBackground	 #
 # main.cpp:225: 			hovered_index = -1;
	.loc 10 225 18
	movl	$-1, hovered_index(%rip)	 #, hovered_index
 # main.cpp:226: 			BeginMode2D(camera);
	.loc 10 226 15
	movq	camera(%rip), %rax	 # camera, tmp122
	movq	8+camera(%rip), %rdx	 # camera,
	movq	%rax, -64(%rbp)	 # tmp122,
	movq	%rdx, -56(%rbp)	 #,
	movq	16+camera(%rip), %rax	 # camera, tmp123
	movq	%rax, -48(%rbp)	 # tmp123,
	leaq	-64(%rbp), %rax	 #, tmp124
	movq	%rax, %rcx	 # tmp124,
	call	BeginMode2D	 #
.LBB64:
 # main.cpp:227: 				for (int i = 0; i < (int)bs.size(); i++) {
	.loc 10 227 14
	movl	$0, -8(%rbp)	 #, i
 # main.cpp:227: 				for (int i = 0; i < (int)bs.size(); i++) {
	.loc 10 227 5
	jmp	.L283	 #
.L285:
 # main.cpp:228: 					if (bs[i].update() == AUM_RMV) {
	.loc 10 228 14
	movl	-8(%rbp), %eax	 # i, tmp125
	cltq
	movq	%rax, %rdx	 # _1,
	leaq	bs(%rip), %rax	 #, tmp126
	movq	%rax, %rcx	 # tmp126,
	call	_ZNSt6vectorI5BlorbSaIS0_EEixEy	 #
 # main.cpp:228: 					if (bs[i].update() == AUM_RMV) {
	.loc 10 228 22
	movq	%rax, %rcx	 # _2,
	call	_ZN5Blorb6updateEv	 #
 # main.cpp:228: 					if (bs[i].update() == AUM_RMV) {
	.loc 10 228 25
	cmpl	$1, %eax	 #, _3
	sete	%al	 #, retval.111_79
 # main.cpp:228: 					if (bs[i].update() == AUM_RMV) {
	.loc 10 228 6
	testb	%al, %al	 # retval.111_79
	je	.L284	 #,
 # main.cpp:229: 						bs.erase(bs.begin() + i);
	.loc 10 229 29
	movl	-8(%rbp), %eax	 # i, tmp127
	movslq	%eax, %rsi	 # tmp127, _4
 # main.cpp:229: 						bs.erase(bs.begin() + i);
	.loc 10 229 24
	leaq	bs(%rip), %rax	 #, tmp128
	movq	%rax, %rcx	 # tmp128,
	call	_ZNSt6vectorI5BlorbSaIS0_EE5beginEv	 #
	movq	%rax, -16(%rbp)	 # tmp130, D.108107
 # main.cpp:229: 						bs.erase(bs.begin() + i);
	.loc 10 229 29
	leaq	-16(%rbp), %rax	 #, tmp131
	movq	%rsi, %rdx	 # _4,
	movq	%rax, %rcx	 # tmp131,
	call	_ZNK9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEEplEx	 #
	movq	%rax, -24(%rbp)	 # tmp133, D.108117
 # main.cpp:229: 						bs.erase(bs.begin() + i);
	.loc 10 229 15
	leaq	-24(%rbp), %rdx	 #, tmp134
	leaq	-32(%rbp), %rax	 #, tmp135
	movq	%rax, %rcx	 # tmp135,
	call	_ZN9__gnu_cxx17__normal_iteratorIPK5BlorbSt6vectorIS1_SaIS1_EEEC1IPS1_EERKNS0_IT_NS_11__enable_ifIXsrSt10__are_sameISA_S9_E7__valueES6_E6__typeEEE	 #
	movq	-32(%rbp), %rax	 # D.108328, tmp136
	movq	%rax, %rdx	 # tmp136,
	leaq	bs(%rip), %rax	 #, tmp137
	movq	%rax, %rcx	 # tmp137,
	call	_ZNSt6vectorI5BlorbSaIS0_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS0_S2_EE	 #
 # main.cpp:230: 						i--;
	.loc 10 230 8
	subl	$1, -8(%rbp)	 #, i
.L284:
 # main.cpp:227: 				for (int i = 0; i < (int)bs.size(); i++) {
	.loc 10 227 5 discriminator 2
	addl	$1, -8(%rbp)	 #, i
.L283:
 # main.cpp:227: 				for (int i = 0; i < (int)bs.size(); i++) {
	.loc 10 227 37 discriminator 1
	leaq	bs(%rip), %rax	 #, tmp138
	movq	%rax, %rcx	 # tmp138,
	call	_ZNKSt6vectorI5BlorbSaIS0_EE4sizeEv	 #
 # main.cpp:227: 				for (int i = 0; i < (int)bs.size(); i++) {
	.loc 10 227 23 discriminator 1
	cmpl	%eax, -8(%rbp)	 # _6, i
	setl	%al	 #, retval.112_58
	testb	%al, %al	 # retval.112_58
	jne	.L285	 #,
.LBE64:
 # main.cpp:233: 			EndMode2D();
	.loc 10 233 13
	call	EndMode2D	 #
 # main.cpp:235: 			if (hovered_index >= 0 && hovered_index < (int)bs.size()) {
	.loc 10 235 22
	movl	hovered_index(%rip), %eax	 # hovered_index, hovered_index.115_7
 # main.cpp:235: 			if (hovered_index >= 0 && hovered_index < (int)bs.size()) {
	.loc 10 235 27
	testl	%eax, %eax	 # hovered_index.115_7
	js	.L286	 #,
 # main.cpp:235: 			if (hovered_index >= 0 && hovered_index < (int)bs.size()) {
	.loc 10 235 58 discriminator 1
	leaq	bs(%rip), %rax	 #, tmp139
	movq	%rax, %rcx	 # tmp139,
	call	_ZNKSt6vectorI5BlorbSaIS0_EE4sizeEv	 #
 # main.cpp:235: 			if (hovered_index >= 0 && hovered_index < (int)bs.size()) {
	.loc 10 235 44 discriminator 1
	movl	%eax, %edx	 # _8, _9
	movl	hovered_index(%rip), %eax	 # hovered_index, hovered_index.116_10
 # main.cpp:235: 			if (hovered_index >= 0 && hovered_index < (int)bs.size()) {
	.loc 10 235 27 discriminator 1
	cmpl	%eax, %edx	 # hovered_index.116_10, _9
	jle	.L286	 #,
 # main.cpp:235: 			if (hovered_index >= 0 && hovered_index < (int)bs.size()) {
	.loc 10 235 27 is_stmt 0 discriminator 3
	movl	$1, %eax	 #, iftmp.114_20
	jmp	.L287	 #
.L286:
 # main.cpp:235: 			if (hovered_index >= 0 && hovered_index < (int)bs.size()) {
	.loc 10 235 27 discriminator 4
	movl	$0, %eax	 #, iftmp.114_20
.L287:
 # main.cpp:235: 			if (hovered_index >= 0 && hovered_index < (int)bs.size()) {
	.loc 10 235 4 is_stmt 1 discriminator 6
	testb	%al, %al	 # iftmp.114_20
	je	.L288	 #,
 # main.cpp:236: 				bs[hovered_index].ddt.draw({XMAX/2.f, 50.f}, 0);
	.loc 10 236 21
	movl	hovered_index(%rip), %eax	 # hovered_index, hovered_index.117_11
	cltq
	movq	%rax, %rdx	 # _12,
	leaq	bs(%rip), %rax	 #, tmp140
	movq	%rax, %rcx	 # tmp140,
	call	_ZNSt6vectorI5BlorbSaIS0_EEixEy	 #
 # main.cpp:236: 				bs[hovered_index].ddt.draw({XMAX/2.f, 50.f}, 0);
	.loc 10 236 31
	addq	$16, %rax	 #, _14
	movl	$1145569280, %edx	 #, tmp141
	movl	%edx, %ecx	 # tmp141, tmp142
	movabsq	$-4294967296, %rdx	 #, tmp144
	andq	%rdi, %rdx	 # D.128477, tmp143
	orq	%rcx, %rdx	 # tmp142, tmp145
	movq	%rdx, %rdi	 # tmp145, D.128477
	movl	$1112014848, %edx	 #, tmp146
	movl	%edx, %edx	 # tmp146, tmp147
	salq	$32, %rdx	 #, tmp148
	movl	%edi, %ecx	 # D.128477, tmp149
	orq	%rcx, %rdx	 # tmp149, tmp150
	movq	%rdx, %rdi	 # tmp150, D.128477
	movl	$0, %r8d	 #,
	movq	%rdi, %rdx	 # D.128477,
	movq	%rax, %rcx	 # _14,
	call	_ZN3DDT4drawE7Vector2i	 #
.L288:
 # main.cpp:239: 			DrawFPS(0, 0);
	.loc 10 239 11
	movl	$0, %edx	 #,
	movl	$0, %ecx	 #,
	call	DrawFPS	 #
 # main.cpp:240: 		EndDrawing();
	.loc 10 240 13
	call	EndDrawing	 #
 # main.cpp:242: 		mpo = GetMousePosition();
	.loc 10 242 25
	call	GetMousePosition	 #
	movq	%rax, mpo(%rip)	 # tmp152, mpo
 # main.cpp:243: 		wmpo = GetScreenToWorld2D(mpo, camera);
	.loc 10 243 28
	movq	camera(%rip), %rax	 # camera, tmp153
	movq	8+camera(%rip), %rdx	 # camera,
	movq	%rax, -64(%rbp)	 # tmp153,
	movq	%rdx, -56(%rbp)	 #,
	movq	16+camera(%rip), %rax	 # camera, tmp154
	movq	%rax, -48(%rbp)	 # tmp154,
	leaq	-64(%rbp), %rdx	 #, tmp155
	movq	mpo(%rip), %rax	 # mpo, tmp156
	movq	%rax, %rcx	 # tmp156,
	call	GetScreenToWorld2D	 #
	movq	%rax, wmpo(%rip)	 # tmp158, wmpo
 # main.cpp:244: 		mdt = GetMouseDelta();
	.loc 10 244 22
	call	GetMouseDelta	 #
	movq	%rax, mdt(%rip)	 # tmp160, mdt
 # main.cpp:245: 		dt = GetFrameTime();
	.loc 10 245 20
	call	GetFrameTime	 #
	movd	%xmm0, %eax	 #, _15
 # main.cpp:245: 		dt = GetFrameTime();
	.loc 10 245 6
	movl	%eax, dt(%rip)	 # _15, dt
.L281:
.LBE63:
 # main.cpp:217: 	while (!WindowShouldClose()) {
	.loc 10 217 27
	call	WindowShouldClose	 #
 # main.cpp:217: 	while (!WindowShouldClose()) {
	.loc 10 217 9
	xorl	$1, %eax	 #, retval.118_41
	testb	%al, %al	 # retval.118_41
	jne	.L289	 #,
 # main.cpp:248: 	CloseWindow();
	.loc 10 248 13
	call	CloseWindow	 #
 # main.cpp:249: }
	.loc 10 249 1
	movl	$0, %eax	 #, _43
	addq	$104, %rsp	 #,
	popq	%rbx	 #
.LCFI412:
	popq	%rsi	 #
.LCFI413:
	popq	%rdi	 #
.LCFI414:
	popq	%rbp	 #
.LCFI415:
	ret	
.LFE4709:
	.seh_endproc
	.section	.text$_ZSt3maxIyERKT_S2_S2_,"x"
	.linkonce discard
	.globl	_ZSt3maxIyERKT_S2_S2_
	.def	_ZSt3maxIyERKT_S2_S2_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt3maxIyERKT_S2_S2_
_ZSt3maxIyERKT_S2_S2_:
.LFB5070:
	.loc 3 254 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI416:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI417:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __a, __a
	movq	%rdx, 24(%rbp)	 # __b, __b
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:259:       if (__a < __b)
	.loc 3 259 15
	movq	16(%rbp), %rax	 # __a, tmp86
	movq	(%rax), %rdx	 # *__a_5(D), _1
	movq	24(%rbp), %rax	 # __b, tmp87
	movq	(%rax), %rax	 # *__b_6(D), _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:259:       if (__a < __b)
	.loc 3 259 7
	cmpq	%rax, %rdx	 # _2, _1
	jnb	.L292	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:260: 	return __b;
	.loc 3 260 9
	movq	24(%rbp), %rax	 # __b, _3
	jmp	.L293	 #
.L292:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:261:       return __a;
	.loc 3 261 14
	movq	16(%rbp), %rax	 # __a, _3
.L293:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:262:     }
	.loc 3 262 5
	popq	%rbp	 #
.LCFI418:
	ret	
.LFE5070:
	.seh_endproc
	.section	.text$_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD1Ev
	.def	_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD1Ev
_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD1Ev:
.LFB5084:
	.loc 8 477 14
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI419:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI420:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB65:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:477:       struct _Bvector_impl
	.loc 8 477 14
	movq	16(%rbp), %rcx	 # this,
	call	_ZNSaImED2Ev	 #
.LBE65:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI421:
	ret	
.LFE5084:
	.seh_endproc
	.section	.text$_ZNSt13_Bvector_baseISaIbEEC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt13_Bvector_baseISaIbEEC2Ev
	.def	_ZNSt13_Bvector_baseISaIbEEC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt13_Bvector_baseISaIbEEC2Ev
_ZNSt13_Bvector_baseISaIbEEC2Ev:
.LFB5085:
	.loc 8 526 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI422:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI423:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB66:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:526:       _Bvector_base() = default;
	.loc 8 526 7
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC1Ev	 #
.LBE66:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI424:
	ret	
.LFE5085:
	.seh_endproc
	.section	.text$_ZNSt6vectorIbSaIbEEC1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorIbSaIbEEC1Ev
	.def	_ZNSt6vectorIbSaIbEEC1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorIbSaIbEEC1Ev
_ZNSt6vectorIbSaIbEEC1Ev:
.LFB5088:
	.loc 8 632 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI425:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI426:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB67:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:632:       vector() = default;
	.loc 8 632 7
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt13_Bvector_baseISaIbEEC2Ev	 #
.LBE67:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI427:
	ret	
.LFE5088:
	.seh_endproc
	.section	.text$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD1Ev
	.def	_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD1Ev
_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD1Ev:
.LFB5094:
	.loc 11 128 14
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI428:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI429:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB68:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:128:       struct _Vector_impl
	.loc 11 128 14
	movq	16(%rbp), %rcx	 # this,
	call	_ZNSaIiED2Ev	 #
.LBE68:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI430:
	ret	
.LFE5094:
	.seh_endproc
	.section	.text$_ZNSt12_Vector_baseIiSaIiEEC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt12_Vector_baseIiSaIiEEC2Ev
	.def	_ZNSt12_Vector_baseIiSaIiEEC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt12_Vector_baseIiSaIiEEC2Ev
_ZNSt12_Vector_baseIiSaIiEEC2Ev:
.LFB5095:
	.loc 11 288 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI431:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI432:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB69:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:288:       _Vector_base() = default;
	.loc 11 288 7
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC1Ev	 #
.LBE69:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI433:
	ret	
.LFE5095:
	.seh_endproc
	.section	.text$_ZNSt6vectorIiSaIiEEC1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorIiSaIiEEC1Ev
	.def	_ZNSt6vectorIiSaIiEEC1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorIiSaIiEEC1Ev
_ZNSt6vectorIiSaIiEEC1Ev:
.LFB5098:
	.loc 11 487 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI434:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI435:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB70:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:487:       vector() = default;
	.loc 11 487 7
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt12_Vector_baseIiSaIiEEC2Ev	 #
.LBE70:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI436:
	ret	
.LFE5098:
	.seh_endproc
	.section	.text$_ZN7OptimapIhiEC1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZN7OptimapIhiEC1Ev
	.def	_ZN7OptimapIhiEC1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN7OptimapIhiEC1Ev
_ZN7OptimapIhiEC1Ev:
.LFB5100:
	.loc 9 20 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI437:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI438:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI439:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI440:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
.LBB71:
 # optimap.hpp:20: 	Optimap() { init(8); }
	.loc 9 20 12
	movq	32(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt6vectorIbSaIbEEC1Ev	 #
	movq	32(%rbp), %rax	 # this, tmp87
	addq	$40, %rax	 #, _2
	movq	%rax, %rcx	 # _2,
	call	_ZNSt6vectorIiSaIiEEC1Ev	 #
 # optimap.hpp:20: 	Optimap() { init(8); }
	.loc 9 20 18
	movl	$8, %edx	 #,
	movq	32(%rbp), %rcx	 # this,
.LEHB14:
	call	_ZN7OptimapIhiE4initEi	 #
.LEHE14:
.LBE71:
 # optimap.hpp:20: 	Optimap() { init(8); }
	.loc 9 20 23
	jmp	.L303	 #
.L302:
.LBB72:
	movq	%rax, %rbx	 #, tmp90
	movq	32(%rbp), %rax	 # this, tmp88
	addq	$40, %rax	 #, _3
	movq	%rax, %rcx	 # _3,
	call	_ZNSt6vectorIiSaIiEED1Ev	 #
	movq	32(%rbp), %rax	 # this, _4
	movq	%rax, %rcx	 # _4,
	call	_ZNSt6vectorIbSaIbEED1Ev	 #
	movq	%rbx, %rax	 # tmp89, D.129141
	movq	%rax, %rcx	 # D.129141,
.LEHB15:
	call	_Unwind_Resume	 #
	nop	
.LEHE15:
.L303:
.LBE72:
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI441:
	popq	%rbp	 #
.LCFI442:
	ret	
.LFE5100:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA5100:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE5100-.LLSDACSB5100
.LLSDACSB5100:
	.uleb128 .LEHB14-.LFB5100
	.uleb128 .LEHE14-.LEHB14
	.uleb128 .L302-.LFB5100
	.uleb128 0
	.uleb128 .LEHB15-.LFB5100
	.uleb128 .LEHE15-.LEHB15
	.uleb128 0
	.uleb128 0
.LLSDACSE5100:
	.section	.text$_ZN7OptimapIhiEC1Ev,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZNSt6vectorIbSaIbEED1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorIbSaIbEED1Ev
	.def	_ZNSt6vectorIbSaIbEED1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorIbSaIbEED1Ev
_ZNSt6vectorIbSaIbEED1Ev:
.LFB5103:
	.loc 8 733 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI443:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI444:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB73:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:733:       ~vector() _GLIBCXX_NOEXCEPT { }
	.loc 8 733 37
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt13_Bvector_baseISaIbEED2Ev	 #
.LBE73:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI445:
	ret	
.LFE5103:
	.seh_endproc
	.section	.text$_ZNSt6vectorIiSaIiEED1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorIiSaIiEED1Ev
	.def	_ZNSt6vectorIiSaIiEED1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorIiSaIiEED1Ev
_ZNSt6vectorIiSaIiEED1Ev:
.LFB5106:
	.loc 11 678 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI446:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI447:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB74:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:681: 		      _M_get_Tp_allocator());
	.loc 11 681 28
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv	 #
	movq	%rax, %rcx	 #, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:680: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	.loc 11 680 15
	movq	16(%rbp), %rax	 # this, tmp87
	movq	8(%rax), %rdx	 # this_6(D)->D.106011._M_impl.D.105361._M_finish, _3
	movq	16(%rbp), %rax	 # this, tmp88
	movq	(%rax), %rax	 # this_6(D)->D.106011._M_impl.D.105361._M_start, _4
	movq	%rcx, %r8	 # _2,
	movq	%rax, %rcx	 # _4,
	call	_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:683:       }
	.loc 11 683 7
	movq	16(%rbp), %rax	 # this, _5
	movq	%rax, %rcx	 # _5,
	call	_ZNSt12_Vector_baseIiSaIiEED2Ev	 #
.LBE74:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI448:
	ret	
.LFE5106:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA5106:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE5106-.LLSDACSB5106
.LLSDACSB5106:
.LLSDACSE5106:
	.section	.text$_ZNSt6vectorIiSaIiEED1Ev,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZN7OptimapIhiE4initEi,"x"
	.linkonce discard
	.align 2
	.globl	_ZN7OptimapIhiE4initEi
	.def	_ZN7OptimapIhiE4initEi;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN7OptimapIhiE4initEi
_ZN7OptimapIhiE4initEi:
.LFB5107:
	.loc 9 13 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI449:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI450:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movl	%edx, 24(%rbp)	 # size, size
 # optimap.hpp:14: 		mapped.reserve(size);
	.loc 9 14 17
	movq	16(%rbp), %rax	 # this, _1
	movl	24(%rbp), %edx	 # size, tmp90
	movslq	%edx, %rdx	 # tmp90, _2
	movq	%rax, %rcx	 # _1,
	call	_ZNSt6vectorIbSaIbEE7reserveEy	 #
 # optimap.hpp:15: 		mapped.resize(size, false);
	.loc 9 15 16
	movq	16(%rbp), %rax	 # this, _3
	movl	24(%rbp), %edx	 # size, tmp91
	movslq	%edx, %rdx	 # tmp91, _4
	movl	$0, %r8d	 #,
	movq	%rax, %rcx	 # _3,
	call	_ZNSt6vectorIbSaIbEE6resizeEyb	 #
 # optimap.hpp:16: 		val.reserve(size);
	.loc 9 16 14
	movq	16(%rbp), %rax	 # this, tmp92
	leaq	40(%rax), %rcx	 #, _5
	movl	24(%rbp), %eax	 # size, tmp93
	cltq
	movq	%rax, %rdx	 # _6,
	call	_ZNSt6vectorIiSaIiEE7reserveEy	 #
 # optimap.hpp:17: 		val.resize(size);
	.loc 9 17 13
	movq	16(%rbp), %rax	 # this, tmp94
	leaq	40(%rax), %rcx	 #, _7
	movl	24(%rbp), %eax	 # size, tmp95
	cltq
	movq	%rax, %rdx	 # _8,
	call	_ZNSt6vectorIiSaIiEE6resizeEy	 #
 # optimap.hpp:18: 	}
	.loc 9 18 2
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI451:
	ret	
.LFE5107:
	.seh_endproc
	.section	.text$_ZN7OptimapIhiEixEh,"x"
	.linkonce discard
	.align 2
	.globl	_ZN7OptimapIhiEixEh
	.def	_ZN7OptimapIhiEixEh;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN7OptimapIhiEixEh
_ZN7OptimapIhiEixEh:
.LFB5108:
	.loc 9 30 18
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI452:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI453:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movl	%edx, %eax	 # key, tmp88
	movb	%al, 24(%rbp)	 # tmp89, key
 # optimap.hpp:31: 		mapped[key] = true;
	.loc 9 31 9
	movq	16(%rbp), %rdx	 # this, _1
	movzbl	24(%rbp), %ecx	 # key, _2
	leaq	-16(%rbp), %rax	 #, tmp90
	movq	%rcx, %r8	 # _2,
	movq	%rax, %rcx	 # tmp90,
	call	_ZNSt6vectorIbSaIbEEixEy	 #
 # optimap.hpp:31: 		mapped[key] = true;
	.loc 9 31 15
	leaq	-16(%rbp), %rax	 #, tmp91
	movl	$1, %edx	 #,
	movq	%rax, %rcx	 # tmp91,
	call	_ZNSt14_Bit_referenceaSEb	 #
 # optimap.hpp:32: 		return val[key];
	.loc 9 32 13
	movq	16(%rbp), %rax	 # this, tmp92
	leaq	40(%rax), %rcx	 #, _3
	movzbl	24(%rbp), %eax	 # key, _4
	movq	%rax, %rdx	 # _4,
	call	_ZNSt6vectorIiSaIiEEixEy	 #
 # optimap.hpp:33: 	}
	.loc 9 33 2
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI454:
	ret	
.LFE5108:
	.seh_endproc
	.section	.text$_ZNK7OptimapIhiE8containsEh,"x"
	.linkonce discard
	.align 2
	.globl	_ZNK7OptimapIhiE8containsEh
	.def	_ZNK7OptimapIhiE8containsEh;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNK7OptimapIhiE8containsEh
_ZNK7OptimapIhiE8containsEh:
.LFB5109:
	.loc 9 26 14
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI455:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI456:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movl	%edx, %eax	 # key, tmp86
	movb	%al, 24(%rbp)	 # tmp87, key
 # optimap.hpp:27: 		return mapped[key];
	.loc 9 27 16
	movq	16(%rbp), %rax	 # this, _1
	movzbl	24(%rbp), %edx	 # key, _2
	movq	%rax, %rcx	 # _1,
	call	_ZNKSt6vectorIbSaIbEEixEy	 #
 # optimap.hpp:28: 	}
	.loc 9 28 2
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI457:
	ret	
.LFE5109:
	.seh_endproc
	.section	.text$_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE12_Vector_implC1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE12_Vector_implC1Ev
	.def	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE12_Vector_implC1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE12_Vector_implC1Ev
_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE12_Vector_implC1Ev:
.LFB5112:
	.loc 11 131 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI458:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI459:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB75:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:133: 	: _Tp_alloc_type()
	.loc 11 133 19
	movq	16(%rbp), %rcx	 # this,
	call	_ZNSaIN3DDT4NodeEEC2Ev	 #
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE17_Vector_impl_dataC2Ev	 #
.LBE75:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:134: 	{ }
	.loc 11 134 4
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI460:
	ret	
.LFE5112:
	.seh_endproc
	.section	.text$_ZNSaIN3DDT4NodeEED2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSaIN3DDT4NodeEED2Ev
	.def	_ZNSaIN3DDT4NodeEED2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSaIN3DDT4NodeEED2Ev
_ZNSaIN3DDT4NodeEED2Ev:
.LFB5114:
	.file 12 "c:/users/pluto/scoop/apps/gcc/current/include/c++/11.2.0/bits/allocator.h"
	.loc 12 186 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI461:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI462:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:186:       ~allocator() _GLIBCXX_NOTHROW { }
	.loc 12 186 39
	nop	
	popq	%rbp	 #
.LCFI463:
	ret	
.LFE5114:
	.seh_endproc
	.section	.text$_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EED2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EED2Ev
	.def	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EED2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EED2Ev
_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EED2Ev:
.LFB5117:
	.loc 11 333 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI464:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI465:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB76:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:336: 		      _M_impl._M_end_of_storage - _M_impl._M_start);
	.loc 11 336 17
	movq	16(%rbp), %rax	 # this, tmp89
	movq	16(%rax), %rdx	 # this_9(D)->_M_impl.D.104320._M_end_of_storage, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:336: 		      _M_impl._M_end_of_storage - _M_impl._M_start);
	.loc 11 336 45
	movq	16(%rbp), %rax	 # this, tmp90
	movq	(%rax), %rcx	 # this_9(D)->_M_impl.D.104320._M_start, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:336: 		      _M_impl._M_end_of_storage - _M_impl._M_start);
	.loc 11 336 35
	movq	%rdx, %rax	 # _1, _1
	subq	%rcx, %rax	 # _2, _1
	sarq	$3, %rax	 #, _3
	movq	%rax, %rdx	 # _3, tmp91
	movabsq	$-8198552921648689607, %rax	 #, tmp93
	imulq	%rdx, %rax	 # tmp91, tmp92
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:335: 	_M_deallocate(_M_impl._M_start,
	.loc 11 335 15
	movq	%rax, %rdx	 # _4, _5
	movq	16(%rbp), %rax	 # this, tmp94
	movq	(%rax), %rax	 # this_9(D)->_M_impl.D.104320._M_start, _6
	movq	%rdx, %r8	 # _5,
	movq	%rax, %rdx	 # _6,
	movq	16(%rbp), %rcx	 # this,
	call	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE13_M_deallocateEPS1_y	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:337:       }
	.loc 11 337 7
	movq	16(%rbp), %rax	 # this, _7
	movq	%rax, %rcx	 # _7,
	call	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE12_Vector_implD1Ev	 #
.LBE76:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI466:
	ret	
.LFE5117:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA5117:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE5117-.LLSDACSB5117
.LLSDACSB5117:
.LLSDACSE5117:
	.section	.text$_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EED2Ev,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZNSt6vectorIN3DDT4NodeESaIS1_EED1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorIN3DDT4NodeESaIS1_EED1Ev
	.def	_ZNSt6vectorIN3DDT4NodeESaIS1_EED1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorIN3DDT4NodeESaIS1_EED1Ev
_ZNSt6vectorIN3DDT4NodeESaIS1_EED1Ev:
.LFB5121:
	.loc 11 678 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI467:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI468:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB77:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:681: 		      _M_get_Tp_allocator());
	.loc 11 681 28
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE19_M_get_Tp_allocatorEv	 #
	movq	%rax, %rcx	 #, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:680: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	.loc 11 680 15
	movq	16(%rbp), %rax	 # this, tmp87
	movq	8(%rax), %rdx	 # this_6(D)->D.105007._M_impl.D.104320._M_finish, _3
	movq	16(%rbp), %rax	 # this, tmp88
	movq	(%rax), %rax	 # this_6(D)->D.105007._M_impl.D.104320._M_start, _4
	movq	%rcx, %r8	 # _2,
	movq	%rax, %rcx	 # _4,
	call	_ZSt8_DestroyIPN3DDT4NodeES1_EvT_S3_RSaIT0_E	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:683:       }
	.loc 11 683 7
	movq	16(%rbp), %rax	 # this, _5
	movq	%rax, %rcx	 # _5,
	call	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EED2Ev	 #
.LBE77:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI469:
	ret	
.LFE5121:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA5121:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE5121-.LLSDACSB5121
.LLSDACSB5121:
.LLSDACSE5121:
	.section	.text$_ZNSt6vectorIN3DDT4NodeESaIS1_EED1Ev,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZNSt6vectorIN3DDT4NodeESaIS1_EE9push_backEOS1_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorIN3DDT4NodeESaIS1_EE9push_backEOS1_
	.def	_ZNSt6vectorIN3DDT4NodeESaIS1_EE9push_backEOS1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorIN3DDT4NodeESaIS1_EE9push_backEOS1_
_ZNSt6vectorIN3DDT4NodeESaIS1_EE9push_backEOS1_:
.LFB5122:
	.loc 11 1203 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI470:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI471:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __x, __x
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1204:       { emplace_back(std::move(__x)); }
	.loc 11 1204 31
	movq	24(%rbp), %rax	 # __x, tmp83
	movq	%rax, %rcx	 # tmp83,
	call	_ZSt4moveIRN3DDT4NodeEEONSt16remove_referenceIT_E4typeEOS4_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1204:       { emplace_back(std::move(__x)); }
	.loc 11 1204 21
	movq	%rax, %rdx	 # _1,
	movq	16(%rbp), %rcx	 # this,
	call	_ZNSt6vectorIN3DDT4NodeESaIS1_EE12emplace_backIJS1_EEERS1_DpOT_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1204:       { emplace_back(std::move(__x)); }
	.loc 11 1204 39
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI472:
	ret	
.LFE5122:
	.seh_endproc
	.section	.text$_ZN9__gnu_cxx14__alloc_traitsISaIN3DDT4NodeEES2_E27_S_propagate_on_copy_assignEv,"x"
	.linkonce discard
	.globl	_ZN9__gnu_cxx14__alloc_traitsISaIN3DDT4NodeEES2_E27_S_propagate_on_copy_assignEv
	.def	_ZN9__gnu_cxx14__alloc_traitsISaIN3DDT4NodeEES2_E27_S_propagate_on_copy_assignEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN9__gnu_cxx14__alloc_traitsISaIN3DDT4NodeEES2_E27_S_propagate_on_copy_assignEv
_ZN9__gnu_cxx14__alloc_traitsISaIN3DDT4NodeEES2_E27_S_propagate_on_copy_assignEv:
.LFB5124:
	.file 13 "c:/users/pluto/scoop/apps/gcc/current/include/c++/11.2.0/ext/alloc_traits.h"
	.loc 13 103 27
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI473:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI474:
	.seh_endprologue
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\alloc_traits.h:104:     { return _Base_type::propagate_on_container_copy_assignment::value; }
	.loc 13 104 66
	movl	$0, %eax	 #, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\alloc_traits.h:104:     { return _Base_type::propagate_on_container_copy_assignment::value; }
	.loc 13 104 73
	popq	%rbp	 #
.LCFI475:
	ret	
.LFE5124:
	.seh_endproc
	.section	.text$_ZN9__gnu_cxx14__alloc_traitsISaIN3DDT4NodeEES2_E15_S_always_equalEv,"x"
	.linkonce discard
	.globl	_ZN9__gnu_cxx14__alloc_traitsISaIN3DDT4NodeEES2_E15_S_always_equalEv
	.def	_ZN9__gnu_cxx14__alloc_traitsISaIN3DDT4NodeEES2_E15_S_always_equalEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN9__gnu_cxx14__alloc_traitsISaIN3DDT4NodeEES2_E15_S_always_equalEv
_ZN9__gnu_cxx14__alloc_traitsISaIN3DDT4NodeEES2_E15_S_always_equalEv:
.LFB5125:
	.loc 13 112 27
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI476:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI477:
	.seh_endprologue
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\alloc_traits.h:113:     { return _Base_type::is_always_equal::value; }
	.loc 13 113 43
	movl	$1, %eax	 #, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\alloc_traits.h:113:     { return _Base_type::is_always_equal::value; }
	.loc 13 113 50
	popq	%rbp	 #
.LCFI478:
	ret	
.LFE5125:
	.seh_endproc
	.section	.text$_ZSteqRKSaIN3DDT4NodeEES3_,"x"
	.linkonce discard
	.globl	_ZSteqRKSaIN3DDT4NodeEES3_
	.def	_ZSteqRKSaIN3DDT4NodeEES3_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSteqRKSaIN3DDT4NodeEES3_
_ZSteqRKSaIN3DDT4NodeEES3_:
.LFB5126:
	.loc 12 216 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI479:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI480:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # D.112986, D.112986
	movq	%rdx, 24(%rbp)	 # D.112987, D.112987
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:217:       { return true; }
	.loc 12 217 16
	movl	$1, %eax	 #, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:217:       { return true; }
	.loc 12 217 22
	popq	%rbp	 #
.LCFI481:
	ret	
.LFE5126:
	.seh_endproc
	.section	.text$_ZSt4copyIPN3DDT4NodeES2_ET0_T_S4_S3_,"x"
	.linkonce discard
	.globl	_ZSt4copyIPN3DDT4NodeES2_ET0_T_S4_S3_
	.def	_ZSt4copyIPN3DDT4NodeES2_ET0_T_S4_S3_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt4copyIPN3DDT4NodeES2_ET0_T_S4_S3_
_ZSt4copyIPN3DDT4NodeES2_ET0_T_S4_S3_:
.LFB5127:
	.loc 3 611 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI482:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI483:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI484:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI485:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __first, __first
	movq	%rdx, 40(%rbp)	 # __last, __last
	movq	%r8, 48(%rbp)	 # __result, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:620: 	     (std::__miter_base(__first), std::__miter_base(__last), __result);
	.loc 3 620 7
	movq	40(%rbp), %rax	 # __last, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZSt12__miter_baseIPN3DDT4NodeEET_S3_	 #
	movq	%rax, %rbx	 #, _1
	movq	32(%rbp), %rcx	 # __first,
	call	_ZSt12__miter_baseIPN3DDT4NodeEET_S3_	 #
	movq	48(%rbp), %rdx	 # __result, tmp87
	movq	%rdx, %r8	 # tmp87,
	movq	%rbx, %rdx	 # _1,
	movq	%rax, %rcx	 # _2,
	call	_ZSt13__copy_move_aILb0EPN3DDT4NodeES2_ET1_T0_S4_S3_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:621:     }
	.loc 3 621 5
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI486:
	popq	%rbp	 #
.LCFI487:
	ret	
.LFE5127:
	.seh_endproc
	.section	.text$_ZNSt6vectorIN3DDT4NodeESaIS1_EEaSERKS3_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorIN3DDT4NodeESaIS1_EEaSERKS3_
	.def	_ZNSt6vectorIN3DDT4NodeESaIS1_EEaSERKS3_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorIN3DDT4NodeESaIS1_EEaSERKS3_
_ZNSt6vectorIN3DDT4NodeESaIS1_EEaSERKS3_:
.LFB5123:
	.file 14 "c:/users/pluto/scoop/apps/gcc/current/include/c++/11.2.0/bits/vector.tcc"
	.loc 14 198 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI488:
	pushq	%r12	 #
	.seh_pushreg	%r12
.LCFI489:
	pushq	%rdi	 #
	.seh_pushreg	%rdi
.LCFI490:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI491:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI492:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
.LCFI493:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI494:
	.seh_endprologue
	movq	%rcx, 48(%rbp)	 # this, this
	movq	%rdx, 56(%rbp)	 # __x, __x
.LBB78:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:201:       if (&__x != this)
	.loc 14 201 7
	movq	56(%rbp), %rax	 # __x, tmp150
	cmpq	48(%rbp), %rax	 # this, tmp150
	je	.L325	 #,
.LBB79:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:205: 	  if (_Alloc_traits::_S_propagate_on_copy_assign())
	.loc 14 205 50
	call	_ZN9__gnu_cxx14__alloc_traitsISaIN3DDT4NodeEES2_E27_S_propagate_on_copy_assignEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:205: 	  if (_Alloc_traits::_S_propagate_on_copy_assign())
	.loc 14 205 4
	testb	%al, %al	 # retval.81_66
	je	.L326	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:207: 	      if (!_Alloc_traits::_S_always_equal()
	.loc 14 207 43
	call	_ZN9__gnu_cxx14__alloc_traitsISaIN3DDT4NodeEES2_E15_S_always_equalEv	 #
	xorl	$1, %eax	 #, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:208: 	          && _M_get_Tp_allocator() != __x._M_get_Tp_allocator())
	.loc 14 208 12
	testb	%al, %al	 # _2
	je	.L327	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:208: 	          && _M_get_Tp_allocator() != __x._M_get_Tp_allocator())
	.loc 14 208 63 discriminator 1
	movq	56(%rbp), %rax	 # __x, _3
	movq	%rax, %rcx	 # _3,
	call	_ZNKSt12_Vector_baseIN3DDT4NodeESaIS1_EE19_M_get_Tp_allocatorEv	 #
	movq	%rax, %rbx	 #, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:208: 	          && _M_get_Tp_allocator() != __x._M_get_Tp_allocator())
	.loc 14 208 34 discriminator 1
	movq	48(%rbp), %rax	 # this, _5
	movq	%rax, %rcx	 # _5,
	call	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE19_M_get_Tp_allocatorEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:208: 	          && _M_get_Tp_allocator() != __x._M_get_Tp_allocator())
	.loc 14 208 37 discriminator 1
	movq	%rbx, %rdx	 # _4,
	movq	%rax, %rcx	 # _6,
	call	_ZSteqRKSaIN3DDT4NodeEES3_	 #
	xorl	$1, %eax	 #, _8
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:208: 	          && _M_get_Tp_allocator() != __x._M_get_Tp_allocator())
	.loc 14 208 12 discriminator 1
	testb	%al, %al	 # _8
	je	.L327	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:208: 	          && _M_get_Tp_allocator() != __x._M_get_Tp_allocator())
	.loc 14 208 12 is_stmt 0 discriminator 3
	movl	$1, %eax	 #, iftmp.83_55
	jmp	.L328	 #
.L327:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:208: 	          && _M_get_Tp_allocator() != __x._M_get_Tp_allocator())
	.loc 14 208 12 discriminator 4
	movl	$0, %eax	 #, iftmp.83_55
.L328:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:207: 	      if (!_Alloc_traits::_S_always_equal()
	.loc 14 207 8 is_stmt 1 discriminator 6
	testb	%al, %al	 # iftmp.83_55
	je	.L329	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:211: 		  this->clear();
	.loc 14 211 16
	movq	48(%rbp), %rcx	 # this,
	call	_ZNSt6vectorIN3DDT4NodeESaIS1_EE5clearEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:212: 		  _M_deallocate(this->_M_impl._M_start,
	.loc 14 212 18
	movq	48(%rbp), %rax	 # this, _9
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:213: 				this->_M_impl._M_end_of_storage
	.loc 14 213 19
	movq	48(%rbp), %rdx	 # this, tmp151
	movq	16(%rdx), %rcx	 # this_63(D)->D.105007._M_impl.D.104320._M_end_of_storage, _10
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:214: 				- this->_M_impl._M_start);
	.loc 14 214 21
	movq	48(%rbp), %rdx	 # this, tmp152
	movq	(%rdx), %r8	 # this_63(D)->D.105007._M_impl.D.104320._M_start, _11
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:214: 				- this->_M_impl._M_start);
	.loc 14 214 5
	subq	%r8, %rcx	 # _11, _10
	movq	%rcx, %rdx	 # _10, _12
	movq	%rdx, %rcx	 # _12, _12
	sarq	$3, %rcx	 #, _12
	movabsq	$-8198552921648689607, %rdx	 #, tmp155
	imulq	%rcx, %rdx	 # tmp153, tmp154
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:212: 		  _M_deallocate(this->_M_impl._M_start,
	.loc 14 212 18
	movq	%rdx, %rcx	 # _13, _14
	movq	48(%rbp), %rdx	 # this, tmp156
	movq	(%rdx), %rdx	 # this_63(D)->D.105007._M_impl.D.104320._M_start, _15
	movq	%rcx, %r8	 # _14,
	movq	%rax, %rcx	 # _9,
	call	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE13_M_deallocateEPS1_y	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:215: 		  this->_M_impl._M_start = nullptr;
	.loc 14 215 28
	movq	48(%rbp), %rax	 # this, tmp157
	movq	$0, (%rax)	 #, this_63(D)->D.105007._M_impl.D.104320._M_start
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:216: 		  this->_M_impl._M_finish = nullptr;
	.loc 14 216 29
	movq	48(%rbp), %rax	 # this, tmp158
	movq	$0, 8(%rax)	 #, this_63(D)->D.105007._M_impl.D.104320._M_finish
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:217: 		  this->_M_impl._M_end_of_storage = nullptr;
	.loc 14 217 37
	movq	48(%rbp), %rax	 # this, tmp159
	movq	$0, 16(%rax)	 #, this_63(D)->D.105007._M_impl.D.104320._M_end_of_storage
.L329:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:220: 				   __x._M_get_Tp_allocator());
	.loc 14 220 31
	movq	56(%rbp), %rax	 # __x, _16
	movq	%rax, %rcx	 # _16,
	call	_ZNKSt12_Vector_baseIN3DDT4NodeESaIS1_EE19_M_get_Tp_allocatorEv	 #
	movq	%rax, %rbx	 #, _17
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:219: 	      std::__alloc_on_copy(_M_get_Tp_allocator(),
	.loc 14 219 48
	movq	48(%rbp), %rax	 # this, _18
	movq	%rax, %rcx	 # _18,
	call	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE19_M_get_Tp_allocatorEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:219: 	      std::__alloc_on_copy(_M_get_Tp_allocator(),
	.loc 14 219 28
	movq	%rbx, %rdx	 # _17,
	movq	%rax, %rcx	 # _19,
	call	_ZSt15__alloc_on_copyISaIN3DDT4NodeEEEvRT_RKS3_	 #
.L326:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:223: 	  const size_type __xlen = __x.size();
	.loc 14 223 37
	movq	56(%rbp), %rax	 # __x, tmp160
	movq	%rax, %rcx	 # tmp160,
	call	_ZNKSt6vectorIN3DDT4NodeESaIS1_EE4sizeEv	 #
	movq	%rax, -8(%rbp)	 # tmp161, __xlen
.LBB80:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:224: 	  if (__xlen > capacity())
	.loc 14 224 25
	movq	48(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIN3DDT4NodeESaIS1_EE8capacityEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:224: 	  if (__xlen > capacity())
	.loc 14 224 15
	cmpq	%rax, -8(%rbp)	 # _20, __xlen
	seta	%al	 #, retval.84_85
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:224: 	  if (__xlen > capacity())
	.loc 14 224 4
	testb	%al, %al	 # retval.84_85
	je	.L330	 #,
.LBB81:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:226: 	      pointer __tmp = _M_allocate_and_copy(__xlen, __x.begin(),
	.loc 14 226 44
	movq	56(%rbp), %rax	 # __x, tmp162
	movq	%rax, %rcx	 # tmp162,
	call	_ZNKSt6vectorIN3DDT4NodeESaIS1_EE3endEv	 #
	movq	%rax, %rbx	 #, D.128148
	movq	56(%rbp), %rax	 # __x, tmp163
	movq	%rax, %rcx	 # tmp163,
	call	_ZNKSt6vectorIN3DDT4NodeESaIS1_EE5beginEv	 #
	movq	%rax, %rdx	 #, D.128149
	movq	-8(%rbp), %rax	 # __xlen, tmp164
	movq	%rbx, %r9	 # D.128148,
	movq	%rdx, %r8	 # D.128149,
	movq	%rax, %rdx	 # tmp164,
	movq	48(%rbp), %rcx	 # this,
	call	_ZNSt6vectorIN3DDT4NodeESaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_yT_SB_	 #
	movq	%rax, -16(%rbp)	 # _103, __tmp
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:229: 			    _M_get_Tp_allocator());
	.loc 14 229 27
	movq	48(%rbp), %rax	 # this, _21
	movq	%rax, %rcx	 # _21,
	call	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE19_M_get_Tp_allocatorEv	 #
	movq	%rax, %rcx	 #, _22
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:228: 	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	.loc 14 228 21
	movq	48(%rbp), %rax	 # this, tmp165
	movq	8(%rax), %rdx	 # this_63(D)->D.105007._M_impl.D.104320._M_finish, _23
	movq	48(%rbp), %rax	 # this, tmp166
	movq	(%rax), %rax	 # this_63(D)->D.105007._M_impl.D.104320._M_start, _24
	movq	%rcx, %r8	 # _22,
	movq	%rax, %rcx	 # _24,
	call	_ZSt8_DestroyIPN3DDT4NodeES1_EvT_S3_RSaIT0_E	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:230: 	      _M_deallocate(this->_M_impl._M_start,
	.loc 14 230 21
	movq	48(%rbp), %rax	 # this, _25
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:231: 			    this->_M_impl._M_end_of_storage
	.loc 14 231 22
	movq	48(%rbp), %rdx	 # this, tmp167
	movq	16(%rdx), %rcx	 # this_63(D)->D.105007._M_impl.D.104320._M_end_of_storage, _26
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:232: 			    - this->_M_impl._M_start);
	.loc 14 232 24
	movq	48(%rbp), %rdx	 # this, tmp168
	movq	(%rdx), %r8	 # this_63(D)->D.105007._M_impl.D.104320._M_start, _27
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:232: 			    - this->_M_impl._M_start);
	.loc 14 232 8
	subq	%r8, %rcx	 # _27, _26
	movq	%rcx, %rdx	 # _26, _28
	movq	%rdx, %rcx	 # _28, _28
	sarq	$3, %rcx	 #, _28
	movabsq	$-8198552921648689607, %rdx	 #, tmp171
	imulq	%rcx, %rdx	 # tmp169, tmp170
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:230: 	      _M_deallocate(this->_M_impl._M_start,
	.loc 14 230 21
	movq	%rdx, %rcx	 # _29, _30
	movq	48(%rbp), %rdx	 # this, tmp172
	movq	(%rdx), %rdx	 # this_63(D)->D.105007._M_impl.D.104320._M_start, _31
	movq	%rcx, %r8	 # _30,
	movq	%rax, %rcx	 # _25,
	call	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE13_M_deallocateEPS1_y	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:233: 	      this->_M_impl._M_start = __tmp;
	.loc 14 233 31
	movq	48(%rbp), %rax	 # this, tmp173
	movq	-16(%rbp), %rdx	 # __tmp, tmp174
	movq	%rdx, (%rax)	 # tmp174, this_63(D)->D.105007._M_impl.D.104320._M_start
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:234: 	      this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __xlen;
	.loc 14 234 56
	movq	48(%rbp), %rax	 # this, tmp175
	movq	(%rax), %rcx	 # this_63(D)->D.105007._M_impl.D.104320._M_start, _32
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:234: 	      this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __xlen;
	.loc 14 234 65
	movq	-8(%rbp), %rdx	 # __xlen, tmp176
	movq	%rdx, %rax	 # tmp176, tmp177
	salq	$3, %rax	 #, tmp177
	addq	%rdx, %rax	 # tmp176, tmp177
	salq	$3, %rax	 #, tmp178
	leaq	(%rcx,%rax), %rdx	 #, _34
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:234: 	      this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __xlen;
	.loc 14 234 40
	movq	48(%rbp), %rax	 # this, tmp179
	movq	%rdx, 16(%rax)	 # _34, this_63(D)->D.105007._M_impl.D.104320._M_end_of_storage
.LBE81:
	jmp	.L331	 #
.L330:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:236: 	  else if (size() >= __xlen)
	.loc 14 236 17
	movq	48(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIN3DDT4NodeESaIS1_EE4sizeEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:236: 	  else if (size() >= __xlen)
	.loc 14 236 20
	cmpq	%rax, -8(%rbp)	 # _35, __xlen
	setbe	%al	 #, retval.85_87
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:236: 	  else if (size() >= __xlen)
	.loc 14 236 9
	testb	%al, %al	 # retval.85_87
	je	.L332	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:239: 			    end(), _M_get_Tp_allocator());
	.loc 14 239 34
	movq	48(%rbp), %rax	 # this, _36
	movq	%rax, %rcx	 # _36,
	call	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE19_M_get_Tp_allocatorEv	 #
	movq	%rax, %rsi	 #, _37
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:238: 	      std::_Destroy(std::copy(__x.begin(), __x.end(), begin()),
	.loc 14 238 21
	movq	48(%rbp), %rcx	 # this,
	call	_ZNSt6vectorIN3DDT4NodeESaIS1_EE3endEv	 #
	movq	%rax, %rbx	 #, D.128154
	movq	48(%rbp), %rcx	 # this,
	call	_ZNSt6vectorIN3DDT4NodeESaIS1_EE5beginEv	 #
	movq	%rax, %r12	 #, D.128155
	movq	56(%rbp), %rax	 # __x, tmp180
	movq	%rax, %rcx	 # tmp180,
	call	_ZNKSt6vectorIN3DDT4NodeESaIS1_EE3endEv	 #
	movq	%rax, %rdi	 #, D.128156
	movq	56(%rbp), %rax	 # __x, tmp181
	movq	%rax, %rcx	 # tmp181,
	call	_ZNKSt6vectorIN3DDT4NodeESaIS1_EE5beginEv	 #
	movq	%r12, %r8	 # D.128155,
	movq	%rdi, %rdx	 # D.128156,
	movq	%rax, %rcx	 # D.128157,
	call	_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET0_T_SD_SC_	 #
	movq	%rsi, %r8	 # _37,
	movq	%rbx, %rdx	 # D.128154,
	movq	%rax, %rcx	 # D.128158,
	call	_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS3_SaIS3_EEEES3_EvT_S9_RSaIT0_E	 #
	jmp	.L331	 #
.L332:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:243: 	      std::copy(__x._M_impl._M_start, __x._M_impl._M_start + size(),
	.loc 14 243 17
	movq	48(%rbp), %rax	 # this, tmp182
	movq	(%rax), %rbx	 # this_63(D)->D.105007._M_impl.D.104320._M_start, _38
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:243: 	      std::copy(__x._M_impl._M_start, __x._M_impl._M_start + size(),
	.loc 14 243 52
	movq	56(%rbp), %rax	 # __x, tmp183
	movq	(%rax), %rsi	 # __x_62(D)->D.105007._M_impl.D.104320._M_start, _39
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:243: 	      std::copy(__x._M_impl._M_start, __x._M_impl._M_start + size(),
	.loc 14 243 67
	movq	48(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIN3DDT4NodeESaIS1_EE4sizeEv	 #
	movq	%rax, %rdx	 #, _40
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:243: 	      std::copy(__x._M_impl._M_start, __x._M_impl._M_start + size(),
	.loc 14 243 61
	movq	%rdx, %rax	 # _40, tmp184
	salq	$3, %rax	 #, tmp184
	addq	%rdx, %rax	 # _40, tmp184
	salq	$3, %rax	 #, tmp185
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:243: 	      std::copy(__x._M_impl._M_start, __x._M_impl._M_start + size(),
	.loc 14 243 17
	leaq	(%rsi,%rax), %rdx	 #, _42
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:243: 	      std::copy(__x._M_impl._M_start, __x._M_impl._M_start + size(),
	.loc 14 243 30
	movq	56(%rbp), %rax	 # __x, tmp186
	movq	(%rax), %rax	 # __x_62(D)->D.105007._M_impl.D.104320._M_start, _43
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:243: 	      std::copy(__x._M_impl._M_start, __x._M_impl._M_start + size(),
	.loc 14 243 17
	movq	%rbx, %r8	 # _38,
	movq	%rax, %rcx	 # _43,
	call	_ZSt4copyIPN3DDT4NodeES2_ET0_T_S4_S3_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:248: 					  _M_get_Tp_allocator());
	.loc 14 248 27
	movq	48(%rbp), %rax	 # this, _44
	movq	%rax, %rcx	 # _44,
	call	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE19_M_get_Tp_allocatorEv	 #
	movq	%rax, %rsi	 #, _45
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:245: 	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
	.loc 14 245 35
	movq	48(%rbp), %rax	 # this, tmp187
	movq	8(%rax), %rdi	 # this_63(D)->D.105007._M_impl.D.104320._M_finish, _46
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:246: 					  __x._M_impl._M_finish,
	.loc 14 246 20
	movq	56(%rbp), %rax	 # __x, tmp188
	movq	8(%rax), %rbx	 # __x_62(D)->D.105007._M_impl.D.104320._M_finish, _47
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:245: 	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
	.loc 14 245 48
	movq	56(%rbp), %rax	 # __x, tmp189
	movq	(%rax), %r12	 # __x_62(D)->D.105007._M_impl.D.104320._M_start, _48
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:245: 	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
	.loc 14 245 63
	movq	48(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIN3DDT4NodeESaIS1_EE4sizeEv	 #
	movq	%rax, %rdx	 #, _49
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:245: 	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
	.loc 14 245 57
	movq	%rdx, %rax	 # _49, tmp190
	salq	$3, %rax	 #, tmp190
	addq	%rdx, %rax	 # _49, tmp190
	salq	$3, %rax	 #, tmp191
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:245: 	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
	.loc 14 245 35
	addq	%r12, %rax	 # _48, _51
	movq	%rsi, %r9	 # _45,
	movq	%rdi, %r8	 # _46,
	movq	%rbx, %rdx	 # _47,
	movq	%rax, %rcx	 # _51,
	call	_ZSt22__uninitialized_copy_aIPN3DDT4NodeES2_S1_ET0_T_S4_S3_RSaIT1_E	 #
.L331:
.LBE80:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:250: 	  this->_M_impl._M_finish = this->_M_impl._M_start + __xlen;
	.loc 14 250 44
	movq	48(%rbp), %rax	 # this, tmp192
	movq	(%rax), %rcx	 # this_63(D)->D.105007._M_impl.D.104320._M_start, _52
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:250: 	  this->_M_impl._M_finish = this->_M_impl._M_start + __xlen;
	.loc 14 250 53
	movq	-8(%rbp), %rdx	 # __xlen, tmp193
	movq	%rdx, %rax	 # tmp193, tmp194
	salq	$3, %rax	 #, tmp194
	addq	%rdx, %rax	 # tmp193, tmp194
	salq	$3, %rax	 #, tmp195
	leaq	(%rcx,%rax), %rdx	 #, _54
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:250: 	  this->_M_impl._M_finish = this->_M_impl._M_start + __xlen;
	.loc 14 250 28
	movq	48(%rbp), %rax	 # this, tmp196
	movq	%rdx, 8(%rax)	 # _54, this_63(D)->D.105007._M_impl.D.104320._M_finish
.L325:
.LBE79:
.LBE78:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:252:       return *this;
	.loc 14 252 15
	movq	48(%rbp), %rax	 # this, _111
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:253:     }
	.loc 14 253 5
	addq	$48, %rsp	 #,
	popq	%rbx	 #
.LCFI495:
	popq	%rsi	 #
.LCFI496:
	popq	%rdi	 #
.LCFI497:
	popq	%r12	 #
.LCFI498:
	popq	%rbp	 #
.LCFI499:
	ret	
.LFE5123:
	.seh_endproc
	.section	.text$_ZNKSt6vectorIN3DDT4NodeESaIS1_EE4sizeEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt6vectorIN3DDT4NodeESaIS1_EE4sizeEv
	.def	_ZNKSt6vectorIN3DDT4NodeESaIS1_EE4sizeEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt6vectorIN3DDT4NodeESaIS1_EE4sizeEv
_ZNKSt6vectorIN3DDT4NodeESaIS1_EE4sizeEv:
.LFB5128:
	.loc 11 918 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI500:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI501:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:919:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	.loc 11 919 40
	movq	16(%rbp), %rax	 # this, tmp88
	movq	8(%rax), %rdx	 # this_6(D)->D.105007._M_impl.D.104320._M_finish, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:919:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	.loc 11 919 66
	movq	16(%rbp), %rax	 # this, tmp89
	movq	(%rax), %rcx	 # this_6(D)->D.105007._M_impl.D.104320._M_start, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:919:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	.loc 11 919 50
	movq	%rdx, %rax	 # _1, _1
	subq	%rcx, %rax	 # _2, _1
	sarq	$3, %rax	 #, _3
	movq	%rax, %rdx	 # _3, tmp90
	movabsq	$-8198552921648689607, %rax	 #, tmp92
	imulq	%rdx, %rax	 # tmp90, tmp91
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:919:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	.loc 11 919 77
	popq	%rbp	 #
.LCFI502:
	ret	
.LFE5128:
	.seh_endproc
	.section	.text$_ZNSt6vectorIN3DDT4NodeESaIS1_EEixEy,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorIN3DDT4NodeESaIS1_EEixEy
	.def	_ZNSt6vectorIN3DDT4NodeESaIS1_EEixEy;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorIN3DDT4NodeESaIS1_EEixEy
_ZNSt6vectorIN3DDT4NodeESaIS1_EEixEy:
.LFB5129:
	.loc 11 1043 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI503:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI504:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __n, __n
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1046: 	return *(this->_M_impl._M_start + __n);
	.loc 11 1046 25
	movq	16(%rbp), %rax	 # this, tmp86
	movq	(%rax), %rcx	 # this_4(D)->D.105007._M_impl.D.104320._M_start, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1046: 	return *(this->_M_impl._M_start + __n);
	.loc 11 1046 34
	movq	24(%rbp), %rdx	 # __n, tmp87
	movq	%rdx, %rax	 # tmp87, tmp88
	salq	$3, %rax	 #, tmp88
	addq	%rdx, %rax	 # tmp87, tmp88
	salq	$3, %rax	 #, tmp89
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1046: 	return *(this->_M_impl._M_start + __n);
	.loc 11 1046 39
	addq	%rcx, %rax	 # _1, _6
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1047:       }
	.loc 11 1047 7
	popq	%rbp	 #
.LCFI505:
	ret	
.LFE5129:
	.seh_endproc
	.section	.text$_ZNK7OptimapIhiE4sizeEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNK7OptimapIhiE4sizeEv
	.def	_ZNK7OptimapIhiE4sizeEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNK7OptimapIhiE4sizeEv
_ZNK7OptimapIhiE4sizeEv:
.LFB5130:
	.loc 9 35 13
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI506:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI507:
	subq	$56, %rsp	 #,
	.seh_stackalloc	56
.LCFI508:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI509:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
 # optimap.hpp:36: 		return std::count(val.begin(), val.end(), true);
	.loc 9 36 45
	movb	$1, -1(%rbp)	 #, D.113412
 # optimap.hpp:36: 		return std::count(val.begin(), val.end(), true);
	.loc 9 36 20
	movq	32(%rbp), %rax	 # this, tmp89
	addq	$40, %rax	 #, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNKSt6vectorIiSaIiEE3endEv	 #
	movq	%rax, %rbx	 #, D.128430
	movq	32(%rbp), %rax	 # this, tmp90
	addq	$40, %rax	 #, _2
	movq	%rax, %rcx	 # _2,
	call	_ZNKSt6vectorIiSaIiEE5beginEv	 #
	leaq	-1(%rbp), %rdx	 #, tmp91
	movq	%rdx, %r8	 # tmp91,
	movq	%rbx, %rdx	 # D.128430,
	movq	%rax, %rcx	 # D.128431,
	call	_ZSt5countIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEbENSt15iterator_traitsIT_E15difference_typeES9_S9_RKT0_	 #
 # optimap.hpp:37: 	}
	.loc 9 37 2
	addq	$56, %rsp	 #,
	popq	%rbx	 #
.LCFI510:
	popq	%rbp	 #
.LCFI511:
	ret	
.LFE5130:
	.seh_endproc
	.section	.text$_ZNSt6vectorIN3DDT4NodeESaIS1_EE5beginEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorIN3DDT4NodeESaIS1_EE5beginEv
	.def	_ZNSt6vectorIN3DDT4NodeESaIS1_EE5beginEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorIN3DDT4NodeESaIS1_EE5beginEv
_ZNSt6vectorIN3DDT4NodeESaIS1_EE5beginEv:
.LFB5131:
	.loc 11 811 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI512:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI513:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:812:       { return iterator(this->_M_impl._M_start); }
	.loc 11 812 39
	movq	16(%rbp), %rdx	 # this, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:812:       { return iterator(this->_M_impl._M_start); }
	.loc 11 812 16
	leaq	-8(%rbp), %rax	 #, tmp85
	movq	%rax, %rcx	 # tmp85,
	call	_ZN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEC1ERKS3_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:812:       { return iterator(this->_M_impl._M_start); }
	.loc 11 812 47
	movq	-8(%rbp), %rax	 # D.113432, D.127308
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:812:       { return iterator(this->_M_impl._M_start); }
	.loc 11 812 50
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI514:
	ret	
.LFE5131:
	.seh_endproc
	.section	.text$_ZNSt12_Vector_baseI5BlorbSaIS0_EE12_Vector_implC1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt12_Vector_baseI5BlorbSaIS0_EE12_Vector_implC1Ev
	.def	_ZNSt12_Vector_baseI5BlorbSaIS0_EE12_Vector_implC1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt12_Vector_baseI5BlorbSaIS0_EE12_Vector_implC1Ev
_ZNSt12_Vector_baseI5BlorbSaIS0_EE12_Vector_implC1Ev:
.LFB5134:
	.loc 11 131 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI515:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI516:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB82:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:133: 	: _Tp_alloc_type()
	.loc 11 133 19
	movq	16(%rbp), %rcx	 # this,
	call	_ZNSaI5BlorbEC2Ev	 #
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt12_Vector_baseI5BlorbSaIS0_EE17_Vector_impl_dataC2Ev	 #
.LBE82:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:134: 	{ }
	.loc 11 134 4
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI517:
	ret	
.LFE5134:
	.seh_endproc
	.section	.text$_ZNSaI5BlorbED2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSaI5BlorbED2Ev
	.def	_ZNSaI5BlorbED2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSaI5BlorbED2Ev
_ZNSaI5BlorbED2Ev:
.LFB5136:
	.loc 12 186 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI518:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI519:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:186:       ~allocator() _GLIBCXX_NOTHROW { }
	.loc 12 186 39
	nop	
	popq	%rbp	 #
.LCFI520:
	ret	
.LFE5136:
	.seh_endproc
	.section	.text$_ZNSt12_Vector_baseI5BlorbSaIS0_EED2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt12_Vector_baseI5BlorbSaIS0_EED2Ev
	.def	_ZNSt12_Vector_baseI5BlorbSaIS0_EED2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt12_Vector_baseI5BlorbSaIS0_EED2Ev
_ZNSt12_Vector_baseI5BlorbSaIS0_EED2Ev:
.LFB5139:
	.loc 11 333 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI521:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI522:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB83:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:336: 		      _M_impl._M_end_of_storage - _M_impl._M_start);
	.loc 11 336 17
	movq	16(%rbp), %rax	 # this, tmp89
	movq	16(%rax), %rdx	 # this_9(D)->_M_impl.D.107007._M_end_of_storage, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:336: 		      _M_impl._M_end_of_storage - _M_impl._M_start);
	.loc 11 336 45
	movq	16(%rbp), %rax	 # this, tmp90
	movq	(%rax), %rcx	 # this_9(D)->_M_impl.D.107007._M_start, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:336: 		      _M_impl._M_end_of_storage - _M_impl._M_start);
	.loc 11 336 35
	movq	%rdx, %rax	 # _1, _1
	subq	%rcx, %rax	 # _2, _1
	sarq	$4, %rax	 #, _3
	movq	%rax, %rdx	 # _3, tmp91
	movabsq	$-6148914691236517205, %rax	 #, tmp93
	imulq	%rdx, %rax	 # tmp91, tmp92
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:335: 	_M_deallocate(_M_impl._M_start,
	.loc 11 335 15
	movq	%rax, %rdx	 # _4, _5
	movq	16(%rbp), %rax	 # this, tmp94
	movq	(%rax), %rax	 # this_9(D)->_M_impl.D.107007._M_start, _6
	movq	%rdx, %r8	 # _5,
	movq	%rax, %rdx	 # _6,
	movq	16(%rbp), %rcx	 # this,
	call	_ZNSt12_Vector_baseI5BlorbSaIS0_EE13_M_deallocateEPS0_y	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:337:       }
	.loc 11 337 7
	movq	16(%rbp), %rax	 # this, _7
	movq	%rax, %rcx	 # _7,
	call	_ZNSt12_Vector_baseI5BlorbSaIS0_EE12_Vector_implD1Ev	 #
.LBE83:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI523:
	ret	
.LFE5139:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA5139:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE5139-.LLSDACSB5139
.LLSDACSB5139:
.LLSDACSE5139:
	.section	.text$_ZNSt12_Vector_baseI5BlorbSaIS0_EED2Ev,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZNSt6vectorI5BlorbSaIS0_EE4dataEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorI5BlorbSaIS0_EE4dataEv
	.def	_ZNSt6vectorI5BlorbSaIS0_EE4dataEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorI5BlorbSaIS0_EE4dataEv
_ZNSt6vectorI5BlorbSaIS0_EE4dataEv:
.LFB5141:
	.loc 11 1168 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI524:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI525:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1169:       { return _M_data_ptr(this->_M_impl._M_start); }
	.loc 11 1169 27
	movq	16(%rbp), %rax	 # this, tmp85
	movq	(%rax), %rax	 # this_3(D)->D.107662._M_impl.D.107007._M_start, _1
	movq	%rax, %rdx	 # _1,
	movq	16(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorI5BlorbSaIS0_EE11_M_data_ptrIS0_EEPT_S5_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1169:       { return _M_data_ptr(this->_M_impl._M_start); }
	.loc 11 1169 53
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI526:
	ret	
.LFE5141:
	.seh_endproc
	.section	.text$_ZNSt6vectorI5BlorbSaIS0_EE9push_backEOS0_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorI5BlorbSaIS0_EE9push_backEOS0_
	.def	_ZNSt6vectorI5BlorbSaIS0_EE9push_backEOS0_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorI5BlorbSaIS0_EE9push_backEOS0_
_ZNSt6vectorI5BlorbSaIS0_EE9push_backEOS0_:
.LFB5142:
	.loc 11 1203 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI527:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI528:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __x, __x
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1204:       { emplace_back(std::move(__x)); }
	.loc 11 1204 31
	movq	24(%rbp), %rax	 # __x, tmp83
	movq	%rax, %rcx	 # tmp83,
	call	_ZSt4moveIR5BlorbEONSt16remove_referenceIT_E4typeEOS3_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1204:       { emplace_back(std::move(__x)); }
	.loc 11 1204 21
	movq	%rax, %rdx	 # _1,
	movq	16(%rbp), %rcx	 # this,
	call	_ZNSt6vectorI5BlorbSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1204:       { emplace_back(std::move(__x)); }
	.loc 11 1204 39
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI529:
	ret	
.LFE5142:
	.seh_endproc
	.section	.text$_ZNSt6vectorI5BlorbSaIS0_EE4backEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorI5BlorbSaIS0_EE4backEv
	.def	_ZNSt6vectorI5BlorbSaIS0_EE4backEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorI5BlorbSaIS0_EE4backEv
_ZNSt6vectorI5BlorbSaIS0_EE4backEv:
.LFB5143:
	.loc 11 1143 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI530:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI531:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1146: 	return *(end() - 1);
	.loc 11 1146 14
	movq	16(%rbp), %rcx	 # this,
	call	_ZNSt6vectorI5BlorbSaIS0_EE3endEv	 #
	movq	%rax, -8(%rbp)	 # tmp85, D.113503
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1146: 	return *(end() - 1);
	.loc 11 1146 17
	leaq	-8(%rbp), %rax	 #, tmp86
	movl	$1, %edx	 #,
	movq	%rax, %rcx	 # tmp86,
	call	_ZNK9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEEmiEx	 #
	movq	%rax, -16(%rbp)	 # tmp88, D.113504
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1146: 	return *(end() - 1);
	.loc 11 1146 9
	leaq	-16(%rbp), %rax	 #, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZNK9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEEdeEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1147:       }
	.loc 11 1147 7
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI532:
	ret	
.LFE5143:
	.seh_endproc
	.section	.text$_ZNKSt6vectorI5BlorbSaIS0_EE4sizeEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt6vectorI5BlorbSaIS0_EE4sizeEv
	.def	_ZNKSt6vectorI5BlorbSaIS0_EE4sizeEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt6vectorI5BlorbSaIS0_EE4sizeEv
_ZNKSt6vectorI5BlorbSaIS0_EE4sizeEv:
.LFB5144:
	.loc 11 918 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI533:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI534:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:919:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	.loc 11 919 40
	movq	16(%rbp), %rax	 # this, tmp88
	movq	8(%rax), %rdx	 # this_6(D)->D.107662._M_impl.D.107007._M_finish, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:919:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	.loc 11 919 66
	movq	16(%rbp), %rax	 # this, tmp89
	movq	(%rax), %rcx	 # this_6(D)->D.107662._M_impl.D.107007._M_start, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:919:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	.loc 11 919 50
	movq	%rdx, %rax	 # _1, _1
	subq	%rcx, %rax	 # _2, _1
	sarq	$4, %rax	 #, _3
	movq	%rax, %rdx	 # _3, tmp90
	movabsq	$-6148914691236517205, %rax	 #, tmp92
	imulq	%rdx, %rax	 # tmp90, tmp91
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:919:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	.loc 11 919 77
	popq	%rbp	 #
.LCFI535:
	ret	
.LFE5144:
	.seh_endproc
	.section	.text$_ZNSt6vectorI5BlorbSaIS0_EEixEy,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorI5BlorbSaIS0_EEixEy
	.def	_ZNSt6vectorI5BlorbSaIS0_EEixEy;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorI5BlorbSaIS0_EEixEy
_ZNSt6vectorI5BlorbSaIS0_EEixEy:
.LFB5145:
	.loc 11 1043 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI536:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI537:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __n, __n
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1046: 	return *(this->_M_impl._M_start + __n);
	.loc 11 1046 25
	movq	16(%rbp), %rax	 # this, tmp86
	movq	(%rax), %rcx	 # this_4(D)->D.107662._M_impl.D.107007._M_start, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1046: 	return *(this->_M_impl._M_start + __n);
	.loc 11 1046 34
	movq	24(%rbp), %rdx	 # __n, tmp87
	movq	%rdx, %rax	 # tmp87, tmp88
	addq	%rax, %rax	 # tmp88
	addq	%rdx, %rax	 # tmp87, tmp88
	salq	$4, %rax	 #, tmp89
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1046: 	return *(this->_M_impl._M_start + __n);
	.loc 11 1046 39
	addq	%rcx, %rax	 # _1, _6
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1047:       }
	.loc 11 1047 7
	popq	%rbp	 #
.LCFI538:
	ret	
.LFE5145:
	.seh_endproc
	.section	.text$_ZNSt6vectorI5BlorbSaIS0_EE5beginEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorI5BlorbSaIS0_EE5beginEv
	.def	_ZNSt6vectorI5BlorbSaIS0_EE5beginEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorI5BlorbSaIS0_EE5beginEv
_ZNSt6vectorI5BlorbSaIS0_EE5beginEv:
.LFB5146:
	.loc 11 811 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI539:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI540:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:812:       { return iterator(this->_M_impl._M_start); }
	.loc 11 812 39
	movq	16(%rbp), %rdx	 # this, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:812:       { return iterator(this->_M_impl._M_start); }
	.loc 11 812 16
	leaq	-8(%rbp), %rax	 #, tmp85
	movq	%rax, %rcx	 # tmp85,
	call	_ZN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEEC1ERKS2_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:812:       { return iterator(this->_M_impl._M_start); }
	.loc 11 812 47
	movq	-8(%rbp), %rax	 # D.113527, D.128325
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:812:       { return iterator(this->_M_impl._M_start); }
	.loc 11 812 50
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI541:
	ret	
.LFE5146:
	.seh_endproc
	.section	.text$_ZNK9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEEplEx,"x"
	.linkonce discard
	.align 2
	.globl	_ZNK9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEEplEx
	.def	_ZNK9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEEplEx;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNK9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEEplEx
_ZNK9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEEplEx:
.LFB5147:
	.file 15 "c:/users/pluto/scoop/apps/gcc/current/include/c++/11.2.0/bits/stl_iterator.h"
	.loc 15 1073 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI542:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI543:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __n, __n
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1074:       { return __normal_iterator(_M_current + __n); }
	.loc 15 1074 34
	movq	16(%rbp), %rax	 # this, tmp88
	movq	(%rax), %rcx	 # this_6(D)->_M_current, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1074:       { return __normal_iterator(_M_current + __n); }
	.loc 15 1074 47
	movq	24(%rbp), %rdx	 # __n, __n.119_2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1074:       { return __normal_iterator(_M_current + __n); }
	.loc 15 1074 45
	movq	%rdx, %rax	 # __n.119_2, tmp89
	addq	%rax, %rax	 # tmp89
	addq	%rdx, %rax	 # __n.119_2, tmp89
	salq	$4, %rax	 #, tmp90
	addq	%rcx, %rax	 # _1, _4
	movq	%rax, -8(%rbp)	 # _4, D.113530
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1074:       { return __normal_iterator(_M_current + __n); }
	.loc 15 1074 16
	leaq	-8(%rbp), %rdx	 #, tmp91
	leaq	-16(%rbp), %rax	 #, tmp92
	movq	%rax, %rcx	 # tmp92,
	call	_ZN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEEC1ERKS2_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1074:       { return __normal_iterator(_M_current + __n); }
	.loc 15 1074 50
	movq	-16(%rbp), %rax	 # D.113531, D.128489
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1074:       { return __normal_iterator(_M_current + __n); }
	.loc 15 1074 53
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI544:
	ret	
.LFE5147:
	.seh_endproc
	.section	.text$_ZNK9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEE4baseEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNK9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEE4baseEv
	.def	_ZNK9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEE4baseEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNK9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEE4baseEv
_ZNK9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEE4baseEv:
.LFB5149:
	.loc 15 1088 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI545:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI546:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1089:       { return _M_current; }
	.loc 15 1089 16
	movq	16(%rbp), %rax	 # this, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1089:       { return _M_current; }
	.loc 15 1089 28
	popq	%rbp	 #
.LCFI547:
	ret	
.LFE5149:
	.seh_endproc
	.section	.text$_ZN9__gnu_cxx17__normal_iteratorIPK5BlorbSt6vectorIS1_SaIS1_EEEC1IPS1_EERKNS0_IT_NS_11__enable_ifIXsrSt10__are_sameISA_S9_E7__valueES6_E6__typeEEE,"x"
	.linkonce discard
	.align 2
	.globl	_ZN9__gnu_cxx17__normal_iteratorIPK5BlorbSt6vectorIS1_SaIS1_EEEC1IPS1_EERKNS0_IT_NS_11__enable_ifIXsrSt10__are_sameISA_S9_E7__valueES6_E6__typeEEE
	.def	_ZN9__gnu_cxx17__normal_iteratorIPK5BlorbSt6vectorIS1_SaIS1_EEEC1IPS1_EERKNS0_IT_NS_11__enable_ifIXsrSt10__are_sameISA_S9_E7__valueES6_E6__typeEEE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN9__gnu_cxx17__normal_iteratorIPK5BlorbSt6vectorIS1_SaIS1_EEEC1IPS1_EERKNS0_IT_NS_11__enable_ifIXsrSt10__are_sameISA_S9_E7__valueES6_E6__typeEEE
_ZN9__gnu_cxx17__normal_iteratorIPK5BlorbSt6vectorIS1_SaIS1_EEEC1IPS1_EERKNS0_IT_NS_11__enable_ifIXsrSt10__are_sameISA_S9_E7__valueES6_E6__typeEEE:
.LFB5151:
	.loc 15 1016 9
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI548:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI549:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __i, __i
.LBB84:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1020:         : _M_current(__i.base()) { }
	.loc 15 1020 30
	movq	24(%rbp), %rax	 # __i, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZNK9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEE4baseEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1020:         : _M_current(__i.base()) { }
	.loc 15 1020 11
	movq	(%rax), %rdx	 # *_1, _2
	movq	16(%rbp), %rax	 # this, tmp85
	movq	%rdx, (%rax)	 # _2, this_4(D)->_M_current
.LBE84:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1020:         : _M_current(__i.base()) { }
	.loc 15 1020 36
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI550:
	ret	
.LFE5151:
	.seh_endproc
	.section	.text$_ZNSt6vectorI5BlorbSaIS0_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS0_S2_EE,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorI5BlorbSaIS0_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS0_S2_EE
	.def	_ZNSt6vectorI5BlorbSaIS0_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS0_S2_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorI5BlorbSaIS0_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS0_S2_EE
_ZNSt6vectorI5BlorbSaIS0_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS0_S2_EE:
.LFB5152:
	.loc 11 1430 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI551:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI552:
	subq	$56, %rsp	 #,
	.seh_stackalloc	56
.LCFI553:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI554:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __position, __position
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1431:       { return _M_erase(begin() + (__position - cbegin())); }
	.loc 11 1431 55
	movq	32(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorI5BlorbSaIS0_EE6cbeginEv	 #
	movq	%rax, -16(%rbp)	 # tmp87, D.113550
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1431:       { return _M_erase(begin() + (__position - cbegin())); }
	.loc 11 1431 24
	leaq	-16(%rbp), %rdx	 #, tmp88
	leaq	40(%rbp), %rax	 #, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZN9__gnu_cxxmiIPK5BlorbSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_	 #
	movq	%rax, %rbx	 #, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1431:       { return _M_erase(begin() + (__position - cbegin())); }
	.loc 11 1431 30
	movq	32(%rbp), %rcx	 # this,
	call	_ZNSt6vectorI5BlorbSaIS0_EE5beginEv	 #
	movq	%rax, -8(%rbp)	 # tmp91, D.113549
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1431:       { return _M_erase(begin() + (__position - cbegin())); }
	.loc 11 1431 24
	leaq	-8(%rbp), %rax	 #, tmp92
	movq	%rbx, %rdx	 # _1,
	movq	%rax, %rcx	 # tmp92,
	call	_ZNK9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEEplEx	 #
	movq	%rax, %rdx	 # D.128494,
	movq	32(%rbp), %rcx	 # this,
	call	_ZNSt6vectorI5BlorbSaIS0_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS0_S2_EE	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1431:       { return _M_erase(begin() + (__position - cbegin())); }
	.loc 11 1431 61
	addq	$56, %rsp	 #,
	popq	%rbx	 #
.LCFI555:
	popq	%rbp	 #
.LCFI556:
	ret	
.LFE5152:
	.seh_endproc
	.section	.text$_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC1Ev
	.def	_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC1Ev
_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC1Ev:
.LFB5302:
	.loc 8 480 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI557:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI558:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB85:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:482: 	: _Bit_alloc_type()
	.loc 8 482 20
	movq	16(%rbp), %rcx	 # this,
	call	_ZNSaImEC2Ev	 #
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC2Ev	 #
.LBE85:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:483: 	{ }
	.loc 8 483 4
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI559:
	ret	
.LFE5302:
	.seh_endproc
	.section	.text$_ZNSaImED2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSaImED2Ev
	.def	_ZNSaImED2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSaImED2Ev
_ZNSaImED2Ev:
.LFB5304:
	.loc 12 186 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI560:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI561:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:186:       ~allocator() _GLIBCXX_NOTHROW { }
	.loc 12 186 39
	nop	
	popq	%rbp	 #
.LCFI562:
	ret	
.LFE5304:
	.seh_endproc
	.section	.text$_ZNSt13_Bvector_baseISaIbEED2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt13_Bvector_baseISaIbEED2Ev
	.def	_ZNSt13_Bvector_baseISaIbEED2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt13_Bvector_baseISaIbEED2Ev
_ZNSt13_Bvector_baseISaIbEED2Ev:
.LFB5307:
	.loc 8 542 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI563:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI564:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB86:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:543:       { this->_M_deallocate(); }
	.loc 8 543 28
	movq	16(%rbp), %rcx	 # this,
	call	_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:543:       { this->_M_deallocate(); }
	.loc 8 543 32
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD1Ev	 #
.LBE86:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI565:
	ret	
.LFE5307:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA5307:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE5307-.LLSDACSB5307
.LLSDACSB5307:
.LLSDACSE5307:
	.section	.text$_ZNSt13_Bvector_baseISaIbEED2Ev,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC1Ev
	.def	_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC1Ev
_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC1Ev:
.LFB5311:
	.loc 11 131 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI566:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI567:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB87:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:133: 	: _Tp_alloc_type()
	.loc 11 133 19
	movq	16(%rbp), %rcx	 # this,
	call	_ZNSaIiEC2Ev	 #
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataC2Ev	 #
.LBE87:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:134: 	{ }
	.loc 11 134 4
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI568:
	ret	
.LFE5311:
	.seh_endproc
	.section	.text$_ZNSaIiED2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSaIiED2Ev
	.def	_ZNSaIiED2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSaIiED2Ev
_ZNSaIiED2Ev:
.LFB5313:
	.loc 12 186 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI569:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI570:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:186:       ~allocator() _GLIBCXX_NOTHROW { }
	.loc 12 186 39
	nop	
	popq	%rbp	 #
.LCFI571:
	ret	
.LFE5313:
	.seh_endproc
	.section	.text$_ZNSt12_Vector_baseIiSaIiEED2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt12_Vector_baseIiSaIiEED2Ev
	.def	_ZNSt12_Vector_baseIiSaIiEED2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt12_Vector_baseIiSaIiEED2Ev
_ZNSt12_Vector_baseIiSaIiEED2Ev:
.LFB5316:
	.loc 11 333 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI572:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI573:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB88:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:336: 		      _M_impl._M_end_of_storage - _M_impl._M_start);
	.loc 11 336 17
	movq	16(%rbp), %rax	 # this, tmp89
	movq	16(%rax), %rdx	 # this_9(D)->_M_impl.D.105361._M_end_of_storage, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:336: 		      _M_impl._M_end_of_storage - _M_impl._M_start);
	.loc 11 336 45
	movq	16(%rbp), %rax	 # this, tmp90
	movq	(%rax), %rcx	 # this_9(D)->_M_impl.D.105361._M_start, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:336: 		      _M_impl._M_end_of_storage - _M_impl._M_start);
	.loc 11 336 35
	movq	%rdx, %rax	 # _1, _1
	subq	%rcx, %rax	 # _2, _1
	sarq	$2, %rax	 #, tmp91
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:335: 	_M_deallocate(_M_impl._M_start,
	.loc 11 335 15
	movq	%rax, %rdx	 # _4, _5
	movq	16(%rbp), %rax	 # this, tmp92
	movq	(%rax), %rax	 # this_9(D)->_M_impl.D.105361._M_start, _6
	movq	%rdx, %r8	 # _5,
	movq	%rax, %rdx	 # _6,
	movq	16(%rbp), %rcx	 # this,
	call	_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPiy	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:337:       }
	.loc 11 337 7
	movq	16(%rbp), %rax	 # this, _7
	movq	%rax, %rcx	 # _7,
	call	_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD1Ev	 #
.LBE88:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI574:
	ret	
.LFE5316:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA5316:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE5316-.LLSDACSB5316
.LLSDACSB5316:
.LLSDACSE5316:
	.section	.text$_ZNSt12_Vector_baseIiSaIiEED2Ev,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv
	.def	_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv
_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv:
.LFB5318:
	.loc 11 276 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI575:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI576:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:277:       { return this->_M_impl; }
	.loc 11 277 22
	movq	16(%rbp), %rax	 # this, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:277:       { return this->_M_impl; }
	.loc 11 277 31
	popq	%rbp	 #
.LCFI577:
	ret	
.LFE5318:
	.seh_endproc
	.section	.text$_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E,"x"
	.linkonce discard
	.globl	_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E
	.def	_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E
_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E:
.LFB5319:
	.file 16 "c:/users/pluto/scoop/apps/gcc/current/include/c++/11.2.0/bits/alloc_traits.h"
	.loc 16 743 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI578:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI579:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # D.116700, D.116700
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\alloc_traits.h:746:       _Destroy(__first, __last);
	.loc 16 746 15
	movq	24(%rbp), %rax	 # __last, tmp82
	movq	%rax, %rdx	 # tmp82,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZSt8_DestroyIPiEvT_S1_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\alloc_traits.h:747:     }
	.loc 16 747 5
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI580:
	ret	
.LFE5319:
	.seh_endproc
	.section .rdata,"dr"
.LC25:
	.ascii "vector::reserve\0"
	.section	.text$_ZNSt6vectorIbSaIbEE7reserveEy,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorIbSaIbEE7reserveEy
	.def	_ZNSt6vectorIbSaIbEE7reserveEy;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorIbSaIbEE7reserveEy
_ZNSt6vectorIbSaIbEE7reserveEy:
.LFB5320:
	.loc 8 934 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI581:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI582:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __n, __n
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:936: 	if (__n > max_size())
	.loc 8 936 20
	movq	16(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIbSaIbEE8max_sizeEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:936: 	if (__n > max_size())
	.loc 8 936 10
	cmpq	%rax, 24(%rbp)	 # _1, __n
	seta	%al	 #, retval.12_8
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:936: 	if (__n > max_size())
	.loc 8 936 2
	testb	%al, %al	 # retval.12_8
	je	.L373	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:937: 	  __throw_length_error(__N("vector::reserve"));
	.loc 8 937 24
	leaq	.LC25(%rip), %rax	 #, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZSt20__throw_length_errorPKc	 #
.L373:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:938: 	if (capacity() < __n)
	.loc 8 938 14
	movq	16(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIbSaIbEE8capacityEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:938: 	if (capacity() < __n)
	.loc 8 938 17
	cmpq	%rax, 24(%rbp)	 # _2, __n
	seta	%al	 #, retval.13_10
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:938: 	if (capacity() < __n)
	.loc 8 938 2
	testb	%al, %al	 # retval.13_10
	je	.L375	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:939: 	  _M_reallocate(__n);
	.loc 8 939 17
	movq	24(%rbp), %rax	 # __n, tmp87
	movq	%rax, %rdx	 # tmp87,
	movq	16(%rbp), %rcx	 # this,
	call	_ZNSt6vectorIbSaIbEE13_M_reallocateEy	 #
.L375:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:940:       }
	.loc 8 940 7
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI583:
	ret	
.LFE5320:
	.seh_endproc
	.section	.text$_ZNSt6vectorIbSaIbEE6resizeEyb,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorIbSaIbEE6resizeEyb
	.def	_ZNSt6vectorIbSaIbEE6resizeEyb;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorIbSaIbEE6resizeEyb
_ZNSt6vectorIbSaIbEE6resizeEyb:
.LFB5321:
	.loc 8 1078 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI584:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI585:
	subq	$152, %rsp	 #,
	.seh_stackalloc	152
.LCFI586:
	leaq	144(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 144
.LCFI587:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __new_size, __new_size
	movl	%r8d, %eax	 # __x, tmp87
	movb	%al, 48(%rbp)	 # tmp88, __x
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1080: 	if (__new_size < size())
	.loc 8 1080 23
	movq	32(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIbSaIbEE4sizeEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1080: 	if (__new_size < size())
	.loc 8 1080 17
	cmpq	%rax, 40(%rbp)	 # _1, __new_size
	setb	%al	 #, retval.23_10
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1080: 	if (__new_size < size())
	.loc 8 1080 2
	testb	%al, %al	 # retval.23_10
	je	.L377	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1081: 	  _M_erase_at_end(begin() + difference_type(__new_size));
	.loc 8 1081 19
	movq	40(%rbp), %rbx	 # __new_size, __new_size.24_2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1081: 	  _M_erase_at_end(begin() + difference_type(__new_size));
	.loc 8 1081 25
	leaq	-80(%rbp), %rax	 #, tmp89
	movq	32(%rbp), %rdx	 # this,
	movq	%rax, %rcx	 # tmp89,
	call	_ZNSt6vectorIbSaIbEE5beginEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1081: 	  _M_erase_at_end(begin() + difference_type(__new_size));
	.loc 8 1081 19
	leaq	-64(%rbp), %rax	 #, tmp90
	leaq	-80(%rbp), %rdx	 #, tmp91
	movq	%rbx, %r8	 # __new_size.24_2,
	movq	%rax, %rcx	 # tmp90,
	call	_ZStplRKSt13_Bit_iteratorx	 #
	movq	-64(%rbp), %rax	 # D.127551, tmp92
	movq	-56(%rbp), %rdx	 # D.127551,
	movq	%rax, -96(%rbp)	 # tmp92,
	movq	%rdx, -88(%rbp)	 #,
	leaq	-96(%rbp), %rax	 #, tmp93
	movq	%rax, %rdx	 # tmp93,
	movq	32(%rbp), %rcx	 # this,
	call	_ZNSt6vectorIbSaIbEE15_M_erase_at_endESt13_Bit_iterator	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1084:       }
	.loc 8 1084 7
	jmp	.L379	 #
.L377:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1083: 	  insert(end(), __new_size - size(), __x);
	.loc 8 1083 35
	movq	32(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIbSaIbEE4sizeEv	 #
	movq	%rax, %rdx	 #, _3
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1083: 	  insert(end(), __new_size - size(), __x);
	.loc 8 1083 10
	movq	40(%rbp), %rax	 # __new_size, tmp94
	subq	%rdx, %rax	 # _3, tmp94
	movq	%rax, %rbx	 # tmp94, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1083: 	  insert(end(), __new_size - size(), __x);
	.loc 8 1083 14
	leaq	-16(%rbp), %rax	 #, tmp95
	movq	32(%rbp), %rdx	 # this,
	movq	%rax, %rcx	 # tmp95,
	call	_ZNSt6vectorIbSaIbEE3endEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1083: 	  insert(end(), __new_size - size(), __x);
	.loc 8 1083 10
	leaq	-16(%rbp), %rdx	 #, tmp96
	leaq	-32(%rbp), %rax	 #, tmp97
	movq	%rax, %rcx	 # tmp97,
	call	_ZNSt19_Bit_const_iteratorC1ERKSt13_Bit_iterator	 #
	leaq	-48(%rbp), %rcx	 #, tmp98
	movq	-32(%rbp), %rax	 # D.116713, tmp99
	movq	-24(%rbp), %rdx	 # D.116713,
	movq	%rax, -96(%rbp)	 # tmp99,
	movq	%rdx, -88(%rbp)	 #,
	leaq	-96(%rbp), %rdx	 #, tmp100
	leaq	48(%rbp), %rax	 #, tmp101
	movq	%rax, 32(%rsp)	 # tmp101,
	movq	%rbx, %r9	 # _4,
	movq	%rdx, %r8	 # tmp100,
	movq	32(%rbp), %rdx	 # this,
	call	_ZNSt6vectorIbSaIbEE6insertESt19_Bit_const_iteratoryRKb	 #
.L379:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1084:       }
	.loc 8 1084 7
	nop	
	addq	$152, %rsp	 #,
	popq	%rbx	 #
.LCFI588:
	popq	%rbp	 #
.LCFI589:
	ret	
.LFE5321:
	.seh_endproc
	.section	.text$_ZNSt6vectorIiSaIiEE7reserveEy,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorIiSaIiEE7reserveEy
	.def	_ZNSt6vectorIiSaIiEE7reserveEy;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorIiSaIiEE7reserveEy
_ZNSt6vectorIiSaIiEE7reserveEy:
.LFB5322:
	.loc 14 66 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI590:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI591:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __n, __n
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:69:       if (__n > this->max_size())
	.loc 14 69 31
	movq	16(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIiSaIiEE8max_sizeEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:69:       if (__n > this->max_size())
	.loc 14 69 15
	cmpq	%rax, 24(%rbp)	 # _1, __n
	seta	%al	 #, retval.39_25
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:69:       if (__n > this->max_size())
	.loc 14 69 7
	testb	%al, %al	 # retval.39_25
	je	.L381	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:70: 	__throw_length_error(__N("vector::reserve"));
	.loc 14 70 22
	leaq	.LC25(%rip), %rax	 #, tmp104
	movq	%rax, %rcx	 # tmp104,
	call	_ZSt20__throw_length_errorPKc	 #
.L381:
.LBB89:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:71:       if (this->capacity() < __n)
	.loc 14 71 25
	movq	16(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIiSaIiEE8capacityEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:71:       if (this->capacity() < __n)
	.loc 14 71 28
	cmpq	%rax, 24(%rbp)	 # _2, __n
	seta	%al	 #, retval.40_27
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:71:       if (this->capacity() < __n)
	.loc 14 71 7
	testb	%al, %al	 # retval.40_27
	je	.L383	 #,
.LBB90:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:73: 	  const size_type __old_size = size();
	.loc 14 73 37
	movq	16(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIiSaIiEE4sizeEv	 #
	movq	%rax, -8(%rbp)	 # tmp105, __old_size
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:78: 	      __tmp = this->_M_allocate(__n);
	.loc 14 78 33
	movq	16(%rbp), %rax	 # this, _3
	movq	24(%rbp), %rdx	 # __n, tmp106
	movq	%rax, %rcx	 # _3,
	call	_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEy	 #
	movq	%rax, -16(%rbp)	 # _31, __tmp
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:80: 			  __tmp, _M_get_Tp_allocator());
	.loc 14 80 32
	movq	16(%rbp), %rax	 # this, _4
	movq	%rax, %rcx	 # _4,
	call	_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv	 #
	movq	%rax, %rcx	 #, _5
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:79: 	      _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
	.loc 14 79 19
	movq	16(%rbp), %rax	 # this, tmp107
	movq	8(%rax), %rdx	 # this_22(D)->D.106011._M_impl.D.105361._M_finish, _6
	movq	16(%rbp), %rax	 # this, tmp108
	movq	(%rax), %rax	 # this_22(D)->D.106011._M_impl.D.105361._M_start, _7
	movq	-16(%rbp), %r8	 # __tmp, tmp109
	movq	%rcx, %r9	 # _5,
	movq	%rax, %rcx	 # _7,
	call	_ZNSt6vectorIiSaIiEE11_S_relocateEPiS2_S2_RS0_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:92: 	  _M_deallocate(this->_M_impl._M_start,
	.loc 14 92 17
	movq	16(%rbp), %rax	 # this, _8
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:93: 			this->_M_impl._M_end_of_storage
	.loc 14 93 18
	movq	16(%rbp), %rdx	 # this, tmp110
	movq	16(%rdx), %rcx	 # this_22(D)->D.106011._M_impl.D.105361._M_end_of_storage, _9
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:94: 			- this->_M_impl._M_start);
	.loc 14 94 20
	movq	16(%rbp), %rdx	 # this, tmp111
	movq	(%rdx), %r8	 # this_22(D)->D.106011._M_impl.D.105361._M_start, _10
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:94: 			- this->_M_impl._M_start);
	.loc 14 94 4
	subq	%r8, %rcx	 # _10, _9
	movq	%rcx, %rdx	 # _9, _11
	sarq	$2, %rdx	 #, tmp112
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:92: 	  _M_deallocate(this->_M_impl._M_start,
	.loc 14 92 17
	movq	%rdx, %rcx	 # _12, _13
	movq	16(%rbp), %rdx	 # this, tmp113
	movq	(%rdx), %rdx	 # this_22(D)->D.106011._M_impl.D.105361._M_start, _14
	movq	%rcx, %r8	 # _13,
	movq	%rax, %rcx	 # _8,
	call	_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPiy	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:95: 	  this->_M_impl._M_start = __tmp;
	.loc 14 95 27
	movq	16(%rbp), %rax	 # this, tmp114
	movq	-16(%rbp), %rdx	 # __tmp, tmp115
	movq	%rdx, (%rax)	 # tmp115, this_22(D)->D.106011._M_impl.D.105361._M_start
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:96: 	  this->_M_impl._M_finish = __tmp + __old_size;
	.loc 14 96 36
	movq	-8(%rbp), %rax	 # __old_size, tmp116
	leaq	0(,%rax,4), %rdx	 #, _15
	movq	-16(%rbp), %rax	 # __tmp, tmp117
	addq	%rax, %rdx	 # tmp117, _16
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:96: 	  this->_M_impl._M_finish = __tmp + __old_size;
	.loc 14 96 28
	movq	16(%rbp), %rax	 # this, tmp118
	movq	%rdx, 8(%rax)	 # _16, this_22(D)->D.106011._M_impl.D.105361._M_finish
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:97: 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	.loc 14 97 52
	movq	16(%rbp), %rax	 # this, tmp119
	movq	(%rax), %rdx	 # this_22(D)->D.106011._M_impl.D.105361._M_start, _17
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:97: 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	.loc 14 97 61
	movq	24(%rbp), %rax	 # __n, tmp120
	salq	$2, %rax	 #, _18
	addq	%rax, %rdx	 # _18, _19
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:97: 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	.loc 14 97 36
	movq	16(%rbp), %rax	 # this, tmp121
	movq	%rdx, 16(%rax)	 # _19, this_22(D)->D.106011._M_impl.D.105361._M_end_of_storage
.L383:
.LBE90:
.LBE89:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:99:     }
	.loc 14 99 5
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI592:
	ret	
.LFE5322:
	.seh_endproc
	.section	.text$_ZNSt6vectorIiSaIiEE6resizeEy,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorIiSaIiEE6resizeEy
	.def	_ZNSt6vectorIiSaIiEE6resizeEy;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorIiSaIiEE6resizeEy
_ZNSt6vectorIiSaIiEE6resizeEy:
.LFB5327:
	.loc 11 937 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI593:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI594:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __new_size, __new_size
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:939: 	if (__new_size > size())
	.loc 11 939 23
	movq	16(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIiSaIiEE4sizeEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:939: 	if (__new_size > size())
	.loc 11 939 17
	cmpq	%rax, 24(%rbp)	 # _1, __new_size
	seta	%al	 #, retval.46_13
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:939: 	if (__new_size > size())
	.loc 11 939 2
	testb	%al, %al	 # retval.46_13
	je	.L385	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:940: 	  _M_default_append(__new_size - size());
	.loc 11 940 39
	movq	16(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIiSaIiEE4sizeEv	 #
	movq	%rax, %rdx	 #, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:940: 	  _M_default_append(__new_size - size());
	.loc 11 940 21
	movq	24(%rbp), %rax	 # __new_size, tmp91
	subq	%rdx, %rax	 # _2, _3
	movq	%rax, %rdx	 # _3,
	movq	16(%rbp), %rcx	 # this,
	call	_ZNSt6vectorIiSaIiEE17_M_default_appendEy	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:943:       }
	.loc 11 943 7
	jmp	.L387	 #
.L385:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:941: 	else if (__new_size < size())
	.loc 11 941 28
	movq	16(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIiSaIiEE4sizeEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:941: 	else if (__new_size < size())
	.loc 11 941 22
	cmpq	%rax, 24(%rbp)	 # _4, __new_size
	setb	%al	 #, retval.47_15
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:941: 	else if (__new_size < size())
	.loc 11 941 7
	testb	%al, %al	 # retval.47_15
	je	.L387	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:942: 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
	.loc 11 942 34
	movq	16(%rbp), %rax	 # this, tmp92
	movq	(%rax), %rdx	 # this_10(D)->D.106011._M_impl.D.105361._M_start, _5
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:942: 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
	.loc 11 942 43
	movq	24(%rbp), %rax	 # __new_size, tmp93
	salq	$2, %rax	 #, _6
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:942: 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
	.loc 11 942 19
	addq	%rdx, %rax	 # _5, _7
	movq	%rax, %rdx	 # _7,
	movq	16(%rbp), %rcx	 # this,
	call	_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi	 #
.L387:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:943:       }
	.loc 11 943 7
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI595:
	ret	
.LFE5327:
	.seh_endproc
	.section	.text$_ZNSt6vectorIbSaIbEEixEy,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorIbSaIbEEixEy
	.def	_ZNSt6vectorIbSaIbEEixEy;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorIbSaIbEEixEy
_ZNSt6vectorIbSaIbEEixEy:
.LFB5328:
	.loc 8 906 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI596:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI597:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, 24(%rbp)	 # this, this
	movq	%r8, 32(%rbp)	 # __n, __n
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:907:       { return begin()[__n]; }
	.loc 8 907 21
	leaq	-16(%rbp), %rax	 #, tmp83
	movq	24(%rbp), %rdx	 # this, tmp84
	movq	%rax, %rcx	 # tmp83,
	call	_ZNSt6vectorIbSaIbEE5beginEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:907:       { return begin()[__n]; }
	.loc 8 907 23
	movq	32(%rbp), %rcx	 # __n, __n.7_1
	movq	16(%rbp), %rax	 # .result_ptr, tmp85
	leaq	-16(%rbp), %rdx	 #, tmp86
	movq	%rcx, %r8	 # __n.7_1,
	movq	%rax, %rcx	 # tmp85,
	call	_ZNKSt13_Bit_iteratorixEx	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:907:       { return begin()[__n]; }
	.loc 8 907 27
	nop	
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:907:       { return begin()[__n]; }
	.loc 8 907 30
	movq	16(%rbp), %rax	 # .result_ptr,
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI598:
	ret	
.LFE5328:
	.seh_endproc
	.section	.text$_ZNSt6vectorIiSaIiEEixEy,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorIiSaIiEEixEy
	.def	_ZNSt6vectorIiSaIiEEixEy;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorIiSaIiEEixEy
_ZNSt6vectorIiSaIiEEixEy:
.LFB5329:
	.loc 11 1043 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI599:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI600:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __n, __n
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1046: 	return *(this->_M_impl._M_start + __n);
	.loc 11 1046 25
	movq	16(%rbp), %rax	 # this, tmp86
	movq	(%rax), %rdx	 # this_4(D)->D.106011._M_impl.D.105361._M_start, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1046: 	return *(this->_M_impl._M_start + __n);
	.loc 11 1046 34
	movq	24(%rbp), %rax	 # __n, tmp87
	salq	$2, %rax	 #, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1046: 	return *(this->_M_impl._M_start + __n);
	.loc 11 1046 39
	addq	%rdx, %rax	 # _1, _6
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1047:       }
	.loc 11 1047 7
	popq	%rbp	 #
.LCFI601:
	ret	
.LFE5329:
	.seh_endproc
	.section	.text$_ZNKSt6vectorIbSaIbEEixEy,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt6vectorIbSaIbEEixEy
	.def	_ZNKSt6vectorIbSaIbEEixEy;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt6vectorIbSaIbEEixEy
_ZNKSt6vectorIbSaIbEEixEy:
.LFB5330:
	.loc 8 910 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI602:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI603:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __n, __n
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:911:       { return begin()[__n]; }
	.loc 8 911 21
	leaq	-16(%rbp), %rax	 #, tmp85
	movq	16(%rbp), %rdx	 # this,
	movq	%rax, %rcx	 # tmp85,
	call	_ZNKSt6vectorIbSaIbEE5beginEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:911:       { return begin()[__n]; }
	.loc 8 911 23
	movq	24(%rbp), %rdx	 # __n, __n.6_1
	leaq	-16(%rbp), %rax	 #, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZNKSt19_Bit_const_iteratorixEx	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:911:       { return begin()[__n]; }
	.loc 8 911 30
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI604:
	ret	
.LFE5330:
	.seh_endproc
	.section	.text$_ZNSaIN3DDT4NodeEEC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSaIN3DDT4NodeEEC2Ev
	.def	_ZNSaIN3DDT4NodeEEC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSaIN3DDT4NodeEEC2Ev
_ZNSaIN3DDT4NodeEEC2Ev:
.LFB5332:
	.loc 12 168 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI605:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI606:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB91:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:168:       allocator() _GLIBCXX_NOTHROW { }
	.loc 12 168 36
	movq	16(%rbp), %rcx	 # this,
	call	_ZN9__gnu_cxx13new_allocatorIN3DDT4NodeEEC2Ev	 #
.LBE91:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:168:       allocator() _GLIBCXX_NOTHROW { }
	.loc 12 168 38
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI607:
	ret	
.LFE5332:
	.seh_endproc
	.section	.text$_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE17_Vector_impl_dataC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE17_Vector_impl_dataC2Ev
	.def	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE17_Vector_impl_dataC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE17_Vector_impl_dataC2Ev
_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE17_Vector_impl_dataC2Ev:
.LFB5335:
	.loc 11 97 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI608:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI609:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB92:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:98: 	: _M_start(), _M_finish(), _M_end_of_storage()
	.loc 11 98 4
	movq	16(%rbp), %rax	 # this, tmp82
	movq	$0, (%rax)	 #, this_2(D)->_M_start
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:98: 	: _M_start(), _M_finish(), _M_end_of_storage()
	.loc 11 98 16
	movq	16(%rbp), %rax	 # this, tmp83
	movq	$0, 8(%rax)	 #, this_2(D)->_M_finish
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:98: 	: _M_start(), _M_finish(), _M_end_of_storage()
	.loc 11 98 29
	movq	16(%rbp), %rax	 # this, tmp84
	movq	$0, 16(%rax)	 #, this_2(D)->_M_end_of_storage
.LBE92:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:99: 	{ }
	.loc 11 99 4
	nop	
	popq	%rbp	 #
.LCFI610:
	ret	
.LFE5335:
	.seh_endproc
	.section	.text$_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE13_M_deallocateEPS1_y,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE13_M_deallocateEPS1_y
	.def	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE13_M_deallocateEPS1_y;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE13_M_deallocateEPS1_y
_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE13_M_deallocateEPS1_y:
.LFB5337:
	.loc 11 350 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI611:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI612:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __p, __p
	movq	%r8, 32(%rbp)	 # __n, __n
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:353: 	if (__p)
	.loc 11 353 2
	cmpq	$0, 24(%rbp)	 #, __p
	je	.L398	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:354: 	  _Tr::deallocate(_M_impl, __p, __n);
	.loc 11 354 20
	movq	16(%rbp), %rax	 # this, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:354: 	  _Tr::deallocate(_M_impl, __p, __n);
	.loc 11 354 19
	movq	32(%rbp), %rcx	 # __n, tmp83
	movq	24(%rbp), %rdx	 # __p, tmp84
	movq	%rcx, %r8	 # tmp83,
	movq	%rax, %rcx	 # _1,
	call	_ZNSt16allocator_traitsISaIN3DDT4NodeEEE10deallocateERS2_PS1_y	 #
.L398:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:355:       }
	.loc 11 355 7
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI613:
	ret	
.LFE5337:
	.seh_endproc
	.section	.text$_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE19_M_get_Tp_allocatorEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE19_M_get_Tp_allocatorEv
	.def	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE19_M_get_Tp_allocatorEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE19_M_get_Tp_allocatorEv
_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE19_M_get_Tp_allocatorEv:
.LFB5338:
	.loc 11 276 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI614:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI615:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:277:       { return this->_M_impl; }
	.loc 11 277 22
	movq	16(%rbp), %rax	 # this, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:277:       { return this->_M_impl; }
	.loc 11 277 31
	popq	%rbp	 #
.LCFI616:
	ret	
.LFE5338:
	.seh_endproc
	.section	.text$_ZSt8_DestroyIPN3DDT4NodeES1_EvT_S3_RSaIT0_E,"x"
	.linkonce discard
	.globl	_ZSt8_DestroyIPN3DDT4NodeES1_EvT_S3_RSaIT0_E
	.def	_ZSt8_DestroyIPN3DDT4NodeES1_EvT_S3_RSaIT0_E;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt8_DestroyIPN3DDT4NodeES1_EvT_S3_RSaIT0_E
_ZSt8_DestroyIPN3DDT4NodeES1_EvT_S3_RSaIT0_E:
.LFB5339:
	.loc 16 743 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI617:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI618:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # D.117196, D.117196
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\alloc_traits.h:746:       _Destroy(__first, __last);
	.loc 16 746 15
	movq	24(%rbp), %rax	 # __last, tmp82
	movq	%rax, %rdx	 # tmp82,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZSt8_DestroyIPN3DDT4NodeEEvT_S3_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\alloc_traits.h:747:     }
	.loc 16 747 5
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI619:
	ret	
.LFE5339:
	.seh_endproc
	.section	.text$_ZSt4moveIRN3DDT4NodeEEONSt16remove_referenceIT_E4typeEOS4_,"x"
	.linkonce discard
	.globl	_ZSt4moveIRN3DDT4NodeEEONSt16remove_referenceIT_E4typeEOS4_
	.def	_ZSt4moveIRN3DDT4NodeEEONSt16remove_referenceIT_E4typeEOS4_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt4moveIRN3DDT4NodeEEONSt16remove_referenceIT_E4typeEOS4_
_ZSt4moveIRN3DDT4NodeEEONSt16remove_referenceIT_E4typeEOS4_:
.LFB5340:
	.file 17 "c:/users/pluto/scoop/apps/gcc/current/include/c++/11.2.0/bits/move.h"
	.loc 17 104 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI620:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI621:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\move.h:105:     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
	.loc 17 105 74
	movq	16(%rbp), %rax	 # __t, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\move.h:105:     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
	.loc 17 105 77
	popq	%rbp	 #
.LCFI622:
	ret	
.LFE5340:
	.seh_endproc
	.section	.text$_ZNSt6vectorIN3DDT4NodeESaIS1_EE12emplace_backIJS1_EEERS1_DpOT_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorIN3DDT4NodeESaIS1_EE12emplace_backIJS1_EEERS1_DpOT_
	.def	_ZNSt6vectorIN3DDT4NodeESaIS1_EE12emplace_backIJS1_EEERS1_DpOT_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorIN3DDT4NodeESaIS1_EE12emplace_backIJS1_EEERS1_DpOT_
_ZNSt6vectorIN3DDT4NodeESaIS1_EE12emplace_backIJS1_EEERS1_DpOT_:
.LFB5341:
	.loc 14 109 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI623:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI624:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI625:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI626:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __args#0, __args#0
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:112: 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
	.loc 14 112 20
	movq	32(%rbp), %rax	 # this, tmp93
	movq	8(%rax), %rdx	 # this_11(D)->D.105007._M_impl.D.104320._M_finish, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:112: 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
	.loc 14 112 47
	movq	32(%rbp), %rax	 # this, tmp94
	movq	16(%rax), %rax	 # this_11(D)->D.105007._M_impl.D.104320._M_end_of_storage, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:112: 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
	.loc 14 112 2
	cmpq	%rax, %rdx	 # _2, _1
	je	.L405	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:115: 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
	.loc 14 115 30
	movq	40(%rbp), %rax	 # __args#0, tmp95
	movq	%rax, %rcx	 # tmp95,
	call	_ZSt7forwardIN3DDT4NodeEEOT_RNSt16remove_referenceIS2_E4typeE	 #
	movq	%rax, %rcx	 #, _3
	movq	32(%rbp), %rax	 # this, tmp96
	movq	8(%rax), %rdx	 # this_11(D)->D.105007._M_impl.D.104320._M_finish, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:115: 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
	.loc 14 115 37
	movq	32(%rbp), %rax	 # this, _5
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:115: 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
	.loc 14 115 30
	movq	%rcx, %r8	 # _3,
	movq	%rax, %rcx	 # _5,
	call	_ZNSt16allocator_traitsISaIN3DDT4NodeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:117: 	    ++this->_M_impl._M_finish;
	.loc 14 117 22
	movq	32(%rbp), %rax	 # this, tmp97
	movq	8(%rax), %rax	 # this_11(D)->D.105007._M_impl.D.104320._M_finish, _6
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:117: 	    ++this->_M_impl._M_finish;
	.loc 14 117 6
	leaq	72(%rax), %rdx	 #, _7
	movq	32(%rbp), %rax	 # this, tmp98
	movq	%rdx, 8(%rax)	 # _7, this_11(D)->D.105007._M_impl.D.104320._M_finish
	jmp	.L406	 #
.L405:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:121: 	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
	.loc 14 121 21
	movq	40(%rbp), %rax	 # __args#0, tmp99
	movq	%rax, %rcx	 # tmp99,
	call	_ZSt7forwardIN3DDT4NodeEEOT_RNSt16remove_referenceIS2_E4typeE	 #
	movq	%rax, %rbx	 #, _8
	movq	32(%rbp), %rcx	 # this,
	call	_ZNSt6vectorIN3DDT4NodeESaIS1_EE3endEv	 #
	movq	%rbx, %r8	 # _8,
	movq	%rax, %rdx	 # D.127810,
	movq	32(%rbp), %rcx	 # this,
	call	_ZNSt6vectorIN3DDT4NodeESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_	 #
.L406:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:123: 	return back();
	.loc 14 123 13
	movq	32(%rbp), %rcx	 # this,
	call	_ZNSt6vectorIN3DDT4NodeESaIS1_EE4backEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:125:       }
	.loc 14 125 7
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI627:
	popq	%rbp	 #
.LCFI628:
	ret	
.LFE5341:
	.seh_endproc
	.section	.text$_ZNKSt12_Vector_baseIN3DDT4NodeESaIS1_EE19_M_get_Tp_allocatorEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt12_Vector_baseIN3DDT4NodeESaIS1_EE19_M_get_Tp_allocatorEv
	.def	_ZNKSt12_Vector_baseIN3DDT4NodeESaIS1_EE19_M_get_Tp_allocatorEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt12_Vector_baseIN3DDT4NodeESaIS1_EE19_M_get_Tp_allocatorEv
_ZNKSt12_Vector_baseIN3DDT4NodeESaIS1_EE19_M_get_Tp_allocatorEv:
.LFB5343:
	.loc 11 280 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI629:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI630:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:281:       { return this->_M_impl; }
	.loc 11 281 22
	movq	16(%rbp), %rax	 # this, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:281:       { return this->_M_impl; }
	.loc 11 281 31
	popq	%rbp	 #
.LCFI631:
	ret	
.LFE5343:
	.seh_endproc
	.section	.text$_ZNSt6vectorIN3DDT4NodeESaIS1_EE5clearEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorIN3DDT4NodeESaIS1_EE5clearEv
	.def	_ZNSt6vectorIN3DDT4NodeESaIS1_EE5clearEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorIN3DDT4NodeESaIS1_EE5clearEv
_ZNSt6vectorIN3DDT4NodeESaIS1_EE5clearEv:
.LFB5344:
	.loc 11 1498 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI632:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI633:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1499:       { _M_erase_at_end(this->_M_impl._M_start); }
	.loc 11 1499 24
	movq	16(%rbp), %rax	 # this, tmp83
	movq	(%rax), %rax	 # this_3(D)->D.105007._M_impl.D.104320._M_start, _1
	movq	%rax, %rdx	 # _1,
	movq	16(%rbp), %rcx	 # this,
	call	_ZNSt6vectorIN3DDT4NodeESaIS1_EE15_M_erase_at_endEPS1_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1499:       { _M_erase_at_end(this->_M_impl._M_start); }
	.loc 11 1499 50
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI634:
	ret	
.LFE5344:
	.seh_endproc
	.section	.text$_ZSt15__alloc_on_copyISaIN3DDT4NodeEEEvRT_RKS3_,"x"
	.linkonce discard
	.globl	_ZSt15__alloc_on_copyISaIN3DDT4NodeEEEvRT_RKS3_
	.def	_ZSt15__alloc_on_copyISaIN3DDT4NodeEEEvRT_RKS3_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt15__alloc_on_copyISaIN3DDT4NodeEEEvRT_RKS3_
_ZSt15__alloc_on_copyISaIN3DDT4NodeEEEvRT_RKS3_:
.LFB5345:
	.loc 16 576 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI635:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI636:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __one, __one
	movq	%rdx, 24(%rbp)	 # __two, __two
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\alloc_traits.h:586:     }
	.loc 16 586 5
	nop	
	popq	%rbp	 #
.LCFI637:
	ret	
.LFE5345:
	.seh_endproc
	.section	.text$_ZNKSt6vectorIN3DDT4NodeESaIS1_EE8capacityEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt6vectorIN3DDT4NodeESaIS1_EE8capacityEv
	.def	_ZNKSt6vectorIN3DDT4NodeESaIS1_EE8capacityEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt6vectorIN3DDT4NodeESaIS1_EE8capacityEv
_ZNKSt6vectorIN3DDT4NodeESaIS1_EE8capacityEv:
.LFB5346:
	.loc 11 998 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI638:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI639:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:999:       { return size_type(this->_M_impl._M_end_of_storage
	.loc 11 999 40
	movq	16(%rbp), %rax	 # this, tmp88
	movq	16(%rax), %rdx	 # this_6(D)->D.105007._M_impl.D.104320._M_end_of_storage, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1000: 			 - this->_M_impl._M_start); }
	.loc 11 1000 21
	movq	16(%rbp), %rax	 # this, tmp89
	movq	(%rax), %rcx	 # this_6(D)->D.105007._M_impl.D.104320._M_start, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1000: 			 - this->_M_impl._M_start); }
	.loc 11 1000 5
	movq	%rdx, %rax	 # _1, _1
	subq	%rcx, %rax	 # _2, _1
	sarq	$3, %rax	 #, _3
	movq	%rax, %rdx	 # _3, tmp90
	movabsq	$-8198552921648689607, %rax	 #, tmp92
	imulq	%rdx, %rax	 # tmp90, tmp91
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1000: 			 - this->_M_impl._M_start); }
	.loc 11 1000 32
	popq	%rbp	 #
.LCFI640:
	ret	
.LFE5346:
	.seh_endproc
	.section	.text$_ZNKSt6vectorIN3DDT4NodeESaIS1_EE5beginEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt6vectorIN3DDT4NodeESaIS1_EE5beginEv
	.def	_ZNKSt6vectorIN3DDT4NodeESaIS1_EE5beginEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt6vectorIN3DDT4NodeESaIS1_EE5beginEv
_ZNKSt6vectorIN3DDT4NodeESaIS1_EE5beginEv:
.LFB5347:
	.loc 11 820 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI641:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI642:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:821:       { return const_iterator(this->_M_impl._M_start); }
	.loc 11 821 45
	movq	16(%rbp), %rdx	 # this, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:821:       { return const_iterator(this->_M_impl._M_start); }
	.loc 11 821 16
	leaq	-8(%rbp), %rax	 #, tmp85
	movq	%rax, %rcx	 # tmp85,
	call	_ZN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS2_SaIS2_EEEC1ERKS4_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:821:       { return const_iterator(this->_M_impl._M_start); }
	.loc 11 821 53
	movq	-8(%rbp), %rax	 # D.117376, D.128204
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:821:       { return const_iterator(this->_M_impl._M_start); }
	.loc 11 821 56
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI643:
	ret	
.LFE5347:
	.seh_endproc
	.section	.text$_ZNKSt6vectorIN3DDT4NodeESaIS1_EE3endEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt6vectorIN3DDT4NodeESaIS1_EE3endEv
	.def	_ZNKSt6vectorIN3DDT4NodeESaIS1_EE3endEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt6vectorIN3DDT4NodeESaIS1_EE3endEv
_ZNKSt6vectorIN3DDT4NodeESaIS1_EE3endEv:
.LFB5348:
	.loc 11 838 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI644:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI645:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:839:       { return const_iterator(this->_M_impl._M_finish); }
	.loc 11 839 45
	movq	16(%rbp), %rax	 # this, tmp85
	leaq	8(%rax), %rdx	 #, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:839:       { return const_iterator(this->_M_impl._M_finish); }
	.loc 11 839 16
	leaq	-8(%rbp), %rax	 #, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS2_SaIS2_EEEC1ERKS4_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:839:       { return const_iterator(this->_M_impl._M_finish); }
	.loc 11 839 54
	movq	-8(%rbp), %rax	 # D.117378, D.128201
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:839:       { return const_iterator(this->_M_impl._M_finish); }
	.loc 11 839 57
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI646:
	ret	
.LFE5348:
	.seh_endproc
	.section	.text$_ZNSt6vectorIN3DDT4NodeESaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_yT_SB_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorIN3DDT4NodeESaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_yT_SB_
	.def	_ZNSt6vectorIN3DDT4NodeESaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_yT_SB_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorIN3DDT4NodeESaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_yT_SB_
_ZNSt6vectorIN3DDT4NodeESaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_yT_SB_:
.LFB5349:
	.loc 11 1508 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI647:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI648:
	subq	$56, %rsp	 #,
	.seh_stackalloc	56
.LCFI649:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI650:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __n, __n
	movq	%r8, 48(%rbp)	 # __first, __first
	movq	%r9, 56(%rbp)	 # __last, __last
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1511: 	  pointer __result = this->_M_allocate(__n);
	.loc 11 1511 40
	movq	32(%rbp), %rax	 # this, _1
	movq	40(%rbp), %rdx	 # __n, tmp91
	movq	%rax, %rcx	 # _1,
.LEHB16:
	call	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE11_M_allocateEy	 #
.LEHE16:
	movq	%rax, -8(%rbp)	 # _11, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1515: 					  _M_get_Tp_allocator());
	.loc 11 1515 27
	movq	32(%rbp), %rax	 # this, _2
	movq	%rax, %rcx	 # _2,
	call	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE19_M_get_Tp_allocatorEv	 #
	movq	%rax, %rcx	 #, _3
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1514: 	      std::__uninitialized_copy_a(__first, __last, __result,
	.loc 11 1514 35
	movq	-8(%rbp), %r8	 # __result, tmp92
	movq	56(%rbp), %rdx	 # __last, tmp93
	movq	48(%rbp), %rax	 # __first, tmp94
	movq	%rcx, %r9	 # _3,
	movq	%rax, %rcx	 # tmp94,
.LEHB17:
	call	_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E	 #
.LEHE17:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1516: 	      return __result;
	.loc 11 1516 15
	movq	-8(%rbp), %rax	 # __result, _15
	jmp	.L424	 #
.L422:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1518: 	  __catch(...)
	.loc 11 1518 4
	movq	%rax, %rcx	 # _4,
	call	__cxa_begin_catch	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1520: 	      _M_deallocate(__result, __n);
	.loc 11 1520 21
	movq	32(%rbp), %rax	 # this, _5
	movq	40(%rbp), %rcx	 # __n, tmp97
	movq	-8(%rbp), %rdx	 # __result, tmp98
	movq	%rcx, %r8	 # tmp97,
	movq	%rax, %rcx	 # _5,
.LEHB18:
	call	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE13_M_deallocateEPS1_y	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1521: 	      __throw_exception_again;
	.loc 11 1521 8
	call	__cxa_rethrow	 #
.LEHE18:
.L423:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1518: 	  __catch(...)
	.loc 11 1518 4
	movq	%rax, %rbx	 #, tmp99
	call	__cxa_end_catch	 #
	movq	%rbx, %rax	 # tmp99, D.129154
	movq	%rax, %rcx	 # D.129154,
.LEHB19:
	call	_Unwind_Resume	 #
.LEHE19:
.L424:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1523: 	}
	.loc 11 1523 2
	addq	$56, %rsp	 #,
	popq	%rbx	 #
.LCFI651:
	popq	%rbp	 #
.LCFI652:
	ret	
.LFE5349:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
	.align 4
.LLSDA5349:
	.byte	0xff
	.byte	0x9b
	.uleb128 .LLSDATT5349-.LLSDATTD5349
.LLSDATTD5349:
	.byte	0x1
	.uleb128 .LLSDACSE5349-.LLSDACSB5349
.LLSDACSB5349:
	.uleb128 .LEHB16-.LFB5349
	.uleb128 .LEHE16-.LEHB16
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB17-.LFB5349
	.uleb128 .LEHE17-.LEHB17
	.uleb128 .L422-.LFB5349
	.uleb128 0x1
	.uleb128 .LEHB18-.LFB5349
	.uleb128 .LEHE18-.LEHB18
	.uleb128 .L423-.LFB5349
	.uleb128 0
	.uleb128 .LEHB19-.LFB5349
	.uleb128 .LEHE19-.LEHB19
	.uleb128 0
	.uleb128 0
.LLSDACSE5349:
	.byte	0x1
	.byte	0
	.align 4
	.long	0

.LLSDATT5349:
	.section	.text$_ZNSt6vectorIN3DDT4NodeESaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_yT_SB_,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET0_T_SD_SC_,"x"
	.linkonce discard
	.globl	_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET0_T_SD_SC_
	.def	_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET0_T_SD_SC_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET0_T_SD_SC_
_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET0_T_SD_SC_:
.LFB5350:
	.loc 3 611 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI653:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI654:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI655:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI656:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __first, __first
	movq	%rdx, 40(%rbp)	 # __last, __last
	movq	%r8, 48(%rbp)	 # __result, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:620: 	     (std::__miter_base(__first), std::__miter_base(__last), __result);
	.loc 3 620 7
	movq	40(%rbp), %rax	 # __last, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS3_SaIS3_EEEEET_SA_	 #
	movq	%rax, %rbx	 #, D.128208
	movq	32(%rbp), %rcx	 # __first,
	call	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS3_SaIS3_EEEEET_SA_	 #
	movq	48(%rbp), %rdx	 # __result, tmp87
	movq	%rdx, %r8	 # tmp87,
	movq	%rbx, %rdx	 # D.128208,
	movq	%rax, %rcx	 # D.128209,
	call	_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET1_T0_SD_SC_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:621:     }
	.loc 3 621 5
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI657:
	popq	%rbp	 #
.LCFI658:
	ret	
.LFE5350:
	.seh_endproc
	.section	.text$_ZNSt6vectorIN3DDT4NodeESaIS1_EE3endEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorIN3DDT4NodeESaIS1_EE3endEv
	.def	_ZNSt6vectorIN3DDT4NodeESaIS1_EE3endEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorIN3DDT4NodeESaIS1_EE3endEv
_ZNSt6vectorIN3DDT4NodeESaIS1_EE3endEv:
.LFB5351:
	.loc 11 829 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI659:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI660:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:830:       { return iterator(this->_M_impl._M_finish); }
	.loc 11 830 39
	movq	16(%rbp), %rax	 # this, tmp85
	leaq	8(%rax), %rdx	 #, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:830:       { return iterator(this->_M_impl._M_finish); }
	.loc 11 830 16
	leaq	-8(%rbp), %rax	 #, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEC1ERKS3_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:830:       { return iterator(this->_M_impl._M_finish); }
	.loc 11 830 48
	movq	-8(%rbp), %rax	 # D.117463, D.128003
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:830:       { return iterator(this->_M_impl._M_finish); }
	.loc 11 830 51
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI661:
	ret	
.LFE5351:
	.seh_endproc
	.section	.text$_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS3_SaIS3_EEEES3_EvT_S9_RSaIT0_E,"x"
	.linkonce discard
	.globl	_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS3_SaIS3_EEEES3_EvT_S9_RSaIT0_E
	.def	_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS3_SaIS3_EEEES3_EvT_S9_RSaIT0_E;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS3_SaIS3_EEEES3_EvT_S9_RSaIT0_E
_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS3_SaIS3_EEEES3_EvT_S9_RSaIT0_E:
.LFB5352:
	.loc 16 743 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI662:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI663:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # D.117466, D.117466
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\alloc_traits.h:746:       _Destroy(__first, __last);
	.loc 16 746 15
	movq	24(%rbp), %rax	 # __last, tmp82
	movq	%rax, %rdx	 # tmp82,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS3_SaIS3_EEEEEvT_S9_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\alloc_traits.h:747:     }
	.loc 16 747 5
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI664:
	ret	
.LFE5352:
	.seh_endproc
	.section	.text$_ZSt12__miter_baseIPN3DDT4NodeEET_S3_,"x"
	.linkonce discard
	.globl	_ZSt12__miter_baseIPN3DDT4NodeEET_S3_
	.def	_ZSt12__miter_baseIPN3DDT4NodeEET_S3_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt12__miter_baseIPN3DDT4NodeEET_S3_
_ZSt12__miter_baseIPN3DDT4NodeEET_S3_:
.LFB5353:
	.file 18 "c:/users/pluto/scoop/apps/gcc/current/include/c++/11.2.0/bits/cpp_type_traits.h"
	.loc 18 560 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI665:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI666:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __it, __it
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\cpp_type_traits.h:561:     { return __it; }
	.loc 18 561 14
	movq	16(%rbp), %rax	 # __it, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\cpp_type_traits.h:561:     { return __it; }
	.loc 18 561 20
	popq	%rbp	 #
.LCFI667:
	ret	
.LFE5353:
	.seh_endproc
	.section	.text$_ZSt13__copy_move_aILb0EPN3DDT4NodeES2_ET1_T0_S4_S3_,"x"
	.linkonce discard
	.globl	_ZSt13__copy_move_aILb0EPN3DDT4NodeES2_ET1_T0_S4_S3_
	.def	_ZSt13__copy_move_aILb0EPN3DDT4NodeES2_ET1_T0_S4_S3_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt13__copy_move_aILb0EPN3DDT4NodeES2_ET1_T0_S4_S3_
_ZSt13__copy_move_aILb0EPN3DDT4NodeES2_ET1_T0_S4_S3_:
.LFB5354:
	.loc 3 527 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI668:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI669:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI670:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
.LCFI671:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI672:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __first, __first
	movq	%rdx, 40(%rbp)	 # __last, __last
	movq	%r8, 48(%rbp)	 # __result, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:529:       return std::__niter_wrap(__result,
	.loc 3 529 31
	movq	48(%rbp), %rax	 # __result, __result.91_1
	movq	%rax, %rcx	 # __result.91_1,
	call	_ZSt12__niter_baseIPN3DDT4NodeEET_S3_	 #
	movq	%rax, %rsi	 #, _2
	movq	40(%rbp), %rax	 # __last, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZSt12__niter_baseIPN3DDT4NodeEET_S3_	 #
	movq	%rax, %rbx	 #, _3
	movq	32(%rbp), %rcx	 # __first,
	call	_ZSt12__niter_baseIPN3DDT4NodeEET_S3_	 #
	movq	%rsi, %r8	 # _2,
	movq	%rbx, %rdx	 # _3,
	movq	%rax, %rcx	 # _4,
	call	_ZSt14__copy_move_a1ILb0EPN3DDT4NodeES2_ET1_T0_S4_S3_	 #
	movq	%rax, %rdx	 #, _5
	leaq	48(%rbp), %rax	 #, tmp90
	movq	%rax, %rcx	 # tmp90,
	call	_ZSt12__niter_wrapIPN3DDT4NodeEET_RKS3_S3_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:533:     }
	.loc 3 533 5
	addq	$32, %rsp	 #,
	popq	%rbx	 #
.LCFI673:
	popq	%rsi	 #
.LCFI674:
	popq	%rbp	 #
.LCFI675:
	ret	
.LFE5354:
	.seh_endproc
	.section	.text$_ZSt22__uninitialized_copy_aIPN3DDT4NodeES2_S1_ET0_T_S4_S3_RSaIT1_E,"x"
	.linkonce discard
	.globl	_ZSt22__uninitialized_copy_aIPN3DDT4NodeES2_S1_ET0_T_S4_S3_RSaIT1_E
	.def	_ZSt22__uninitialized_copy_aIPN3DDT4NodeES2_S1_ET0_T_S4_S3_RSaIT1_E;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt22__uninitialized_copy_aIPN3DDT4NodeES2_S1_ET0_T_S4_S3_RSaIT1_E
_ZSt22__uninitialized_copy_aIPN3DDT4NodeES2_S1_ET0_T_S4_S3_RSaIT1_E:
.LFB5356:
	.file 19 "c:/users/pluto/scoop/apps/gcc/current/include/c++/11.2.0/bits/stl_uninitialized.h"
	.loc 19 331 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI676:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI677:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # __result, __result
	movq	%r9, 40(%rbp)	 # D.117640, D.117640
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:333:     { return std::uninitialized_copy(__first, __last, __result); }
	.loc 19 333 37
	movq	32(%rbp), %rdx	 # __result, tmp84
	movq	24(%rbp), %rax	 # __last, tmp85
	movq	%rdx, %r8	 # tmp84,
	movq	%rax, %rdx	 # tmp85,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZSt18uninitialized_copyIPN3DDT4NodeES2_ET0_T_S4_S3_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:333:     { return std::uninitialized_copy(__first, __last, __result); }
	.loc 19 333 66
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI678:
	ret	
.LFE5356:
	.seh_endproc
	.section	.text$_ZNKSt6vectorIiSaIiEE5beginEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt6vectorIiSaIiEE5beginEv
	.def	_ZNKSt6vectorIiSaIiEE5beginEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt6vectorIiSaIiEE5beginEv
_ZNKSt6vectorIiSaIiEE5beginEv:
.LFB5357:
	.loc 11 820 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI679:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI680:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:821:       { return const_iterator(this->_M_impl._M_start); }
	.loc 11 821 45
	movq	16(%rbp), %rdx	 # this, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:821:       { return const_iterator(this->_M_impl._M_start); }
	.loc 11 821 16
	leaq	-8(%rbp), %rax	 #, tmp85
	movq	%rax, %rcx	 # tmp85,
	call	_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC1ERKS2_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:821:       { return const_iterator(this->_M_impl._M_start); }
	.loc 11 821 53
	movq	-8(%rbp), %rax	 # D.117665, D.127943
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:821:       { return const_iterator(this->_M_impl._M_start); }
	.loc 11 821 56
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI681:
	ret	
.LFE5357:
	.seh_endproc
	.section	.text$_ZNKSt6vectorIiSaIiEE3endEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt6vectorIiSaIiEE3endEv
	.def	_ZNKSt6vectorIiSaIiEE3endEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt6vectorIiSaIiEE3endEv
_ZNKSt6vectorIiSaIiEE3endEv:
.LFB5358:
	.loc 11 838 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI682:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI683:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:839:       { return const_iterator(this->_M_impl._M_finish); }
	.loc 11 839 45
	movq	16(%rbp), %rax	 # this, tmp85
	leaq	8(%rax), %rdx	 #, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:839:       { return const_iterator(this->_M_impl._M_finish); }
	.loc 11 839 16
	leaq	-8(%rbp), %rax	 #, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC1ERKS2_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:839:       { return const_iterator(this->_M_impl._M_finish); }
	.loc 11 839 54
	movq	-8(%rbp), %rax	 # D.117667, D.127940
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:839:       { return const_iterator(this->_M_impl._M_finish); }
	.loc 11 839 57
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI684:
	ret	
.LFE5358:
	.seh_endproc
	.section	.text$_ZSt5countIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEbENSt15iterator_traitsIT_E15difference_typeES9_S9_RKT0_,"x"
	.linkonce discard
	.globl	_ZSt5countIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEbENSt15iterator_traitsIT_E15difference_typeES9_S9_RKT0_
	.def	_ZSt5countIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEbENSt15iterator_traitsIT_E15difference_typeES9_S9_RKT0_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt5countIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEbENSt15iterator_traitsIT_E15difference_typeES9_S9_RKT0_
_ZSt5countIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEbENSt15iterator_traitsIT_E15difference_typeES9_S9_RKT0_:
.LFB5359:
	.file 20 "c:/users/pluto/scoop/apps/gcc/current/include/c++/11.2.0/bits/stl_algo.h"
	.loc 20 4059 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI685:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI686:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # __value, __value
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algo.h:4067:       return std::__count_if(__first, __last,
	.loc 20 4067 29
	movq	32(%rbp), %rax	 # __value, tmp85
	movq	%rax, %rcx	 # tmp85,
	call	_ZN9__gnu_cxx5__ops17__iter_equals_valIKbEENS0_16_Iter_equals_valIT_EERS4_	 #
	movq	%rax, %rdx	 #, D.128437
	movq	24(%rbp), %rax	 # __last, tmp86
	movq	%rdx, %r8	 # D.128437,
	movq	%rax, %rdx	 # tmp86,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZSt10__count_ifIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEENS0_5__ops16_Iter_equals_valIKbEEENSt15iterator_traitsIT_E15difference_typeESD_SD_T0_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algo.h:4069:     }
	.loc 20 4069 5
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI687:
	ret	
.LFE5359:
	.seh_endproc
	.section	.text$_ZN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEC1ERKS3_,"x"
	.linkonce discard
	.align 2
	.globl	_ZN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEC1ERKS3_
	.def	_ZN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEC1ERKS3_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEC1ERKS3_
_ZN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEC1ERKS3_:
.LFB5362:
	.loc 15 1010 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI688:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI689:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __i, __i
.LBB93:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1011:       : _M_current(__i) { }
	.loc 15 1011 9
	movq	24(%rbp), %rax	 # __i, tmp83
	movq	(%rax), %rdx	 # *__i_5(D), _1
	movq	16(%rbp), %rax	 # this, tmp84
	movq	%rdx, (%rax)	 # _1, this_3(D)->_M_current
.LBE93:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1011:       : _M_current(__i) { }
	.loc 15 1011 27
	nop	
	popq	%rbp	 #
.LCFI690:
	ret	
.LFE5362:
	.seh_endproc
	.section	.text$_ZNSaI5BlorbEC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSaI5BlorbEC2Ev
	.def	_ZNSaI5BlorbEC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSaI5BlorbEC2Ev
_ZNSaI5BlorbEC2Ev:
.LFB5364:
	.loc 12 168 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI691:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI692:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB94:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:168:       allocator() _GLIBCXX_NOTHROW { }
	.loc 12 168 36
	movq	16(%rbp), %rcx	 # this,
	call	_ZN9__gnu_cxx13new_allocatorI5BlorbEC2Ev	 #
.LBE94:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:168:       allocator() _GLIBCXX_NOTHROW { }
	.loc 12 168 38
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI693:
	ret	
.LFE5364:
	.seh_endproc
	.section	.text$_ZNSt12_Vector_baseI5BlorbSaIS0_EE17_Vector_impl_dataC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt12_Vector_baseI5BlorbSaIS0_EE17_Vector_impl_dataC2Ev
	.def	_ZNSt12_Vector_baseI5BlorbSaIS0_EE17_Vector_impl_dataC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt12_Vector_baseI5BlorbSaIS0_EE17_Vector_impl_dataC2Ev
_ZNSt12_Vector_baseI5BlorbSaIS0_EE17_Vector_impl_dataC2Ev:
.LFB5367:
	.loc 11 97 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI694:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI695:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB95:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:98: 	: _M_start(), _M_finish(), _M_end_of_storage()
	.loc 11 98 4
	movq	16(%rbp), %rax	 # this, tmp82
	movq	$0, (%rax)	 #, this_2(D)->_M_start
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:98: 	: _M_start(), _M_finish(), _M_end_of_storage()
	.loc 11 98 16
	movq	16(%rbp), %rax	 # this, tmp83
	movq	$0, 8(%rax)	 #, this_2(D)->_M_finish
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:98: 	: _M_start(), _M_finish(), _M_end_of_storage()
	.loc 11 98 29
	movq	16(%rbp), %rax	 # this, tmp84
	movq	$0, 16(%rax)	 #, this_2(D)->_M_end_of_storage
.LBE95:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:99: 	{ }
	.loc 11 99 4
	nop	
	popq	%rbp	 #
.LCFI696:
	ret	
.LFE5367:
	.seh_endproc
	.section	.text$_ZNSt12_Vector_baseI5BlorbSaIS0_EE13_M_deallocateEPS0_y,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt12_Vector_baseI5BlorbSaIS0_EE13_M_deallocateEPS0_y
	.def	_ZNSt12_Vector_baseI5BlorbSaIS0_EE13_M_deallocateEPS0_y;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt12_Vector_baseI5BlorbSaIS0_EE13_M_deallocateEPS0_y
_ZNSt12_Vector_baseI5BlorbSaIS0_EE13_M_deallocateEPS0_y:
.LFB5369:
	.loc 11 350 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI697:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI698:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __p, __p
	movq	%r8, 32(%rbp)	 # __n, __n
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:353: 	if (__p)
	.loc 11 353 2
	cmpq	$0, 24(%rbp)	 #, __p
	je	.L447	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:354: 	  _Tr::deallocate(_M_impl, __p, __n);
	.loc 11 354 20
	movq	16(%rbp), %rax	 # this, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:354: 	  _Tr::deallocate(_M_impl, __p, __n);
	.loc 11 354 19
	movq	32(%rbp), %rcx	 # __n, tmp83
	movq	24(%rbp), %rdx	 # __p, tmp84
	movq	%rcx, %r8	 # tmp83,
	movq	%rax, %rcx	 # _1,
	call	_ZNSt16allocator_traitsISaI5BlorbEE10deallocateERS1_PS0_y	 #
.L447:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:355:       }
	.loc 11 355 7
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI699:
	ret	
.LFE5369:
	.seh_endproc
	.section	.text$_ZNKSt6vectorI5BlorbSaIS0_EE11_M_data_ptrIS0_EEPT_S5_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt6vectorI5BlorbSaIS0_EE11_M_data_ptrIS0_EEPT_S5_
	.def	_ZNKSt6vectorI5BlorbSaIS0_EE11_M_data_ptrIS0_EEPT_S5_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt6vectorI5BlorbSaIS0_EE11_M_data_ptrIS0_EEPT_S5_
_ZNKSt6vectorI5BlorbSaIS0_EE11_M_data_ptrIS0_EEPT_S5_:
.LFB5370:
	.loc 11 1844 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI700:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI701:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __ptr, __ptr
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1845: 	{ return __ptr; }
	.loc 11 1845 11
	movq	24(%rbp), %rax	 # __ptr, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1845: 	{ return __ptr; }
	.loc 11 1845 18
	popq	%rbp	 #
.LCFI702:
	ret	
.LFE5370:
	.seh_endproc
	.section	.text$_ZSt4moveIR5BlorbEONSt16remove_referenceIT_E4typeEOS3_,"x"
	.linkonce discard
	.globl	_ZSt4moveIR5BlorbEONSt16remove_referenceIT_E4typeEOS3_
	.def	_ZSt4moveIR5BlorbEONSt16remove_referenceIT_E4typeEOS3_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt4moveIR5BlorbEONSt16remove_referenceIT_E4typeEOS3_
_ZSt4moveIR5BlorbEONSt16remove_referenceIT_E4typeEOS3_:
.LFB5371:
	.loc 17 104 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI703:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI704:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\move.h:105:     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
	.loc 17 105 74
	movq	16(%rbp), %rax	 # __t, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\move.h:105:     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
	.loc 17 105 77
	popq	%rbp	 #
.LCFI705:
	ret	
.LFE5371:
	.seh_endproc
	.section	.text$_ZNSt6vectorI5BlorbSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorI5BlorbSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_
	.def	_ZNSt6vectorI5BlorbSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorI5BlorbSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_
_ZNSt6vectorI5BlorbSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_:
.LFB5372:
	.loc 14 109 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI706:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI707:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI708:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI709:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __args#0, __args#0
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:112: 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
	.loc 14 112 20
	movq	32(%rbp), %rax	 # this, tmp93
	movq	8(%rax), %rdx	 # this_11(D)->D.107662._M_impl.D.107007._M_finish, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:112: 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
	.loc 14 112 47
	movq	32(%rbp), %rax	 # this, tmp94
	movq	16(%rax), %rax	 # this_11(D)->D.107662._M_impl.D.107007._M_end_of_storage, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:112: 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
	.loc 14 112 2
	cmpq	%rax, %rdx	 # _2, _1
	je	.L453	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:115: 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
	.loc 14 115 30
	movq	40(%rbp), %rax	 # __args#0, tmp95
	movq	%rax, %rcx	 # tmp95,
	call	_ZSt7forwardI5BlorbEOT_RNSt16remove_referenceIS1_E4typeE	 #
	movq	%rax, %rcx	 #, _3
	movq	32(%rbp), %rax	 # this, tmp96
	movq	8(%rax), %rdx	 # this_11(D)->D.107662._M_impl.D.107007._M_finish, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:115: 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
	.loc 14 115 37
	movq	32(%rbp), %rax	 # this, _5
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:115: 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
	.loc 14 115 30
	movq	%rcx, %r8	 # _3,
	movq	%rax, %rcx	 # _5,
	call	_ZNSt16allocator_traitsISaI5BlorbEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:117: 	    ++this->_M_impl._M_finish;
	.loc 14 117 22
	movq	32(%rbp), %rax	 # this, tmp97
	movq	8(%rax), %rax	 # this_11(D)->D.107662._M_impl.D.107007._M_finish, _6
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:117: 	    ++this->_M_impl._M_finish;
	.loc 14 117 6
	leaq	48(%rax), %rdx	 #, _7
	movq	32(%rbp), %rax	 # this, tmp98
	movq	%rdx, 8(%rax)	 # _7, this_11(D)->D.107662._M_impl.D.107007._M_finish
	jmp	.L454	 #
.L453:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:121: 	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
	.loc 14 121 21
	movq	40(%rbp), %rax	 # __args#0, tmp99
	movq	%rax, %rcx	 # tmp99,
	call	_ZSt7forwardI5BlorbEOT_RNSt16remove_referenceIS1_E4typeE	 #
	movq	%rax, %rbx	 #, _8
	movq	32(%rbp), %rcx	 # this,
	call	_ZNSt6vectorI5BlorbSaIS0_EE3endEv	 #
	movq	%rbx, %r8	 # _8,
	movq	%rax, %rdx	 # D.128123,
	movq	32(%rbp), %rcx	 # this,
	call	_ZNSt6vectorI5BlorbSaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_	 #
.L454:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:123: 	return back();
	.loc 14 123 13
	movq	32(%rbp), %rcx	 # this,
	call	_ZNSt6vectorI5BlorbSaIS0_EE4backEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:125:       }
	.loc 14 125 7
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI710:
	popq	%rbp	 #
.LCFI711:
	ret	
.LFE5372:
	.seh_endproc
	.section	.text$_ZNSt6vectorI5BlorbSaIS0_EE3endEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorI5BlorbSaIS0_EE3endEv
	.def	_ZNSt6vectorI5BlorbSaIS0_EE3endEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorI5BlorbSaIS0_EE3endEv
_ZNSt6vectorI5BlorbSaIS0_EE3endEv:
.LFB5374:
	.loc 11 829 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI712:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI713:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:830:       { return iterator(this->_M_impl._M_finish); }
	.loc 11 830 39
	movq	16(%rbp), %rax	 # this, tmp85
	leaq	8(%rax), %rdx	 #, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:830:       { return iterator(this->_M_impl._M_finish); }
	.loc 11 830 16
	leaq	-8(%rbp), %rax	 #, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEEC1ERKS2_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:830:       { return iterator(this->_M_impl._M_finish); }
	.loc 11 830 48
	movq	-8(%rbp), %rax	 # D.117892, D.128291
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:830:       { return iterator(this->_M_impl._M_finish); }
	.loc 11 830 51
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI714:
	ret	
.LFE5374:
	.seh_endproc
	.section	.text$_ZNK9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEEmiEx,"x"
	.linkonce discard
	.align 2
	.globl	_ZNK9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEEmiEx
	.def	_ZNK9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEEmiEx;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNK9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEEmiEx
_ZNK9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEEmiEx:
.LFB5375:
	.loc 15 1083 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI715:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI716:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __n, __n
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1084:       { return __normal_iterator(_M_current - __n); }
	.loc 15 1084 34
	movq	16(%rbp), %rax	 # this, tmp89
	movq	(%rax), %rcx	 # this_7(D)->_M_current, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1084:       { return __normal_iterator(_M_current - __n); }
	.loc 15 1084 47
	movq	24(%rbp), %rdx	 # __n, __n.101_2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1084:       { return __normal_iterator(_M_current - __n); }
	.loc 15 1084 45
	movq	%rdx, %rax	 # __n.101_2, tmp90
	addq	%rax, %rax	 # tmp90
	addq	%rdx, %rax	 # __n.101_2, tmp90
	salq	$4, %rax	 #, tmp91
	negq	%rax	 # _4
	addq	%rcx, %rax	 # _1, _5
	movq	%rax, -8(%rbp)	 # _5, D.117895
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1084:       { return __normal_iterator(_M_current - __n); }
	.loc 15 1084 16
	leaq	-8(%rbp), %rdx	 #, tmp92
	leaq	-16(%rbp), %rax	 #, tmp93
	movq	%rax, %rcx	 # tmp93,
	call	_ZN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEEC1ERKS2_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1084:       { return __normal_iterator(_M_current - __n); }
	.loc 15 1084 50
	movq	-16(%rbp), %rax	 # D.117896, D.128403
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1084:       { return __normal_iterator(_M_current - __n); }
	.loc 15 1084 53
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI717:
	ret	
.LFE5375:
	.seh_endproc
	.section	.text$_ZNK9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEEdeEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNK9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEEdeEv
	.def	_ZNK9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEEdeEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNK9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEEdeEv
_ZNK9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEEdeEv:
.LFB5376:
	.loc 15 1025 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI718:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI719:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1026:       { return *_M_current; }
	.loc 15 1026 17
	movq	16(%rbp), %rax	 # this, tmp84
	movq	(%rax), %rax	 # this_2(D)->_M_current, _3
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1026:       { return *_M_current; }
	.loc 15 1026 29
	popq	%rbp	 #
.LCFI720:
	ret	
.LFE5376:
	.seh_endproc
	.section	.text$_ZN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEEC1ERKS2_,"x"
	.linkonce discard
	.align 2
	.globl	_ZN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEEC1ERKS2_
	.def	_ZN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEEC1ERKS2_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEEC1ERKS2_
_ZN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEEC1ERKS2_:
.LFB5379:
	.loc 15 1010 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI721:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI722:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __i, __i
.LBB96:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1011:       : _M_current(__i) { }
	.loc 15 1011 9
	movq	24(%rbp), %rax	 # __i, tmp83
	movq	(%rax), %rdx	 # *__i_5(D), _1
	movq	16(%rbp), %rax	 # this, tmp84
	movq	%rdx, (%rax)	 # _1, this_3(D)->_M_current
.LBE96:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1011:       : _M_current(__i) { }
	.loc 15 1011 27
	nop	
	popq	%rbp	 #
.LCFI723:
	ret	
.LFE5379:
	.seh_endproc
	.section	.text$_ZNKSt6vectorI5BlorbSaIS0_EE6cbeginEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt6vectorI5BlorbSaIS0_EE6cbeginEv
	.def	_ZNKSt6vectorI5BlorbSaIS0_EE6cbeginEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt6vectorI5BlorbSaIS0_EE6cbeginEv
_ZNKSt6vectorI5BlorbSaIS0_EE6cbeginEv:
.LFB5380:
	.loc 11 884 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI724:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI725:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:885:       { return const_iterator(this->_M_impl._M_start); }
	.loc 11 885 45
	movq	16(%rbp), %rdx	 # this, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:885:       { return const_iterator(this->_M_impl._M_start); }
	.loc 11 885 16
	leaq	-8(%rbp), %rax	 #, tmp85
	movq	%rax, %rcx	 # tmp85,
	call	_ZN9__gnu_cxx17__normal_iteratorIPK5BlorbSt6vectorIS1_SaIS1_EEEC1ERKS3_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:885:       { return const_iterator(this->_M_impl._M_start); }
	.loc 11 885 53
	movq	-8(%rbp), %rax	 # D.117913, D.128500
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:885:       { return const_iterator(this->_M_impl._M_start); }
	.loc 11 885 56
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI726:
	ret	
.LFE5380:
	.seh_endproc
	.section	.text$_ZN9__gnu_cxxmiIPK5BlorbSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_,"x"
	.linkonce discard
	.globl	_ZN9__gnu_cxxmiIPK5BlorbSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
	.def	_ZN9__gnu_cxxmiIPK5BlorbSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN9__gnu_cxxmiIPK5BlorbSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
_ZN9__gnu_cxxmiIPK5BlorbSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_:
.LFB5381:
	.loc 15 1234 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI727:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI728:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI729:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI730:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __lhs, __lhs
	movq	%rdx, 40(%rbp)	 # __rhs, __rhs
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1237:     { return __lhs.base() - __rhs.base(); }
	.loc 15 1237 24
	movq	32(%rbp), %rcx	 # __lhs,
	call	_ZNK9__gnu_cxx17__normal_iteratorIPK5BlorbSt6vectorIS1_SaIS1_EEE4baseEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1237:     { return __lhs.base() - __rhs.base(); }
	.loc 15 1237 27
	movq	(%rax), %rbx	 # *_1, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1237:     { return __lhs.base() - __rhs.base(); }
	.loc 15 1237 39
	movq	40(%rbp), %rax	 # __rhs, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZNK9__gnu_cxx17__normal_iteratorIPK5BlorbSt6vectorIS1_SaIS1_EEE4baseEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1237:     { return __lhs.base() - __rhs.base(); }
	.loc 15 1237 27
	movq	(%rax), %rdx	 # *_3, _4
	movq	%rbx, %rax	 # _2, _2
	subq	%rdx, %rax	 # _4, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1237:     { return __lhs.base() - __rhs.base(); }
	.loc 15 1237 40
	sarq	$4, %rax	 #, _5
	movq	%rax, %rdx	 # _5, tmp90
	movabsq	$-6148914691236517205, %rax	 #, tmp92
	imulq	%rdx, %rax	 # tmp90, tmp91
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1237:     { return __lhs.base() - __rhs.base(); }
	.loc 15 1237 43
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI731:
	popq	%rbp	 #
.LCFI732:
	ret	
.LFE5381:
	.seh_endproc
	.section	.text$_ZSt4moveIN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS2_SaIS2_EEEES7_ET0_T_S9_S8_,"x"
	.linkonce discard
	.globl	_ZSt4moveIN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS2_SaIS2_EEEES7_ET0_T_S9_S8_
	.def	_ZSt4moveIN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS2_SaIS2_EEEES7_ET0_T_S9_S8_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt4moveIN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS2_SaIS2_EEEES7_ET0_T_S9_S8_
_ZSt4moveIN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS2_SaIS2_EEEES7_ET0_T_S9_S8_:
.LFB5383:
	.loc 3 644 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI733:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI734:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI735:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI736:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __first, __first
	movq	%rdx, 40(%rbp)	 # __last, __last
	movq	%r8, 48(%rbp)	 # __result, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:652:       return std::__copy_move_a<true>(std::__miter_base(__first),
	.loc 3 652 38
	movq	40(%rbp), %rax	 # __last, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS2_SaIS2_EEEEET_S8_	 #
	movq	%rax, %rbx	 #, D.128518
	movq	32(%rbp), %rcx	 # __first,
	call	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS2_SaIS2_EEEEET_S8_	 #
	movq	48(%rbp), %rdx	 # __result, tmp87
	movq	%rdx, %r8	 # tmp87,
	movq	%rbx, %rdx	 # D.128518,
	movq	%rax, %rcx	 # D.128519,
	call	_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS2_SaIS2_EEEES7_ET1_T0_S9_S8_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:654:     }
	.loc 3 654 5
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI737:
	popq	%rbp	 #
.LCFI738:
	ret	
.LFE5383:
	.seh_endproc
	.section	.text$_ZNSt6vectorI5BlorbSaIS0_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS0_S2_EE,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorI5BlorbSaIS0_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS0_S2_EE
	.def	_ZNSt6vectorI5BlorbSaIS0_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS0_S2_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorI5BlorbSaIS0_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS0_S2_EE
_ZNSt6vectorI5BlorbSaIS0_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS0_S2_EE:
.LFB5382:
	.loc 14 171 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI739:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI740:
	subq	$56, %rsp	 #,
	.seh_stackalloc	56
.LCFI741:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI742:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __position, __position
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:174:       if (__position + 1 != end())
	.loc 14 174 32
	movq	32(%rbp), %rcx	 # this,
	call	_ZNSt6vectorI5BlorbSaIS0_EE3endEv	 #
	movq	%rax, -16(%rbp)	 # tmp94, D.117923
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:174:       if (__position + 1 != end())
	.loc 14 174 22
	leaq	40(%rbp), %rax	 #, tmp95
	movl	$1, %edx	 #,
	movq	%rax, %rcx	 # tmp95,
	call	_ZNK9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEEplEx	 #
	movq	%rax, -8(%rbp)	 # tmp97, D.117922
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:174:       if (__position + 1 != end())
	.loc 14 174 26
	leaq	-16(%rbp), %rdx	 #, tmp98
	leaq	-8(%rbp), %rax	 #, tmp99
	movq	%rax, %rcx	 # tmp99,
	call	_ZN9__gnu_cxxeqIP5BlorbS2_St6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T1_EERKNS6_IT0_S8_EE	 #
	xorl	$1, %eax	 #, retval.120_12
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:174:       if (__position + 1 != end())
	.loc 14 174 7
	testb	%al, %al	 # retval.120_12
	je	.L470	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:175: 	_GLIBCXX_MOVE3(__position + 1, end(), __position);
	.loc 14 175 2
	movq	32(%rbp), %rcx	 # this,
	call	_ZNSt6vectorI5BlorbSaIS0_EE3endEv	 #
	movq	%rax, %rbx	 #, D.128510
	leaq	40(%rbp), %rax	 #, tmp100
	movl	$1, %edx	 #,
	movq	%rax, %rcx	 # tmp100,
	call	_ZNK9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEEplEx	 #
	movq	40(%rbp), %rdx	 # __position, tmp101
	movq	%rdx, %r8	 # tmp101,
	movq	%rbx, %rdx	 # D.128510,
	movq	%rax, %rcx	 # D.128511,
	call	_ZSt4moveIN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS2_SaIS2_EEEES7_ET0_T_S9_S8_	 #
.L470:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:176:       --this->_M_impl._M_finish;
	.loc 14 176 23
	movq	32(%rbp), %rax	 # this, tmp102
	movq	8(%rax), %rax	 # this_8(D)->D.107662._M_impl.D.107007._M_finish, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:176:       --this->_M_impl._M_finish;
	.loc 14 176 7
	leaq	-48(%rax), %rdx	 #, _3
	movq	32(%rbp), %rax	 # this, tmp103
	movq	%rdx, 8(%rax)	 # _3, this_8(D)->D.107662._M_impl.D.107007._M_finish
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:177:       _Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
	.loc 14 177 29
	movq	32(%rbp), %rax	 # this, tmp104
	movq	8(%rax), %rdx	 # this_8(D)->D.107662._M_impl.D.107007._M_finish, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:177:       _Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
	.loc 14 177 36
	movq	32(%rbp), %rax	 # this, _5
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:177:       _Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
	.loc 14 177 29
	movq	%rax, %rcx	 # _5,
	call	_ZNSt16allocator_traitsISaI5BlorbEE7destroyIS0_EEvRS1_PT_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:179:       return __position;
	.loc 14 179 14
	movq	40(%rbp), %rax	 # __position, D.128513
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:180:     }
	.loc 14 180 5
	addq	$56, %rsp	 #,
	popq	%rbx	 #
.LCFI743:
	popq	%rbp	 #
.LCFI744:
	ret	
.LFE5382:
	.seh_endproc
	.section	.text$_ZNSaImEC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSaImEC2Ev
	.def	_ZNSaImEC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSaImEC2Ev
_ZNSaImEC2Ev:
.LFB5478:
	.loc 12 168 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI745:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI746:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB97:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:168:       allocator() _GLIBCXX_NOTHROW { }
	.loc 12 168 36
	movq	16(%rbp), %rcx	 # this,
	call	_ZN9__gnu_cxx13new_allocatorImEC2Ev	 #
.LBE97:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:168:       allocator() _GLIBCXX_NOTHROW { }
	.loc 12 168 38
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI747:
	ret	
.LFE5478:
	.seh_endproc
	.section	.text$_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC2Ev
	.def	_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC2Ev
_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC2Ev:
.LFB5481:
	.loc 8 443 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI748:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI749:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB98:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:444: 	: _M_start(), _M_finish(), _M_end_of_storage()
	.loc 8 444 4
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt13_Bit_iteratorC1Ev	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:444: 	: _M_start(), _M_finish(), _M_end_of_storage()
	.loc 8 444 16
	movq	16(%rbp), %rax	 # this, tmp84
	addq	$16, %rax	 #, _2
	movq	%rax, %rcx	 # _2,
	call	_ZNSt13_Bit_iteratorC1Ev	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:444: 	: _M_start(), _M_finish(), _M_end_of_storage()
	.loc 8 444 29
	movq	16(%rbp), %rax	 # this, tmp85
	movq	$0, 32(%rax)	 #, this_4(D)->_M_end_of_storage
.LBE98:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:445: 	{ }
	.loc 8 445 4
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI750:
	ret	
.LFE5481:
	.seh_endproc
	.section	.text$_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC1Ev
	.def	_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC1Ev
_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC1Ev:
.LFB5482:
	.loc 8 443 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI751:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI752:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB99:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:444: 	: _M_start(), _M_finish(), _M_end_of_storage()
	.loc 8 444 4
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt13_Bit_iteratorC1Ev	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:444: 	: _M_start(), _M_finish(), _M_end_of_storage()
	.loc 8 444 16
	movq	16(%rbp), %rax	 # this, tmp84
	addq	$16, %rax	 #, _2
	movq	%rax, %rcx	 # _2,
	call	_ZNSt13_Bit_iteratorC1Ev	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:444: 	: _M_start(), _M_finish(), _M_end_of_storage()
	.loc 8 444 29
	movq	16(%rbp), %rax	 # this, tmp85
	movq	$0, 32(%rax)	 #, this_4(D)->_M_end_of_storage
.LBE99:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:445: 	{ }
	.loc 8 445 4
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI753:
	ret	
.LFE5482:
	.seh_endproc
	.section	.text$_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv
	.def	_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv
_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv:
.LFB5483:
	.loc 8 553 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI754:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI755:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB100:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:555: 	if (_M_impl._M_start._M_p)
	.loc 8 555 23
	movq	16(%rbp), %rax	 # this, tmp94
	movq	(%rax), %rax	 # this_15(D)->_M_impl.D.103391._M_start.D.34297._M_p, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:555: 	if (_M_impl._M_start._M_p)
	.loc 8 555 2
	testq	%rax, %rax	 # _1
	je	.L477	 #,
.LBB101:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:557: 	    const size_t __n = _M_impl._M_end_addr() - _M_impl._M_start._M_p;
	.loc 8 557 44
	movq	16(%rbp), %rax	 # this, _2
	movq	%rax, %rcx	 # _2,
	call	_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:557: 	    const size_t __n = _M_impl._M_end_addr() - _M_impl._M_start._M_p;
	.loc 8 557 66
	movq	16(%rbp), %rdx	 # this, tmp95
	movq	(%rdx), %rdx	 # this_15(D)->_M_impl.D.103391._M_start.D.34297._M_p, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:557: 	    const size_t __n = _M_impl._M_end_addr() - _M_impl._M_start._M_p;
	.loc 8 557 47
	subq	%rdx, %rax	 # _4, _5
	sarq	$2, %rax	 #, tmp96
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:557: 	    const size_t __n = _M_impl._M_end_addr() - _M_impl._M_start._M_p;
	.loc 8 557 19
	movq	%rax, -8(%rbp)	 # _6, __n
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:559: 					  _M_impl._M_end_of_storage - __n,
	.loc 8 559 16
	movq	16(%rbp), %rax	 # this, tmp97
	movq	32(%rax), %rdx	 # this_15(D)->_M_impl.D.103391._M_end_of_storage, _7
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:559: 					  _M_impl._M_end_of_storage - __n,
	.loc 8 559 34
	movq	-8(%rbp), %rax	 # __n, tmp98
	salq	$2, %rax	 #, _8
	negq	%rax	 # _9
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:558: 	    _Bit_alloc_traits::deallocate(_M_impl,
	.loc 8 558 35
	addq	%rax, %rdx	 # _9, _10
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:558: 	    _Bit_alloc_traits::deallocate(_M_impl,
	.loc 8 558 36
	movq	16(%rbp), %rax	 # this, _11
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:558: 	    _Bit_alloc_traits::deallocate(_M_impl,
	.loc 8 558 35
	movq	-8(%rbp), %rcx	 # __n, tmp99
	movq	%rcx, %r8	 # tmp99,
	movq	%rax, %rcx	 # _11,
	call	_ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmy	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:561: 	    _M_impl._M_reset();
	.loc 8 561 22
	movq	16(%rbp), %rax	 # this, _12
	movq	%rax, %rcx	 # _12,
	call	_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_data8_M_resetEv	 #
.L477:
.LBE101:
.LBE100:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:563:       }
	.loc 8 563 7
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI756:
	ret	
.LFE5483:
	.seh_endproc
	.section	.text$_ZNSaIiEC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSaIiEC2Ev
	.def	_ZNSaIiEC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSaIiEC2Ev
_ZNSaIiEC2Ev:
.LFB5485:
	.loc 12 168 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI757:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI758:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB102:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:168:       allocator() _GLIBCXX_NOTHROW { }
	.loc 12 168 36
	movq	16(%rbp), %rcx	 # this,
	call	_ZN9__gnu_cxx13new_allocatorIiEC2Ev	 #
.LBE102:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:168:       allocator() _GLIBCXX_NOTHROW { }
	.loc 12 168 38
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI759:
	ret	
.LFE5485:
	.seh_endproc
	.section	.text$_ZNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataC2Ev
	.def	_ZNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataC2Ev
_ZNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataC2Ev:
.LFB5488:
	.loc 11 97 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI760:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI761:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB103:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:98: 	: _M_start(), _M_finish(), _M_end_of_storage()
	.loc 11 98 4
	movq	16(%rbp), %rax	 # this, tmp82
	movq	$0, (%rax)	 #, this_2(D)->_M_start
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:98: 	: _M_start(), _M_finish(), _M_end_of_storage()
	.loc 11 98 16
	movq	16(%rbp), %rax	 # this, tmp83
	movq	$0, 8(%rax)	 #, this_2(D)->_M_finish
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:98: 	: _M_start(), _M_finish(), _M_end_of_storage()
	.loc 11 98 29
	movq	16(%rbp), %rax	 # this, tmp84
	movq	$0, 16(%rax)	 #, this_2(D)->_M_end_of_storage
.LBE103:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:99: 	{ }
	.loc 11 99 4
	nop	
	popq	%rbp	 #
.LCFI762:
	ret	
.LFE5488:
	.seh_endproc
	.section	.text$_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPiy,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPiy
	.def	_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPiy;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPiy
_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPiy:
.LFB5490:
	.loc 11 350 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI763:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI764:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __p, __p
	movq	%r8, 32(%rbp)	 # __n, __n
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:353: 	if (__p)
	.loc 11 353 2
	cmpq	$0, 24(%rbp)	 #, __p
	je	.L482	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:354: 	  _Tr::deallocate(_M_impl, __p, __n);
	.loc 11 354 20
	movq	16(%rbp), %rax	 # this, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:354: 	  _Tr::deallocate(_M_impl, __p, __n);
	.loc 11 354 19
	movq	32(%rbp), %rcx	 # __n, tmp83
	movq	24(%rbp), %rdx	 # __p, tmp84
	movq	%rcx, %r8	 # tmp83,
	movq	%rax, %rcx	 # _1,
	call	_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Piy	 #
.L482:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:355:       }
	.loc 11 355 7
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI765:
	ret	
.LFE5490:
	.seh_endproc
	.section	.text$_ZSt8_DestroyIPiEvT_S1_,"x"
	.linkonce discard
	.globl	_ZSt8_DestroyIPiEvT_S1_
	.def	_ZSt8_DestroyIPiEvT_S1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt8_DestroyIPiEvT_S1_
_ZSt8_DestroyIPiEvT_S1_:
.LFB5491:
	.file 21 "c:/users/pluto/scoop/apps/gcc/current/include/c++/11.2.0/bits/stl_construct.h"
	.loc 21 171 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI766:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI767:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:181:       if (std::is_constant_evaluated())
	.loc 21 181 37
	call	_ZSt21is_constant_evaluatedv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:181:       if (std::is_constant_evaluated())
	.loc 21 181 7
	testb	%al, %al	 # retval.9_4
	je	.L484	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:182: 	return _Destroy_aux<false>::__destroy(__first, __last);
	.loc 21 182 39
	movq	24(%rbp), %rax	 # __last, tmp83
	movq	%rax, %rdx	 # tmp83,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZNSt12_Destroy_auxILb0EE9__destroyIPiEEvT_S3_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:182: 	return _Destroy_aux<false>::__destroy(__first, __last);
	.loc 21 182 55
	jmp	.L483	 #
.L484:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:185: 	__destroy(__first, __last);
	.loc 21 185 11
	movq	24(%rbp), %rax	 # __last, tmp84
	movq	%rax, %rdx	 # tmp84,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_	 #
	nop	
.L483:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:186:     }
	.loc 21 186 5
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI768:
	ret	
.LFE5491:
	.seh_endproc
	.section	.text$_ZNKSt6vectorIbSaIbEE8max_sizeEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt6vectorIbSaIbEE8max_sizeEv
	.def	_ZNKSt6vectorIbSaIbEE8max_sizeEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt6vectorIbSaIbEE8max_sizeEv
_ZNKSt6vectorIbSaIbEE8max_sizeEv:
.LFB5492:
	.loc 8 885 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI769:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI770:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:887: 	const size_type __isize =
	.loc 8 887 18
	movabsq	$9223372036854775776, %rax	 #, tmp91
	movq	%rax, -8(%rbp)	 # tmp91, __isize
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:891: 	  = _Bit_alloc_traits::max_size(_M_get_Bit_allocator());
	.loc 8 891 54
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:891: 	  = _Bit_alloc_traits::max_size(_M_get_Bit_allocator());
	.loc 8 891 33
	movq	%rax, %rcx	 # _2,
	call	_ZNSt16allocator_traitsISaImEE8max_sizeERKS0_	 #
	movq	%rax, -16(%rbp)	 # tmp86, __asize
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:893: 		? __asize * int(_S_word_bit) : __isize);
	.loc 8 893 3
	movabsq	$288230376151711743, %rax	 #, tmp87
	cmpq	%rax, -16(%rbp)	 # tmp87, __asize
	ja	.L487	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:893: 		? __asize * int(_S_word_bit) : __isize);
	.loc 8 893 3 is_stmt 0 discriminator 1
	movq	-16(%rbp), %rax	 # __asize, tmp88
	salq	$5, %rax	 #, iftmp.14_3
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:893: 		? __asize * int(_S_word_bit) : __isize);
	.loc 8 893 41 is_stmt 1 discriminator 1
	jmp	.L489	 #
.L487:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:893: 		? __asize * int(_S_word_bit) : __isize);
	.loc 8 893 3 discriminator 2
	movabsq	$9223372036854775776, %rax	 #, iftmp.14_3
.L489:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:894:       }
	.loc 8 894 7 discriminator 5
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI771:
	ret	
.LFE5492:
	.seh_endproc
	.section	.text$_ZNKSt6vectorIbSaIbEE8capacityEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt6vectorIbSaIbEE8capacityEv
	.def	_ZNKSt6vectorIbSaIbEE8capacityEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt6vectorIbSaIbEE8capacityEv
_ZNKSt6vectorIbSaIbEE8capacityEv:
.LFB5493:
	.loc 8 897 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI772:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI773:
	subq	$64, %rsp	 #,
	.seh_stackalloc	64
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:899: 			 - begin()); }
	.loc 8 899 12
	leaq	-32(%rbp), %rax	 #, tmp87
	movq	16(%rbp), %rdx	 # this,
	movq	%rax, %rcx	 # tmp87,
	call	_ZNKSt6vectorIbSaIbEE5beginEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:898:       { return size_type(const_iterator(this->_M_impl._M_end_addr(), 0)
	.loc 8 898 26
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv	 #
	movq	%rax, %rdx	 #, _2
	leaq	-16(%rbp), %rax	 #, tmp88
	movl	$0, %r8d	 #,
	movq	%rax, %rcx	 # tmp88,
	call	_ZNSt19_Bit_const_iteratorC1EPmj	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:899: 			 - begin()); }
	.loc 8 899 5
	leaq	-32(%rbp), %rdx	 #, tmp89
	leaq	-16(%rbp), %rax	 #, tmp90
	movq	%rax, %rcx	 # tmp90,
	call	_ZStmiRKSt18_Bit_iterator_baseS1_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:899: 			 - begin()); }
	.loc 8 899 17
	addq	$64, %rsp	 #,
	popq	%rbp	 #
.LCFI774:
	ret	
.LFE5493:
	.seh_endproc
	.section	.text$_ZNSt6vectorIbSaIbEE13_M_reallocateEy,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorIbSaIbEE13_M_reallocateEy
	.def	_ZNSt6vectorIbSaIbEE13_M_reallocateEy;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorIbSaIbEE13_M_reallocateEy
_ZNSt6vectorIbSaIbEE13_M_reallocateEy:
.LFB5494:
	.loc 14 810 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI775:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI776:
	subq	$208, %rsp	 #,
	.seh_stackalloc	208
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __n, __n
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:813:       _Bit_pointer __q = this->_M_allocate(__n);
	.loc 14 813 43
	movq	16(%rbp), %rax	 # this, _1
	movq	24(%rbp), %rdx	 # __n, tmp89
	movq	%rax, %rcx	 # _1,
	call	_ZNSt13_Bvector_baseISaIbEE11_M_allocateEy	 #
	movq	%rax, -8(%rbp)	 # _12, __q
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:814:       iterator __start(std::__addressof(*__q), 0);
	.loc 14 814 16
	movq	-8(%rbp), %rax	 # __q, tmp90
	movq	%rax, %rcx	 # tmp90,
	call	_ZSt11__addressofImEPT_RS0_	 #
	movq	%rax, %rdx	 #, _2
	leaq	-96(%rbp), %rax	 #, tmp91
	movl	$0, %r8d	 #,
	movq	%rax, %rcx	 # tmp91,
	call	_ZNSt13_Bit_iteratorC1EPmj	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:815:       iterator __finish(_M_copy_aligned(begin(), end(), __start));
	.loc 14 815 53
	leaq	-64(%rbp), %rax	 #, tmp92
	movq	16(%rbp), %rdx	 # this,
	movq	%rax, %rcx	 # tmp92,
	call	_ZNSt6vectorIbSaIbEE3endEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:815:       iterator __finish(_M_copy_aligned(begin(), end(), __start));
	.loc 14 815 40
	leaq	-64(%rbp), %rdx	 #, tmp93
	leaq	-80(%rbp), %rax	 #, tmp94
	movq	%rax, %rcx	 # tmp94,
	call	_ZNSt19_Bit_const_iteratorC1ERKSt13_Bit_iterator	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:815:       iterator __finish(_M_copy_aligned(begin(), end(), __start));
	.loc 14 815 46
	leaq	-32(%rbp), %rax	 #, tmp95
	movq	16(%rbp), %rdx	 # this,
	movq	%rax, %rcx	 # tmp95,
	call	_ZNSt6vectorIbSaIbEE5beginEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:815:       iterator __finish(_M_copy_aligned(begin(), end(), __start));
	.loc 14 815 40
	leaq	-32(%rbp), %rdx	 #, tmp96
	leaq	-48(%rbp), %rax	 #, tmp97
	movq	%rax, %rcx	 # tmp97,
	call	_ZNSt19_Bit_const_iteratorC1ERKSt13_Bit_iterator	 #
	leaq	-112(%rbp), %rcx	 #, tmp98
	movq	-48(%rbp), %rax	 # D.119586, tmp99
	movq	-40(%rbp), %rdx	 # D.119586,
	movq	%rax, -128(%rbp)	 # tmp99,
	movq	%rdx, -120(%rbp)	 #,
	movq	-80(%rbp), %rax	 # D.119587, tmp100
	movq	-72(%rbp), %rdx	 # D.119587,
	movq	%rax, -144(%rbp)	 # tmp100,
	movq	%rdx, -136(%rbp)	 #,
	movq	-96(%rbp), %rax	 # __start, tmp101
	movq	-88(%rbp), %rdx	 # __start,
	movq	%rax, -160(%rbp)	 # tmp101,
	movq	%rdx, -152(%rbp)	 #,
	leaq	-144(%rbp), %r8	 #, tmp102
	leaq	-128(%rbp), %rdx	 #, tmp103
	leaq	-160(%rbp), %rax	 #, tmp104
	movq	%rax, 32(%rsp)	 # tmp104,
	movq	%r8, %r9	 # tmp102,
	movq	%rdx, %r8	 # tmp103,
	movq	16(%rbp), %rdx	 # this,
	call	_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:816:       this->_M_deallocate();
	.loc 14 816 26
	movq	16(%rbp), %rax	 # this, _3
	movq	%rax, %rcx	 # _3,
	call	_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:817:       this->_M_impl._M_start = __start;
	.loc 14 817 7
	movq	16(%rbp), %rax	 # this, tmp105
	movq	-96(%rbp), %rdx	 # MEM <unsigned char[12]> [(struct _Bit_iterator *)&__start], tmp106
	movq	%rdx, (%rax)	 # tmp106, MEM <unsigned char[12]> [(struct _Bit_iterator *)this_8(D)]
	movl	-88(%rbp), %edx	 # MEM <unsigned char[12]> [(struct _Bit_iterator *)&__start], tmp107
	movl	%edx, 8(%rax)	 # tmp107, MEM <unsigned char[12]> [(struct _Bit_iterator *)this_8(D)]
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:818:       this->_M_impl._M_finish = __finish;
	.loc 14 818 7
	movq	16(%rbp), %rax	 # this, tmp108
	movq	-112(%rbp), %rdx	 # MEM <unsigned char[12]> [(struct _Bit_iterator *)&__finish], tmp109
	movq	%rdx, 16(%rax)	 # tmp109, MEM <unsigned char[12]> [(struct _Bit_iterator *)this_8(D) + 16B]
	movl	-104(%rbp), %edx	 # MEM <unsigned char[12]> [(struct _Bit_iterator *)&__finish], tmp110
	movl	%edx, 24(%rax)	 # tmp110, MEM <unsigned char[12]> [(struct _Bit_iterator *)this_8(D) + 16B]
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:819:       this->_M_impl._M_end_of_storage = __q + _S_nword(__n);
	.loc 14 819 55
	movq	24(%rbp), %rax	 # __n, tmp111
	movq	%rax, %rcx	 # tmp111,
	call	_ZNSt13_Bvector_baseISaIbEE8_S_nwordEy	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:819:       this->_M_impl._M_end_of_storage = __q + _S_nword(__n);
	.loc 14 819 45
	leaq	0(,%rax,4), %rdx	 #, _5
	movq	-8(%rbp), %rax	 # __q, tmp112
	addq	%rax, %rdx	 # tmp112, _6
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:819:       this->_M_impl._M_end_of_storage = __q + _S_nword(__n);
	.loc 14 819 39
	movq	16(%rbp), %rax	 # this, tmp113
	movq	%rdx, 32(%rax)	 # _6, this_8(D)->D.103908._M_impl.D.103391._M_end_of_storage
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:820:     }
	.loc 14 820 5
	nop	
	addq	$208, %rsp	 #,
	popq	%rbp	 #
.LCFI777:
	ret	
.LFE5494:
	.seh_endproc
	.section	.text$_ZNKSt6vectorIbSaIbEE4sizeEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt6vectorIbSaIbEE4sizeEv
	.def	_ZNKSt6vectorIbSaIbEE4sizeEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt6vectorIbSaIbEE4sizeEv
_ZNKSt6vectorIbSaIbEE4sizeEv:
.LFB5495:
	.loc 8 881 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI778:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI779:
	subq	$64, %rsp	 #,
	.seh_stackalloc	64
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:882:       { return size_type(end() - begin()); }
	.loc 8 882 39
	leaq	-32(%rbp), %rax	 #, tmp85
	movq	16(%rbp), %rdx	 # this,
	movq	%rax, %rcx	 # tmp85,
	call	_ZNKSt6vectorIbSaIbEE5beginEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:882:       { return size_type(end() - begin()); }
	.loc 8 882 29
	leaq	-16(%rbp), %rax	 #, tmp86
	movq	16(%rbp), %rdx	 # this,
	movq	%rax, %rcx	 # tmp86,
	call	_ZNKSt6vectorIbSaIbEE3endEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:882:       { return size_type(end() - begin()); }
	.loc 8 882 32
	leaq	-32(%rbp), %rdx	 #, tmp87
	leaq	-16(%rbp), %rax	 #, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZStmiRKSt18_Bit_iterator_baseS1_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:882:       { return size_type(end() - begin()); }
	.loc 8 882 44
	addq	$64, %rsp	 #,
	popq	%rbp	 #
.LCFI780:
	ret	
.LFE5495:
	.seh_endproc
	.section	.text$_ZNSt6vectorIbSaIbEE15_M_erase_at_endESt13_Bit_iterator,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorIbSaIbEE15_M_erase_at_endESt13_Bit_iterator
	.def	_ZNSt6vectorIbSaIbEE15_M_erase_at_endESt13_Bit_iterator;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorIbSaIbEE15_M_erase_at_endESt13_Bit_iterator
_ZNSt6vectorIbSaIbEE15_M_erase_at_endESt13_Bit_iterator:
.LFB5496:
	.loc 8 1317 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI781:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI782:
	leaq	(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI783:
	.seh_endprologue
	movq	%rcx, 24(%rbp)	 # this, this
	movq	%rdx, %rbx	 #, tmp82
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1318:       { this->_M_impl._M_finish = __pos; }
	.loc 8 1318 9
	movq	24(%rbp), %rax	 # this, tmp83
	movq	(%rbx), %rdx	 # MEM <unsigned char[12]> [(struct _Bit_iterator *)&__pos], tmp84
	movq	%rdx, 16(%rax)	 # tmp84, MEM <unsigned char[12]> [(struct _Bit_iterator *)this_2(D) + 16B]
	movl	8(%rbx), %edx	 # MEM <unsigned char[12]> [(struct _Bit_iterator *)&__pos], tmp85
	movl	%edx, 24(%rax)	 # tmp85, MEM <unsigned char[12]> [(struct _Bit_iterator *)this_2(D) + 16B]
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1318:       { this->_M_impl._M_finish = __pos; }
	.loc 8 1318 42
	nop	
	popq	%rbx	 #
.LCFI784:
	popq	%rbp	 #
.LCFI785:
	ret	
.LFE5496:
	.seh_endproc
	.section	.text$_ZNSt6vectorIbSaIbEE5beginEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorIbSaIbEE5beginEv
	.def	_ZNSt6vectorIbSaIbEE5beginEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorIbSaIbEE5beginEv
_ZNSt6vectorIbSaIbEE5beginEv:
.LFB5497:
	.loc 8 831 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI786:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI787:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, 24(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:832:       { return iterator(this->_M_impl._M_start._M_p, 0); }
	.loc 8 832 55
	movq	24(%rbp), %rax	 # this, tmp83
	movq	(%rax), %rax	 # this_3(D)->D.103908._M_impl.D.103391._M_start.D.34297._M_p, _1
	movl	$0, %r8d	 #,
	movq	%rax, %rdx	 # _1,
	movq	16(%rbp), %rcx	 # .result_ptr,
	call	_ZNSt13_Bit_iteratorC1EPmj	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:832:       { return iterator(this->_M_impl._M_start._M_p, 0); }
	.loc 8 832 58
	movq	16(%rbp), %rax	 # .result_ptr,
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI788:
	ret	
.LFE5497:
	.seh_endproc
	.section	.text$_ZNSt6vectorIbSaIbEE3endEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorIbSaIbEE3endEv
	.def	_ZNSt6vectorIbSaIbEE3endEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorIbSaIbEE3endEv
_ZNSt6vectorIbSaIbEE3endEv:
.LFB5498:
	.loc 8 839 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI789:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI790:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, 24(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:840:       { return this->_M_impl._M_finish; }
	.loc 8 840 30
	movq	16(%rbp), %rcx	 # .result_ptr, tmp82
	movq	24(%rbp), %rax	 # this, tmp83
	movq	24(%rax), %rdx	 # this_2(D)->D.103908._M_impl.D.103391._M_finish,
	movq	16(%rax), %rax	 # this_2(D)->D.103908._M_impl.D.103391._M_finish, tmp84
	movq	%rax, (%rcx)	 # tmp84, <retval>
	movq	%rdx, 8(%rcx)	 #, <retval>
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:840:       { return this->_M_impl._M_finish; }
	.loc 8 840 41
	movq	16(%rbp), %rax	 # .result_ptr,
	popq	%rbp	 #
.LCFI791:
	ret	
.LFE5498:
	.seh_endproc
	.section	.text$_ZNSt6vectorIbSaIbEE6insertESt19_Bit_const_iteratoryRKb,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorIbSaIbEE6insertESt19_Bit_const_iteratoryRKb
	.def	_ZNSt6vectorIbSaIbEE6insertESt19_Bit_const_iteratoryRKb;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorIbSaIbEE6insertESt19_Bit_const_iteratoryRKb
_ZNSt6vectorIbSaIbEE6insertESt19_Bit_const_iteratoryRKb:
.LFB5499:
	.loc 8 1039 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI792:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI793:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI794:
	subq	$112, %rsp	 #,
	.seh_stackalloc	112
.LCFI795:
	leaq	112(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 112
.LCFI796:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, 40(%rbp)	 # this, this
	movq	%r8, %rbx	 #, tmp84
	movq	%r9, 56(%rbp)	 # __n, __n
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1041: 	difference_type __offset = __position - cbegin();
	.loc 8 1041 48
	leaq	-64(%rbp), %rax	 #, tmp85
	movq	40(%rbp), %rdx	 # this, tmp86
	movq	%rax, %rcx	 # tmp85,
	call	_ZNKSt6vectorIbSaIbEE6cbeginEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1041: 	difference_type __offset = __position - cbegin();
	.loc 8 1041 40
	leaq	-64(%rbp), %rax	 #, tmp87
	movq	%rax, %rdx	 # tmp87,
	movq	%rbx, %rcx	 # tmp84,
	call	_ZStmiRKSt18_Bit_iterator_baseS1_	 #
	movq	%rax, -8(%rbp)	 # tmp88, __offset
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1042: 	_M_fill_insert(__position._M_const_cast(), __n, __x);
	.loc 8 1042 16
	movq	64(%rbp), %rax	 # __x, tmp89
	movzbl	(%rax), %eax	 # *__x_9(D), _1
	movzbl	%al, %esi	 # _1, _2
	leaq	-48(%rbp), %rax	 #, tmp90
	movq	%rbx, %rdx	 # tmp84,
	movq	%rax, %rcx	 # tmp90,
	call	_ZNKSt19_Bit_const_iterator13_M_const_castEv	 #
	movq	-48(%rbp), %rax	 # D.127562, tmp91
	movq	-40(%rbp), %rdx	 # D.127562,
	movq	%rax, -80(%rbp)	 # tmp91,
	movq	%rdx, -72(%rbp)	 #,
	movq	56(%rbp), %rcx	 # __n, tmp92
	leaq	-80(%rbp), %rdx	 #, tmp93
	movq	40(%rbp), %rax	 # this, tmp94
	movl	%esi, %r9d	 # _2,
	movq	%rcx, %r8	 # tmp92,
	movq	%rax, %rcx	 # tmp94,
	call	_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratoryb	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1043: 	return begin() + __offset;
	.loc 8 1043 14
	leaq	-32(%rbp), %rax	 #, tmp95
	movq	40(%rbp), %rdx	 # this, tmp96
	movq	%rax, %rcx	 # tmp95,
	call	_ZNSt6vectorIbSaIbEE5beginEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1043: 	return begin() + __offset;
	.loc 8 1043 17
	movq	32(%rbp), %rax	 # .result_ptr, tmp97
	movq	-8(%rbp), %rcx	 # __offset, tmp98
	leaq	-32(%rbp), %rdx	 #, tmp99
	movq	%rcx, %r8	 # tmp98,
	movq	%rax, %rcx	 # tmp97,
	call	_ZStplRKSt13_Bit_iteratorx	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1043: 	return begin() + __offset;
	.loc 8 1043 19
	nop	
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1044:       }
	.loc 8 1044 7
	movq	32(%rbp), %rax	 # .result_ptr,
	addq	$112, %rsp	 #,
	popq	%rbx	 #
.LCFI797:
	popq	%rsi	 #
.LCFI798:
	popq	%rbp	 #
.LCFI799:
	ret	
.LFE5499:
	.seh_endproc
	.section	.text$_ZNKSt6vectorIiSaIiEE8max_sizeEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt6vectorIiSaIiEE8max_sizeEv
	.def	_ZNKSt6vectorIiSaIiEE8max_sizeEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt6vectorIiSaIiEE8max_sizeEv
_ZNKSt6vectorIiSaIiEE8max_sizeEv:
.LFB5500:
	.loc 11 923 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI800:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI801:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:924:       { return _S_max_size(_M_get_Tp_allocator()); }
	.loc 11 924 47
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:924:       { return _S_max_size(_M_get_Tp_allocator()); }
	.loc 11 924 27
	movq	%rax, %rcx	 # _2,
	call	_ZNSt6vectorIiSaIiEE11_S_max_sizeERKS0_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:924:       { return _S_max_size(_M_get_Tp_allocator()); }
	.loc 11 924 52
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI802:
	ret	
.LFE5500:
	.seh_endproc
	.section	.text$_ZNKSt6vectorIiSaIiEE8capacityEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt6vectorIiSaIiEE8capacityEv
	.def	_ZNKSt6vectorIiSaIiEE8capacityEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt6vectorIiSaIiEE8capacityEv
_ZNKSt6vectorIiSaIiEE8capacityEv:
.LFB5501:
	.loc 11 998 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI803:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI804:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:999:       { return size_type(this->_M_impl._M_end_of_storage
	.loc 11 999 40
	movq	16(%rbp), %rax	 # this, tmp88
	movq	16(%rax), %rdx	 # this_6(D)->D.106011._M_impl.D.105361._M_end_of_storage, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1000: 			 - this->_M_impl._M_start); }
	.loc 11 1000 21
	movq	16(%rbp), %rax	 # this, tmp89
	movq	(%rax), %rcx	 # this_6(D)->D.106011._M_impl.D.105361._M_start, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1000: 			 - this->_M_impl._M_start); }
	.loc 11 1000 5
	movq	%rdx, %rax	 # _1, _1
	subq	%rcx, %rax	 # _2, _1
	sarq	$2, %rax	 #, tmp90
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1000: 			 - this->_M_impl._M_start); }
	.loc 11 1000 32
	popq	%rbp	 #
.LCFI805:
	ret	
.LFE5501:
	.seh_endproc
	.section	.text$_ZNKSt6vectorIiSaIiEE4sizeEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt6vectorIiSaIiEE4sizeEv
	.def	_ZNKSt6vectorIiSaIiEE4sizeEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt6vectorIiSaIiEE4sizeEv
_ZNKSt6vectorIiSaIiEE4sizeEv:
.LFB5502:
	.loc 11 918 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI806:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI807:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:919:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	.loc 11 919 40
	movq	16(%rbp), %rax	 # this, tmp88
	movq	8(%rax), %rdx	 # this_6(D)->D.106011._M_impl.D.105361._M_finish, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:919:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	.loc 11 919 66
	movq	16(%rbp), %rax	 # this, tmp89
	movq	(%rax), %rcx	 # this_6(D)->D.106011._M_impl.D.105361._M_start, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:919:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	.loc 11 919 50
	movq	%rdx, %rax	 # _1, _1
	subq	%rcx, %rax	 # _2, _1
	sarq	$2, %rax	 #, tmp90
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:919:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	.loc 11 919 77
	popq	%rbp	 #
.LCFI808:
	ret	
.LFE5502:
	.seh_endproc
	.section	.text$_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEy,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEy
	.def	_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEy;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEy
_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEy:
.LFB5503:
	.loc 11 343 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI809:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI810:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __n, __n
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:346: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	.loc 11 346 18
	cmpq	$0, 24(%rbp)	 #, __n
	je	.L509	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:346: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	.loc 11 346 34 discriminator 1
	movq	16(%rbp), %rax	 # this, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:346: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	.loc 11 346 33 discriminator 1
	movq	24(%rbp), %rdx	 # __n, tmp85
	movq	%rax, %rcx	 # _1,
	call	_ZNSt16allocator_traitsISaIiEE8allocateERS0_y	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:346: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	.loc 11 346 58 discriminator 1
	jmp	.L511	 #
.L509:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:346: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	.loc 11 346 18 discriminator 2
	movl	$0, %eax	 #, _9
.L511:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:347:       }
	.loc 11 347 7 discriminator 5
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI811:
	ret	
.LFE5503:
	.seh_endproc
	.section	.text$_ZNSt6vectorIiSaIiEE11_S_relocateEPiS2_S2_RS0_,"x"
	.linkonce discard
	.globl	_ZNSt6vectorIiSaIiEE11_S_relocateEPiS2_S2_RS0_
	.def	_ZNSt6vectorIiSaIiEE11_S_relocateEPiS2_S2_RS0_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorIiSaIiEE11_S_relocateEPiS2_S2_RS0_
_ZNSt6vectorIiSaIiEE11_S_relocateEPiS2_S2_RS0_:
.LFB5504:
	.loc 11 465 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI812:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI813:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # __result, __result
	movq	%r9, 40(%rbp)	 # __alloc, __alloc
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:469: 	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
	.loc 11 469 23
	movq	40(%rbp), %rcx	 # __alloc, tmp85
	movq	32(%rbp), %rdx	 # __result, tmp86
	movq	24(%rbp), %rax	 # __last, tmp87
	movq	%rcx, %r9	 # tmp85,
	movq	%rdx, %r8	 # tmp86,
	movq	%rax, %rdx	 # tmp87,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZNSt6vectorIiSaIiEE14_S_do_relocateEPiS2_S2_RS0_St17integral_constantIbLb1EE	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:470:       }
	.loc 11 470 7
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI814:
	ret	
.LFE5504:
	.seh_endproc
	.section .rdata,"dr"
.LC26:
	.ascii "vector::_M_default_append\0"
	.section	.text$_ZNSt6vectorIiSaIiEE17_M_default_appendEy,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorIiSaIiEE17_M_default_appendEy
	.def	_ZNSt6vectorIiSaIiEE17_M_default_appendEy;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorIiSaIiEE17_M_default_appendEy
_ZNSt6vectorIiSaIiEE17_M_default_appendEy:
.LFB5505:
	.loc 14 611 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI815:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI816:
	subq	$72, %rsp	 #,
	.seh_stackalloc	72
.LCFI817:
	leaq	64(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 64
.LCFI818:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __n, __n
.LBB104:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:614:       if (__n != 0)
	.loc 14 614 7
	cmpq	$0, 40(%rbp)	 #, __n
	je	.L525	 #,
.LBB105:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:616: 	  const size_type __size = size();
	.loc 14 616 33
	movq	32(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIiSaIiEE4sizeEv	 #
	movq	%rax, -8(%rbp)	 # tmp120, __size
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:617: 	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
	.loc 14 617 49
	movq	32(%rbp), %rax	 # this, tmp121
	movq	16(%rax), %rdx	 # this_42(D)->D.106011._M_impl.D.105361._M_end_of_storage, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:618: 					 - this->_M_impl._M_finish);
	.loc 14 618 23
	movq	32(%rbp), %rax	 # this, tmp122
	movq	8(%rax), %rcx	 # this_42(D)->D.106011._M_impl.D.105361._M_finish, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:618: 					 - this->_M_impl._M_finish);
	.loc 14 618 7
	movq	%rdx, %rax	 # _1, _1
	subq	%rcx, %rax	 # _2, _1
	sarq	$2, %rax	 #, tmp123
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:617: 	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
	.loc 14 617 14
	movq	%rax, -16(%rbp)	 # _4, __navail
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:620: 	  if (__size > max_size() || __navail > max_size() - __size)
	.loc 14 620 25
	movq	32(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIiSaIiEE8max_sizeEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:620: 	  if (__size > max_size() || __navail > max_size() - __size)
	.loc 14 620 28
	cmpq	%rax, -8(%rbp)	 # _5, __size
	ja	.L516	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:620: 	  if (__size > max_size() || __navail > max_size() - __size)
	.loc 14 620 50 discriminator 2
	movq	32(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIiSaIiEE8max_sizeEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:620: 	  if (__size > max_size() || __navail > max_size() - __size)
	.loc 14 620 53 discriminator 2
	subq	-8(%rbp), %rax	 # __size, _7
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:620: 	  if (__size > max_size() || __navail > max_size() - __size)
	.loc 14 620 28 discriminator 2
	cmpq	%rax, -16(%rbp)	 # _7, __navail
	jbe	.L517	 #,
.L516:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:620: 	  if (__size > max_size() || __navail > max_size() - __size)
	.loc 14 620 28 is_stmt 0 discriminator 3
	movl	$1, %eax	 #, iftmp.49_35
	jmp	.L518	 #
.L517:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:620: 	  if (__size > max_size() || __navail > max_size() - __size)
	.loc 14 620 28 discriminator 4
	movl	$0, %eax	 #, iftmp.49_35
.L518:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:620: 	  if (__size > max_size() || __navail > max_size() - __size)
	.loc 14 620 4 is_stmt 1 discriminator 6
	testb	%al, %al	 # iftmp.49_35
.LBB106:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:623: 	  if (__navail >= __n)
	.loc 14 623 4 discriminator 6
	movq	-16(%rbp), %rax	 # __navail, tmp124
	cmpq	40(%rbp), %rax	 # __n, tmp124
	jb	.L520	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:628: 						 __n, _M_get_Tp_allocator());
	.loc 14 628 32
	movq	32(%rbp), %rax	 # this, _8
	movq	%rax, %rcx	 # _8,
	call	_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv	 #
	movq	%rax, %rcx	 #, _9
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:627: 		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
	.loc 14 627 35
	movq	32(%rbp), %rax	 # this, tmp125
	movq	8(%rax), %rax	 # this_42(D)->D.106011._M_impl.D.105361._M_finish, _10
	movq	40(%rbp), %rdx	 # __n, tmp126
	movq	%rcx, %r8	 # _9,
	movq	%rax, %rcx	 # _10,
.LEHB20:
	call	_ZSt27__uninitialized_default_n_aIPiyiET_S1_T0_RSaIT1_E	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:626: 	      this->_M_impl._M_finish =
	.loc 14 626 32
	movq	32(%rbp), %rdx	 # this, tmp127
	movq	%rax, 8(%rdx)	 # _11, this_42(D)->D.106011._M_impl.D.105361._M_finish
.LBE106:
.LBE105:
.LBE104:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:683:     }
	.loc 14 683 5
	jmp	.L525	 #
.L520:
.LBB113:
.LBB111:
.LBB109:
.LBB107:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:634: 		_M_check_len(__n, "vector::_M_default_append");
	.loc 14 634 15
	movq	40(%rbp), %rax	 # __n, tmp128
	leaq	.LC26(%rip), %r8	 #,
	movq	%rax, %rdx	 # tmp128,
	movq	32(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIiSaIiEE12_M_check_lenEyPKc	 #
	movq	%rax, -24(%rbp)	 # _52, __len
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:635: 	      pointer __new_start(this->_M_allocate(__len));
	.loc 14 635 45
	movq	32(%rbp), %rax	 # this, _12
	movq	-24(%rbp), %rdx	 # __len, tmp129
	movq	%rax, %rcx	 # _12,
	call	_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEy	 #
.LEHE20:
	movq	%rax, -32(%rbp)	 # _55, __new_start
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:641: 			      __n, _M_get_Tp_allocator());
	.loc 14 641 34
	movq	32(%rbp), %rax	 # this, _13
	movq	%rax, %rcx	 # _13,
	call	_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv	 #
	movq	%rax, %rdx	 #, _14
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:640: 		      std::__uninitialized_default_n_a(__new_start + __size,
	.loc 14 640 54
	movq	-8(%rbp), %rax	 # __size, tmp130
	leaq	0(,%rax,4), %rcx	 #, _15
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:640: 		      std::__uninitialized_default_n_a(__new_start + __size,
	.loc 14 640 41
	movq	-32(%rbp), %rax	 # __new_start, tmp131
	addq	%rax, %rcx	 # tmp131, _16
	movq	40(%rbp), %rax	 # __n, tmp132
	movq	%rdx, %r8	 # _14,
	movq	%rax, %rdx	 # tmp132,
.LEHB21:
	call	_ZSt27__uninitialized_default_n_aIPiyiET_S1_T0_RSaIT1_E	 #
.LEHE21:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:649: 			      __new_start, _M_get_Tp_allocator());
	.loc 14 649 42
	movq	32(%rbp), %rax	 # this, _19
	movq	%rax, %rcx	 # _19,
	call	_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv	 #
	movq	%rax, %rcx	 #, _20
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:648: 		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
	.loc 14 648 16
	movq	32(%rbp), %rax	 # this, tmp133
	movq	8(%rax), %rdx	 # this_42(D)->D.106011._M_impl.D.105361._M_finish, _21
	movq	32(%rbp), %rax	 # this, tmp134
	movq	(%rax), %rax	 # this_42(D)->D.106011._M_impl.D.105361._M_start, _22
	movq	-32(%rbp), %r8	 # __new_start, tmp135
	movq	%rcx, %r9	 # _20,
	movq	%rax, %rcx	 # _22,
	call	_ZNSt6vectorIiSaIiEE11_S_relocateEPiS2_S2_RS0_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:675: 	      _M_deallocate(this->_M_impl._M_start,
	.loc 14 675 21
	movq	32(%rbp), %rax	 # this, _23
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:676: 			    this->_M_impl._M_end_of_storage
	.loc 14 676 22
	movq	32(%rbp), %rdx	 # this, tmp136
	movq	16(%rdx), %rcx	 # this_42(D)->D.106011._M_impl.D.105361._M_end_of_storage, _24
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:677: 			    - this->_M_impl._M_start);
	.loc 14 677 24
	movq	32(%rbp), %rdx	 # this, tmp137
	movq	(%rdx), %r8	 # this_42(D)->D.106011._M_impl.D.105361._M_start, _25
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:677: 			    - this->_M_impl._M_start);
	.loc 14 677 8
	subq	%r8, %rcx	 # _25, _24
	movq	%rcx, %rdx	 # _24, _26
	sarq	$2, %rdx	 #, tmp138
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:675: 	      _M_deallocate(this->_M_impl._M_start,
	.loc 14 675 21
	movq	%rdx, %rcx	 # _27, _28
	movq	32(%rbp), %rdx	 # this, tmp139
	movq	(%rdx), %rdx	 # this_42(D)->D.106011._M_impl.D.105361._M_start, _29
	movq	%rcx, %r8	 # _28,
	movq	%rax, %rcx	 # _23,
.LEHB22:
	call	_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPiy	 #
.LEHE22:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:678: 	      this->_M_impl._M_start = __new_start;
	.loc 14 678 31
	movq	32(%rbp), %rax	 # this, tmp140
	movq	-32(%rbp), %rdx	 # __new_start, tmp141
	movq	%rdx, (%rax)	 # tmp141, this_42(D)->D.106011._M_impl.D.105361._M_start
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:679: 	      this->_M_impl._M_finish = __new_start + __size + __n;
	.loc 14 679 55
	movq	-8(%rbp), %rdx	 # __size, tmp142
	movq	40(%rbp), %rax	 # __n, tmp143
	addq	%rdx, %rax	 # tmp142, _30
	leaq	0(,%rax,4), %rdx	 #, _31
	movq	-32(%rbp), %rax	 # __new_start, tmp144
	addq	%rax, %rdx	 # tmp144, _32
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:679: 	      this->_M_impl._M_finish = __new_start + __size + __n;
	.loc 14 679 32
	movq	32(%rbp), %rax	 # this, tmp145
	movq	%rdx, 8(%rax)	 # _32, this_42(D)->D.106011._M_impl.D.105361._M_finish
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:680: 	      this->_M_impl._M_end_of_storage = __new_start + __len;
	.loc 14 680 54
	movq	-24(%rbp), %rax	 # __len, tmp146
	leaq	0(,%rax,4), %rdx	 #, _33
	movq	-32(%rbp), %rax	 # __new_start, tmp147
	addq	%rax, %rdx	 # tmp147, _34
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:680: 	      this->_M_impl._M_end_of_storage = __new_start + __len;
	.loc 14 680 40
	movq	32(%rbp), %rax	 # this, tmp148
	movq	%rdx, 16(%rax)	 # _34, this_42(D)->D.106011._M_impl.D.105361._M_end_of_storage
.LBE107:
.LBE109:
.LBE111:
.LBE113:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:683:     }
	.loc 14 683 5
	jmp	.L525	 #
.L523:
.LBB114:
.LBB112:
.LBB110:
.LBB108:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:643: 		  __catch(...)
	.loc 14 643 5
	movq	%rax, %rcx	 # _17,
	call	__cxa_begin_catch	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:645: 		      _M_deallocate(__new_start, __len);
	.loc 14 645 22
	movq	32(%rbp), %rax	 # this, _18
	movq	-24(%rbp), %rcx	 # __len, tmp150
	movq	-32(%rbp), %rdx	 # __new_start, tmp151
	movq	%rcx, %r8	 # tmp150,
	movq	%rax, %rcx	 # _18,
.LEHB23:
	call	_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPiy	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:646: 		      __throw_exception_again;
	.loc 14 646 9
	call	__cxa_rethrow	 #
.LEHE23:
.L524:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:643: 		  __catch(...)
	.loc 14 643 5
	movq	%rax, %rbx	 #, tmp152
	call	__cxa_end_catch	 #
	movq	%rbx, %rax	 # tmp152, D.129172
	movq	%rax, %rcx	 # D.129172,
.LEHB24:
	call	_Unwind_Resume	 #
.LEHE24:
.L525:
.LBE108:
.LBE110:
.LBE112:
.LBE114:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:683:     }
	.loc 14 683 5
	nop	
	addq	$72, %rsp	 #,
	popq	%rbx	 #
.LCFI819:
	popq	%rbp	 #
.LCFI820:
	ret	
.LFE5505:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
	.align 4
.LLSDA5505:
	.byte	0xff
	.byte	0x9b
	.uleb128 .LLSDATT5505-.LLSDATTD5505
.LLSDATTD5505:
	.byte	0x1
	.uleb128 .LLSDACSE5505-.LLSDACSB5505
.LLSDACSB5505:
	.uleb128 .LEHB20-.LFB5505
	.uleb128 .LEHE20-.LEHB20
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB21-.LFB5505
	.uleb128 .LEHE21-.LEHB21
	.uleb128 .L523-.LFB5505
	.uleb128 0x1
	.uleb128 .LEHB22-.LFB5505
	.uleb128 .LEHE22-.LEHB22
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB23-.LFB5505
	.uleb128 .LEHE23-.LEHB23
	.uleb128 .L524-.LFB5505
	.uleb128 0
	.uleb128 .LEHB24-.LFB5505
	.uleb128 .LEHE24-.LEHB24
	.uleb128 0
	.uleb128 0
.LLSDACSE5505:
	.byte	0x1
	.byte	0
	.align 4
	.long	0

.LLSDATT5505:
	.section	.text$_ZNSt6vectorIiSaIiEE17_M_default_appendEy,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi
	.def	_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi
_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi:
.LFB5506:
	.loc 11 1792 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI821:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI822:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __pos, __pos
.LBB115:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1794: 	if (size_type __n = this->_M_impl._M_finish - __pos)
	.loc 11 1794 36
	movq	16(%rbp), %rax	 # this, tmp88
	movq	8(%rax), %rax	 # this_9(D)->D.106011._M_impl.D.105361._M_finish, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1794: 	if (size_type __n = this->_M_impl._M_finish - __pos)
	.loc 11 1794 46
	subq	24(%rbp), %rax	 # __pos, _2
	sarq	$2, %rax	 #, tmp89
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1794: 	if (size_type __n = this->_M_impl._M_finish - __pos)
	.loc 11 1794 16
	movq	%rax, -8(%rbp)	 # _3, __n
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1794: 	if (size_type __n = this->_M_impl._M_finish - __pos)
	.loc 11 1794 2
	cmpq	$0, -8(%rbp)	 #, __n
	je	.L528	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1797: 			  _M_get_Tp_allocator());
	.loc 11 1797 25
	movq	16(%rbp), %rax	 # this, _4
	movq	%rax, %rcx	 # _4,
	call	_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv	 #
	movq	%rax, %rcx	 #, _5
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1796: 	    std::_Destroy(__pos, this->_M_impl._M_finish,
	.loc 11 1796 19
	movq	16(%rbp), %rax	 # this, tmp90
	movq	8(%rax), %rdx	 # this_9(D)->D.106011._M_impl.D.105361._M_finish, _6
	movq	24(%rbp), %rax	 # __pos, tmp91
	movq	%rcx, %r8	 # _5,
	movq	%rax, %rcx	 # tmp91,
	call	_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1798: 	    this->_M_impl._M_finish = __pos;
	.loc 11 1798 30
	movq	16(%rbp), %rax	 # this, tmp92
	movq	24(%rbp), %rdx	 # __pos, tmp93
	movq	%rdx, 8(%rax)	 # tmp93, this_9(D)->D.106011._M_impl.D.105361._M_finish
.L528:
.LBE115:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1801:       }
	.loc 11 1801 7
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI823:
	ret	
.LFE5506:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA5506:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE5506-.LLSDACSB5506
.LLSDACSB5506:
.LLSDACSE5506:
	.section	.text$_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZNKSt6vectorIbSaIbEE5beginEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt6vectorIbSaIbEE5beginEv
	.def	_ZNKSt6vectorIbSaIbEE5beginEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt6vectorIbSaIbEE5beginEv
_ZNKSt6vectorIbSaIbEE5beginEv:
.LFB5507:
	.loc 8 835 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI824:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI825:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, 24(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:836:       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
	.loc 8 836 54
	movq	24(%rbp), %rax	 # this, tmp83
	movq	(%rax), %rax	 # this_3(D)->D.103908._M_impl.D.103391._M_start.D.34297._M_p, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:836:       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
	.loc 8 836 61
	movl	$0, %r8d	 #,
	movq	%rax, %rdx	 # _1,
	movq	16(%rbp), %rcx	 # .result_ptr,
	call	_ZNSt19_Bit_const_iteratorC1EPmj	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:836:       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
	.loc 8 836 64
	movq	16(%rbp), %rax	 # .result_ptr,
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI826:
	ret	
.LFE5507:
	.seh_endproc
	.section	.text$_ZN9__gnu_cxx13new_allocatorIN3DDT4NodeEEC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZN9__gnu_cxx13new_allocatorIN3DDT4NodeEEC2Ev
	.def	_ZN9__gnu_cxx13new_allocatorIN3DDT4NodeEEC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN9__gnu_cxx13new_allocatorIN3DDT4NodeEEC2Ev
_ZN9__gnu_cxx13new_allocatorIN3DDT4NodeEEC2Ev:
.LFB5509:
	.file 22 "c:/users/pluto/scoop/apps/gcc/current/include/c++/11.2.0/ext/new_allocator.h"
	.loc 22 79 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI827:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI828:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:79:       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
	.loc 22 79 47
	nop	
	popq	%rbp	 #
.LCFI829:
	ret	
.LFE5509:
	.seh_endproc
	.section	.text$_ZNSt16allocator_traitsISaIN3DDT4NodeEEE10deallocateERS2_PS1_y,"x"
	.linkonce discard
	.globl	_ZNSt16allocator_traitsISaIN3DDT4NodeEEE10deallocateERS2_PS1_y
	.def	_ZNSt16allocator_traitsISaIN3DDT4NodeEEE10deallocateERS2_PS1_y;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt16allocator_traitsISaIN3DDT4NodeEEE10deallocateERS2_PS1_y
_ZNSt16allocator_traitsISaIN3DDT4NodeEEE10deallocateERS2_PS1_y:
.LFB5511:
	.loc 16 491 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI830:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI831:
	subq	$64, %rsp	 #,
	.seh_stackalloc	64
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __a, __a
	movq	%rdx, 24(%rbp)	 # __p, __p
	movq	%r8, 32(%rbp)	 # __n, __n
	movq	16(%rbp), %rax	 # __a, tmp83
	movq	%rax, -8(%rbp)	 # tmp83, this
	movq	24(%rbp), %rax	 # __p, tmp84
	movq	%rax, -16(%rbp)	 # tmp84, __p
	movq	32(%rbp), %rax	 # __n, tmp85
	movq	%rax, -24(%rbp)	 # tmp85, __n
.LBB116:
.LBB117:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:205: 	if (std::is_constant_evaluated())
	.loc 12 205 32
	call	_ZSt21is_constant_evaluatedv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:205: 	if (std::is_constant_evaluated())
	.loc 12 205 2
	testb	%al, %al	 # retval.79_8
	je	.L533	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:207: 	    ::operator delete(__p);
	.loc 12 207 23
	movq	-16(%rbp), %rax	 # __p, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZdlPv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:208: 	    return;
	.loc 12 208 6
	jmp	.L534	 #
.L533:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:211: 	  __allocator_base<_Tp>::deallocate(__p, __n);
	.loc 12 211 37
	movq	-24(%rbp), %rcx	 # __n, tmp87
	movq	-16(%rbp), %rdx	 # __p, tmp88
	movq	-8(%rbp), %rax	 # this, tmp89
	movq	%rcx, %r8	 # tmp87,
	movq	%rax, %rcx	 # tmp89,
	call	_ZN9__gnu_cxx13new_allocatorIN3DDT4NodeEE10deallocateEPS2_y	 #
.LBE117:
.LBE116:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\alloc_traits.h:492:       { __a.deallocate(__p, __n); }
	.loc 16 492 35
	nop	
.L534:
	nop	
	addq	$64, %rsp	 #,
	popq	%rbp	 #
.LCFI832:
	ret	
.LFE5511:
	.seh_endproc
	.section	.text$_ZSt8_DestroyIPN3DDT4NodeEEvT_S3_,"x"
	.linkonce discard
	.globl	_ZSt8_DestroyIPN3DDT4NodeEEvT_S3_
	.def	_ZSt8_DestroyIPN3DDT4NodeEEvT_S3_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt8_DestroyIPN3DDT4NodeEEvT_S3_
_ZSt8_DestroyIPN3DDT4NodeEEvT_S3_:
.LFB5512:
	.loc 21 171 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI833:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI834:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:181:       if (std::is_constant_evaluated())
	.loc 21 181 37
	call	_ZSt21is_constant_evaluatedv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:181:       if (std::is_constant_evaluated())
	.loc 21 181 7
	testb	%al, %al	 # retval.78_4
	je	.L536	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:182: 	return _Destroy_aux<false>::__destroy(__first, __last);
	.loc 21 182 39
	movq	24(%rbp), %rax	 # __last, tmp83
	movq	%rax, %rdx	 # tmp83,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZNSt12_Destroy_auxILb0EE9__destroyIPN3DDT4NodeEEEvT_S5_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:182: 	return _Destroy_aux<false>::__destroy(__first, __last);
	.loc 21 182 55
	jmp	.L535	 #
.L536:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:185: 	__destroy(__first, __last);
	.loc 21 185 11
	movq	24(%rbp), %rax	 # __last, tmp84
	movq	%rax, %rdx	 # tmp84,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZNSt12_Destroy_auxILb0EE9__destroyIPN3DDT4NodeEEEvT_S5_	 #
	nop	
.L535:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:186:     }
	.loc 21 186 5
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI835:
	ret	
.LFE5512:
	.seh_endproc
	.section	.text$_ZSt7forwardIN3DDT4NodeEEOT_RNSt16remove_referenceIS2_E4typeE,"x"
	.linkonce discard
	.globl	_ZSt7forwardIN3DDT4NodeEEOT_RNSt16remove_referenceIS2_E4typeE
	.def	_ZSt7forwardIN3DDT4NodeEEOT_RNSt16remove_referenceIS2_E4typeE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt7forwardIN3DDT4NodeEEOT_RNSt16remove_referenceIS2_E4typeE
_ZSt7forwardIN3DDT4NodeEEOT_RNSt16remove_referenceIS2_E4typeE:
.LFB5513:
	.loc 17 77 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI836:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI837:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\move.h:78:     { return static_cast<_Tp&&>(__t); }
	.loc 17 78 36
	movq	16(%rbp), %rax	 # __t, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\move.h:78:     { return static_cast<_Tp&&>(__t); }
	.loc 17 78 39
	popq	%rbp	 #
.LCFI838:
	ret	
.LFE5513:
	.seh_endproc
	.section	.text$_ZN3DDT4NodeC1EOS0_,"x"
	.linkonce discard
	.align 2
	.globl	_ZN3DDT4NodeC1EOS0_
	.def	_ZN3DDT4NodeC1EOS0_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN3DDT4NodeC1EOS0_
_ZN3DDT4NodeC1EOS0_:
.LFB5518:
	.loc 10 50 9
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI839:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI840:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # D.106493, D.106493
.LBB118:
 # main.cpp:50: 	struct Node {
	.loc 10 50 9
	movq	24(%rbp), %rax	 # D.106493, tmp86
	movl	(%rax), %edx	 # _8(D)->action, _1
	movq	16(%rbp), %rax	 # this, tmp87
	movl	%edx, (%rax)	 # _1, this_6(D)->action
	movq	16(%rbp), %rax	 # this, tmp88
	addq	$8, %rax	 #, _2
	movq	24(%rbp), %rdx	 # D.106493, tmp89
	addq	$8, %rdx	 #, _3
	movq	%rax, %rcx	 # _2,
	call	_ZN7OptimapIhiEC1ERKS0_	 #
.LBE118:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI841:
	ret	
.LFE5518:
	.seh_endproc
	.section	.text$_ZSt12construct_atIN3DDT4NodeEJS1_EEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_,"x"
	.linkonce discard
	.globl	_ZSt12construct_atIN3DDT4NodeEJS1_EEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_
	.def	_ZSt12construct_atIN3DDT4NodeEJS1_EEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt12construct_atIN3DDT4NodeEJS1_EEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_
_ZSt12construct_atIN3DDT4NodeEJS1_EEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_:
.LFB5515:
	.loc 21 94 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI842:
	pushq	%rdi	 #
	.seh_pushreg	%rdi
.LCFI843:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI844:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI845:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI846:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI847:
	.seh_endprologue
	movq	%rcx, 48(%rbp)	 # __location, __location
	movq	%rdx, 56(%rbp)	 # __args#0, __args#0
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:97:     { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
	.loc 21 97 62
	movq	56(%rbp), %rax	 # __args#0, tmp87
	movq	%rax, %rcx	 # tmp87,
	call	_ZSt7forwardIN3DDT4NodeEEOT_RNSt16remove_referenceIS2_E4typeE	 #
	movq	%rax, %rdi	 #, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:97:     { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
	.loc 21 97 20
	movq	48(%rbp), %rsi	 # __location, _6
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:97:     { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
	.loc 21 97 14
	movq	%rsi, %rdx	 # _6,
	movl	$72, %ecx	 #,
	call	_ZnwyPv	 #
	movq	%rax, %rbx	 #, _8
	movq	%rdi, %rdx	 # _4,
	movq	%rbx, %rcx	 # _8,
.LEHB25:
	call	_ZN3DDT4NodeC1EOS0_	 #
.LEHE25:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:97:     { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
	.loc 21 97 73 discriminator 2
	movq	%rbx, %rax	 # _8, <retval>
	jmp	.L545	 #
.L544:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:97:     { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
	.loc 21 97 14
	movq	%rax, %rdi	 #, tmp89
	movq	%rsi, %rdx	 # _6,
	movq	%rbx, %rcx	 # _8,
	call	_ZdlPvS_	 #
	movq	%rdi, %rax	 # tmp89, D.129175
	movq	%rax, %rcx	 # D.129175,
.LEHB26:
	call	_Unwind_Resume	 #
.LEHE26:
.L545:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:97:     { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
	.loc 21 97 76
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI848:
	popq	%rsi	 #
.LCFI849:
	popq	%rdi	 #
.LCFI850:
	popq	%rbp	 #
.LCFI851:
	ret	
.LFE5515:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA5515:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE5515-.LLSDACSB5515
.LLSDACSB5515:
	.uleb128 .LEHB25-.LFB5515
	.uleb128 .LEHE25-.LEHB25
	.uleb128 .L544-.LFB5515
	.uleb128 0
	.uleb128 .LEHB26-.LFB5515
	.uleb128 .LEHE26-.LEHB26
	.uleb128 0
	.uleb128 0
.LLSDACSE5515:
	.section	.text$_ZSt12construct_atIN3DDT4NodeEJS1_EEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZNSt16allocator_traitsISaIN3DDT4NodeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_,"x"
	.linkonce discard
	.globl	_ZNSt16allocator_traitsISaIN3DDT4NodeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_
	.def	_ZNSt16allocator_traitsISaIN3DDT4NodeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt16allocator_traitsISaIN3DDT4NodeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_
_ZNSt16allocator_traitsISaIN3DDT4NodeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_:
.LFB5514:
	.loc 16 507 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI852:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI853:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __a, __a
	movq	%rdx, 24(%rbp)	 # __p, __p
	movq	%r8, 32(%rbp)	 # __args#0, __args#0
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\alloc_traits.h:514: 	  std::construct_at(__p, std::forward<_Args>(__args)...);
	.loc 16 514 21
	movq	32(%rbp), %rax	 # __args#0, tmp83
	movq	%rax, %rcx	 # tmp83,
	call	_ZSt7forwardIN3DDT4NodeEEOT_RNSt16remove_referenceIS2_E4typeE	 #
	movq	%rax, %rdx	 #, _1
	movq	24(%rbp), %rax	 # __p, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZSt12construct_atIN3DDT4NodeEJS1_EEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\alloc_traits.h:516: 	}
	.loc 16 516 2
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI854:
	ret	
.LFE5514:
	.seh_endproc
	.section .rdata,"dr"
.LC27:
	.ascii "vector::_M_realloc_insert\0"
	.section	.text$_ZNSt6vectorIN3DDT4NodeESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorIN3DDT4NodeESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
	.def	_ZNSt6vectorIN3DDT4NodeESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorIN3DDT4NodeESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
_ZNSt6vectorIN3DDT4NodeESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:
.LFB5519:
	.loc 14 426 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI855:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI856:
	subq	$104, %rsp	 #,
	.seh_stackalloc	104
.LCFI857:
	leaq	96(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 96
.LCFI858:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __position, __position
	movq	%r8, 48(%rbp)	 # __args#0, __args#0
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:436: 	_M_check_len(size_type(1), "vector::_M_realloc_insert");
	.loc 14 436 14
	leaq	.LC27(%rip), %r8	 #,
	movl	$1, %edx	 #,
	movq	32(%rbp), %rcx	 # this,
.LEHB27:
	call	_ZNKSt6vectorIN3DDT4NodeESaIS1_EE12_M_check_lenEyPKc	 #
	movq	%rax, -16(%rbp)	 # _38, __len
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:437:       pointer __old_start = this->_M_impl._M_start;
	.loc 14 437 15
	movq	32(%rbp), %rax	 # this, tmp117
	movq	(%rax), %rax	 # this_36(D)->D.105007._M_impl.D.104320._M_start, tmp118
	movq	%rax, -24(%rbp)	 # tmp118, __old_start
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:438:       pointer __old_finish = this->_M_impl._M_finish;
	.loc 14 438 15
	movq	32(%rbp), %rax	 # this, tmp119
	movq	8(%rax), %rax	 # this_36(D)->D.105007._M_impl.D.104320._M_finish, tmp120
	movq	%rax, -32(%rbp)	 # tmp120, __old_finish
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:439:       const size_type __elems_before = __position - begin();
	.loc 14 439 58
	movq	32(%rbp), %rcx	 # this,
	call	_ZNSt6vectorIN3DDT4NodeESaIS1_EE5beginEv	 #
	movq	%rax, -56(%rbp)	 # tmp122, D.119888
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:439:       const size_type __elems_before = __position - begin();
	.loc 14 439 51
	leaq	-56(%rbp), %rdx	 #, tmp123
	leaq	40(%rbp), %rax	 #, tmp124
	movq	%rax, %rcx	 # tmp124,
	call	_ZN9__gnu_cxxmiIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:439:       const size_type __elems_before = __position - begin();
	.loc 14 439 23
	movq	%rax, -40(%rbp)	 # _1, __elems_before
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:440:       pointer __new_start(this->_M_allocate(__len));
	.loc 14 440 44
	movq	32(%rbp), %rax	 # this, _2
	movq	-16(%rbp), %rdx	 # __len, tmp125
	movq	%rax, %rcx	 # _2,
	call	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE11_M_allocateEy	 #
.LEHE27:
	movq	%rax, -48(%rbp)	 # _47, __new_start
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:441:       pointer __new_finish(__new_start);
	.loc 14 441 15
	movq	-48(%rbp), %rax	 # __new_start, tmp126
	movq	%rax, -8(%rbp)	 # tmp126, __new_finish
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:449: 	  _Alloc_traits::construct(this->_M_impl,
	.loc 14 449 28
	movq	48(%rbp), %rax	 # __args#0, tmp127
	movq	%rax, %rcx	 # tmp127,
	call	_ZSt7forwardIN3DDT4NodeEEOT_RNSt16remove_referenceIS2_E4typeE	 #
	movq	%rax, %rcx	 #, _3
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:450: 				   __new_start + __elems_before,
	.loc 14 450 20
	movq	-40(%rbp), %rdx	 # __elems_before, tmp128
	movq	%rdx, %rax	 # tmp128, tmp129
	salq	$3, %rax	 #, tmp129
	addq	%rdx, %rax	 # tmp128, tmp129
	salq	$3, %rax	 #, tmp130
	movq	%rax, %rdx	 # tmp129, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:449: 	  _Alloc_traits::construct(this->_M_impl,
	.loc 14 449 28
	movq	-48(%rbp), %rax	 # __new_start, tmp131
	addq	%rax, %rdx	 # tmp131, _5
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:449: 	  _Alloc_traits::construct(this->_M_impl,
	.loc 14 449 35
	movq	32(%rbp), %rax	 # this, _6
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:449: 	  _Alloc_traits::construct(this->_M_impl,
	.loc 14 449 28
	movq	%rcx, %r8	 # _3,
	movq	%rax, %rcx	 # _6,
.LEHB28:
	call	_ZNSt16allocator_traitsISaIN3DDT4NodeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:456: 	  __new_finish = pointer();
	.loc 14 456 17
	movq	$0, -8(%rbp)	 #, __new_finish
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:475: 		 __new_start, _M_get_Tp_allocator());
	.loc 14 475 36
	movq	32(%rbp), %rax	 # this, _7
	movq	%rax, %rcx	 # _7,
	call	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE19_M_get_Tp_allocatorEv	 #
	movq	%rax, %rbx	 #, _8
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:474: 		(__old_start, __position.base(),
	.loc 14 474 32
	leaq	40(%rbp), %rax	 #, tmp132
	movq	%rax, %rcx	 # tmp132,
	call	_ZNK9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEE4baseEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:474: 		(__old_start, __position.base(),
	.loc 14 474 3
	movq	(%rax), %rdx	 # *_9, _10
	movq	-48(%rbp), %rcx	 # __new_start, tmp133
	movq	-24(%rbp), %rax	 # __old_start, tmp134
	movq	%rbx, %r9	 # _8,
	movq	%rcx, %r8	 # tmp133,
	movq	%rax, %rcx	 # tmp134,
	call	_ZSt34__uninitialized_move_if_noexcept_aIPN3DDT4NodeES2_SaIS1_EET0_T_S5_S4_RT1_	 #
	movq	%rax, -8(%rbp)	 # _57, __new_finish
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:477: 	      ++__new_finish;
	.loc 14 477 8
	addq	$72, -8(%rbp)	 #, __new_finish
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:482: 		 __new_finish, _M_get_Tp_allocator());
	.loc 14 482 37
	movq	32(%rbp), %rax	 # this, _11
	movq	%rax, %rcx	 # _11,
	call	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE19_M_get_Tp_allocatorEv	 #
	movq	%rax, %rbx	 #, _12
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:481: 		(__position.base(), __old_finish,
	.loc 14 481 19
	leaq	40(%rbp), %rax	 #, tmp135
	movq	%rax, %rcx	 # tmp135,
	call	_ZNK9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEE4baseEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:481: 		(__position.base(), __old_finish,
	.loc 14 481 3
	movq	(%rax), %rax	 # *_13, _14
	movq	-8(%rbp), %rcx	 # __new_finish, tmp136
	movq	-32(%rbp), %rdx	 # __old_finish, tmp137
	movq	%rbx, %r9	 # _12,
	movq	%rcx, %r8	 # tmp136,
	movq	%rax, %rcx	 # _14,
	call	_ZSt34__uninitialized_move_if_noexcept_aIPN3DDT4NodeES2_SaIS1_EET0_T_S5_S4_RT1_	 #
.LEHE28:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:481: 		(__position.base(), __old_finish,
	.loc 14 481 3 is_stmt 0 discriminator 1
	movq	%rax, -8(%rbp)	 # _63, __new_finish
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:498: 	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
	.loc 14 498 62 is_stmt 1 discriminator 1
	movq	32(%rbp), %rax	 # this, _22
	movq	%rax, %rcx	 # _22,
	call	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE19_M_get_Tp_allocatorEv	 #
	movq	%rax, %rcx	 #, _23
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:498: 	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
	.loc 14 498 15 discriminator 1
	movq	-32(%rbp), %rdx	 # __old_finish, tmp138
	movq	-24(%rbp), %rax	 # __old_start, tmp139
	movq	%rcx, %r8	 # _23,
	movq	%rax, %rcx	 # tmp139,
.LEHB29:
	call	_ZSt8_DestroyIPN3DDT4NodeES1_EvT_S3_RSaIT0_E	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:500:       _M_deallocate(__old_start,
	.loc 14 500 20 discriminator 1
	movq	32(%rbp), %rax	 # this, _24
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:501: 		    this->_M_impl._M_end_of_storage - __old_start);
	.loc 14 501 21 discriminator 1
	movq	32(%rbp), %rdx	 # this, tmp140
	movq	16(%rdx), %rdx	 # this_36(D)->D.105007._M_impl.D.104320._M_end_of_storage, _25
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:501: 		    this->_M_impl._M_end_of_storage - __old_start);
	.loc 14 501 39 discriminator 1
	subq	-24(%rbp), %rdx	 # __old_start, _26
	movq	%rdx, %rcx	 # _26, _26
	sarq	$3, %rcx	 #, _26
	movabsq	$-8198552921648689607, %rdx	 #, tmp143
	imulq	%rcx, %rdx	 # tmp141, tmp142
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:500:       _M_deallocate(__old_start,
	.loc 14 500 20 discriminator 1
	movq	%rdx, %rcx	 # _27, _28
	movq	-24(%rbp), %rdx	 # __old_start, tmp144
	movq	%rcx, %r8	 # _28,
	movq	%rax, %rcx	 # _24,
	call	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE13_M_deallocateEPS1_y	 #
.LEHE29:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:502:       this->_M_impl._M_start = __new_start;
	.loc 14 502 30 discriminator 1
	movq	32(%rbp), %rax	 # this, tmp145
	movq	-48(%rbp), %rdx	 # __new_start, tmp146
	movq	%rdx, (%rax)	 # tmp146, this_36(D)->D.105007._M_impl.D.104320._M_start
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:503:       this->_M_impl._M_finish = __new_finish;
	.loc 14 503 31 discriminator 1
	movq	32(%rbp), %rax	 # this, tmp147
	movq	-8(%rbp), %rdx	 # __new_finish, tmp148
	movq	%rdx, 8(%rax)	 # tmp148, this_36(D)->D.105007._M_impl.D.104320._M_finish
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:504:       this->_M_impl._M_end_of_storage = __new_start + __len;
	.loc 14 504 53 discriminator 1
	movq	-16(%rbp), %rdx	 # __len, tmp149
	movq	%rdx, %rax	 # tmp149, tmp150
	salq	$3, %rax	 #, tmp150
	addq	%rdx, %rax	 # tmp149, tmp150
	salq	$3, %rax	 #, tmp151
	movq	%rax, %rdx	 # tmp150, _29
	movq	-48(%rbp), %rax	 # __new_start, tmp152
	addq	%rax, %rdx	 # tmp152, _30
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:504:       this->_M_impl._M_end_of_storage = __new_start + __len;
	.loc 14 504 39 discriminator 1
	movq	32(%rbp), %rax	 # this, tmp153
	movq	%rdx, 16(%rax)	 # _30, this_36(D)->D.105007._M_impl.D.104320._M_end_of_storage
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:505:     }
	.loc 14 505 5 discriminator 1
	jmp	.L554	 #
.L552:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:485:       __catch(...)
	.loc 14 485 7
	movq	%rax, %rcx	 # _15,
	call	__cxa_begin_catch	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:487: 	  if (!__new_finish)
	.loc 14 487 4
	cmpq	$0, -8(%rbp)	 #, __new_finish
	jne	.L549	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:489: 				   __new_start + __elems_before);
	.loc 14 489 20
	movq	-40(%rbp), %rdx	 # __elems_before, tmp155
	movq	%rdx, %rax	 # tmp155, tmp156
	salq	$3, %rax	 #, tmp156
	addq	%rdx, %rax	 # tmp155, tmp156
	salq	$3, %rax	 #, tmp157
	movq	%rax, %rdx	 # tmp156, _16
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:488: 	    _Alloc_traits::destroy(this->_M_impl,
	.loc 14 488 28
	movq	-48(%rbp), %rax	 # __new_start, tmp158
	addq	%rax, %rdx	 # tmp158, _17
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:488: 	    _Alloc_traits::destroy(this->_M_impl,
	.loc 14 488 35
	movq	32(%rbp), %rax	 # this, _18
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:488: 	    _Alloc_traits::destroy(this->_M_impl,
	.loc 14 488 28
	movq	%rax, %rcx	 # _18,
	call	_ZNSt16allocator_traitsISaIN3DDT4NodeEEE7destroyIS1_EEvRS2_PT_	 #
	jmp	.L550	 #
.L549:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:491: 	    std::_Destroy(__new_start, __new_finish, _M_get_Tp_allocator());
	.loc 14 491 66
	movq	32(%rbp), %rax	 # this, _19
	movq	%rax, %rcx	 # _19,
	call	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE19_M_get_Tp_allocatorEv	 #
	movq	%rax, %rcx	 #, _20
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:491: 	    std::_Destroy(__new_start, __new_finish, _M_get_Tp_allocator());
	.loc 14 491 19
	movq	-8(%rbp), %rdx	 # __new_finish, tmp159
	movq	-48(%rbp), %rax	 # __new_start, tmp160
	movq	%rcx, %r8	 # _20,
	movq	%rax, %rcx	 # tmp160,
.LEHB30:
	call	_ZSt8_DestroyIPN3DDT4NodeES1_EvT_S3_RSaIT0_E	 #
.L550:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:492: 	  _M_deallocate(__new_start, __len);
	.loc 14 492 17
	movq	32(%rbp), %rax	 # this, _21
	movq	-16(%rbp), %rcx	 # __len, tmp161
	movq	-48(%rbp), %rdx	 # __new_start, tmp162
	movq	%rcx, %r8	 # tmp161,
	movq	%rax, %rcx	 # _21,
	call	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE13_M_deallocateEPS1_y	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:493: 	  __throw_exception_again;
	.loc 14 493 4
	call	__cxa_rethrow	 #
.LEHE30:
.L553:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:485:       __catch(...)
	.loc 14 485 7
	movq	%rax, %rbx	 #, tmp163
	call	__cxa_end_catch	 #
	movq	%rbx, %rax	 # tmp163, D.129176
	movq	%rax, %rcx	 # D.129176,
.LEHB31:
	call	_Unwind_Resume	 #
	nop	
.LEHE31:
.L554:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:505:     }
	.loc 14 505 5
	addq	$104, %rsp	 #,
	popq	%rbx	 #
.LCFI859:
	popq	%rbp	 #
.LCFI860:
	ret	
.LFE5519:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
	.align 4
.LLSDA5519:
	.byte	0xff
	.byte	0x9b
	.uleb128 .LLSDATT5519-.LLSDATTD5519
.LLSDATTD5519:
	.byte	0x1
	.uleb128 .LLSDACSE5519-.LLSDACSB5519
.LLSDACSB5519:
	.uleb128 .LEHB27-.LFB5519
	.uleb128 .LEHE27-.LEHB27
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB28-.LFB5519
	.uleb128 .LEHE28-.LEHB28
	.uleb128 .L552-.LFB5519
	.uleb128 0x1
	.uleb128 .LEHB29-.LFB5519
	.uleb128 .LEHE29-.LEHB29
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB30-.LFB5519
	.uleb128 .LEHE30-.LEHB30
	.uleb128 .L553-.LFB5519
	.uleb128 0
	.uleb128 .LEHB31-.LFB5519
	.uleb128 .LEHE31-.LEHB31
	.uleb128 0
	.uleb128 0
.LLSDACSE5519:
	.byte	0x1
	.byte	0
	.align 4
	.long	0

.LLSDATT5519:
	.section	.text$_ZNSt6vectorIN3DDT4NodeESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZNSt6vectorIN3DDT4NodeESaIS1_EE4backEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorIN3DDT4NodeESaIS1_EE4backEv
	.def	_ZNSt6vectorIN3DDT4NodeESaIS1_EE4backEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorIN3DDT4NodeESaIS1_EE4backEv
_ZNSt6vectorIN3DDT4NodeESaIS1_EE4backEv:
.LFB5522:
	.loc 11 1143 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI861:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI862:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1146: 	return *(end() - 1);
	.loc 11 1146 14
	movq	16(%rbp), %rcx	 # this,
	call	_ZNSt6vectorIN3DDT4NodeESaIS1_EE3endEv	 #
	movq	%rax, -8(%rbp)	 # tmp85, D.120136
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1146: 	return *(end() - 1);
	.loc 11 1146 17
	leaq	-8(%rbp), %rax	 #, tmp86
	movl	$1, %edx	 #,
	movq	%rax, %rcx	 # tmp86,
	call	_ZNK9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEmiEx	 #
	movq	%rax, -16(%rbp)	 # tmp88, D.120137
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1146: 	return *(end() - 1);
	.loc 11 1146 9
	leaq	-16(%rbp), %rax	 #, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZNK9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEdeEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1147:       }
	.loc 11 1147 7
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI863:
	ret	
.LFE5522:
	.seh_endproc
	.section	.text$_ZNSt6vectorIN3DDT4NodeESaIS1_EE15_M_erase_at_endEPS1_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorIN3DDT4NodeESaIS1_EE15_M_erase_at_endEPS1_
	.def	_ZNSt6vectorIN3DDT4NodeESaIS1_EE15_M_erase_at_endEPS1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorIN3DDT4NodeESaIS1_EE15_M_erase_at_endEPS1_
_ZNSt6vectorIN3DDT4NodeESaIS1_EE15_M_erase_at_endEPS1_:
.LFB5523:
	.loc 11 1792 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI864:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI865:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __pos, __pos
.LBB119:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1794: 	if (size_type __n = this->_M_impl._M_finish - __pos)
	.loc 11 1794 36
	movq	16(%rbp), %rax	 # this, tmp88
	movq	8(%rax), %rax	 # this_9(D)->D.105007._M_impl.D.104320._M_finish, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1794: 	if (size_type __n = this->_M_impl._M_finish - __pos)
	.loc 11 1794 46
	subq	24(%rbp), %rax	 # __pos, _2
	sarq	$3, %rax	 #, _2
	movq	%rax, %rdx	 # _2, tmp89
	movabsq	$-8198552921648689607, %rax	 #, tmp91
	imulq	%rdx, %rax	 # tmp89, tmp90
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1794: 	if (size_type __n = this->_M_impl._M_finish - __pos)
	.loc 11 1794 16
	movq	%rax, -8(%rbp)	 # _3, __n
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1794: 	if (size_type __n = this->_M_impl._M_finish - __pos)
	.loc 11 1794 2
	cmpq	$0, -8(%rbp)	 #, __n
	je	.L559	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1797: 			  _M_get_Tp_allocator());
	.loc 11 1797 25
	movq	16(%rbp), %rax	 # this, _4
	movq	%rax, %rcx	 # _4,
	call	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE19_M_get_Tp_allocatorEv	 #
	movq	%rax, %rcx	 #, _5
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1796: 	    std::_Destroy(__pos, this->_M_impl._M_finish,
	.loc 11 1796 19
	movq	16(%rbp), %rax	 # this, tmp92
	movq	8(%rax), %rdx	 # this_9(D)->D.105007._M_impl.D.104320._M_finish, _6
	movq	24(%rbp), %rax	 # __pos, tmp93
	movq	%rcx, %r8	 # _5,
	movq	%rax, %rcx	 # tmp93,
	call	_ZSt8_DestroyIPN3DDT4NodeES1_EvT_S3_RSaIT0_E	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1798: 	    this->_M_impl._M_finish = __pos;
	.loc 11 1798 30
	movq	16(%rbp), %rax	 # this, tmp94
	movq	24(%rbp), %rdx	 # __pos, tmp95
	movq	%rdx, 8(%rax)	 # tmp95, this_9(D)->D.105007._M_impl.D.104320._M_finish
.L559:
.LBE119:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1801:       }
	.loc 11 1801 7
	nop	
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI866:
	ret	
.LFE5523:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA5523:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE5523-.LLSDACSB5523
.LLSDACSB5523:
.LLSDACSE5523:
	.section	.text$_ZNSt6vectorIN3DDT4NodeESaIS1_EE15_M_erase_at_endEPS1_,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS2_SaIS2_EEEC1ERKS4_,"x"
	.linkonce discard
	.align 2
	.globl	_ZN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS2_SaIS2_EEEC1ERKS4_
	.def	_ZN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS2_SaIS2_EEEC1ERKS4_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS2_SaIS2_EEEC1ERKS4_
_ZN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS2_SaIS2_EEEC1ERKS4_:
.LFB5526:
	.loc 15 1010 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI867:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI868:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __i, __i
.LBB120:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1011:       : _M_current(__i) { }
	.loc 15 1011 9
	movq	24(%rbp), %rax	 # __i, tmp83
	movq	(%rax), %rdx	 # *__i_5(D), _1
	movq	16(%rbp), %rax	 # this, tmp84
	movq	%rdx, (%rax)	 # _1, this_3(D)->_M_current
.LBE120:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1011:       : _M_current(__i) { }
	.loc 15 1011 27
	nop	
	popq	%rbp	 #
.LCFI869:
	ret	
.LFE5526:
	.seh_endproc
	.section	.text$_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE11_M_allocateEy,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE11_M_allocateEy
	.def	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE11_M_allocateEy;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE11_M_allocateEy
_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE11_M_allocateEy:
.LFB5527:
	.loc 11 343 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI870:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI871:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __n, __n
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:346: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	.loc 11 346 18
	cmpq	$0, 24(%rbp)	 #, __n
	je	.L562	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:346: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	.loc 11 346 34 discriminator 1
	movq	16(%rbp), %rax	 # this, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:346: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	.loc 11 346 33 discriminator 1
	movq	24(%rbp), %rdx	 # __n, tmp85
	movq	%rax, %rcx	 # _1,
	call	_ZNSt16allocator_traitsISaIN3DDT4NodeEEE8allocateERS2_y	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:346: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	.loc 11 346 58 discriminator 1
	jmp	.L564	 #
.L562:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:346: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	.loc 11 346 18 discriminator 2
	movl	$0, %eax	 #, _9
.L564:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:347:       }
	.loc 11 347 7 discriminator 5
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI872:
	ret	
.LFE5527:
	.seh_endproc
	.section	.text$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E,"x"
	.linkonce discard
	.globl	_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E
	.def	_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E
_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E:
.LFB5528:
	.loc 19 331 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI873:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI874:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # __result, __result
	movq	%r9, 40(%rbp)	 # D.120154, D.120154
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:333:     { return std::uninitialized_copy(__first, __last, __result); }
	.loc 19 333 37
	movq	32(%rbp), %rdx	 # __result, tmp84
	movq	24(%rbp), %rax	 # __last, tmp85
	movq	%rdx, %r8	 # tmp84,
	movq	%rax, %rdx	 # tmp85,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:333:     { return std::uninitialized_copy(__first, __last, __result); }
	.loc 19 333 66
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI875:
	ret	
.LFE5528:
	.seh_endproc
	.section	.text$_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS3_SaIS3_EEEEET_SA_,"x"
	.linkonce discard
	.globl	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS3_SaIS3_EEEEET_SA_
	.def	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS3_SaIS3_EEEEET_SA_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS3_SaIS3_EEEEET_SA_
_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS3_SaIS3_EEEEET_SA_:
.LFB5529:
	.loc 18 560 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI876:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI877:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __it, __it
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\cpp_type_traits.h:561:     { return __it; }
	.loc 18 561 14
	movq	16(%rbp), %rax	 # __it, D.128211
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\cpp_type_traits.h:561:     { return __it; }
	.loc 18 561 20
	popq	%rbp	 #
.LCFI878:
	ret	
.LFE5529:
	.seh_endproc
	.section	.text$_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET1_T0_SD_SC_,"x"
	.linkonce discard
	.globl	_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET1_T0_SD_SC_
	.def	_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET1_T0_SD_SC_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET1_T0_SD_SC_
_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET1_T0_SD_SC_:
.LFB5530:
	.loc 3 527 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI879:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI880:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI881:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
.LCFI882:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI883:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __first, __first
	movq	%rdx, 40(%rbp)	 # __last, __last
	movq	%r8, 48(%rbp)	 # __result, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:529:       return std::__niter_wrap(__result,
	.loc 3 529 31
	movq	48(%rbp), %rax	 # __result, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZSt12__niter_baseIPN3DDT4NodeESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE	 #
	movq	%rax, %rsi	 #, _1
	movq	40(%rbp), %rax	 # __last, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZSt12__niter_baseIPKN3DDT4NodeESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE	 #
	movq	%rax, %rbx	 #, _2
	movq	32(%rbp), %rcx	 # __first,
	call	_ZSt12__niter_baseIPKN3DDT4NodeESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE	 #
	movq	%rsi, %r8	 # _1,
	movq	%rbx, %rdx	 # _2,
	movq	%rax, %rcx	 # _3,
	call	_ZSt14__copy_move_a1ILb0EPKN3DDT4NodeEPS1_ET1_T0_S6_S5_	 #
	movq	%rax, %rdx	 #, _4
	movq	48(%rbp), %rax	 # __result, tmp90
	movq	%rax, %rcx	 # tmp90,
	call	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:533:     }
	.loc 3 533 5
	addq	$32, %rsp	 #,
	popq	%rbx	 #
.LCFI884:
	popq	%rsi	 #
.LCFI885:
	popq	%rbp	 #
.LCFI886:
	ret	
.LFE5530:
	.seh_endproc
	.section	.text$_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS3_SaIS3_EEEEEvT_S9_,"x"
	.linkonce discard
	.globl	_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS3_SaIS3_EEEEEvT_S9_
	.def	_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS3_SaIS3_EEEEEvT_S9_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS3_SaIS3_EEEEEvT_S9_
_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS3_SaIS3_EEEEEvT_S9_:
.LFB5532:
	.loc 21 171 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI887:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI888:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:181:       if (std::is_constant_evaluated())
	.loc 21 181 37
	call	_ZSt21is_constant_evaluatedv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:181:       if (std::is_constant_evaluated())
	.loc 21 181 7
	testb	%al, %al	 # retval.89_4
	je	.L572	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:182: 	return _Destroy_aux<false>::__destroy(__first, __last);
	.loc 21 182 39
	movq	24(%rbp), %rax	 # __last, tmp83
	movq	%rax, %rdx	 # tmp83,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS5_SaIS5_EEEEEEvT_SB_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:182: 	return _Destroy_aux<false>::__destroy(__first, __last);
	.loc 21 182 55
	jmp	.L571	 #
.L572:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:185: 	__destroy(__first, __last);
	.loc 21 185 11
	movq	24(%rbp), %rax	 # __last, tmp84
	movq	%rax, %rdx	 # tmp84,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS5_SaIS5_EEEEEEvT_SB_	 #
	nop	
.L571:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:186:     }
	.loc 21 186 5
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI889:
	ret	
.LFE5532:
	.seh_endproc
	.section	.text$_ZSt12__niter_baseIPN3DDT4NodeEET_S3_,"x"
	.linkonce discard
	.globl	_ZSt12__niter_baseIPN3DDT4NodeEET_S3_
	.def	_ZSt12__niter_baseIPN3DDT4NodeEET_S3_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt12__niter_baseIPN3DDT4NodeEET_S3_
_ZSt12__niter_baseIPN3DDT4NodeEET_S3_:
.LFB5533:
	.loc 3 313 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI890:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI891:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __it, __it
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:315:     { return __it; }
	.loc 3 315 14
	movq	16(%rbp), %rax	 # __it, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:315:     { return __it; }
	.loc 3 315 20
	popq	%rbp	 #
.LCFI892:
	ret	
.LFE5533:
	.seh_endproc
	.section	.text$_ZSt14__copy_move_a1ILb0EPN3DDT4NodeES2_ET1_T0_S4_S3_,"x"
	.linkonce discard
	.globl	_ZSt14__copy_move_a1ILb0EPN3DDT4NodeES2_ET1_T0_S4_S3_
	.def	_ZSt14__copy_move_a1ILb0EPN3DDT4NodeES2_ET1_T0_S4_S3_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt14__copy_move_a1ILb0EPN3DDT4NodeES2_ET1_T0_S4_S3_
_ZSt14__copy_move_a1ILb0EPN3DDT4NodeES2_ET1_T0_S4_S3_:
.LFB5534:
	.loc 3 521 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI893:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI894:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # __result, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:522:     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
	.loc 3 522 42
	movq	32(%rbp), %rdx	 # __result, tmp84
	movq	24(%rbp), %rax	 # __last, tmp85
	movq	%rdx, %r8	 # tmp84,
	movq	%rax, %rdx	 # tmp85,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZSt14__copy_move_a2ILb0EPN3DDT4NodeES2_ET1_T0_S4_S3_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:522:     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
	.loc 3 522 71
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI895:
	ret	
.LFE5534:
	.seh_endproc
	.section	.text$_ZSt12__niter_wrapIPN3DDT4NodeEET_RKS3_S3_,"x"
	.linkonce discard
	.globl	_ZSt12__niter_wrapIPN3DDT4NodeEET_RKS3_S3_
	.def	_ZSt12__niter_wrapIPN3DDT4NodeEET_RKS3_S3_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt12__niter_wrapIPN3DDT4NodeEET_RKS3_S3_
_ZSt12__niter_wrapIPN3DDT4NodeEET_RKS3_S3_:
.LFB5535:
	.loc 3 335 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI896:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI897:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # D.120403, D.120403
	movq	%rdx, 24(%rbp)	 # __res, __res
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:336:     { return __res; }
	.loc 3 336 14
	movq	24(%rbp), %rax	 # __res, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:336:     { return __res; }
	.loc 3 336 21
	popq	%rbp	 #
.LCFI898:
	ret	
.LFE5535:
	.seh_endproc
	.section	.text$_ZSt18uninitialized_copyIPN3DDT4NodeES2_ET0_T_S4_S3_,"x"
	.linkonce discard
	.globl	_ZSt18uninitialized_copyIPN3DDT4NodeES2_ET0_T_S4_S3_
	.def	_ZSt18uninitialized_copyIPN3DDT4NodeES2_ET0_T_S4_S3_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt18uninitialized_copyIPN3DDT4NodeES2_ET0_T_S4_S3_
_ZSt18uninitialized_copyIPN3DDT4NodeES2_ET0_T_S4_S3_:
.LFB5536:
	.loc 19 126 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI899:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI900:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # __result, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:145:       const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
	.loc 19 145 18
	movb	$1, -1(%rbp)	 #, __assignable
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:151: 	__uninit_copy(__first, __last, __result);
	.loc 19 151 15
	movq	32(%rbp), %rdx	 # __result, tmp84
	movq	24(%rbp), %rax	 # __last, tmp85
	movq	%rdx, %r8	 # tmp84,
	movq	%rax, %rdx	 # tmp85,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN3DDT4NodeES4_EET0_T_S6_S5_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:152:     }
	.loc 19 152 5
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI901:
	ret	
.LFE5536:
	.seh_endproc
	.section	.text$_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC1ERKS2_,"x"
	.linkonce discard
	.align 2
	.globl	_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC1ERKS2_
	.def	_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC1ERKS2_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC1ERKS2_
_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC1ERKS2_:
.LFB5540:
	.loc 15 1010 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI902:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI903:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __i, __i
.LBB121:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1011:       : _M_current(__i) { }
	.loc 15 1011 9
	movq	24(%rbp), %rax	 # __i, tmp83
	movq	(%rax), %rdx	 # *__i_5(D), _1
	movq	16(%rbp), %rax	 # this, tmp84
	movq	%rdx, (%rax)	 # _1, this_3(D)->_M_current
.LBE121:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1011:       : _M_current(__i) { }
	.loc 15 1011 27
	nop	
	popq	%rbp	 #
.LCFI904:
	ret	
.LFE5540:
	.seh_endproc
	.section	.text$_ZN9__gnu_cxx5__ops17__iter_equals_valIKbEENS0_16_Iter_equals_valIT_EERS4_,"x"
	.linkonce discard
	.globl	_ZN9__gnu_cxx5__ops17__iter_equals_valIKbEENS0_16_Iter_equals_valIT_EERS4_
	.def	_ZN9__gnu_cxx5__ops17__iter_equals_valIKbEENS0_16_Iter_equals_valIT_EERS4_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN9__gnu_cxx5__ops17__iter_equals_valIKbEENS0_16_Iter_equals_valIT_EERS4_
_ZN9__gnu_cxx5__ops17__iter_equals_valIKbEENS0_16_Iter_equals_valIT_EERS4_:
.LFB5541:
	.file 23 "c:/users/pluto/scoop/apps/gcc/current/include/c++/11.2.0/bits/predefined_ops.h"
	.loc 23 276 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI905:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI906:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __val, __val
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\predefined_ops.h:277:     { return _Iter_equals_val<_Value>(__val); }
	.loc 23 277 14
	leaq	-8(%rbp), %rax	 #, tmp84
	movq	16(%rbp), %rdx	 # __val,
	movq	%rax, %rcx	 # tmp84,
	call	_ZN9__gnu_cxx5__ops16_Iter_equals_valIKbEC1ERS2_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\predefined_ops.h:277:     { return _Iter_equals_val<_Value>(__val); }
	.loc 23 277 44
	movq	-8(%rbp), %rax	 # D.120547, D.128440
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\predefined_ops.h:277:     { return _Iter_equals_val<_Value>(__val); }
	.loc 23 277 47
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI907:
	ret	
.LFE5541:
	.seh_endproc
	.section	.text$_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv
	.def	_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv
_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv:
.LFB5543:
	.loc 15 1088 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI908:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI909:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1089:       { return _M_current; }
	.loc 15 1089 16
	movq	16(%rbp), %rax	 # this, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1089:       { return _M_current; }
	.loc 15 1089 28
	popq	%rbp	 #
.LCFI910:
	ret	
.LFE5543:
	.seh_endproc
	.section	.text$_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEppEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEppEv
	.def	_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEppEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEppEv
_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEppEv:
.LFB5544:
	.loc 15 1035 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI911:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI912:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1037: 	++_M_current;
	.loc 15 1037 4
	movq	16(%rbp), %rax	 # this, tmp86
	movq	(%rax), %rax	 # this_4(D)->_M_current, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1037: 	++_M_current;
	.loc 15 1037 2
	leaq	4(%rax), %rdx	 #, _2
	movq	16(%rbp), %rax	 # this, tmp87
	movq	%rdx, (%rax)	 # _2, this_4(D)->_M_current
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1038: 	return *this;
	.loc 15 1038 10
	movq	16(%rbp), %rax	 # this, _6
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1039:       }
	.loc 15 1039 7
	popq	%rbp	 #
.LCFI913:
	ret	
.LFE5544:
	.seh_endproc
	.section	.text$_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEdeEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEdeEv
	.def	_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEdeEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEdeEv
_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEdeEv:
.LFB5546:
	.loc 15 1025 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI914:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI915:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1026:       { return *_M_current; }
	.loc 15 1026 17
	movq	16(%rbp), %rax	 # this, tmp84
	movq	(%rax), %rax	 # this_2(D)->_M_current, _3
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1026:       { return *_M_current; }
	.loc 15 1026 29
	popq	%rbp	 #
.LCFI916:
	ret	
.LFE5546:
	.seh_endproc
	.section	.text$_ZN9__gnu_cxx5__ops16_Iter_equals_valIKbEclINS_17__normal_iteratorIPKiSt6vectorIiSaIiEEEEEEbT_,"x"
	.linkonce discard
	.align 2
	.globl	_ZN9__gnu_cxx5__ops16_Iter_equals_valIKbEclINS_17__normal_iteratorIPKiSt6vectorIiSaIiEEEEEEbT_
	.def	_ZN9__gnu_cxx5__ops16_Iter_equals_valIKbEclINS_17__normal_iteratorIPKiSt6vectorIiSaIiEEEEEEbT_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN9__gnu_cxx5__ops16_Iter_equals_valIKbEclINS_17__normal_iteratorIPKiSt6vectorIiSaIiEEEEEEbT_
_ZN9__gnu_cxx5__ops16_Iter_equals_valIKbEclINS_17__normal_iteratorIPKiSt6vectorIiSaIiEEEEEEbT_:
.LFB5545:
	.loc 23 269 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI917:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI918:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __it, __it
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\predefined_ops.h:270: 	{ return *__it == _M_value; }
	.loc 23 270 11
	leaq	24(%rbp), %rax	 #, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEdeEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\predefined_ops.h:270: 	{ return *__it == _M_value; }
	.loc 23 270 17
	movl	(%rax), %edx	 # *_1, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\predefined_ops.h:270: 	{ return *__it == _M_value; }
	.loc 23 270 20
	movq	16(%rbp), %rax	 # this, tmp90
	movq	(%rax), %rax	 # this_8(D)->_M_value, _3
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\predefined_ops.h:270: 	{ return *__it == _M_value; }
	.loc 23 270 17
	movzbl	(%rax), %eax	 # *_3, _4
	movzbl	%al, %eax	 # _4, _5
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\predefined_ops.h:270: 	{ return *__it == _M_value; }
	.loc 23 270 20
	cmpl	%eax, %edx	 # _5, _2
	sete	%al	 #, _9
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\predefined_ops.h:270: 	{ return *__it == _M_value; }
	.loc 23 270 30
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI919:
	ret	
.LFE5545:
	.seh_endproc
	.section	.text$_ZN9__gnu_cxxeqIPKiS2_St6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T1_EERKNS6_IT0_S8_EE,"x"
	.linkonce discard
	.globl	_ZN9__gnu_cxxeqIPKiS2_St6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T1_EERKNS6_IT0_S8_EE
	.def	_ZN9__gnu_cxxeqIPKiS2_St6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T1_EERKNS6_IT0_S8_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN9__gnu_cxxeqIPKiS2_St6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T1_EERKNS6_IT0_S8_EE
_ZN9__gnu_cxxeqIPKiS2_St6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T1_EERKNS6_IT0_S8_EE:
.LFB5547:
	.loc 15 1105 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI920:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI921:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI922:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI923:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __lhs, __lhs
	movq	%rdx, 40(%rbp)	 # __rhs, __rhs
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1108:     { return __lhs.base() == __rhs.base(); }
	.loc 15 1108 24
	movq	32(%rbp), %rcx	 # __lhs,
	call	_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1108:     { return __lhs.base() == __rhs.base(); }
	.loc 15 1108 27
	movq	(%rax), %rbx	 # *_1, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1108:     { return __lhs.base() == __rhs.base(); }
	.loc 15 1108 40
	movq	40(%rbp), %rax	 # __rhs, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1108:     { return __lhs.base() == __rhs.base(); }
	.loc 15 1108 27
	movq	(%rax), %rax	 # *_3, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1108:     { return __lhs.base() == __rhs.base(); }
	.loc 15 1108 41
	cmpq	%rax, %rbx	 # _4, _2
	sete	%al	 #, _10
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1108:     { return __lhs.base() == __rhs.base(); }
	.loc 15 1108 44
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI924:
	popq	%rbp	 #
.LCFI925:
	ret	
.LFE5547:
	.seh_endproc
	.section	.text$_ZSt10__count_ifIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEENS0_5__ops16_Iter_equals_valIKbEEENSt15iterator_traitsIT_E15difference_typeESD_SD_T0_,"x"
	.linkonce discard
	.globl	_ZSt10__count_ifIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEENS0_5__ops16_Iter_equals_valIKbEEENSt15iterator_traitsIT_E15difference_typeESD_SD_T0_
	.def	_ZSt10__count_ifIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEENS0_5__ops16_Iter_equals_valIKbEEENSt15iterator_traitsIT_E15difference_typeESD_SD_T0_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt10__count_ifIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEENS0_5__ops16_Iter_equals_valIKbEEENSt15iterator_traitsIT_E15difference_typeESD_SD_T0_
_ZSt10__count_ifIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEENS0_5__ops16_Iter_equals_valIKbEEENSt15iterator_traitsIT_E15difference_typeESD_SD_T0_:
.LFB5542:
	.loc 3 2121 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI926:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI927:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # __pred, __pred
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:2123:       typename iterator_traits<_InputIterator>::difference_type __n = 0;
	.loc 3 2123 65
	movq	$0, -8(%rbp)	 #, __n
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:2124:       for (; __first != __last; ++__first)
	.loc 3 2124 7
	jmp	.L596	 #
.L598:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:2125: 	if (__pred(__first))
	.loc 3 2125 12
	leaq	32(%rbp), %rax	 #, tmp87
	movq	16(%rbp), %rdx	 # __first,
	movq	%rax, %rcx	 # tmp87,
	call	_ZN9__gnu_cxx5__ops16_Iter_equals_valIKbEclINS_17__normal_iteratorIPKiSt6vectorIiSaIiEEEEEEbT_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:2125: 	if (__pred(__first))
	.loc 3 2125 2
	testb	%al, %al	 # retval.107_11
	je	.L597	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:2126: 	  ++__n;
	.loc 3 2126 4
	addq	$1, -8(%rbp)	 #, __n
.L597:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:2124:       for (; __first != __last; ++__first)
	.loc 3 2124 33
	leaq	16(%rbp), %rcx	 #, tmp91
	call	_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEppEv	 #
.L596:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:2124:       for (; __first != __last; ++__first)
	.loc 3 2124 22 discriminator 1
	leaq	24(%rbp), %rax	 #, tmp88
	movq	%rax, %rdx	 # tmp88,
	leaq	16(%rbp), %rcx	 #, tmp92
	call	_ZN9__gnu_cxxeqIPKiS2_St6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T1_EERKNS6_IT0_S8_EE	 #
	xorl	$1, %eax	 #, retval.108_8
	testb	%al, %al	 # retval.108_8
	jne	.L598	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:2127:       return __n;
	.loc 3 2127 14
	movq	-8(%rbp), %rax	 # __n, _9
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:2128:     }
	.loc 3 2128 5
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI928:
	ret	
.LFE5542:
	.seh_endproc
	.section	.text$_ZN9__gnu_cxx13new_allocatorI5BlorbEC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZN9__gnu_cxx13new_allocatorI5BlorbEC2Ev
	.def	_ZN9__gnu_cxx13new_allocatorI5BlorbEC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN9__gnu_cxx13new_allocatorI5BlorbEC2Ev
_ZN9__gnu_cxx13new_allocatorI5BlorbEC2Ev:
.LFB5549:
	.loc 22 79 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI929:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI930:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:79:       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
	.loc 22 79 47
	nop	
	popq	%rbp	 #
.LCFI931:
	ret	
.LFE5549:
	.seh_endproc
	.section	.text$_ZNSt16allocator_traitsISaI5BlorbEE10deallocateERS1_PS0_y,"x"
	.linkonce discard
	.globl	_ZNSt16allocator_traitsISaI5BlorbEE10deallocateERS1_PS0_y
	.def	_ZNSt16allocator_traitsISaI5BlorbEE10deallocateERS1_PS0_y;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt16allocator_traitsISaI5BlorbEE10deallocateERS1_PS0_y
_ZNSt16allocator_traitsISaI5BlorbEE10deallocateERS1_PS0_y:
.LFB5551:
	.loc 16 491 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI932:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI933:
	subq	$64, %rsp	 #,
	.seh_stackalloc	64
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __a, __a
	movq	%rdx, 24(%rbp)	 # __p, __p
	movq	%r8, 32(%rbp)	 # __n, __n
	movq	16(%rbp), %rax	 # __a, tmp83
	movq	%rax, -8(%rbp)	 # tmp83, this
	movq	24(%rbp), %rax	 # __p, tmp84
	movq	%rax, -16(%rbp)	 # tmp84, __p
	movq	32(%rbp), %rax	 # __n, tmp85
	movq	%rax, -24(%rbp)	 # tmp85, __n
.LBB122:
.LBB123:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:205: 	if (std::is_constant_evaluated())
	.loc 12 205 32
	call	_ZSt21is_constant_evaluatedv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:205: 	if (std::is_constant_evaluated())
	.loc 12 205 2
	testb	%al, %al	 # retval.100_8
	je	.L602	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:207: 	    ::operator delete(__p);
	.loc 12 207 23
	movq	-16(%rbp), %rax	 # __p, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZdlPv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:208: 	    return;
	.loc 12 208 6
	jmp	.L603	 #
.L602:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:211: 	  __allocator_base<_Tp>::deallocate(__p, __n);
	.loc 12 211 37
	movq	-24(%rbp), %rcx	 # __n, tmp87
	movq	-16(%rbp), %rdx	 # __p, tmp88
	movq	-8(%rbp), %rax	 # this, tmp89
	movq	%rcx, %r8	 # tmp87,
	movq	%rax, %rcx	 # tmp89,
	call	_ZN9__gnu_cxx13new_allocatorI5BlorbE10deallocateEPS1_y	 #
.LBE123:
.LBE122:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\alloc_traits.h:492:       { __a.deallocate(__p, __n); }
	.loc 16 492 35
	nop	
.L603:
	nop	
	addq	$64, %rsp	 #,
	popq	%rbp	 #
.LCFI934:
	ret	
.LFE5551:
	.seh_endproc
	.section	.text$_ZSt7forwardI5BlorbEOT_RNSt16remove_referenceIS1_E4typeE,"x"
	.linkonce discard
	.globl	_ZSt7forwardI5BlorbEOT_RNSt16remove_referenceIS1_E4typeE
	.def	_ZSt7forwardI5BlorbEOT_RNSt16remove_referenceIS1_E4typeE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt7forwardI5BlorbEOT_RNSt16remove_referenceIS1_E4typeE
_ZSt7forwardI5BlorbEOT_RNSt16remove_referenceIS1_E4typeE:
.LFB5552:
	.loc 17 77 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI935:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI936:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\move.h:78:     { return static_cast<_Tp&&>(__t); }
	.loc 17 78 36
	movq	16(%rbp), %rax	 # __t, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\move.h:78:     { return static_cast<_Tp&&>(__t); }
	.loc 17 78 39
	popq	%rbp	 #
.LCFI937:
	ret	
.LFE5552:
	.seh_endproc
	.section	.text$_ZN5BlorbC1EOS_,"x"
	.linkonce discard
	.align 2
	.globl	_ZN5BlorbC1EOS_
	.def	_ZN5BlorbC1EOS_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN5BlorbC1EOS_
_ZN5BlorbC1EOS_:
.LFB5557:
	.loc 10 154 8
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI938:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI939:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # D.107855, D.107855
.LBB124:
 # main.cpp:154: struct Blorb {
	.loc 10 154 8
	movq	16(%rbp), %rax	 # this, tmp86
	movq	24(%rbp), %rdx	 # D.107855, tmp87
	movq	(%rdx), %rdx	 # _8(D)->pos, tmp88
	movq	%rdx, (%rax)	 # tmp88, this_6(D)->pos
	movq	24(%rbp), %rax	 # D.107855, tmp89
	movss	8(%rax), %xmm0	 # _8(D)->angle, _1
	movq	16(%rbp), %rax	 # this, tmp90
	movss	%xmm0, 8(%rax)	 # _1, this_6(D)->angle
	movq	16(%rbp), %rax	 # this, tmp91
	addq	$16, %rax	 #, _2
	movq	24(%rbp), %rdx	 # D.107855, tmp92
	addq	$16, %rdx	 #, _3
	movq	%rax, %rcx	 # _2,
	call	_ZN3DDTC1ERKS_	 #
.LBE124:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI940:
	ret	
.LFE5557:
	.seh_endproc
	.section	.text$_ZSt12construct_atI5BlorbJS0_EEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS2_DpOS3_,"x"
	.linkonce discard
	.globl	_ZSt12construct_atI5BlorbJS0_EEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS2_DpOS3_
	.def	_ZSt12construct_atI5BlorbJS0_EEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS2_DpOS3_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt12construct_atI5BlorbJS0_EEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS2_DpOS3_
_ZSt12construct_atI5BlorbJS0_EEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS2_DpOS3_:
.LFB5554:
	.loc 21 94 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI941:
	pushq	%rdi	 #
	.seh_pushreg	%rdi
.LCFI942:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI943:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI944:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI945:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI946:
	.seh_endprologue
	movq	%rcx, 48(%rbp)	 # __location, __location
	movq	%rdx, 56(%rbp)	 # __args#0, __args#0
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:97:     { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
	.loc 21 97 62
	movq	56(%rbp), %rax	 # __args#0, tmp87
	movq	%rax, %rcx	 # tmp87,
	call	_ZSt7forwardI5BlorbEOT_RNSt16remove_referenceIS1_E4typeE	 #
	movq	%rax, %rdi	 #, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:97:     { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
	.loc 21 97 20
	movq	48(%rbp), %rsi	 # __location, _6
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:97:     { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
	.loc 21 97 14
	movq	%rsi, %rdx	 # _6,
	movl	$48, %ecx	 #,
	call	_ZnwyPv	 #
	movq	%rax, %rbx	 #, _8
	movq	%rdi, %rdx	 # _4,
	movq	%rbx, %rcx	 # _8,
.LEHB32:
	call	_ZN5BlorbC1EOS_	 #
.LEHE32:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:97:     { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
	.loc 21 97 73 discriminator 2
	movq	%rbx, %rax	 # _8, <retval>
	jmp	.L611	 #
.L610:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:97:     { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
	.loc 21 97 14
	movq	%rax, %rdi	 #, tmp89
	movq	%rsi, %rdx	 # _6,
	movq	%rbx, %rcx	 # _8,
	call	_ZdlPvS_	 #
	movq	%rdi, %rax	 # tmp89, D.129178
	movq	%rax, %rcx	 # D.129178,
.LEHB33:
	call	_Unwind_Resume	 #
.LEHE33:
.L611:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:97:     { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
	.loc 21 97 76
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI947:
	popq	%rsi	 #
.LCFI948:
	popq	%rdi	 #
.LCFI949:
	popq	%rbp	 #
.LCFI950:
	ret	
.LFE5554:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA5554:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE5554-.LLSDACSB5554
.LLSDACSB5554:
	.uleb128 .LEHB32-.LFB5554
	.uleb128 .LEHE32-.LEHB32
	.uleb128 .L610-.LFB5554
	.uleb128 0
	.uleb128 .LEHB33-.LFB5554
	.uleb128 .LEHE33-.LEHB33
	.uleb128 0
	.uleb128 0
.LLSDACSE5554:
	.section	.text$_ZSt12construct_atI5BlorbJS0_EEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS2_DpOS3_,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZNSt16allocator_traitsISaI5BlorbEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_,"x"
	.linkonce discard
	.globl	_ZNSt16allocator_traitsISaI5BlorbEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_
	.def	_ZNSt16allocator_traitsISaI5BlorbEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt16allocator_traitsISaI5BlorbEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_
_ZNSt16allocator_traitsISaI5BlorbEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_:
.LFB5553:
	.loc 16 507 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI951:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI952:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __a, __a
	movq	%rdx, 24(%rbp)	 # __p, __p
	movq	%r8, 32(%rbp)	 # __args#0, __args#0
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\alloc_traits.h:514: 	  std::construct_at(__p, std::forward<_Args>(__args)...);
	.loc 16 514 21
	movq	32(%rbp), %rax	 # __args#0, tmp83
	movq	%rax, %rcx	 # tmp83,
	call	_ZSt7forwardI5BlorbEOT_RNSt16remove_referenceIS1_E4typeE	 #
	movq	%rax, %rdx	 #, _1
	movq	24(%rbp), %rax	 # __p, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZSt12construct_atI5BlorbJS0_EEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS2_DpOS3_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\alloc_traits.h:516: 	}
	.loc 16 516 2
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI953:
	ret	
.LFE5553:
	.seh_endproc
	.section	.text$_ZNSt6vectorI5BlorbSaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorI5BlorbSaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_
	.def	_ZNSt6vectorI5BlorbSaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorI5BlorbSaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_
_ZNSt6vectorI5BlorbSaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_:
.LFB5558:
	.loc 14 426 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI954:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI955:
	subq	$104, %rsp	 #,
	.seh_stackalloc	104
.LCFI956:
	leaq	96(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 96
.LCFI957:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __position, __position
	movq	%r8, 48(%rbp)	 # __args#0, __args#0
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:436: 	_M_check_len(size_type(1), "vector::_M_realloc_insert");
	.loc 14 436 14
	leaq	.LC27(%rip), %r8	 #,
	movl	$1, %edx	 #,
	movq	32(%rbp), %rcx	 # this,
.LEHB34:
	call	_ZNKSt6vectorI5BlorbSaIS0_EE12_M_check_lenEyPKc	 #
	movq	%rax, -16(%rbp)	 # _38, __len
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:437:       pointer __old_start = this->_M_impl._M_start;
	.loc 14 437 15
	movq	32(%rbp), %rax	 # this, tmp117
	movq	(%rax), %rax	 # this_36(D)->D.107662._M_impl.D.107007._M_start, tmp118
	movq	%rax, -24(%rbp)	 # tmp118, __old_start
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:438:       pointer __old_finish = this->_M_impl._M_finish;
	.loc 14 438 15
	movq	32(%rbp), %rax	 # this, tmp119
	movq	8(%rax), %rax	 # this_36(D)->D.107662._M_impl.D.107007._M_finish, tmp120
	movq	%rax, -32(%rbp)	 # tmp120, __old_finish
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:439:       const size_type __elems_before = __position - begin();
	.loc 14 439 58
	movq	32(%rbp), %rcx	 # this,
	call	_ZNSt6vectorI5BlorbSaIS0_EE5beginEv	 #
	movq	%rax, -56(%rbp)	 # tmp122, D.120669
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:439:       const size_type __elems_before = __position - begin();
	.loc 14 439 51
	leaq	-56(%rbp), %rdx	 #, tmp123
	leaq	40(%rbp), %rax	 #, tmp124
	movq	%rax, %rcx	 # tmp124,
	call	_ZN9__gnu_cxxmiIP5BlorbSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:439:       const size_type __elems_before = __position - begin();
	.loc 14 439 23
	movq	%rax, -40(%rbp)	 # _1, __elems_before
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:440:       pointer __new_start(this->_M_allocate(__len));
	.loc 14 440 44
	movq	32(%rbp), %rax	 # this, _2
	movq	-16(%rbp), %rdx	 # __len, tmp125
	movq	%rax, %rcx	 # _2,
	call	_ZNSt12_Vector_baseI5BlorbSaIS0_EE11_M_allocateEy	 #
.LEHE34:
	movq	%rax, -48(%rbp)	 # _47, __new_start
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:441:       pointer __new_finish(__new_start);
	.loc 14 441 15
	movq	-48(%rbp), %rax	 # __new_start, tmp126
	movq	%rax, -8(%rbp)	 # tmp126, __new_finish
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:449: 	  _Alloc_traits::construct(this->_M_impl,
	.loc 14 449 28
	movq	48(%rbp), %rax	 # __args#0, tmp127
	movq	%rax, %rcx	 # tmp127,
	call	_ZSt7forwardI5BlorbEOT_RNSt16remove_referenceIS1_E4typeE	 #
	movq	%rax, %rcx	 #, _3
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:450: 				   __new_start + __elems_before,
	.loc 14 450 20
	movq	-40(%rbp), %rdx	 # __elems_before, tmp128
	movq	%rdx, %rax	 # tmp128, tmp129
	addq	%rax, %rax	 # tmp129
	addq	%rdx, %rax	 # tmp128, tmp129
	salq	$4, %rax	 #, tmp130
	movq	%rax, %rdx	 # tmp129, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:449: 	  _Alloc_traits::construct(this->_M_impl,
	.loc 14 449 28
	movq	-48(%rbp), %rax	 # __new_start, tmp131
	addq	%rax, %rdx	 # tmp131, _5
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:449: 	  _Alloc_traits::construct(this->_M_impl,
	.loc 14 449 35
	movq	32(%rbp), %rax	 # this, _6
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:449: 	  _Alloc_traits::construct(this->_M_impl,
	.loc 14 449 28
	movq	%rcx, %r8	 # _3,
	movq	%rax, %rcx	 # _6,
.LEHB35:
	call	_ZNSt16allocator_traitsISaI5BlorbEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:456: 	  __new_finish = pointer();
	.loc 14 456 17
	movq	$0, -8(%rbp)	 #, __new_finish
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:475: 		 __new_start, _M_get_Tp_allocator());
	.loc 14 475 36
	movq	32(%rbp), %rax	 # this, _7
	movq	%rax, %rcx	 # _7,
	call	_ZNSt12_Vector_baseI5BlorbSaIS0_EE19_M_get_Tp_allocatorEv	 #
	movq	%rax, %rbx	 #, _8
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:474: 		(__old_start, __position.base(),
	.loc 14 474 32
	leaq	40(%rbp), %rax	 #, tmp132
	movq	%rax, %rcx	 # tmp132,
	call	_ZNK9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEE4baseEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:474: 		(__old_start, __position.base(),
	.loc 14 474 3
	movq	(%rax), %rdx	 # *_9, _10
	movq	-48(%rbp), %rcx	 # __new_start, tmp133
	movq	-24(%rbp), %rax	 # __old_start, tmp134
	movq	%rbx, %r9	 # _8,
	movq	%rcx, %r8	 # tmp133,
	movq	%rax, %rcx	 # tmp134,
	call	_ZSt34__uninitialized_move_if_noexcept_aIP5BlorbS1_SaIS0_EET0_T_S4_S3_RT1_	 #
	movq	%rax, -8(%rbp)	 # _57, __new_finish
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:477: 	      ++__new_finish;
	.loc 14 477 8
	addq	$48, -8(%rbp)	 #, __new_finish
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:482: 		 __new_finish, _M_get_Tp_allocator());
	.loc 14 482 37
	movq	32(%rbp), %rax	 # this, _11
	movq	%rax, %rcx	 # _11,
	call	_ZNSt12_Vector_baseI5BlorbSaIS0_EE19_M_get_Tp_allocatorEv	 #
	movq	%rax, %rbx	 #, _12
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:481: 		(__position.base(), __old_finish,
	.loc 14 481 19
	leaq	40(%rbp), %rax	 #, tmp135
	movq	%rax, %rcx	 # tmp135,
	call	_ZNK9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEE4baseEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:481: 		(__position.base(), __old_finish,
	.loc 14 481 3
	movq	(%rax), %rax	 # *_13, _14
	movq	-8(%rbp), %rcx	 # __new_finish, tmp136
	movq	-32(%rbp), %rdx	 # __old_finish, tmp137
	movq	%rbx, %r9	 # _12,
	movq	%rcx, %r8	 # tmp136,
	movq	%rax, %rcx	 # _14,
	call	_ZSt34__uninitialized_move_if_noexcept_aIP5BlorbS1_SaIS0_EET0_T_S4_S3_RT1_	 #
.LEHE35:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:481: 		(__position.base(), __old_finish,
	.loc 14 481 3 is_stmt 0 discriminator 1
	movq	%rax, -8(%rbp)	 # _63, __new_finish
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:498: 	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
	.loc 14 498 62 is_stmt 1 discriminator 1
	movq	32(%rbp), %rax	 # this, _22
	movq	%rax, %rcx	 # _22,
	call	_ZNSt12_Vector_baseI5BlorbSaIS0_EE19_M_get_Tp_allocatorEv	 #
	movq	%rax, %rcx	 #, _23
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:498: 	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
	.loc 14 498 15 discriminator 1
	movq	-32(%rbp), %rdx	 # __old_finish, tmp138
	movq	-24(%rbp), %rax	 # __old_start, tmp139
	movq	%rcx, %r8	 # _23,
	movq	%rax, %rcx	 # tmp139,
.LEHB36:
	call	_ZSt8_DestroyIP5BlorbS0_EvT_S2_RSaIT0_E	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:500:       _M_deallocate(__old_start,
	.loc 14 500 20 discriminator 1
	movq	32(%rbp), %rax	 # this, _24
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:501: 		    this->_M_impl._M_end_of_storage - __old_start);
	.loc 14 501 21 discriminator 1
	movq	32(%rbp), %rdx	 # this, tmp140
	movq	16(%rdx), %rdx	 # this_36(D)->D.107662._M_impl.D.107007._M_end_of_storage, _25
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:501: 		    this->_M_impl._M_end_of_storage - __old_start);
	.loc 14 501 39 discriminator 1
	subq	-24(%rbp), %rdx	 # __old_start, _26
	movq	%rdx, %rcx	 # _26, _26
	sarq	$4, %rcx	 #, _26
	movabsq	$-6148914691236517205, %rdx	 #, tmp143
	imulq	%rcx, %rdx	 # tmp141, tmp142
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:500:       _M_deallocate(__old_start,
	.loc 14 500 20 discriminator 1
	movq	%rdx, %rcx	 # _27, _28
	movq	-24(%rbp), %rdx	 # __old_start, tmp144
	movq	%rcx, %r8	 # _28,
	movq	%rax, %rcx	 # _24,
	call	_ZNSt12_Vector_baseI5BlorbSaIS0_EE13_M_deallocateEPS0_y	 #
.LEHE36:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:502:       this->_M_impl._M_start = __new_start;
	.loc 14 502 30 discriminator 1
	movq	32(%rbp), %rax	 # this, tmp145
	movq	-48(%rbp), %rdx	 # __new_start, tmp146
	movq	%rdx, (%rax)	 # tmp146, this_36(D)->D.107662._M_impl.D.107007._M_start
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:503:       this->_M_impl._M_finish = __new_finish;
	.loc 14 503 31 discriminator 1
	movq	32(%rbp), %rax	 # this, tmp147
	movq	-8(%rbp), %rdx	 # __new_finish, tmp148
	movq	%rdx, 8(%rax)	 # tmp148, this_36(D)->D.107662._M_impl.D.107007._M_finish
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:504:       this->_M_impl._M_end_of_storage = __new_start + __len;
	.loc 14 504 53 discriminator 1
	movq	-16(%rbp), %rdx	 # __len, tmp149
	movq	%rdx, %rax	 # tmp149, tmp150
	addq	%rax, %rax	 # tmp150
	addq	%rdx, %rax	 # tmp149, tmp150
	salq	$4, %rax	 #, tmp151
	movq	%rax, %rdx	 # tmp150, _29
	movq	-48(%rbp), %rax	 # __new_start, tmp152
	addq	%rax, %rdx	 # tmp152, _30
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:504:       this->_M_impl._M_end_of_storage = __new_start + __len;
	.loc 14 504 39 discriminator 1
	movq	32(%rbp), %rax	 # this, tmp153
	movq	%rdx, 16(%rax)	 # _30, this_36(D)->D.107662._M_impl.D.107007._M_end_of_storage
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:505:     }
	.loc 14 505 5 discriminator 1
	jmp	.L620	 #
.L618:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:485:       __catch(...)
	.loc 14 485 7
	movq	%rax, %rcx	 # _15,
	call	__cxa_begin_catch	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:487: 	  if (!__new_finish)
	.loc 14 487 4
	cmpq	$0, -8(%rbp)	 #, __new_finish
	jne	.L615	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:489: 				   __new_start + __elems_before);
	.loc 14 489 20
	movq	-40(%rbp), %rdx	 # __elems_before, tmp155
	movq	%rdx, %rax	 # tmp155, tmp156
	addq	%rax, %rax	 # tmp156
	addq	%rdx, %rax	 # tmp155, tmp156
	salq	$4, %rax	 #, tmp157
	movq	%rax, %rdx	 # tmp156, _16
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:488: 	    _Alloc_traits::destroy(this->_M_impl,
	.loc 14 488 28
	movq	-48(%rbp), %rax	 # __new_start, tmp158
	addq	%rax, %rdx	 # tmp158, _17
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:488: 	    _Alloc_traits::destroy(this->_M_impl,
	.loc 14 488 35
	movq	32(%rbp), %rax	 # this, _18
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:488: 	    _Alloc_traits::destroy(this->_M_impl,
	.loc 14 488 28
	movq	%rax, %rcx	 # _18,
	call	_ZNSt16allocator_traitsISaI5BlorbEE7destroyIS0_EEvRS1_PT_	 #
	jmp	.L616	 #
.L615:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:491: 	    std::_Destroy(__new_start, __new_finish, _M_get_Tp_allocator());
	.loc 14 491 66
	movq	32(%rbp), %rax	 # this, _19
	movq	%rax, %rcx	 # _19,
	call	_ZNSt12_Vector_baseI5BlorbSaIS0_EE19_M_get_Tp_allocatorEv	 #
	movq	%rax, %rcx	 #, _20
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:491: 	    std::_Destroy(__new_start, __new_finish, _M_get_Tp_allocator());
	.loc 14 491 19
	movq	-8(%rbp), %rdx	 # __new_finish, tmp159
	movq	-48(%rbp), %rax	 # __new_start, tmp160
	movq	%rcx, %r8	 # _20,
	movq	%rax, %rcx	 # tmp160,
.LEHB37:
	call	_ZSt8_DestroyIP5BlorbS0_EvT_S2_RSaIT0_E	 #
.L616:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:492: 	  _M_deallocate(__new_start, __len);
	.loc 14 492 17
	movq	32(%rbp), %rax	 # this, _21
	movq	-16(%rbp), %rcx	 # __len, tmp161
	movq	-48(%rbp), %rdx	 # __new_start, tmp162
	movq	%rcx, %r8	 # tmp161,
	movq	%rax, %rcx	 # _21,
	call	_ZNSt12_Vector_baseI5BlorbSaIS0_EE13_M_deallocateEPS0_y	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:493: 	  __throw_exception_again;
	.loc 14 493 4
	call	__cxa_rethrow	 #
.LEHE37:
.L619:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:485:       __catch(...)
	.loc 14 485 7
	movq	%rax, %rbx	 #, tmp163
	call	__cxa_end_catch	 #
	movq	%rbx, %rax	 # tmp163, D.129179
	movq	%rax, %rcx	 # D.129179,
.LEHB38:
	call	_Unwind_Resume	 #
	nop	
.LEHE38:
.L620:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:505:     }
	.loc 14 505 5
	addq	$104, %rsp	 #,
	popq	%rbx	 #
.LCFI958:
	popq	%rbp	 #
.LCFI959:
	ret	
.LFE5558:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
	.align 4
.LLSDA5558:
	.byte	0xff
	.byte	0x9b
	.uleb128 .LLSDATT5558-.LLSDATTD5558
.LLSDATTD5558:
	.byte	0x1
	.uleb128 .LLSDACSE5558-.LLSDACSB5558
.LLSDACSB5558:
	.uleb128 .LEHB34-.LFB5558
	.uleb128 .LEHE34-.LEHB34
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB35-.LFB5558
	.uleb128 .LEHE35-.LEHB35
	.uleb128 .L618-.LFB5558
	.uleb128 0x1
	.uleb128 .LEHB36-.LFB5558
	.uleb128 .LEHE36-.LEHB36
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB37-.LFB5558
	.uleb128 .LEHE37-.LEHB37
	.uleb128 .L619-.LFB5558
	.uleb128 0
	.uleb128 .LEHB38-.LFB5558
	.uleb128 .LEHE38-.LEHB38
	.uleb128 0
	.uleb128 0
.LLSDACSE5558:
	.byte	0x1
	.byte	0
	.align 4
	.long	0

.LLSDATT5558:
	.section	.text$_ZNSt6vectorI5BlorbSaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZN9__gnu_cxx17__normal_iteratorIPK5BlorbSt6vectorIS1_SaIS1_EEEC1ERKS3_,"x"
	.linkonce discard
	.align 2
	.globl	_ZN9__gnu_cxx17__normal_iteratorIPK5BlorbSt6vectorIS1_SaIS1_EEEC1ERKS3_
	.def	_ZN9__gnu_cxx17__normal_iteratorIPK5BlorbSt6vectorIS1_SaIS1_EEEC1ERKS3_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN9__gnu_cxx17__normal_iteratorIPK5BlorbSt6vectorIS1_SaIS1_EEEC1ERKS3_
_ZN9__gnu_cxx17__normal_iteratorIPK5BlorbSt6vectorIS1_SaIS1_EEEC1ERKS3_:
.LFB5564:
	.loc 15 1010 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI960:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI961:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __i, __i
.LBB125:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1011:       : _M_current(__i) { }
	.loc 15 1011 9
	movq	24(%rbp), %rax	 # __i, tmp83
	movq	(%rax), %rdx	 # *__i_5(D), _1
	movq	16(%rbp), %rax	 # this, tmp84
	movq	%rdx, (%rax)	 # _1, this_3(D)->_M_current
.LBE125:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1011:       : _M_current(__i) { }
	.loc 15 1011 27
	nop	
	popq	%rbp	 #
.LCFI962:
	ret	
.LFE5564:
	.seh_endproc
	.section	.text$_ZNK9__gnu_cxx17__normal_iteratorIPK5BlorbSt6vectorIS1_SaIS1_EEE4baseEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNK9__gnu_cxx17__normal_iteratorIPK5BlorbSt6vectorIS1_SaIS1_EEE4baseEv
	.def	_ZNK9__gnu_cxx17__normal_iteratorIPK5BlorbSt6vectorIS1_SaIS1_EEE4baseEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNK9__gnu_cxx17__normal_iteratorIPK5BlorbSt6vectorIS1_SaIS1_EEE4baseEv
_ZNK9__gnu_cxx17__normal_iteratorIPK5BlorbSt6vectorIS1_SaIS1_EEE4baseEv:
.LFB5565:
	.loc 15 1088 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI963:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI964:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1089:       { return _M_current; }
	.loc 15 1089 16
	movq	16(%rbp), %rax	 # this, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1089:       { return _M_current; }
	.loc 15 1089 28
	popq	%rbp	 #
.LCFI965:
	ret	
.LFE5565:
	.seh_endproc
	.section	.text$_ZN9__gnu_cxxeqIP5BlorbS2_St6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T1_EERKNS6_IT0_S8_EE,"x"
	.linkonce discard
	.globl	_ZN9__gnu_cxxeqIP5BlorbS2_St6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T1_EERKNS6_IT0_S8_EE
	.def	_ZN9__gnu_cxxeqIP5BlorbS2_St6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T1_EERKNS6_IT0_S8_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN9__gnu_cxxeqIP5BlorbS2_St6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T1_EERKNS6_IT0_S8_EE
_ZN9__gnu_cxxeqIP5BlorbS2_St6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T1_EERKNS6_IT0_S8_EE:
.LFB5566:
	.loc 15 1105 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI966:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI967:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI968:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI969:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __lhs, __lhs
	movq	%rdx, 40(%rbp)	 # __rhs, __rhs
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1108:     { return __lhs.base() == __rhs.base(); }
	.loc 15 1108 24
	movq	32(%rbp), %rcx	 # __lhs,
	call	_ZNK9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEE4baseEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1108:     { return __lhs.base() == __rhs.base(); }
	.loc 15 1108 27
	movq	(%rax), %rbx	 # *_1, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1108:     { return __lhs.base() == __rhs.base(); }
	.loc 15 1108 40
	movq	40(%rbp), %rax	 # __rhs, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZNK9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEE4baseEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1108:     { return __lhs.base() == __rhs.base(); }
	.loc 15 1108 27
	movq	(%rax), %rax	 # *_3, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1108:     { return __lhs.base() == __rhs.base(); }
	.loc 15 1108 41
	cmpq	%rax, %rbx	 # _4, _2
	sete	%al	 #, _10
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1108:     { return __lhs.base() == __rhs.base(); }
	.loc 15 1108 44
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI970:
	popq	%rbp	 #
.LCFI971:
	ret	
.LFE5566:
	.seh_endproc
	.section	.text$_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS2_SaIS2_EEEEET_S8_,"x"
	.linkonce discard
	.globl	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS2_SaIS2_EEEEET_S8_
	.def	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS2_SaIS2_EEEEET_S8_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS2_SaIS2_EEEEET_S8_
_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS2_SaIS2_EEEEET_S8_:
.LFB5567:
	.loc 18 560 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI972:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI973:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __it, __it
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\cpp_type_traits.h:561:     { return __it; }
	.loc 18 561 14
	movq	16(%rbp), %rax	 # __it, D.128521
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\cpp_type_traits.h:561:     { return __it; }
	.loc 18 561 20
	popq	%rbp	 #
.LCFI974:
	ret	
.LFE5567:
	.seh_endproc
	.section	.text$_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS2_SaIS2_EEEES7_ET1_T0_S9_S8_,"x"
	.linkonce discard
	.globl	_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS2_SaIS2_EEEES7_ET1_T0_S9_S8_
	.def	_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS2_SaIS2_EEEES7_ET1_T0_S9_S8_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS2_SaIS2_EEEES7_ET1_T0_S9_S8_
_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS2_SaIS2_EEEES7_ET1_T0_S9_S8_:
.LFB5568:
	.loc 3 527 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI975:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI976:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI977:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
.LCFI978:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI979:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __first, __first
	movq	%rdx, 40(%rbp)	 # __last, __last
	movq	%r8, 48(%rbp)	 # __result, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:529:       return std::__niter_wrap(__result,
	.loc 3 529 31
	movq	48(%rbp), %rax	 # __result, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZSt12__niter_baseIP5BlorbSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE	 #
	movq	%rax, %rsi	 #, _1
	movq	40(%rbp), %rax	 # __last, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZSt12__niter_baseIP5BlorbSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE	 #
	movq	%rax, %rbx	 #, _2
	movq	32(%rbp), %rcx	 # __first,
	call	_ZSt12__niter_baseIP5BlorbSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE	 #
	movq	%rsi, %r8	 # _1,
	movq	%rbx, %rdx	 # _2,
	movq	%rax, %rcx	 # _3,
	call	_ZSt14__copy_move_a1ILb1EP5BlorbS1_ET1_T0_S3_S2_	 #
	movq	%rax, %rdx	 #, _4
	movq	48(%rbp), %rax	 # __result, tmp90
	movq	%rax, %rcx	 # tmp90,
	call	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:533:     }
	.loc 3 533 5
	addq	$32, %rsp	 #,
	popq	%rbx	 #
.LCFI980:
	popq	%rsi	 #
.LCFI981:
	popq	%rbp	 #
.LCFI982:
	ret	
.LFE5568:
	.seh_endproc
	.section	.text$_ZNSt16allocator_traitsISaI5BlorbEE7destroyIS0_EEvRS1_PT_,"x"
	.linkonce discard
	.globl	_ZNSt16allocator_traitsISaI5BlorbEE7destroyIS0_EEvRS1_PT_
	.def	_ZNSt16allocator_traitsISaI5BlorbEE7destroyIS0_EEvRS1_PT_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt16allocator_traitsISaI5BlorbEE7destroyIS0_EEvRS1_PT_
_ZNSt16allocator_traitsISaI5BlorbEE7destroyIS0_EEvRS1_PT_:
.LFB5569:
	.loc 16 527 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI983:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI984:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __a, __a
	movq	%rdx, 24(%rbp)	 # __p, __p
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\alloc_traits.h:533: 	  std::destroy_at(__p);
	.loc 16 533 19
	movq	24(%rbp), %rax	 # __p, tmp82
	movq	%rax, %rcx	 # tmp82,
	call	_ZSt10destroy_atI5BlorbEvPT_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\alloc_traits.h:535: 	}
	.loc 16 535 2
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI985:
	ret	
.LFE5569:
	.seh_endproc
	.section	.text$_ZN9__gnu_cxx13new_allocatorImEC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZN9__gnu_cxx13new_allocatorImEC2Ev
	.def	_ZN9__gnu_cxx13new_allocatorImEC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN9__gnu_cxx13new_allocatorImEC2Ev
_ZN9__gnu_cxx13new_allocatorImEC2Ev:
.LFB5648:
	.loc 22 79 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI986:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI987:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:79:       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
	.loc 22 79 47
	nop	
	popq	%rbp	 #
.LCFI988:
	ret	
.LFE5648:
	.seh_endproc
	.section	.text$_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv
	.def	_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv
_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv:
.LFB5650:
	.loc 8 502 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI989:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI990:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:504: 	  if (this->_M_end_of_storage)
	.loc 8 504 14
	movq	16(%rbp), %rax	 # this, tmp88
	movq	32(%rax), %rax	 # this_8(D)->D.103391._M_end_of_storage, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:504: 	  if (this->_M_end_of_storage)
	.loc 8 504 4
	testq	%rax, %rax	 # _1
	je	.L633	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:505: 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
	.loc 8 505 36
	movq	16(%rbp), %rax	 # this, tmp89
	movq	32(%rax), %rax	 # this_8(D)->D.103391._M_end_of_storage, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:505: 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
	.loc 8 505 29
	subq	$4, %rax	 #, _3
	movq	%rax, %rcx	 # _3,
	call	_ZSt11__addressofImEPT_RS0_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:505: 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
	.loc 8 505 61
	addq	$4, %rax	 #, _5
	jmp	.L634	 #
.L633:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:506: 	  return 0;
	.loc 8 506 11
	movl	$0, %eax	 #, _5
.L634:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:507: 	}
	.loc 8 507 2
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI991:
	ret	
.LFE5650:
	.seh_endproc
	.section	.text$_ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmy,"x"
	.linkonce discard
	.globl	_ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmy
	.def	_ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmy;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmy
_ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmy:
.LFB5651:
	.loc 16 491 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI992:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI993:
	subq	$64, %rsp	 #,
	.seh_stackalloc	64
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __a, __a
	movq	%rdx, 24(%rbp)	 # __p, __p
	movq	%r8, 32(%rbp)	 # __n, __n
	movq	16(%rbp), %rax	 # __a, tmp83
	movq	%rax, -8(%rbp)	 # tmp83, this
	movq	24(%rbp), %rax	 # __p, tmp84
	movq	%rax, -16(%rbp)	 # tmp84, __p
	movq	32(%rbp), %rax	 # __n, tmp85
	movq	%rax, -24(%rbp)	 # tmp85, __n
.LBB126:
.LBB127:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:205: 	if (std::is_constant_evaluated())
	.loc 12 205 32
	call	_ZSt21is_constant_evaluatedv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:205: 	if (std::is_constant_evaluated())
	.loc 12 205 2
	testb	%al, %al	 # retval.11_8
	je	.L636	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:207: 	    ::operator delete(__p);
	.loc 12 207 23
	movq	-16(%rbp), %rax	 # __p, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZdlPv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:208: 	    return;
	.loc 12 208 6
	jmp	.L637	 #
.L636:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:211: 	  __allocator_base<_Tp>::deallocate(__p, __n);
	.loc 12 211 37
	movq	-24(%rbp), %rcx	 # __n, tmp87
	movq	-16(%rbp), %rdx	 # __p, tmp88
	movq	-8(%rbp), %rax	 # this, tmp89
	movq	%rcx, %r8	 # tmp87,
	movq	%rax, %rcx	 # tmp89,
	call	_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmy	 #
.LBE127:
.LBE126:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\alloc_traits.h:492:       { __a.deallocate(__p, __n); }
	.loc 16 492 35
	nop	
.L637:
	nop	
	addq	$64, %rsp	 #,
	popq	%rbp	 #
.LCFI994:
	ret	
.LFE5651:
	.seh_endproc
	.section	.text$_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_data8_M_resetEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_data8_M_resetEv
	.def	_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_data8_M_resetEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_data8_M_resetEv
_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_data8_M_resetEv:
.LFB5652:
	.loc 8 465 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI995:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI996:
	subq	$88, %rsp	 #,
	.seh_stackalloc	88
.LCFI997:
	leaq	80(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 80
.LCFI998:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:466: 	{ *this = _Bvector_impl_data(); }
	.loc 8 466 12
	leaq	-48(%rbp), %rax	 #, tmp82
	movq	%rax, %rcx	 # tmp82,
	call	_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC1Ev	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:466: 	{ *this = _Bvector_impl_data(); }
	.loc 8 466 4
	movq	32(%rbp), %rax	 # this, tmp83
	movq	-48(%rbp), %rcx	 # D.122981, tmp84
	movq	-40(%rbp), %rbx	 # D.122981,
	movq	%rcx, (%rax)	 # tmp84, *this_3(D)
	movq	%rbx, 8(%rax)	 #, *this_3(D)
	movq	-32(%rbp), %rcx	 # D.122981, tmp85
	movq	-24(%rbp), %rbx	 # D.122981,
	movq	%rcx, 16(%rax)	 # tmp85, *this_3(D)
	movq	%rbx, 24(%rax)	 #, *this_3(D)
	movq	-16(%rbp), %rdx	 # D.122981, tmp86
	movq	%rdx, 32(%rax)	 # tmp86, *this_3(D)
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:466: 	{ *this = _Bvector_impl_data(); }
	.loc 8 466 34
	nop	
	addq	$88, %rsp	 #,
	popq	%rbx	 #
.LCFI999:
	popq	%rbp	 #
.LCFI1000:
	ret	
.LFE5652:
	.seh_endproc
	.section	.text$_ZN9__gnu_cxx13new_allocatorIiEC2Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZN9__gnu_cxx13new_allocatorIiEC2Ev
	.def	_ZN9__gnu_cxx13new_allocatorIiEC2Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN9__gnu_cxx13new_allocatorIiEC2Ev
_ZN9__gnu_cxx13new_allocatorIiEC2Ev:
.LFB5654:
	.loc 22 79 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1001:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1002:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:79:       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
	.loc 22 79 47
	nop	
	popq	%rbp	 #
.LCFI1003:
	ret	
.LFE5654:
	.seh_endproc
	.section	.text$_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Piy,"x"
	.linkonce discard
	.globl	_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Piy
	.def	_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Piy;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Piy
_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Piy:
.LFB5656:
	.loc 16 491 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1004:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1005:
	subq	$64, %rsp	 #,
	.seh_stackalloc	64
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __a, __a
	movq	%rdx, 24(%rbp)	 # __p, __p
	movq	%r8, 32(%rbp)	 # __n, __n
	movq	16(%rbp), %rax	 # __a, tmp83
	movq	%rax, -8(%rbp)	 # tmp83, this
	movq	24(%rbp), %rax	 # __p, tmp84
	movq	%rax, -16(%rbp)	 # tmp84, __p
	movq	32(%rbp), %rax	 # __n, tmp85
	movq	%rax, -24(%rbp)	 # tmp85, __n
.LBB128:
.LBB129:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:205: 	if (std::is_constant_evaluated())
	.loc 12 205 32
	call	_ZSt21is_constant_evaluatedv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:205: 	if (std::is_constant_evaluated())
	.loc 12 205 2
	testb	%al, %al	 # retval.10_8
	je	.L641	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:207: 	    ::operator delete(__p);
	.loc 12 207 23
	movq	-16(%rbp), %rax	 # __p, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZdlPv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:208: 	    return;
	.loc 12 208 6
	jmp	.L642	 #
.L641:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:211: 	  __allocator_base<_Tp>::deallocate(__p, __n);
	.loc 12 211 37
	movq	-24(%rbp), %rcx	 # __n, tmp87
	movq	-16(%rbp), %rdx	 # __p, tmp88
	movq	-8(%rbp), %rax	 # this, tmp89
	movq	%rcx, %r8	 # tmp87,
	movq	%rax, %rcx	 # tmp89,
	call	_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPiy	 #
.LBE129:
.LBE128:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\alloc_traits.h:492:       { __a.deallocate(__p, __n); }
	.loc 16 492 35
	nop	
.L642:
	nop	
	addq	$64, %rsp	 #,
	popq	%rbp	 #
.LCFI1006:
	ret	
.LFE5656:
	.seh_endproc
	.section	.text$_ZNSt12_Destroy_auxILb0EE9__destroyIPiEEvT_S3_,"x"
	.linkonce discard
	.globl	_ZNSt12_Destroy_auxILb0EE9__destroyIPiEEvT_S3_
	.def	_ZNSt12_Destroy_auxILb0EE9__destroyIPiEEvT_S3_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt12_Destroy_auxILb0EE9__destroyIPiEEvT_S3_
_ZNSt12_Destroy_auxILb0EE9__destroyIPiEEvT_S3_:
.LFB5657:
	.loc 21 149 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1007:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1008:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:151: 	  for (; __first != __last; ++__first)
	.loc 21 151 4
	jmp	.L644	 #
.L645:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:152: 	    std::_Destroy(std::__addressof(*__first));
	.loc 21 152 19 discriminator 2
	movq	16(%rbp), %rcx	 # __first,
	call	_ZSt11__addressofIiEPT_RS0_	 #
	movq	%rax, %rcx	 # _1,
	call	_ZSt8_DestroyIiEvPT_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:151: 	  for (; __first != __last; ++__first)
	.loc 21 151 4 discriminator 2
	addq	$4, 16(%rbp)	 #, __first
.L644:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:151: 	  for (; __first != __last; ++__first)
	.loc 21 151 19 discriminator 1
	movq	16(%rbp), %rax	 # __first, tmp83
	cmpq	24(%rbp), %rax	 # __last, tmp83
	jne	.L645	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:153: 	}
	.loc 21 153 2
	nop	
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1009:
	ret	
.LFE5657:
	.seh_endproc
	.section	.text$_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_,"x"
	.linkonce discard
	.globl	_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_
	.def	_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_
_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_:
.LFB5658:
	.loc 21 161 9
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1010:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1011:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # D.123009, D.123009
	movq	%rdx, 24(%rbp)	 # D.123010, D.123010
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:161:         __destroy(_ForwardIterator, _ForwardIterator) { }
	.loc 21 161 57
	nop	
	popq	%rbp	 #
.LCFI1012:
	ret	
.LFE5658:
	.seh_endproc
	.section	.text$_ZNSt16allocator_traitsISaImEE8max_sizeERKS0_,"x"
	.linkonce discard
	.globl	_ZNSt16allocator_traitsISaImEE8max_sizeERKS0_
	.def	_ZNSt16allocator_traitsISaImEE8max_sizeERKS0_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt16allocator_traitsISaImEE8max_sizeERKS0_
_ZNSt16allocator_traitsISaImEE8max_sizeERKS0_:
.LFB5659:
	.loc 16 543 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1013:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1014:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __a, __a
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\alloc_traits.h:548: 	return size_t(-1) / sizeof(value_type);
	.loc 16 548 39
	movabsq	$4611686018427387903, %rax	 #, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\alloc_traits.h:550:       }
	.loc 16 550 7
	popq	%rbp	 #
.LCFI1015:
	ret	
.LFE5659:
	.seh_endproc
	.section	.text$_ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv
	.def	_ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv
_ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv:
.LFB5660:
	.loc 8 518 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1016:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1017:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:519:       { return this->_M_impl; }
	.loc 8 519 22
	movq	16(%rbp), %rax	 # this, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:519:       { return this->_M_impl; }
	.loc 8 519 31
	popq	%rbp	 #
.LCFI1018:
	ret	
.LFE5660:
	.seh_endproc
	.section	.text$_ZNSt13_Bvector_baseISaIbEE11_M_allocateEy,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt13_Bvector_baseISaIbEE11_M_allocateEy
	.def	_ZNSt13_Bvector_baseISaIbEE11_M_allocateEy;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt13_Bvector_baseISaIbEE11_M_allocateEy
_ZNSt13_Bvector_baseISaIbEE11_M_allocateEy:
.LFB5661:
	.loc 8 549 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1019:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1020:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __n, __n
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:550:       { return _Bit_alloc_traits::allocate(_M_impl, _S_nword(__n)); }
	.loc 8 550 43
	movq	24(%rbp), %rax	 # __n, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZNSt13_Bvector_baseISaIbEE8_S_nwordEy	 #
	movq	%rax, %rdx	 #, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:550:       { return _Bit_alloc_traits::allocate(_M_impl, _S_nword(__n)); }
	.loc 8 550 44
	movq	16(%rbp), %rax	 # this, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:550:       { return _Bit_alloc_traits::allocate(_M_impl, _S_nword(__n)); }
	.loc 8 550 43
	movq	%rax, %rcx	 # _2,
	call	_ZNSt16allocator_traitsISaImEE8allocateERS0_y	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:550:       { return _Bit_alloc_traits::allocate(_M_impl, _S_nword(__n)); }
	.loc 8 550 69
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1021:
	ret	
.LFE5661:
	.seh_endproc
	.section	.text$_ZSt11__addressofImEPT_RS0_,"x"
	.linkonce discard
	.globl	_ZSt11__addressofImEPT_RS0_
	.def	_ZSt11__addressofImEPT_RS0_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt11__addressofImEPT_RS0_
_ZSt11__addressofImEPT_RS0_:
.LFB5662:
	.loc 17 49 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1022:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1023:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __r, __r
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\move.h:50:     { return __builtin_addressof(__r); }
	.loc 17 50 37
	movq	16(%rbp), %rax	 # __r, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\move.h:50:     { return __builtin_addressof(__r); }
	.loc 17 50 40
	popq	%rbp	 #
.LCFI1024:
	ret	
.LFE5662:
	.seh_endproc
	.section	.text$_ZSt4copyIPmS0_ET0_T_S2_S1_,"x"
	.linkonce discard
	.globl	_ZSt4copyIPmS0_ET0_T_S2_S1_
	.def	_ZSt4copyIPmS0_ET0_T_S2_S1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt4copyIPmS0_ET0_T_S2_S1_
_ZSt4copyIPmS0_ET0_T_S2_S1_:
.LFB5664:
	.loc 3 611 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1025:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1026:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI1027:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI1028:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __first, __first
	movq	%rdx, 40(%rbp)	 # __last, __last
	movq	%r8, 48(%rbp)	 # __result, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:620: 	     (std::__miter_base(__first), std::__miter_base(__last), __result);
	.loc 3 620 7
	movq	40(%rbp), %rax	 # __last, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZSt12__miter_baseIPmET_S1_	 #
	movq	%rax, %rbx	 #, _1
	movq	32(%rbp), %rcx	 # __first,
	call	_ZSt12__miter_baseIPmET_S1_	 #
	movq	48(%rbp), %rdx	 # __result, tmp87
	movq	%rdx, %r8	 # tmp87,
	movq	%rbx, %rdx	 # _1,
	movq	%rax, %rcx	 # _2,
	call	_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:621:     }
	.loc 3 621 5
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI1029:
	popq	%rbp	 #
.LCFI1030:
	ret	
.LFE5664:
	.seh_endproc
	.section	.text$_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator
	.def	_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator
_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator:
.LFB5663:
	.loc 8 1128 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1031:
	pushq	%rdi	 #
	.seh_pushreg	%rdi
.LCFI1032:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI1033:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1034:
	subq	$136, %rsp	 #,
	.seh_stackalloc	136
.LCFI1035:
	leaq	128(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 128
.LCFI1036:
	.seh_endprologue
	movq	%rcx, 48(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, 56(%rbp)	 # this, this
	movq	%r8, %rsi	 #, tmp87
	movq	%r9, %rbx	 #, tmp88
	movq	80(%rbp), %rdi	 #, tmp89
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1131: 	_Bit_type* __q = std::copy(__first._M_p, __last._M_p, __result._M_p);
	.loc 8 1131 28
	movq	(%rdi), %rcx	 # __result.D.34297._M_p, _1
	movq	(%rbx), %rdx	 # __last.D.34475._M_p, _2
	movq	(%rsi), %rax	 # __first.D.34475._M_p, _3
	movq	%rcx, %r8	 # _1,
	movq	%rax, %rcx	 # _3,
	call	_ZSt4copyIPmS0_ET0_T_S2_S1_	 #
	movq	%rax, -8(%rbp)	 # _7, __q
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1132: 	return std::copy(const_iterator(__last._M_p, 0), __last,
	.loc 8 1132 18
	movq	-8(%rbp), %rdx	 # __q, tmp90
	leaq	-48(%rbp), %rax	 #, tmp91
	movl	$0, %r8d	 #,
	movq	%rax, %rcx	 # tmp91,
	call	_ZNSt13_Bit_iteratorC1EPmj	 #
	movq	(%rbx), %rdx	 # __last.D.34475._M_p, _4
	leaq	-32(%rbp), %rax	 #, tmp92
	movl	$0, %r8d	 #,
	movq	%rax, %rcx	 # tmp92,
	call	_ZNSt19_Bit_const_iteratorC1EPmj	 #
	movq	48(%rbp), %rcx	 # .result_ptr, tmp93
	movq	-32(%rbp), %rax	 # D.123049, tmp94
	movq	-24(%rbp), %rdx	 # D.123049,
	movq	%rax, -64(%rbp)	 # tmp94,
	movq	%rdx, -56(%rbp)	 #,
	movq	(%rbx), %rax	 # __last, tmp95
	movq	8(%rbx), %rdx	 # __last,
	movq	%rax, -80(%rbp)	 # tmp95,
	movq	%rdx, -72(%rbp)	 #,
	movq	-48(%rbp), %rax	 # D.123050, tmp96
	movq	-40(%rbp), %rdx	 # D.123050,
	movq	%rax, -96(%rbp)	 # tmp96,
	movq	%rdx, -88(%rbp)	 #,
	leaq	-96(%rbp), %r8	 #, tmp97
	leaq	-80(%rbp), %rdx	 #, tmp98
	leaq	-64(%rbp), %rax	 #, tmp99
	movq	%r8, %r9	 # tmp97,
	movq	%rdx, %r8	 # tmp98,
	movq	%rax, %rdx	 # tmp99,
	call	_ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1133: 			 iterator(__q, 0));
	.loc 8 1133 21
	nop	
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1134:       }
	.loc 8 1134 7
	movq	48(%rbp), %rax	 # .result_ptr,
	addq	$136, %rsp	 #,
	popq	%rbx	 #
.LCFI1037:
	popq	%rsi	 #
.LCFI1038:
	popq	%rdi	 #
.LCFI1039:
	popq	%rbp	 #
.LCFI1040:
	ret	
.LFE5663:
	.seh_endproc
	.section	.text$_ZNSt13_Bvector_baseISaIbEE8_S_nwordEy,"x"
	.linkonce discard
	.globl	_ZNSt13_Bvector_baseISaIbEE8_S_nwordEy
	.def	_ZNSt13_Bvector_baseISaIbEE8_S_nwordEy;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt13_Bvector_baseISaIbEE8_S_nwordEy
_ZNSt13_Bvector_baseISaIbEE8_S_nwordEy:
.LFB5665:
	.loc 8 572 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1041:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1042:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __n, __n
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:573:       { return (__n + int(_S_word_bit) - 1) / int(_S_word_bit); }
	.loc 8 573 40
	movq	16(%rbp), %rax	 # __n, tmp85
	addq	$31, %rax	 #, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:573:       { return (__n + int(_S_word_bit) - 1) / int(_S_word_bit); }
	.loc 8 573 62
	shrq	$5, %rax	 #, _3
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:573:       { return (__n + int(_S_word_bit) - 1) / int(_S_word_bit); }
	.loc 8 573 65
	popq	%rbp	 #
.LCFI1043:
	ret	
.LFE5665:
	.seh_endproc
	.section	.text$_ZNKSt6vectorIbSaIbEE3endEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt6vectorIbSaIbEE3endEv
	.def	_ZNKSt6vectorIbSaIbEE3endEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt6vectorIbSaIbEE3endEv
_ZNKSt6vectorIbSaIbEE3endEv:
.LFB5666:
	.loc 8 843 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1044:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1045:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, 24(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:844:       { return this->_M_impl._M_finish; }
	.loc 8 844 30
	movq	24(%rbp), %rax	 # this, tmp83
	addq	$16, %rax	 #, _1
	movq	%rax, %rdx	 # _1,
	movq	16(%rbp), %rcx	 # .result_ptr,
	call	_ZNSt19_Bit_const_iteratorC1ERKSt13_Bit_iterator	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:844:       { return this->_M_impl._M_finish; }
	.loc 8 844 41
	movq	16(%rbp), %rax	 # .result_ptr,
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1046:
	ret	
.LFE5666:
	.seh_endproc
	.section	.text$_ZNKSt6vectorIbSaIbEE6cbeginEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt6vectorIbSaIbEE6cbeginEv
	.def	_ZNKSt6vectorIbSaIbEE6cbeginEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt6vectorIbSaIbEE6cbeginEv
_ZNKSt6vectorIbSaIbEE6cbeginEv:
.LFB5667:
	.loc 8 864 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1047:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1048:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, 24(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:865:       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
	.loc 8 865 54
	movq	24(%rbp), %rax	 # this, tmp83
	movq	(%rax), %rax	 # this_3(D)->D.103908._M_impl.D.103391._M_start.D.34297._M_p, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:865:       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
	.loc 8 865 61
	movl	$0, %r8d	 #,
	movq	%rax, %rdx	 # _1,
	movq	16(%rbp), %rcx	 # .result_ptr,
	call	_ZNSt19_Bit_const_iteratorC1EPmj	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:865:       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
	.loc 8 865 64
	movq	16(%rbp), %rax	 # .result_ptr,
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1049:
	ret	
.LFE5667:
	.seh_endproc
	.section	.text$_ZSt13copy_backwardISt13_Bit_iteratorS0_ET0_T_S2_S1_,"x"
	.linkonce discard
	.globl	_ZSt13copy_backwardISt13_Bit_iteratorS0_ET0_T_S2_S1_
	.def	_ZSt13copy_backwardISt13_Bit_iteratorS0_ET0_T_S2_S1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt13copy_backwardISt13_Bit_iteratorS0_ET0_T_S2_S1_
_ZSt13copy_backwardISt13_Bit_iteratorS0_ET0_T_S2_S1_:
.LFB5669:
	.loc 3 848 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1050:
	pushq	%rdi	 #
	.seh_pushreg	%rdi
.LCFI1051:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI1052:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1053:
	subq	$120, %rsp	 #,
	.seh_stackalloc	120
.LCFI1054:
	leaq	112(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 112
.LCFI1055:
	.seh_endprologue
	movq	%rcx, 48(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, %rbx	 #, tmp82
	movq	%r8, %rdi	 #, tmp83
	movq	%r9, %rsi	 #, tmp84
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:859: 	     (std::__miter_base(__first), std::__miter_base(__last), __result);
	.loc 3 859 7
	leaq	-32(%rbp), %rcx	 #, tmp85
	movq	(%rdi), %rax	 # __last, tmp86
	movq	8(%rdi), %rdx	 # __last,
	movq	%rax, -48(%rbp)	 # tmp86,
	movq	%rdx, -40(%rbp)	 #,
	leaq	-48(%rbp), %rax	 #, tmp87
	movq	%rax, %rdx	 # tmp87,
	call	_ZSt12__miter_baseISt13_Bit_iteratorET_S1_	 #
	leaq	-16(%rbp), %rcx	 #, tmp88
	movq	(%rbx), %rax	 # __first, tmp89
	movq	8(%rbx), %rdx	 # __first,
	movq	%rax, -48(%rbp)	 # tmp89,
	movq	%rdx, -40(%rbp)	 #,
	leaq	-48(%rbp), %rax	 #, tmp90
	movq	%rax, %rdx	 # tmp90,
	call	_ZSt12__miter_baseISt13_Bit_iteratorET_S1_	 #
	movq	48(%rbp), %rcx	 # .result_ptr, tmp91
	movq	-16(%rbp), %rax	 # D.127590, tmp92
	movq	-8(%rbp), %rdx	 # D.127590,
	movq	%rax, -48(%rbp)	 # tmp92,
	movq	%rdx, -40(%rbp)	 #,
	movq	-32(%rbp), %rax	 # D.127589, tmp93
	movq	-24(%rbp), %rdx	 # D.127589,
	movq	%rax, -64(%rbp)	 # tmp93,
	movq	%rdx, -56(%rbp)	 #,
	movq	(%rsi), %rax	 # __result, tmp94
	movq	8(%rsi), %rdx	 # __result,
	movq	%rax, -80(%rbp)	 # tmp94,
	movq	%rdx, -72(%rbp)	 #,
	leaq	-80(%rbp), %r8	 #, tmp95
	leaq	-64(%rbp), %rdx	 #, tmp96
	leaq	-48(%rbp), %rax	 #, tmp97
	movq	%r8, %r9	 # tmp95,
	movq	%rdx, %r8	 # tmp96,
	movq	%rax, %rdx	 # tmp97,
	call	_ZSt22__copy_move_backward_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:859: 	     (std::__miter_base(__first), std::__miter_base(__last), __result);
	.loc 3 859 71
	nop	
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:860:     }
	.loc 3 860 5
	movq	48(%rbp), %rax	 # .result_ptr,
	addq	$120, %rsp	 #,
	popq	%rbx	 #
.LCFI1056:
	popq	%rsi	 #
.LCFI1057:
	popq	%rdi	 #
.LCFI1058:
	popq	%rbp	 #
.LCFI1059:
	ret	
.LFE5669:
	.seh_endproc
	.section .rdata,"dr"
.LC28:
	.ascii "vector<bool>::_M_fill_insert\0"
	.section	.text$_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratoryb,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratoryb
	.def	_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratoryb;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratoryb
_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratoryb:
.LFB5668:
	.loc 14 824 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1060:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI1061:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1062:
	subq	$320, %rsp	 #,
	.seh_stackalloc	320
.LCFI1063:
	leaq	128(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 128
.LCFI1064:
	.seh_endprologue
	movq	%rcx, 224(%rbp)	 # this, this
	movq	%rdx, %rbx	 #, tmp101
	movq	%r8, 240(%rbp)	 # __n, __n
	movl	%r9d, %eax	 # __x, tmp102
	movb	%al, 248(%rbp)	 # tmp103, __x
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:827:       if (__n == 0)
	.loc 14 827 7
	cmpq	$0, 240(%rbp)	 #, __n
	je	.L671	 #,
.LBB130:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:829:       if (capacity() - size() >= __n)
	.loc 14 829 19
	movq	224(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIbSaIbEE8capacityEv	 #
	movq	%rax, %rsi	 #, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:829:       if (capacity() - size() >= __n)
	.loc 14 829 28
	movq	224(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIbSaIbEE4sizeEv	 #
	movq	%rax, %rdx	 #, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:829:       if (capacity() - size() >= __n)
	.loc 14 829 22
	movq	%rsi, %rax	 # _1, _1
	subq	%rdx, %rax	 # _2, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:829:       if (capacity() - size() >= __n)
	.loc 14 829 31
	cmpq	%rax, 240(%rbp)	 # _3, __n
	setbe	%al	 #, retval.25_24
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:829:       if (capacity() - size() >= __n)
	.loc 14 829 7
	testb	%al, %al	 # retval.25_24
	je	.L670	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:831: 	  std::copy_backward(__position, end(),
	.loc 14 831 22
	movq	240(%rbp), %rcx	 # __n, __n.26_4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:832: 			     this->_M_impl._M_finish + difference_type(__n));
	.loc 14 832 23
	movq	224(%rbp), %rax	 # this, tmp104
	leaq	16(%rax), %rdx	 #, _5
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:831: 	  std::copy_backward(__position, end(),
	.loc 14 831 22
	leaq	32(%rbp), %rax	 #, tmp105
	movq	%rcx, %r8	 # __n.26_4,
	movq	%rax, %rcx	 # tmp105,
	call	_ZStplRKSt13_Bit_iteratorx	 #
	leaq	48(%rbp), %rax	 #, tmp106
	movq	224(%rbp), %rdx	 # this,
	movq	%rax, %rcx	 # tmp106,
	call	_ZNSt6vectorIbSaIbEE3endEv	 #
	leaq	16(%rbp), %rcx	 #, tmp107
	movq	(%rbx), %rax	 # __position, tmp108
	movq	8(%rbx), %rdx	 # __position,
	movq	%rax, -48(%rbp)	 # tmp108,
	movq	%rdx, -40(%rbp)	 #,
	movq	48(%rbp), %rax	 # D.127575, tmp109
	movq	56(%rbp), %rdx	 # D.127575,
	movq	%rax, -64(%rbp)	 # tmp109,
	movq	%rdx, -56(%rbp)	 #,
	movq	32(%rbp), %rax	 # D.127574, tmp110
	movq	40(%rbp), %rdx	 # D.127574,
	movq	%rax, -80(%rbp)	 # tmp110,
	movq	%rdx, -72(%rbp)	 #,
	leaq	-80(%rbp), %r8	 #, tmp111
	leaq	-64(%rbp), %rdx	 #, tmp112
	leaq	-48(%rbp), %rax	 #, tmp113
	movq	%r8, %r9	 # tmp111,
	movq	%rdx, %r8	 # tmp112,
	movq	%rax, %rdx	 # tmp113,
	call	_ZSt13copy_backwardISt13_Bit_iteratorS0_ET0_T_S2_S1_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:833: 	  std::fill(__position, __position + difference_type(__n), __x);
	.loc 14 833 13
	movq	240(%rbp), %rdx	 # __n, __n.27_6
	leaq	64(%rbp), %rax	 #, tmp114
	movq	%rdx, %r8	 # __n.27_6,
	movq	%rbx, %rdx	 # tmp101,
	movq	%rax, %rcx	 # tmp114,
	call	_ZStplRKSt13_Bit_iteratorx	 #
	movq	(%rbx), %rax	 # __position, tmp115
	movq	8(%rbx), %rdx	 # __position,
	movq	%rax, -80(%rbp)	 # tmp115,
	movq	%rdx, -72(%rbp)	 #,
	movq	64(%rbp), %rax	 # D.127576, tmp116
	movq	72(%rbp), %rdx	 # D.127576,
	movq	%rax, -64(%rbp)	 # tmp116,
	movq	%rdx, -56(%rbp)	 #,
	leaq	248(%rbp), %rcx	 #, tmp117
	leaq	-64(%rbp), %rdx	 #, tmp118
	leaq	-80(%rbp), %rax	 #, tmp119
	movq	%rcx, %r8	 # tmp117,
	movq	%rax, %rcx	 # tmp119,
	call	_ZSt4fillISt13_Bit_iteratorbEvT_S1_RKT0_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:834: 	  this->_M_impl._M_finish += difference_type(__n);
	.loc 14 834 28
	movq	240(%rbp), %rax	 # __n, __n.28_7
	movq	224(%rbp), %rdx	 # this, tmp120
	leaq	16(%rdx), %rcx	 #, _8
	movq	%rax, %rdx	 # __n.28_7,
	call	_ZNSt13_Bit_iteratorpLEx	 #
	jmp	.L667	 #
.L670:
.LBB131:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:839: 	    _M_check_len(__n, "vector<bool>::_M_fill_insert");
	.loc 14 839 18
	movq	240(%rbp), %rax	 # __n, tmp121
	leaq	.LC28(%rip), %r8	 #,
	movq	%rax, %rdx	 # tmp121,
	movq	224(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIbSaIbEE12_M_check_lenEyPKc	 #
	movq	%rax, 184(%rbp)	 # _26, __len
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:840: 	  _Bit_pointer __q = this->_M_allocate(__len);
	.loc 14 840 40
	movq	224(%rbp), %rax	 # this, _9
	movq	184(%rbp), %rdx	 # __len, tmp122
	movq	%rax, %rcx	 # _9,
	call	_ZNSt13_Bvector_baseISaIbEE11_M_allocateEy	 #
	movq	%rax, 176(%rbp)	 # _29, __q
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:841: 	  iterator __start(std::__addressof(*__q), 0);
	.loc 14 841 13
	movq	176(%rbp), %rax	 # __q, tmp123
	movq	%rax, %rcx	 # tmp123,
	call	_ZSt11__addressofImEPT_RS0_	 #
	movq	%rax, %rdx	 #, _10
	movq	%rbp, %rax	 #, tmp124
	movl	$0, %r8d	 #,
	movq	%rax, %rcx	 # tmp124,
	call	_ZNSt13_Bit_iteratorC1EPmj	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:842: 	  iterator __i = _M_copy_aligned(begin(), __position, __start);
	.loc 14 842 34
	leaq	80(%rbp), %rax	 #, tmp125
	movq	%rbx, %rdx	 # tmp101,
	movq	%rax, %rcx	 # tmp125,
	call	_ZNSt19_Bit_const_iteratorC1ERKSt13_Bit_iterator	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:842: 	  iterator __i = _M_copy_aligned(begin(), __position, __start);
	.loc 14 842 40
	leaq	112(%rbp), %rax	 #, tmp126
	movq	224(%rbp), %rdx	 # this,
	movq	%rax, %rcx	 # tmp126,
	call	_ZNSt6vectorIbSaIbEE5beginEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:842: 	  iterator __i = _M_copy_aligned(begin(), __position, __start);
	.loc 14 842 34
	leaq	112(%rbp), %rdx	 #, tmp127
	leaq	96(%rbp), %rax	 #, tmp128
	movq	%rax, %rcx	 # tmp128,
	call	_ZNSt19_Bit_const_iteratorC1ERKSt13_Bit_iterator	 #
	leaq	-16(%rbp), %rcx	 #, tmp129
	movq	96(%rbp), %rax	 # D.123101, tmp130
	movq	104(%rbp), %rdx	 # D.123101,
	movq	%rax, -80(%rbp)	 # tmp130,
	movq	%rdx, -72(%rbp)	 #,
	movq	80(%rbp), %rax	 # D.123102, tmp131
	movq	88(%rbp), %rdx	 # D.123102,
	movq	%rax, -64(%rbp)	 # tmp131,
	movq	%rdx, -56(%rbp)	 #,
	movq	0(%rbp), %rax	 # __start, tmp132
	movq	8(%rbp), %rdx	 # __start,
	movq	%rax, -48(%rbp)	 # tmp132,
	movq	%rdx, -40(%rbp)	 #,
	leaq	-64(%rbp), %r8	 #, tmp133
	leaq	-80(%rbp), %rdx	 #, tmp134
	leaq	-48(%rbp), %rax	 #, tmp135
	movq	%rax, 32(%rsp)	 # tmp135,
	movq	%r8, %r9	 # tmp133,
	movq	%rdx, %r8	 # tmp134,
	movq	224(%rbp), %rdx	 # this,
	call	_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:843: 	  std::fill(__i, __i + difference_type(__n), __x);
	.loc 14 843 13
	movq	240(%rbp), %rcx	 # __n, __n.29_11
	leaq	128(%rbp), %rax	 #, tmp136
	leaq	-16(%rbp), %rdx	 #, tmp137
	movq	%rcx, %r8	 # __n.29_11,
	movq	%rax, %rcx	 # tmp136,
	call	_ZStplRKSt13_Bit_iteratorx	 #
	movq	-16(%rbp), %rax	 # __i, tmp138
	movq	-8(%rbp), %rdx	 # __i,
	movq	%rax, -80(%rbp)	 # tmp138,
	movq	%rdx, -72(%rbp)	 #,
	movq	128(%rbp), %rax	 # D.127578, tmp139
	movq	136(%rbp), %rdx	 # D.127578,
	movq	%rax, -64(%rbp)	 # tmp139,
	movq	%rdx, -56(%rbp)	 #,
	leaq	248(%rbp), %rcx	 #, tmp140
	leaq	-64(%rbp), %rdx	 #, tmp141
	leaq	-80(%rbp), %rax	 #, tmp142
	movq	%rcx, %r8	 # tmp140,
	movq	%rax, %rcx	 # tmp142,
	call	_ZSt4fillISt13_Bit_iteratorbEvT_S1_RKT0_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:844: 	  iterator __finish = std::copy(__position, end(),
	.loc 14 844 33
	movq	240(%rbp), %rcx	 # __n, __n.30_12
	leaq	144(%rbp), %rax	 #, tmp143
	leaq	-16(%rbp), %rdx	 #, tmp144
	movq	%rcx, %r8	 # __n.30_12,
	movq	%rax, %rcx	 # tmp143,
	call	_ZStplRKSt13_Bit_iteratorx	 #
	leaq	160(%rbp), %rax	 #, tmp145
	movq	224(%rbp), %rdx	 # this,
	movq	%rax, %rcx	 # tmp145,
	call	_ZNSt6vectorIbSaIbEE3endEv	 #
	leaq	-32(%rbp), %rcx	 #, tmp146
	movq	(%rbx), %rax	 # __position, tmp147
	movq	8(%rbx), %rdx	 # __position,
	movq	%rax, -80(%rbp)	 # tmp147,
	movq	%rdx, -72(%rbp)	 #,
	movq	160(%rbp), %rax	 # D.127580, tmp148
	movq	168(%rbp), %rdx	 # D.127580,
	movq	%rax, -64(%rbp)	 # tmp148,
	movq	%rdx, -56(%rbp)	 #,
	movq	144(%rbp), %rax	 # D.127579, tmp149
	movq	152(%rbp), %rdx	 # D.127579,
	movq	%rax, -48(%rbp)	 # tmp149,
	movq	%rdx, -40(%rbp)	 #,
	leaq	-48(%rbp), %r8	 #, tmp150
	leaq	-64(%rbp), %rdx	 #, tmp151
	leaq	-80(%rbp), %rax	 #, tmp152
	movq	%r8, %r9	 # tmp150,
	movq	%rdx, %r8	 # tmp151,
	movq	%rax, %rdx	 # tmp152,
	call	_ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:846: 	  this->_M_deallocate();
	.loc 14 846 23
	movq	224(%rbp), %rax	 # this, _13
	movq	%rax, %rcx	 # _13,
	call	_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:847: 	  this->_M_impl._M_end_of_storage = __q + _S_nword(__len);
	.loc 14 847 52
	movq	184(%rbp), %rax	 # __len, tmp153
	movq	%rax, %rcx	 # tmp153,
	call	_ZNSt13_Bvector_baseISaIbEE8_S_nwordEy	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:847: 	  this->_M_impl._M_end_of_storage = __q + _S_nword(__len);
	.loc 14 847 42
	leaq	0(,%rax,4), %rdx	 #, _15
	movq	176(%rbp), %rax	 # __q, tmp154
	addq	%rax, %rdx	 # tmp154, _16
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:847: 	  this->_M_impl._M_end_of_storage = __q + _S_nword(__len);
	.loc 14 847 36
	movq	224(%rbp), %rax	 # this, tmp155
	movq	%rdx, 32(%rax)	 # _16, this_21(D)->D.103908._M_impl.D.103391._M_end_of_storage
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:848: 	  this->_M_impl._M_start = __start;
	.loc 14 848 4
	movq	224(%rbp), %rax	 # this, tmp156
	movq	0(%rbp), %rdx	 # MEM <unsigned char[12]> [(struct _Bit_iterator *)&__start], tmp157
	movq	%rdx, (%rax)	 # tmp157, MEM <unsigned char[12]> [(struct _Bit_iterator *)this_21(D)]
	movl	8(%rbp), %edx	 # MEM <unsigned char[12]> [(struct _Bit_iterator *)&__start], tmp158
	movl	%edx, 8(%rax)	 # tmp158, MEM <unsigned char[12]> [(struct _Bit_iterator *)this_21(D)]
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:849: 	  this->_M_impl._M_finish = __finish;
	.loc 14 849 4
	movq	224(%rbp), %rax	 # this, tmp159
	movq	-32(%rbp), %rdx	 # MEM <unsigned char[12]> [(struct _Bit_iterator *)&__finish], tmp160
	movq	%rdx, 16(%rax)	 # tmp160, MEM <unsigned char[12]> [(struct _Bit_iterator *)this_21(D) + 16B]
	movl	-24(%rbp), %edx	 # MEM <unsigned char[12]> [(struct _Bit_iterator *)&__finish], tmp161
	movl	%edx, 24(%rax)	 # tmp161, MEM <unsigned char[12]> [(struct _Bit_iterator *)this_21(D) + 16B]
	jmp	.L667	 #
.L671:
.LBE131:
.LBE130:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:828: 	return;
	.loc 14 828 2
	nop	
.L667:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:851:     }
	.loc 14 851 5
	addq	$320, %rsp	 #,
	popq	%rbx	 #
.LCFI1065:
	popq	%rsi	 #
.LCFI1066:
	popq	%rbp	 #
.LCFI1067:
	ret	
.LFE5668:
	.seh_endproc
	.section	.text$_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_,"x"
	.linkonce discard
	.globl	_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_
	.def	_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_
_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_:
.LFB5671:
	.loc 16 543 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1068:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1069:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __a, __a
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\alloc_traits.h:548: 	return size_t(-1) / sizeof(value_type);
	.loc 16 548 39
	movabsq	$4611686018427387903, %rax	 #, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\alloc_traits.h:550:       }
	.loc 16 550 7
	popq	%rbp	 #
.LCFI1070:
	ret	
.LFE5671:
	.seh_endproc
	.section	.text$_ZNSt6vectorIiSaIiEE11_S_max_sizeERKS0_,"x"
	.linkonce discard
	.globl	_ZNSt6vectorIiSaIiEE11_S_max_sizeERKS0_
	.def	_ZNSt6vectorIiSaIiEE11_S_max_sizeERKS0_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorIiSaIiEE11_S_max_sizeERKS0_
_ZNSt6vectorIiSaIiEE11_S_max_sizeERKS0_:
.LFB5670:
	.loc 11 1776 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1071:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1072:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __a, __a
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1781: 	const size_t __diffmax
	.loc 11 1781 15
	movabsq	$2305843009213693951, %rax	 #, tmp90
	movq	%rax, -8(%rbp)	 # tmp90, __diffmax
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1783: 	const size_t __allocmax = _Alloc_traits::max_size(__a);
	.loc 11 1783 51
	movq	16(%rbp), %rcx	 # __a,
	call	_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1783: 	const size_t __allocmax = _Alloc_traits::max_size(__a);
	.loc 11 1783 15
	movq	%rax, -16(%rbp)	 # _1, __allocmax
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1784: 	return (std::min)(__diffmax, __allocmax);
	.loc 11 1784 19
	leaq	-16(%rbp), %rdx	 #, tmp86
	leaq	-8(%rbp), %rax	 #, tmp87
	movq	%rax, %rcx	 # tmp87,
	call	_ZSt3minIyERKT_S2_S2_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1784: 	return (std::min)(__diffmax, __allocmax);
	.loc 11 1784 41
	movq	(%rax), %rax	 # *_2, _9
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1785:       }
	.loc 11 1785 7
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI1073:
	ret	
.LFE5670:
	.seh_endproc
	.section	.text$_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv
	.def	_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv
_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv:
.LFB5672:
	.loc 11 280 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1074:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1075:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:281:       { return this->_M_impl; }
	.loc 11 281 22
	movq	16(%rbp), %rax	 # this, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:281:       { return this->_M_impl; }
	.loc 11 281 31
	popq	%rbp	 #
.LCFI1076:
	ret	
.LFE5672:
	.seh_endproc
	.section	.text$_ZNSt16allocator_traitsISaIiEE8allocateERS0_y,"x"
	.linkonce discard
	.globl	_ZNSt16allocator_traitsISaIiEE8allocateERS0_y
	.def	_ZNSt16allocator_traitsISaIiEE8allocateERS0_y;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt16allocator_traitsISaIiEE8allocateERS0_y
_ZNSt16allocator_traitsISaIiEE8allocateERS0_y:
.LFB5673:
	.loc 16 459 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1077:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1078:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __a, __a
	movq	%rdx, 24(%rbp)	 # __n, __n
	movq	16(%rbp), %rax	 # __a, tmp86
	movq	%rax, -8(%rbp)	 # tmp86, this
	movq	24(%rbp), %rax	 # __n, tmp87
	movq	%rax, -16(%rbp)	 # tmp87, __n
.LBB132:
.LBB133:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:194: 	if (std::is_constant_evaluated())
	.loc 12 194 32
	call	_ZSt21is_constant_evaluatedv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:194: 	if (std::is_constant_evaluated())
	.loc 12 194 2
	testb	%al, %al	 # retval.42_8
	je	.L679	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:195: 	  return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	.loc 12 195 43
	movq	-16(%rbp), %rax	 # __n, tmp88
	salq	$2, %rax	 #, _9
	movq	%rax, %rcx	 # _9,
	call	_Znwy	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:195: 	  return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	.loc 12 195 62
	jmp	.L680	 #
.L679:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:197: 	return __allocator_base<_Tp>::allocate(__n, 0);
	.loc 12 197 40
	movq	-16(%rbp), %rdx	 # __n, tmp90
	movq	-8(%rbp), %rax	 # this, tmp91
	movl	$0, %r8d	 #,
	movq	%rax, %rcx	 # tmp91,
	call	_ZN9__gnu_cxx13new_allocatorIiE8allocateEyPKv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:197: 	return __allocator_base<_Tp>::allocate(__n, 0);
	.loc 12 197 47
	nop	
.L680:
.LBE133:
.LBE132:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\alloc_traits.h:460:       { return __a.allocate(__n); }
	.loc 16 460 35
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI1079:
	ret	
.LFE5673:
	.seh_endproc
	.section	.text$_ZNSt6vectorIiSaIiEE14_S_do_relocateEPiS2_S2_RS0_St17integral_constantIbLb1EE,"x"
	.linkonce discard
	.globl	_ZNSt6vectorIiSaIiEE14_S_do_relocateEPiS2_S2_RS0_St17integral_constantIbLb1EE
	.def	_ZNSt6vectorIiSaIiEE14_S_do_relocateEPiS2_S2_RS0_St17integral_constantIbLb1EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorIiSaIiEE14_S_do_relocateEPiS2_S2_RS0_St17integral_constantIbLb1EE
_ZNSt6vectorIiSaIiEE14_S_do_relocateEPiS2_S2_RS0_St17integral_constantIbLb1EE:
.LFB5674:
	.loc 11 453 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1080:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1081:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # __result, __result
	movq	%r9, 40(%rbp)	 # __alloc, __alloc
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:456: 	return std::__relocate_a(__first, __last, __result, __alloc);
	.loc 11 456 26
	movq	40(%rbp), %rcx	 # __alloc, tmp84
	movq	32(%rbp), %rdx	 # __result, tmp85
	movq	24(%rbp), %rax	 # __last, tmp86
	movq	%rcx, %r9	 # tmp84,
	movq	%rdx, %r8	 # tmp85,
	movq	%rax, %rdx	 # tmp86,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZSt12__relocate_aIPiS0_SaIiEET0_T_S3_S2_RT1_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:457:       }
	.loc 11 457 7
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1082:
	ret	
.LFE5674:
	.seh_endproc
	.section	.text$_ZSt27__uninitialized_default_n_aIPiyiET_S1_T0_RSaIT1_E,"x"
	.linkonce discard
	.globl	_ZSt27__uninitialized_default_n_aIPiyiET_S1_T0_RSaIT1_E
	.def	_ZSt27__uninitialized_default_n_aIPiyiET_S1_T0_RSaIT1_E;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt27__uninitialized_default_n_aIPiyiET_S1_T0_RSaIT1_E
_ZSt27__uninitialized_default_n_aIPiyiET_S1_T0_RSaIT1_E:
.LFB5675:
	.loc 19 702 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1083:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1084:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __n, __n
	movq	%r8, 32(%rbp)	 # D.123139, D.123139
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:704:     { return std::__uninitialized_default_n(__first, __n); }
	.loc 19 704 44
	movq	24(%rbp), %rax	 # __n, tmp84
	movq	%rax, %rdx	 # tmp84,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZSt25__uninitialized_default_nIPiyET_S1_T0_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:704:     { return std::__uninitialized_default_n(__first, __n); }
	.loc 19 704 60
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1085:
	ret	
.LFE5675:
	.seh_endproc
	.section	.text$_ZNKSt6vectorIiSaIiEE12_M_check_lenEyPKc,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt6vectorIiSaIiEE12_M_check_lenEyPKc
	.def	_ZNKSt6vectorIiSaIiEE12_M_check_lenEyPKc;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt6vectorIiSaIiEE12_M_check_lenEyPKc
_ZNKSt6vectorIiSaIiEE12_M_check_lenEyPKc:
.LFB5676:
	.loc 11 1756 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1086:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1087:
	subq	$56, %rsp	 #,
	.seh_stackalloc	56
.LCFI1088:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI1089:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __n, __n
	movq	%r8, 48(%rbp)	 # __s, __s
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1758: 	if (max_size() - size() < __n)
	.loc 11 1758 14
	movq	32(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIiSaIiEE8max_sizeEv	 #
	movq	%rax, %rbx	 #, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1758: 	if (max_size() - size() < __n)
	.loc 11 1758 23
	movq	32(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIiSaIiEE4sizeEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1758: 	if (max_size() - size() < __n)
	.loc 11 1758 17
	subq	%rax, %rbx	 # _2, _1
	movq	%rbx, %rdx	 # _1, _3
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1758: 	if (max_size() - size() < __n)
	.loc 11 1758 26
	movq	40(%rbp), %rax	 # __n, __n.51_4
	cmpq	%rax, %rdx	 # __n.51_4, _3
	setb	%al	 #, retval.50_18
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1758: 	if (max_size() - size() < __n)
	.loc 11 1758 2
	testb	%al, %al	 # retval.50_18
	je	.L687	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1759: 	  __throw_length_error(__N(__s));
	.loc 11 1759 24
	movq	48(%rbp), %rax	 # __s, tmp95
	movq	%rax, %rcx	 # tmp95,
	call	_ZSt20__throw_length_errorPKc	 #
.L687:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1761: 	const size_type __len = size() + (std::max)(size(), __n);
	.loc 11 1761 30
	movq	32(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIiSaIiEE4sizeEv	 #
	movq	%rax, %rbx	 #, _5
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1761: 	const size_type __len = size() + (std::max)(size(), __n);
	.loc 11 1761 50
	movq	32(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIiSaIiEE4sizeEv	 #
	movq	%rax, -16(%rbp)	 # _6, D.123148
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1761: 	const size_type __len = size() + (std::max)(size(), __n);
	.loc 11 1761 45
	leaq	40(%rbp), %rdx	 #, tmp96
	leaq	-16(%rbp), %rax	 #, tmp97
	movq	%rax, %rcx	 # tmp97,
	call	_ZSt3maxIyERKT_S2_S2_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1761: 	const size_type __len = size() + (std::max)(size(), __n);
	.loc 11 1761 33
	movq	(%rax), %rax	 # *_7, _8
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1761: 	const size_type __len = size() + (std::max)(size(), __n);
	.loc 11 1761 18
	addq	%rbx, %rax	 # _5, tmp98
	movq	%rax, -8(%rbp)	 # tmp98, __len
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1762: 	return (__len < size() || __len > max_size()) ? max_size() : __len;
	.loc 11 1762 22
	movq	32(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIiSaIiEE4sizeEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1762: 	return (__len < size() || __len > max_size()) ? max_size() : __len;
	.loc 11 1762 48
	cmpq	%rax, -8(%rbp)	 # _9, __len
	jb	.L688	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1762: 	return (__len < size() || __len > max_size()) ? max_size() : __len;
	.loc 11 1762 44 discriminator 2
	movq	32(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIiSaIiEE8max_sizeEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1762: 	return (__len < size() || __len > max_size()) ? max_size() : __len;
	.loc 11 1762 25 discriminator 2
	cmpq	%rax, -8(%rbp)	 # _10, __len
	jbe	.L689	 #,
.L688:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1762: 	return (__len < size() || __len > max_size()) ? max_size() : __len;
	.loc 11 1762 58 discriminator 3
	movq	32(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIiSaIiEE8max_sizeEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1762: 	return (__len < size() || __len > max_size()) ? max_size() : __len;
	.loc 11 1762 48 discriminator 3
	jmp	.L690	 #
.L689:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1762: 	return (__len < size() || __len > max_size()) ? max_size() : __len;
	.loc 11 1762 48 is_stmt 0 discriminator 4
	movq	-8(%rbp), %rax	 # __len, iftmp.52_11
.L690:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1763:       }
	.loc 11 1763 7 is_stmt 1 discriminator 6
	addq	$56, %rsp	 #,
	popq	%rbx	 #
.LCFI1090:
	popq	%rbp	 #
.LCFI1091:
	ret	
.LFE5676:
	.seh_endproc
	.section	.text$_ZNSt12_Destroy_auxILb0EE9__destroyIPN3DDT4NodeEEEvT_S5_,"x"
	.linkonce discard
	.globl	_ZNSt12_Destroy_auxILb0EE9__destroyIPN3DDT4NodeEEEvT_S5_
	.def	_ZNSt12_Destroy_auxILb0EE9__destroyIPN3DDT4NodeEEEvT_S5_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt12_Destroy_auxILb0EE9__destroyIPN3DDT4NodeEEEvT_S5_
_ZNSt12_Destroy_auxILb0EE9__destroyIPN3DDT4NodeEEEvT_S5_:
.LFB5678:
	.loc 21 149 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1092:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1093:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:151: 	  for (; __first != __last; ++__first)
	.loc 21 151 4
	jmp	.L693	 #
.L694:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:152: 	    std::_Destroy(std::__addressof(*__first));
	.loc 21 152 19 discriminator 2
	movq	16(%rbp), %rcx	 # __first,
	call	_ZSt11__addressofIN3DDT4NodeEEPT_RS2_	 #
	movq	%rax, %rcx	 # _1,
	call	_ZSt8_DestroyIN3DDT4NodeEEvPT_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:151: 	  for (; __first != __last; ++__first)
	.loc 21 151 4 discriminator 2
	addq	$72, 16(%rbp)	 #, __first
.L693:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:151: 	  for (; __first != __last; ++__first)
	.loc 21 151 19 discriminator 1
	movq	16(%rbp), %rax	 # __first, tmp83
	cmpq	24(%rbp), %rax	 # __last, tmp83
	jne	.L694	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:153: 	}
	.loc 21 153 2
	nop	
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1094:
	ret	
.LFE5678:
	.seh_endproc
	.section	.text$_ZN7OptimapIhiEC1ERKS0_,"x"
	.linkonce discard
	.align 2
	.globl	_ZN7OptimapIhiEC1ERKS0_
	.def	_ZN7OptimapIhiEC1ERKS0_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN7OptimapIhiEC1ERKS0_
_ZN7OptimapIhiEC1ERKS0_:
.LFB5681:
	.loc 9 21 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1095:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1096:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI1097:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI1098:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # copy, copy
.LBB134:
 # optimap.hpp:21: 	Optimap(const Self& copy) {
	.loc 9 21 28
	movq	32(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt6vectorIbSaIbEEC1Ev	 #
	movq	32(%rbp), %rax	 # this, tmp91
	addq	$40, %rax	 #, _2
	movq	%rax, %rcx	 # _2,
	call	_ZNSt6vectorIiSaIiEEC1Ev	 #
 # optimap.hpp:22: 		mapped = copy.mapped;
	.loc 9 22 17
	movq	40(%rbp), %rdx	 # copy, _3
 # optimap.hpp:22: 		mapped = copy.mapped;
	.loc 9 22 10
	movq	32(%rbp), %rax	 # this, _4
	movq	%rax, %rcx	 # _4,
.LEHB39:
	call	_ZNSt6vectorIbSaIbEEaSERKS1_	 #
 # optimap.hpp:23: 		val = copy.val;
	.loc 9 23 14
	movq	40(%rbp), %rax	 # copy, tmp92
	leaq	40(%rax), %rdx	 #, _5
 # optimap.hpp:23: 		val = copy.val;
	.loc 9 23 7
	movq	32(%rbp), %rax	 # this, tmp93
	addq	$40, %rax	 #, _6
	movq	%rax, %rcx	 # _6,
	call	_ZNSt6vectorIiSaIiEEaSERKS1_	 #
.LEHE39:
.LBE134:
 # optimap.hpp:24: 	}
	.loc 9 24 2
	jmp	.L698	 #
.L697:
.LBB135:
	movq	%rax, %rbx	 #, tmp96
	movq	32(%rbp), %rax	 # this, tmp94
	addq	$40, %rax	 #, _7
	movq	%rax, %rcx	 # _7,
	call	_ZNSt6vectorIiSaIiEED1Ev	 #
	movq	32(%rbp), %rax	 # this, _8
	movq	%rax, %rcx	 # _8,
	call	_ZNSt6vectorIbSaIbEED1Ev	 #
	movq	%rbx, %rax	 # tmp95, D.129220
	movq	%rax, %rcx	 # D.129220,
.LEHB40:
	call	_Unwind_Resume	 #
	nop	
.LEHE40:
.L698:
.LBE135:
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI1099:
	popq	%rbp	 #
.LCFI1100:
	ret	
.LFE5681:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA5681:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE5681-.LLSDACSB5681
.LLSDACSB5681:
	.uleb128 .LEHB39-.LFB5681
	.uleb128 .LEHE39-.LEHB39
	.uleb128 .L697-.LFB5681
	.uleb128 0
	.uleb128 .LEHB40-.LFB5681
	.uleb128 .LEHE40-.LEHB40
	.uleb128 0
	.uleb128 0
.LLSDACSE5681:
	.section	.text$_ZN7OptimapIhiEC1ERKS0_,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZNKSt6vectorIN3DDT4NodeESaIS1_EE12_M_check_lenEyPKc,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt6vectorIN3DDT4NodeESaIS1_EE12_M_check_lenEyPKc
	.def	_ZNKSt6vectorIN3DDT4NodeESaIS1_EE12_M_check_lenEyPKc;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt6vectorIN3DDT4NodeESaIS1_EE12_M_check_lenEyPKc
_ZNKSt6vectorIN3DDT4NodeESaIS1_EE12_M_check_lenEyPKc:
.LFB5682:
	.loc 11 1756 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1101:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1102:
	subq	$56, %rsp	 #,
	.seh_stackalloc	56
.LCFI1103:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI1104:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __n, __n
	movq	%r8, 48(%rbp)	 # __s, __s
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1758: 	if (max_size() - size() < __n)
	.loc 11 1758 14
	movq	32(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIN3DDT4NodeESaIS1_EE8max_sizeEv	 #
	movq	%rax, %rbx	 #, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1758: 	if (max_size() - size() < __n)
	.loc 11 1758 23
	movq	32(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIN3DDT4NodeESaIS1_EE4sizeEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1758: 	if (max_size() - size() < __n)
	.loc 11 1758 17
	subq	%rax, %rbx	 # _2, _1
	movq	%rbx, %rdx	 # _1, _3
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1758: 	if (max_size() - size() < __n)
	.loc 11 1758 26
	movq	40(%rbp), %rax	 # __n, __n.73_4
	cmpq	%rax, %rdx	 # __n.73_4, _3
	setb	%al	 #, retval.72_18
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1758: 	if (max_size() - size() < __n)
	.loc 11 1758 2
	testb	%al, %al	 # retval.72_18
	je	.L700	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1759: 	  __throw_length_error(__N(__s));
	.loc 11 1759 24
	movq	48(%rbp), %rax	 # __s, tmp95
	movq	%rax, %rcx	 # tmp95,
	call	_ZSt20__throw_length_errorPKc	 #
.L700:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1761: 	const size_type __len = size() + (std::max)(size(), __n);
	.loc 11 1761 30
	movq	32(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIN3DDT4NodeESaIS1_EE4sizeEv	 #
	movq	%rax, %rbx	 #, _5
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1761: 	const size_type __len = size() + (std::max)(size(), __n);
	.loc 11 1761 50
	movq	32(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIN3DDT4NodeESaIS1_EE4sizeEv	 #
	movq	%rax, -16(%rbp)	 # _6, D.123248
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1761: 	const size_type __len = size() + (std::max)(size(), __n);
	.loc 11 1761 45
	leaq	40(%rbp), %rdx	 #, tmp96
	leaq	-16(%rbp), %rax	 #, tmp97
	movq	%rax, %rcx	 # tmp97,
	call	_ZSt3maxIyERKT_S2_S2_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1761: 	const size_type __len = size() + (std::max)(size(), __n);
	.loc 11 1761 33
	movq	(%rax), %rax	 # *_7, _8
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1761: 	const size_type __len = size() + (std::max)(size(), __n);
	.loc 11 1761 18
	addq	%rbx, %rax	 # _5, tmp98
	movq	%rax, -8(%rbp)	 # tmp98, __len
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1762: 	return (__len < size() || __len > max_size()) ? max_size() : __len;
	.loc 11 1762 22
	movq	32(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIN3DDT4NodeESaIS1_EE4sizeEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1762: 	return (__len < size() || __len > max_size()) ? max_size() : __len;
	.loc 11 1762 48
	cmpq	%rax, -8(%rbp)	 # _9, __len
	jb	.L701	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1762: 	return (__len < size() || __len > max_size()) ? max_size() : __len;
	.loc 11 1762 44 discriminator 2
	movq	32(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIN3DDT4NodeESaIS1_EE8max_sizeEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1762: 	return (__len < size() || __len > max_size()) ? max_size() : __len;
	.loc 11 1762 25 discriminator 2
	cmpq	%rax, -8(%rbp)	 # _10, __len
	jbe	.L702	 #,
.L701:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1762: 	return (__len < size() || __len > max_size()) ? max_size() : __len;
	.loc 11 1762 58 discriminator 3
	movq	32(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIN3DDT4NodeESaIS1_EE8max_sizeEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1762: 	return (__len < size() || __len > max_size()) ? max_size() : __len;
	.loc 11 1762 48 discriminator 3
	jmp	.L703	 #
.L702:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1762: 	return (__len < size() || __len > max_size()) ? max_size() : __len;
	.loc 11 1762 48 is_stmt 0 discriminator 4
	movq	-8(%rbp), %rax	 # __len, iftmp.74_11
.L703:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1763:       }
	.loc 11 1763 7 is_stmt 1 discriminator 6
	addq	$56, %rsp	 #,
	popq	%rbx	 #
.LCFI1105:
	popq	%rbp	 #
.LCFI1106:
	ret	
.LFE5682:
	.seh_endproc
	.section	.text$_ZN9__gnu_cxxmiIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_,"x"
	.linkonce discard
	.globl	_ZN9__gnu_cxxmiIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
	.def	_ZN9__gnu_cxxmiIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN9__gnu_cxxmiIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
_ZN9__gnu_cxxmiIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_:
.LFB5683:
	.loc 15 1234 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1107:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1108:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI1109:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI1110:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __lhs, __lhs
	movq	%rdx, 40(%rbp)	 # __rhs, __rhs
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1237:     { return __lhs.base() - __rhs.base(); }
	.loc 15 1237 24
	movq	32(%rbp), %rcx	 # __lhs,
	call	_ZNK9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEE4baseEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1237:     { return __lhs.base() - __rhs.base(); }
	.loc 15 1237 27
	movq	(%rax), %rbx	 # *_1, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1237:     { return __lhs.base() - __rhs.base(); }
	.loc 15 1237 39
	movq	40(%rbp), %rax	 # __rhs, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZNK9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEE4baseEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1237:     { return __lhs.base() - __rhs.base(); }
	.loc 15 1237 27
	movq	(%rax), %rdx	 # *_3, _4
	movq	%rbx, %rax	 # _2, _2
	subq	%rdx, %rax	 # _4, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1237:     { return __lhs.base() - __rhs.base(); }
	.loc 15 1237 40
	sarq	$3, %rax	 #, _5
	movq	%rax, %rdx	 # _5, tmp90
	movabsq	$-8198552921648689607, %rax	 #, tmp92
	imulq	%rdx, %rax	 # tmp90, tmp91
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1237:     { return __lhs.base() - __rhs.base(); }
	.loc 15 1237 43
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI1111:
	popq	%rbp	 #
.LCFI1112:
	ret	
.LFE5683:
	.seh_endproc
	.section	.text$_ZNK9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEE4baseEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNK9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEE4baseEv
	.def	_ZNK9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEE4baseEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNK9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEE4baseEv
_ZNK9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEE4baseEv:
.LFB5684:
	.loc 15 1088 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1113:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1114:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1089:       { return _M_current; }
	.loc 15 1089 16
	movq	16(%rbp), %rax	 # this, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1089:       { return _M_current; }
	.loc 15 1089 28
	popq	%rbp	 #
.LCFI1115:
	ret	
.LFE5684:
	.seh_endproc
	.section	.text$_ZSt34__uninitialized_move_if_noexcept_aIPN3DDT4NodeES2_SaIS1_EET0_T_S5_S4_RT1_,"x"
	.linkonce discard
	.globl	_ZSt34__uninitialized_move_if_noexcept_aIPN3DDT4NodeES2_SaIS1_EET0_T_S5_S4_RT1_
	.def	_ZSt34__uninitialized_move_if_noexcept_aIPN3DDT4NodeES2_SaIS1_EET0_T_S5_S4_RT1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt34__uninitialized_move_if_noexcept_aIPN3DDT4NodeES2_SaIS1_EET0_T_S5_S4_RT1_
_ZSt34__uninitialized_move_if_noexcept_aIPN3DDT4NodeES2_SaIS1_EET0_T_S5_S4_RT1_:
.LFB5685:
	.loc 19 349 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1116:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1117:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI1118:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI1119:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __first, __first
	movq	%rdx, 40(%rbp)	 # __last, __last
	movq	%r8, 48(%rbp)	 # __result, __result
	movq	%r9, 56(%rbp)	 # __alloc, __alloc
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:355: 	(_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__first),
	.loc 19 355 2
	movq	40(%rbp), %rax	 # __last, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZSt32__make_move_if_noexcept_iteratorIN3DDT4NodeEPKS1_ET0_PT_	 #
	movq	%rax, %rbx	 #, _1
	movq	32(%rbp), %rcx	 # __first,
	call	_ZSt32__make_move_if_noexcept_iteratorIN3DDT4NodeEPKS1_ET0_PT_	 #
	movq	56(%rbp), %rcx	 # __alloc, tmp87
	movq	48(%rbp), %rdx	 # __result, tmp88
	movq	%rcx, %r9	 # tmp87,
	movq	%rdx, %r8	 # tmp88,
	movq	%rbx, %rdx	 # _1,
	movq	%rax, %rcx	 # _2,
	call	_ZSt22__uninitialized_copy_aIPKN3DDT4NodeEPS1_S1_ET0_T_S6_S5_RSaIT1_E	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:357:     }
	.loc 19 357 5
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI1120:
	popq	%rbp	 #
.LCFI1121:
	ret	
.LFE5685:
	.seh_endproc
	.section	.text$_ZNSt16allocator_traitsISaIN3DDT4NodeEEE7destroyIS1_EEvRS2_PT_,"x"
	.linkonce discard
	.globl	_ZNSt16allocator_traitsISaIN3DDT4NodeEEE7destroyIS1_EEvRS2_PT_
	.def	_ZNSt16allocator_traitsISaIN3DDT4NodeEEE7destroyIS1_EEvRS2_PT_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt16allocator_traitsISaIN3DDT4NodeEEE7destroyIS1_EEvRS2_PT_
_ZNSt16allocator_traitsISaIN3DDT4NodeEEE7destroyIS1_EEvRS2_PT_:
.LFB5686:
	.loc 16 527 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1122:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1123:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __a, __a
	movq	%rdx, 24(%rbp)	 # __p, __p
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\alloc_traits.h:533: 	  std::destroy_at(__p);
	.loc 16 533 19
	movq	24(%rbp), %rax	 # __p, tmp82
	movq	%rax, %rcx	 # tmp82,
	call	_ZSt10destroy_atIN3DDT4NodeEEvPT_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\alloc_traits.h:535: 	}
	.loc 16 535 2
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1124:
	ret	
.LFE5686:
	.seh_endproc
	.section	.text$_ZNK9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEmiEx,"x"
	.linkonce discard
	.align 2
	.globl	_ZNK9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEmiEx
	.def	_ZNK9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEmiEx;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNK9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEmiEx
_ZNK9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEmiEx:
.LFB5687:
	.loc 15 1083 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1125:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1126:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __n, __n
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1084:       { return __normal_iterator(_M_current - __n); }
	.loc 15 1084 34
	movq	16(%rbp), %rax	 # this, tmp89
	movq	(%rax), %rcx	 # this_7(D)->_M_current, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1084:       { return __normal_iterator(_M_current - __n); }
	.loc 15 1084 47
	movq	24(%rbp), %rdx	 # __n, __n.80_2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1084:       { return __normal_iterator(_M_current - __n); }
	.loc 15 1084 45
	movq	%rdx, %rax	 # __n.80_2, tmp90
	salq	$3, %rax	 #, tmp90
	addq	%rdx, %rax	 # __n.80_2, tmp90
	salq	$3, %rax	 #, tmp91
	negq	%rax	 # _4
	addq	%rcx, %rax	 # _1, _5
	movq	%rax, -8(%rbp)	 # _5, D.123348
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1084:       { return __normal_iterator(_M_current - __n); }
	.loc 15 1084 16
	leaq	-8(%rbp), %rdx	 #, tmp92
	leaq	-16(%rbp), %rax	 #, tmp93
	movq	%rax, %rcx	 # tmp93,
	call	_ZN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEC1ERKS3_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1084:       { return __normal_iterator(_M_current - __n); }
	.loc 15 1084 50
	movq	-16(%rbp), %rax	 # D.123349, D.128112
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1084:       { return __normal_iterator(_M_current - __n); }
	.loc 15 1084 53
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI1127:
	ret	
.LFE5687:
	.seh_endproc
	.section	.text$_ZNK9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEdeEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNK9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEdeEv
	.def	_ZNK9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEdeEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNK9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEdeEv
_ZNK9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEdeEv:
.LFB5688:
	.loc 15 1025 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1128:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1129:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1026:       { return *_M_current; }
	.loc 15 1026 17
	movq	16(%rbp), %rax	 # this, tmp84
	movq	(%rax), %rax	 # this_2(D)->_M_current, _3
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1026:       { return *_M_current; }
	.loc 15 1026 29
	popq	%rbp	 #
.LCFI1130:
	ret	
.LFE5688:
	.seh_endproc
	.section	.text$_ZNSt16allocator_traitsISaIN3DDT4NodeEEE8allocateERS2_y,"x"
	.linkonce discard
	.globl	_ZNSt16allocator_traitsISaIN3DDT4NodeEEE8allocateERS2_y
	.def	_ZNSt16allocator_traitsISaIN3DDT4NodeEEE8allocateERS2_y;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt16allocator_traitsISaIN3DDT4NodeEEE8allocateERS2_y
_ZNSt16allocator_traitsISaIN3DDT4NodeEEE8allocateERS2_y:
.LFB5689:
	.loc 16 459 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1131:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1132:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __a, __a
	movq	%rdx, 24(%rbp)	 # __n, __n
	movq	16(%rbp), %rax	 # __a, tmp86
	movq	%rax, -8(%rbp)	 # tmp86, this
	movq	24(%rbp), %rax	 # __n, tmp87
	movq	%rax, -16(%rbp)	 # tmp87, __n
.LBB136:
.LBB137:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:194: 	if (std::is_constant_evaluated())
	.loc 12 194 32
	call	_ZSt21is_constant_evaluatedv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:194: 	if (std::is_constant_evaluated())
	.loc 12 194 2
	testb	%al, %al	 # retval.76_8
	je	.L717	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:195: 	  return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	.loc 12 195 43
	movq	-16(%rbp), %rdx	 # __n, tmp88
	movq	%rdx, %rax	 # tmp88, tmp89
	salq	$3, %rax	 #, tmp89
	addq	%rdx, %rax	 # tmp88, tmp89
	salq	$3, %rax	 #, tmp90
	movq	%rax, %rcx	 # _9,
	call	_Znwy	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:195: 	  return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	.loc 12 195 62
	jmp	.L718	 #
.L717:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:197: 	return __allocator_base<_Tp>::allocate(__n, 0);
	.loc 12 197 40
	movq	-16(%rbp), %rdx	 # __n, tmp92
	movq	-8(%rbp), %rax	 # this, tmp93
	movl	$0, %r8d	 #,
	movq	%rax, %rcx	 # tmp93,
	call	_ZN9__gnu_cxx13new_allocatorIN3DDT4NodeEE8allocateEyPKv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:197: 	return __allocator_base<_Tp>::allocate(__n, 0);
	.loc 12 197 47
	nop	
.L718:
.LBE137:
.LBE136:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\alloc_traits.h:460:       { return __a.allocate(__n); }
	.loc 16 460 35
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI1133:
	ret	
.LFE5689:
	.seh_endproc
	.section	.text$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_,"x"
	.linkonce discard
	.globl	_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_
	.def	_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_
_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_:
.LFB5690:
	.loc 19 126 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1134:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1135:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # __result, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:145:       const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
	.loc 19 145 18
	movb	$1, -1(%rbp)	 #, __assignable
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:151: 	__uninit_copy(__first, __last, __result);
	.loc 19 151 15
	movq	32(%rbp), %rdx	 # __result, tmp84
	movq	24(%rbp), %rax	 # __last, tmp85
	movq	%rdx, %r8	 # tmp84,
	movq	%rax, %rdx	 # tmp85,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:152:     }
	.loc 19 152 5
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI1136:
	ret	
.LFE5690:
	.seh_endproc
	.section	.text$_ZSt12__niter_baseIPKN3DDT4NodeESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE,"x"
	.linkonce discard
	.globl	_ZSt12__niter_baseIPKN3DDT4NodeESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE
	.def	_ZSt12__niter_baseIPKN3DDT4NodeESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt12__niter_baseIPKN3DDT4NodeESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE
_ZSt12__niter_baseIPKN3DDT4NodeESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE:
.LFB5691:
	.loc 15 1257 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1137:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1138:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __it, __it
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1259:     { return __it.base(); }
	.loc 15 1259 23
	leaq	16(%rbp), %rcx	 #, tmp87
	call	_ZNK9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS2_SaIS2_EEE4baseEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1259:     { return __it.base(); }
	.loc 15 1259 24
	movq	(%rax), %rax	 # *_1, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1259:     { return __it.base(); }
	.loc 15 1259 27
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1139:
	ret	
.LFE5691:
	.seh_endproc
	.section	.text$_ZSt12__niter_baseIPN3DDT4NodeESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE,"x"
	.linkonce discard
	.globl	_ZSt12__niter_baseIPN3DDT4NodeESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	.def	_ZSt12__niter_baseIPN3DDT4NodeESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt12__niter_baseIPN3DDT4NodeESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
_ZSt12__niter_baseIPN3DDT4NodeESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE:
.LFB5692:
	.loc 15 1257 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1140:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1141:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __it, __it
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1259:     { return __it.base(); }
	.loc 15 1259 23
	leaq	16(%rbp), %rcx	 #, tmp87
	call	_ZNK9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEE4baseEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1259:     { return __it.base(); }
	.loc 15 1259 24
	movq	(%rax), %rax	 # *_1, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1259:     { return __it.base(); }
	.loc 15 1259 27
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1142:
	ret	
.LFE5692:
	.seh_endproc
	.section	.text$_ZSt14__copy_move_a1ILb0EPKN3DDT4NodeEPS1_ET1_T0_S6_S5_,"x"
	.linkonce discard
	.globl	_ZSt14__copy_move_a1ILb0EPKN3DDT4NodeEPS1_ET1_T0_S6_S5_
	.def	_ZSt14__copy_move_a1ILb0EPKN3DDT4NodeEPS1_ET1_T0_S6_S5_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt14__copy_move_a1ILb0EPKN3DDT4NodeEPS1_ET1_T0_S6_S5_
_ZSt14__copy_move_a1ILb0EPKN3DDT4NodeEPS1_ET1_T0_S6_S5_:
.LFB5693:
	.loc 3 521 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1143:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1144:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # __result, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:522:     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
	.loc 3 522 42
	movq	32(%rbp), %rdx	 # __result, tmp84
	movq	24(%rbp), %rax	 # __last, tmp85
	movq	%rdx, %r8	 # tmp84,
	movq	%rax, %rdx	 # tmp85,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZSt14__copy_move_a2ILb0EPKN3DDT4NodeEPS1_ET1_T0_S6_S5_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:522:     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
	.loc 3 522 71
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1145:
	ret	
.LFE5693:
	.seh_endproc
	.section	.text$_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_,"x"
	.linkonce discard
	.globl	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_
	.def	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_
_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_:
.LFB5694:
	.loc 3 328 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1146:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1147:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __from, __from
	movq	%rdx, 24(%rbp)	 # __res, __res
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:329:     { return __from + (__res - std::__niter_base(__from)); }
	.loc 3 329 49
	movq	16(%rbp), %rcx	 # __from,
	call	_ZSt12__niter_baseIPN3DDT4NodeESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE	 #
	movq	%rax, %rdx	 #, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:329:     { return __from + (__res - std::__niter_base(__from)); }
	.loc 3 329 30
	movq	24(%rbp), %rax	 # __res, tmp87
	subq	%rdx, %rax	 # _1, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:329:     { return __from + (__res - std::__niter_base(__from)); }
	.loc 3 329 21
	sarq	$3, %rax	 #, _2
	movq	%rax, %rdx	 # _2, tmp88
	movabsq	$-8198552921648689607, %rax	 #, tmp90
	imulq	%rdx, %rax	 # tmp88, tmp89
	movq	%rax, %rdx	 # _3,
	leaq	16(%rbp), %rcx	 #, tmp94
	call	_ZNK9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEplEx	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:329:     { return __from + (__res - std::__niter_base(__from)); }
	.loc 3 329 60
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1148:
	ret	
.LFE5694:
	.seh_endproc
	.section	.text$_ZN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEppEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEppEv
	.def	_ZN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEppEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEppEv
_ZN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEppEv:
.LFB5696:
	.loc 15 1035 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1149:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1150:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1037: 	++_M_current;
	.loc 15 1037 4
	movq	16(%rbp), %rax	 # this, tmp86
	movq	(%rax), %rax	 # this_4(D)->_M_current, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1037: 	++_M_current;
	.loc 15 1037 2
	leaq	72(%rax), %rdx	 #, _2
	movq	16(%rbp), %rax	 # this, tmp87
	movq	%rdx, (%rax)	 # _2, this_4(D)->_M_current
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1038: 	return *this;
	.loc 15 1038 10
	movq	16(%rbp), %rax	 # this, _6
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1039:       }
	.loc 15 1039 7
	popq	%rbp	 #
.LCFI1151:
	ret	
.LFE5696:
	.seh_endproc
	.section	.text$_ZN9__gnu_cxxeqIPN3DDT4NodeES3_St6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T1_EERKNS7_IT0_S9_EE,"x"
	.linkonce discard
	.globl	_ZN9__gnu_cxxeqIPN3DDT4NodeES3_St6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T1_EERKNS7_IT0_S9_EE
	.def	_ZN9__gnu_cxxeqIPN3DDT4NodeES3_St6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T1_EERKNS7_IT0_S9_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN9__gnu_cxxeqIPN3DDT4NodeES3_St6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T1_EERKNS7_IT0_S9_EE
_ZN9__gnu_cxxeqIPN3DDT4NodeES3_St6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T1_EERKNS7_IT0_S9_EE:
.LFB5697:
	.loc 15 1105 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1152:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1153:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI1154:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI1155:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __lhs, __lhs
	movq	%rdx, 40(%rbp)	 # __rhs, __rhs
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1108:     { return __lhs.base() == __rhs.base(); }
	.loc 15 1108 24
	movq	32(%rbp), %rcx	 # __lhs,
	call	_ZNK9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEE4baseEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1108:     { return __lhs.base() == __rhs.base(); }
	.loc 15 1108 27
	movq	(%rax), %rbx	 # *_1, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1108:     { return __lhs.base() == __rhs.base(); }
	.loc 15 1108 40
	movq	40(%rbp), %rax	 # __rhs, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZNK9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEE4baseEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1108:     { return __lhs.base() == __rhs.base(); }
	.loc 15 1108 27
	movq	(%rax), %rax	 # *_3, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1108:     { return __lhs.base() == __rhs.base(); }
	.loc 15 1108 41
	cmpq	%rax, %rbx	 # _4, _2
	sete	%al	 #, _10
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1108:     { return __lhs.base() == __rhs.base(); }
	.loc 15 1108 44
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI1156:
	popq	%rbp	 #
.LCFI1157:
	ret	
.LFE5697:
	.seh_endproc
	.section	.text$_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS5_SaIS5_EEEEEEvT_SB_,"x"
	.linkonce discard
	.globl	_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS5_SaIS5_EEEEEEvT_SB_
	.def	_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS5_SaIS5_EEEEEEvT_SB_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS5_SaIS5_EEEEEEvT_SB_
_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS5_SaIS5_EEEEEEvT_SB_:
.LFB5695:
	.loc 21 149 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1158:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1159:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:151: 	  for (; __first != __last; ++__first)
	.loc 21 151 4
	jmp	.L735	 #
.L736:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:152: 	    std::_Destroy(std::__addressof(*__first));
	.loc 21 152 37 discriminator 2
	leaq	16(%rbp), %rcx	 #, tmp88
	call	_ZNK9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEdeEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:152: 	    std::_Destroy(std::__addressof(*__first));
	.loc 21 152 19 discriminator 2
	movq	%rax, %rcx	 # _1,
	call	_ZSt11__addressofIN3DDT4NodeEEPT_RS2_	 #
	movq	%rax, %rcx	 # _2,
	call	_ZSt8_DestroyIN3DDT4NodeEEvPT_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:151: 	  for (; __first != __last; ++__first)
	.loc 21 151 30 discriminator 2
	leaq	16(%rbp), %rcx	 #, tmp89
	call	_ZN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEppEv	 #
.L735:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:151: 	  for (; __first != __last; ++__first)
	.loc 21 151 19 discriminator 1
	leaq	24(%rbp), %rax	 #, tmp86
	movq	%rax, %rdx	 # tmp86,
	leaq	16(%rbp), %rcx	 #, tmp90
	call	_ZN9__gnu_cxxeqIPN3DDT4NodeES3_St6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T1_EERKNS7_IT0_S9_EE	 #
	xorl	$1, %eax	 #, retval.90_7
	testb	%al, %al	 # retval.90_7
	jne	.L736	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:153: 	}
	.loc 21 153 2
	nop	
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1160:
	ret	
.LFE5695:
	.seh_endproc
	.section	.text$_ZSt14__copy_move_a2ILb0EPN3DDT4NodeES2_ET1_T0_S4_S3_,"x"
	.linkonce discard
	.globl	_ZSt14__copy_move_a2ILb0EPN3DDT4NodeES2_ET1_T0_S4_S3_
	.def	_ZSt14__copy_move_a2ILb0EPN3DDT4NodeES2_ET1_T0_S4_S3_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt14__copy_move_a2ILb0EPN3DDT4NodeES2_ET1_T0_S4_S3_
_ZSt14__copy_move_a2ILb0EPN3DDT4NodeES2_ET1_T0_S4_S3_:
.LFB5698:
	.loc 3 486 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1161:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1162:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # __result, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:490:       if (std::is_constant_evaluated())
	.loc 3 490 37
	call	_ZSt21is_constant_evaluatedv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:490:       if (std::is_constant_evaluated())
	.loc 3 490 7
	testb	%al, %al	 # retval.92_5
	je	.L738	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:492: 	  __copy_m(__first, __last, __result);
	.loc 3 492 12
	movq	32(%rbp), %rdx	 # __result, tmp85
	movq	24(%rbp), %rax	 # __last, tmp86
	movq	%rdx, %r8	 # tmp85,
	movq	%rax, %rdx	 # tmp86,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPN3DDT4NodeES5_EET0_T_S7_S6_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:492: 	  __copy_m(__first, __last, __result);
	.loc 3 492 38
	jmp	.L739	 #
.L738:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:495: 			      _Category>::__copy_m(__first, __last, __result);
	.loc 3 495 30
	movq	32(%rbp), %rdx	 # __result, tmp87
	movq	24(%rbp), %rax	 # __last, tmp88
	movq	%rdx, %r8	 # tmp87,
	movq	%rax, %rdx	 # tmp88,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPN3DDT4NodeES5_EET0_T_S7_S6_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:495: 			      _Category>::__copy_m(__first, __last, __result);
	.loc 3 495 56
	nop	
.L739:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:496:     }
	.loc 3 496 5
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1163:
	ret	
.LFE5698:
	.seh_endproc
	.section	.text$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN3DDT4NodeES4_EET0_T_S6_S5_,"x"
	.linkonce discard
	.globl	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN3DDT4NodeES4_EET0_T_S6_S5_
	.def	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN3DDT4NodeES4_EET0_T_S6_S5_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN3DDT4NodeES4_EET0_T_S6_S5_
_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN3DDT4NodeES4_EET0_T_S6_S5_:
.LFB5699:
	.loc 19 85 9
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1164:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1165:
	subq	$56, %rsp	 #,
	.seh_stackalloc	56
.LCFI1166:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI1167:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __first, __first
	movq	%rdx, 40(%rbp)	 # __last, __last
	movq	%r8, 48(%rbp)	 # __result, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:88: 	  _ForwardIterator __cur = __result;
	.loc 19 88 21
	movq	48(%rbp), %rax	 # __result, tmp87
	movq	%rax, -8(%rbp)	 # tmp87, __cur
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:91: 	      for (; __first != __last; ++__first, (void)++__cur)
	.loc 19 91 8
	jmp	.L741	 #
.L742:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:92: 		std::_Construct(std::__addressof(*__cur), *__first);
	.loc 19 92 18
	movq	-8(%rbp), %rax	 # __cur, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZSt11__addressofIN3DDT4NodeEEPT_RS2_	 #
	movq	32(%rbp), %rdx	 # __first,
	movq	%rax, %rcx	 # _1,
.LEHB41:
	call	_ZSt10_ConstructIN3DDT4NodeEJRS1_EEvPT_DpOT0_	 #
.LEHE41:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:91: 	      for (; __first != __last; ++__first, (void)++__cur)
	.loc 19 91 8
	addq	$72, 32(%rbp)	 #, __first
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:91: 	      for (; __first != __last; ++__first, (void)++__cur)
	.loc 19 91 45
	addq	$72, -8(%rbp)	 #, __cur
.L741:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:91: 	      for (; __first != __last; ++__first, (void)++__cur)
	.loc 19 91 23 discriminator 1
	movq	32(%rbp), %rax	 # __first, tmp89
	cmpq	40(%rbp), %rax	 # __last, tmp89
	jne	.L742	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:93: 	      return __cur;
	.loc 19 93 15
	movq	-8(%rbp), %rax	 # __cur, _12
	jmp	.L748	 #
.L746:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:95: 	  __catch(...)
	.loc 19 95 4
	movq	%rax, %rcx	 # _2,
	call	__cxa_begin_catch	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:97: 	      std::_Destroy(__result, __cur);
	.loc 19 97 21
	movq	-8(%rbp), %rdx	 # __cur, tmp92
	movq	48(%rbp), %rax	 # __result, tmp93
	movq	%rax, %rcx	 # tmp93,
.LEHB42:
	call	_ZSt8_DestroyIPN3DDT4NodeEEvT_S3_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:98: 	      __throw_exception_again;
	.loc 19 98 8
	call	__cxa_rethrow	 #
.LEHE42:
.L747:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:95: 	  __catch(...)
	.loc 19 95 4
	movq	%rax, %rbx	 #, tmp94
	call	__cxa_end_catch	 #
	movq	%rbx, %rax	 # tmp94, D.129221
	movq	%rax, %rcx	 # D.129221,
.LEHB43:
	call	_Unwind_Resume	 #
.LEHE43:
.L748:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:100: 	}
	.loc 19 100 2
	addq	$56, %rsp	 #,
	popq	%rbx	 #
.LCFI1168:
	popq	%rbp	 #
.LCFI1169:
	ret	
.LFE5699:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
	.align 4
.LLSDA5699:
	.byte	0xff
	.byte	0x9b
	.uleb128 .LLSDATT5699-.LLSDATTD5699
.LLSDATTD5699:
	.byte	0x1
	.uleb128 .LLSDACSE5699-.LLSDACSB5699
.LLSDACSB5699:
	.uleb128 .LEHB41-.LFB5699
	.uleb128 .LEHE41-.LEHB41
	.uleb128 .L746-.LFB5699
	.uleb128 0x1
	.uleb128 .LEHB42-.LFB5699
	.uleb128 .LEHE42-.LEHB42
	.uleb128 .L747-.LFB5699
	.uleb128 0
	.uleb128 .LEHB43-.LFB5699
	.uleb128 .LEHE43-.LEHB43
	.uleb128 0
	.uleb128 0
.LLSDACSE5699:
	.byte	0x1
	.byte	0
	.align 4
	.long	0

.LLSDATT5699:
	.section	.text$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN3DDT4NodeES4_EET0_T_S6_S5_,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZN9__gnu_cxx5__ops16_Iter_equals_valIKbEC1ERS2_,"x"
	.linkonce discard
	.align 2
	.globl	_ZN9__gnu_cxx5__ops16_Iter_equals_valIKbEC1ERS2_
	.def	_ZN9__gnu_cxx5__ops16_Iter_equals_valIKbEC1ERS2_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN9__gnu_cxx5__ops16_Iter_equals_valIKbEC1ERS2_
_ZN9__gnu_cxx5__ops16_Iter_equals_valIKbEC1ERS2_:
.LFB5702:
	.loc 23 262 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1170:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1171:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __value, __value
.LBB138:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\predefined_ops.h:263: 	: _M_value(__value)
	.loc 23 263 4
	movq	16(%rbp), %rax	 # this, tmp82
	movq	24(%rbp), %rdx	 # __value, tmp83
	movq	%rdx, (%rax)	 # tmp83, this_2(D)->_M_value
.LBE138:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\predefined_ops.h:264:       { }
	.loc 23 264 9
	nop	
	popq	%rbp	 #
.LCFI1172:
	ret	
.LFE5702:
	.seh_endproc
	.section	.text$_ZNKSt6vectorI5BlorbSaIS0_EE12_M_check_lenEyPKc,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt6vectorI5BlorbSaIS0_EE12_M_check_lenEyPKc
	.def	_ZNKSt6vectorI5BlorbSaIS0_EE12_M_check_lenEyPKc;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt6vectorI5BlorbSaIS0_EE12_M_check_lenEyPKc
_ZNKSt6vectorI5BlorbSaIS0_EE12_M_check_lenEyPKc:
.LFB5704:
	.loc 11 1756 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1173:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1174:
	subq	$56, %rsp	 #,
	.seh_stackalloc	56
.LCFI1175:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI1176:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __n, __n
	movq	%r8, 48(%rbp)	 # __s, __s
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1758: 	if (max_size() - size() < __n)
	.loc 11 1758 14
	movq	32(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorI5BlorbSaIS0_EE8max_sizeEv	 #
	movq	%rax, %rbx	 #, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1758: 	if (max_size() - size() < __n)
	.loc 11 1758 23
	movq	32(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorI5BlorbSaIS0_EE4sizeEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1758: 	if (max_size() - size() < __n)
	.loc 11 1758 17
	subq	%rax, %rbx	 # _2, _1
	movq	%rbx, %rdx	 # _1, _3
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1758: 	if (max_size() - size() < __n)
	.loc 11 1758 26
	movq	40(%rbp), %rax	 # __n, __n.94_4
	cmpq	%rax, %rdx	 # __n.94_4, _3
	setb	%al	 #, retval.93_18
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1758: 	if (max_size() - size() < __n)
	.loc 11 1758 2
	testb	%al, %al	 # retval.93_18
	je	.L751	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1759: 	  __throw_length_error(__N(__s));
	.loc 11 1759 24
	movq	48(%rbp), %rax	 # __s, tmp95
	movq	%rax, %rcx	 # tmp95,
	call	_ZSt20__throw_length_errorPKc	 #
.L751:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1761: 	const size_type __len = size() + (std::max)(size(), __n);
	.loc 11 1761 30
	movq	32(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorI5BlorbSaIS0_EE4sizeEv	 #
	movq	%rax, %rbx	 #, _5
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1761: 	const size_type __len = size() + (std::max)(size(), __n);
	.loc 11 1761 50
	movq	32(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorI5BlorbSaIS0_EE4sizeEv	 #
	movq	%rax, -16(%rbp)	 # _6, D.123537
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1761: 	const size_type __len = size() + (std::max)(size(), __n);
	.loc 11 1761 45
	leaq	40(%rbp), %rdx	 #, tmp96
	leaq	-16(%rbp), %rax	 #, tmp97
	movq	%rax, %rcx	 # tmp97,
	call	_ZSt3maxIyERKT_S2_S2_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1761: 	const size_type __len = size() + (std::max)(size(), __n);
	.loc 11 1761 33
	movq	(%rax), %rax	 # *_7, _8
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1761: 	const size_type __len = size() + (std::max)(size(), __n);
	.loc 11 1761 18
	addq	%rbx, %rax	 # _5, tmp98
	movq	%rax, -8(%rbp)	 # tmp98, __len
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1762: 	return (__len < size() || __len > max_size()) ? max_size() : __len;
	.loc 11 1762 22
	movq	32(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorI5BlorbSaIS0_EE4sizeEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1762: 	return (__len < size() || __len > max_size()) ? max_size() : __len;
	.loc 11 1762 48
	cmpq	%rax, -8(%rbp)	 # _9, __len
	jb	.L752	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1762: 	return (__len < size() || __len > max_size()) ? max_size() : __len;
	.loc 11 1762 44 discriminator 2
	movq	32(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorI5BlorbSaIS0_EE8max_sizeEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1762: 	return (__len < size() || __len > max_size()) ? max_size() : __len;
	.loc 11 1762 25 discriminator 2
	cmpq	%rax, -8(%rbp)	 # _10, __len
	jbe	.L753	 #,
.L752:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1762: 	return (__len < size() || __len > max_size()) ? max_size() : __len;
	.loc 11 1762 58 discriminator 3
	movq	32(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorI5BlorbSaIS0_EE8max_sizeEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1762: 	return (__len < size() || __len > max_size()) ? max_size() : __len;
	.loc 11 1762 48 discriminator 3
	jmp	.L754	 #
.L753:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1762: 	return (__len < size() || __len > max_size()) ? max_size() : __len;
	.loc 11 1762 48 is_stmt 0 discriminator 4
	movq	-8(%rbp), %rax	 # __len, iftmp.95_11
.L754:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1763:       }
	.loc 11 1763 7 is_stmt 1 discriminator 6
	addq	$56, %rsp	 #,
	popq	%rbx	 #
.LCFI1177:
	popq	%rbp	 #
.LCFI1178:
	ret	
.LFE5704:
	.seh_endproc
	.section	.text$_ZN9__gnu_cxxmiIP5BlorbSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_,"x"
	.linkonce discard
	.globl	_ZN9__gnu_cxxmiIP5BlorbSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_
	.def	_ZN9__gnu_cxxmiIP5BlorbSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN9__gnu_cxxmiIP5BlorbSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_
_ZN9__gnu_cxxmiIP5BlorbSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_:
.LFB5705:
	.loc 15 1234 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1179:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1180:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI1181:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI1182:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __lhs, __lhs
	movq	%rdx, 40(%rbp)	 # __rhs, __rhs
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1237:     { return __lhs.base() - __rhs.base(); }
	.loc 15 1237 24
	movq	32(%rbp), %rcx	 # __lhs,
	call	_ZNK9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEE4baseEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1237:     { return __lhs.base() - __rhs.base(); }
	.loc 15 1237 27
	movq	(%rax), %rbx	 # *_1, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1237:     { return __lhs.base() - __rhs.base(); }
	.loc 15 1237 39
	movq	40(%rbp), %rax	 # __rhs, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZNK9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEE4baseEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1237:     { return __lhs.base() - __rhs.base(); }
	.loc 15 1237 27
	movq	(%rax), %rdx	 # *_3, _4
	movq	%rbx, %rax	 # _2, _2
	subq	%rdx, %rax	 # _4, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1237:     { return __lhs.base() - __rhs.base(); }
	.loc 15 1237 40
	sarq	$4, %rax	 #, _5
	movq	%rax, %rdx	 # _5, tmp90
	movabsq	$-6148914691236517205, %rax	 #, tmp92
	imulq	%rdx, %rax	 # tmp90, tmp91
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1237:     { return __lhs.base() - __rhs.base(); }
	.loc 15 1237 43
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI1183:
	popq	%rbp	 #
.LCFI1184:
	ret	
.LFE5705:
	.seh_endproc
	.section	.text$_ZNSt12_Vector_baseI5BlorbSaIS0_EE11_M_allocateEy,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt12_Vector_baseI5BlorbSaIS0_EE11_M_allocateEy
	.def	_ZNSt12_Vector_baseI5BlorbSaIS0_EE11_M_allocateEy;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt12_Vector_baseI5BlorbSaIS0_EE11_M_allocateEy
_ZNSt12_Vector_baseI5BlorbSaIS0_EE11_M_allocateEy:
.LFB5706:
	.loc 11 343 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1185:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1186:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __n, __n
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:346: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	.loc 11 346 18
	cmpq	$0, 24(%rbp)	 #, __n
	je	.L759	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:346: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	.loc 11 346 34 discriminator 1
	movq	16(%rbp), %rax	 # this, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:346: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	.loc 11 346 33 discriminator 1
	movq	24(%rbp), %rdx	 # __n, tmp85
	movq	%rax, %rcx	 # _1,
	call	_ZNSt16allocator_traitsISaI5BlorbEE8allocateERS1_y	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:346: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	.loc 11 346 58 discriminator 1
	jmp	.L761	 #
.L759:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:346: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	.loc 11 346 18 discriminator 2
	movl	$0, %eax	 #, _9
.L761:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:347:       }
	.loc 11 347 7 discriminator 5
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1187:
	ret	
.LFE5706:
	.seh_endproc
	.section	.text$_ZNSt12_Vector_baseI5BlorbSaIS0_EE19_M_get_Tp_allocatorEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt12_Vector_baseI5BlorbSaIS0_EE19_M_get_Tp_allocatorEv
	.def	_ZNSt12_Vector_baseI5BlorbSaIS0_EE19_M_get_Tp_allocatorEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt12_Vector_baseI5BlorbSaIS0_EE19_M_get_Tp_allocatorEv
_ZNSt12_Vector_baseI5BlorbSaIS0_EE19_M_get_Tp_allocatorEv:
.LFB5707:
	.loc 11 276 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1188:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1189:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:277:       { return this->_M_impl; }
	.loc 11 277 22
	movq	16(%rbp), %rax	 # this, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:277:       { return this->_M_impl; }
	.loc 11 277 31
	popq	%rbp	 #
.LCFI1190:
	ret	
.LFE5707:
	.seh_endproc
	.section	.text$_ZSt34__uninitialized_move_if_noexcept_aIP5BlorbS1_SaIS0_EET0_T_S4_S3_RT1_,"x"
	.linkonce discard
	.globl	_ZSt34__uninitialized_move_if_noexcept_aIP5BlorbS1_SaIS0_EET0_T_S4_S3_RT1_
	.def	_ZSt34__uninitialized_move_if_noexcept_aIP5BlorbS1_SaIS0_EET0_T_S4_S3_RT1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt34__uninitialized_move_if_noexcept_aIP5BlorbS1_SaIS0_EET0_T_S4_S3_RT1_
_ZSt34__uninitialized_move_if_noexcept_aIP5BlorbS1_SaIS0_EET0_T_S4_S3_RT1_:
.LFB5708:
	.loc 19 349 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1191:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1192:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI1193:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI1194:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __first, __first
	movq	%rdx, 40(%rbp)	 # __last, __last
	movq	%r8, 48(%rbp)	 # __result, __result
	movq	%r9, 56(%rbp)	 # __alloc, __alloc
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:355: 	(_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__first),
	.loc 19 355 2
	movq	40(%rbp), %rax	 # __last, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZSt32__make_move_if_noexcept_iteratorI5BlorbPKS0_ET0_PT_	 #
	movq	%rax, %rbx	 #, _1
	movq	32(%rbp), %rcx	 # __first,
	call	_ZSt32__make_move_if_noexcept_iteratorI5BlorbPKS0_ET0_PT_	 #
	movq	56(%rbp), %rcx	 # __alloc, tmp87
	movq	48(%rbp), %rdx	 # __result, tmp88
	movq	%rcx, %r9	 # tmp87,
	movq	%rdx, %r8	 # tmp88,
	movq	%rbx, %rdx	 # _1,
	movq	%rax, %rcx	 # _2,
	call	_ZSt22__uninitialized_copy_aIPK5BlorbPS0_S0_ET0_T_S5_S4_RSaIT1_E	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:357:     }
	.loc 19 357 5
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI1195:
	popq	%rbp	 #
.LCFI1196:
	ret	
.LFE5708:
	.seh_endproc
	.section	.text$_ZSt8_DestroyIP5BlorbS0_EvT_S2_RSaIT0_E,"x"
	.linkonce discard
	.globl	_ZSt8_DestroyIP5BlorbS0_EvT_S2_RSaIT0_E
	.def	_ZSt8_DestroyIP5BlorbS0_EvT_S2_RSaIT0_E;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt8_DestroyIP5BlorbS0_EvT_S2_RSaIT0_E
_ZSt8_DestroyIP5BlorbS0_EvT_S2_RSaIT0_E:
.LFB5709:
	.loc 16 743 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1197:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1198:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # D.123630, D.123630
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\alloc_traits.h:746:       _Destroy(__first, __last);
	.loc 16 746 15
	movq	24(%rbp), %rax	 # __last, tmp82
	movq	%rax, %rdx	 # tmp82,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZSt8_DestroyIP5BlorbEvT_S2_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\alloc_traits.h:747:     }
	.loc 16 747 5
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1199:
	ret	
.LFE5709:
	.seh_endproc
	.section	.text$_ZSt12__niter_baseIP5BlorbSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE,"x"
	.linkonce discard
	.globl	_ZSt12__niter_baseIP5BlorbSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE
	.def	_ZSt12__niter_baseIP5BlorbSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt12__niter_baseIP5BlorbSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE
_ZSt12__niter_baseIP5BlorbSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE:
.LFB5710:
	.loc 15 1257 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1200:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1201:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __it, __it
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1259:     { return __it.base(); }
	.loc 15 1259 23
	leaq	16(%rbp), %rcx	 #, tmp87
	call	_ZNK9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEE4baseEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1259:     { return __it.base(); }
	.loc 15 1259 24
	movq	(%rax), %rax	 # *_1, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1259:     { return __it.base(); }
	.loc 15 1259 27
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1202:
	ret	
.LFE5710:
	.seh_endproc
	.section	.text$_ZSt14__copy_move_a1ILb1EP5BlorbS1_ET1_T0_S3_S2_,"x"
	.linkonce discard
	.globl	_ZSt14__copy_move_a1ILb1EP5BlorbS1_ET1_T0_S3_S2_
	.def	_ZSt14__copy_move_a1ILb1EP5BlorbS1_ET1_T0_S3_S2_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt14__copy_move_a1ILb1EP5BlorbS1_ET1_T0_S3_S2_
_ZSt14__copy_move_a1ILb1EP5BlorbS1_ET1_T0_S3_S2_:
.LFB5711:
	.loc 3 521 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1203:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1204:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # __result, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:522:     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
	.loc 3 522 42
	movq	32(%rbp), %rdx	 # __result, tmp84
	movq	24(%rbp), %rax	 # __last, tmp85
	movq	%rdx, %r8	 # tmp84,
	movq	%rax, %rdx	 # tmp85,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZSt14__copy_move_a2ILb1EP5BlorbS1_ET1_T0_S3_S2_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:522:     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
	.loc 3 522 71
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1205:
	ret	
.LFE5711:
	.seh_endproc
	.section	.text$_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_,"x"
	.linkonce discard
	.globl	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_
	.def	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_
_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_:
.LFB5712:
	.loc 3 328 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1206:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1207:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __from, __from
	movq	%rdx, 24(%rbp)	 # __res, __res
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:329:     { return __from + (__res - std::__niter_base(__from)); }
	.loc 3 329 49
	movq	16(%rbp), %rcx	 # __from,
	call	_ZSt12__niter_baseIP5BlorbSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE	 #
	movq	%rax, %rdx	 #, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:329:     { return __from + (__res - std::__niter_base(__from)); }
	.loc 3 329 30
	movq	24(%rbp), %rax	 # __res, tmp87
	subq	%rdx, %rax	 # _1, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:329:     { return __from + (__res - std::__niter_base(__from)); }
	.loc 3 329 21
	sarq	$4, %rax	 #, _2
	movq	%rax, %rdx	 # _2, tmp88
	movabsq	$-6148914691236517205, %rax	 #, tmp90
	imulq	%rdx, %rax	 # tmp88, tmp89
	movq	%rax, %rdx	 # _3,
	leaq	16(%rbp), %rcx	 #, tmp94
	call	_ZNK9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEEplEx	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:329:     { return __from + (__res - std::__niter_base(__from)); }
	.loc 3 329 60
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1208:
	ret	
.LFE5712:
	.seh_endproc
	.section	.text$_ZSt10destroy_atI5BlorbEvPT_,"x"
	.linkonce discard
	.globl	_ZSt10destroy_atI5BlorbEvPT_
	.def	_ZSt10destroy_atI5BlorbEvPT_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt10destroy_atI5BlorbEvPT_
_ZSt10destroy_atI5BlorbEvPT_:
.LFB5713:
	.loc 21 80 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1209:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1210:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __location, __location
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:88: 	__location->~_Tp();
	.loc 21 88 18
	movq	16(%rbp), %rcx	 # __location,
	call	_ZN5BlorbD1Ev	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:89:     }
	.loc 21 89 5
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1211:
	ret	
.LFE5713:
	.seh_endproc
	.section	.text$_ZSt11__addressofIiEPT_RS0_,"x"
	.linkonce discard
	.globl	_ZSt11__addressofIiEPT_RS0_
	.def	_ZSt11__addressofIiEPT_RS0_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt11__addressofIiEPT_RS0_
_ZSt11__addressofIiEPT_RS0_:
.LFB5795:
	.loc 17 49 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1212:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1213:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __r, __r
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\move.h:50:     { return __builtin_addressof(__r); }
	.loc 17 50 37
	movq	16(%rbp), %rax	 # __r, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\move.h:50:     { return __builtin_addressof(__r); }
	.loc 17 50 40
	popq	%rbp	 #
.LCFI1214:
	ret	
.LFE5795:
	.seh_endproc
	.section	.text$_ZSt8_DestroyIiEvPT_,"x"
	.linkonce discard
	.globl	_ZSt8_DestroyIiEvPT_
	.def	_ZSt8_DestroyIiEvPT_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt8_DestroyIiEvPT_
_ZSt8_DestroyIiEvPT_:
.LFB5796:
	.loc 21 135 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1215:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1216:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __pointer, __pointer
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:138:       std::destroy_at(__pointer);
	.loc 21 138 22
	movq	16(%rbp), %rcx	 # __pointer,
	call	_ZSt10destroy_atIiEvPT_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:142:     }
	.loc 21 142 5
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1217:
	ret	
.LFE5796:
	.seh_endproc
	.section	.text$_ZNSt16allocator_traitsISaImEE8allocateERS0_y,"x"
	.linkonce discard
	.globl	_ZNSt16allocator_traitsISaImEE8allocateERS0_y
	.def	_ZNSt16allocator_traitsISaImEE8allocateERS0_y;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt16allocator_traitsISaImEE8allocateERS0_y
_ZNSt16allocator_traitsISaImEE8allocateERS0_y:
.LFB5797:
	.loc 16 459 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1218:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1219:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __a, __a
	movq	%rdx, 24(%rbp)	 # __n, __n
	movq	16(%rbp), %rax	 # __a, tmp86
	movq	%rax, -8(%rbp)	 # tmp86, this
	movq	24(%rbp), %rax	 # __n, tmp87
	movq	%rax, -16(%rbp)	 # tmp87, __n
.LBB139:
.LBB140:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:194: 	if (std::is_constant_evaluated())
	.loc 12 194 32
	call	_ZSt21is_constant_evaluatedv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:194: 	if (std::is_constant_evaluated())
	.loc 12 194 2
	testb	%al, %al	 # retval.15_8
	je	.L778	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:195: 	  return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	.loc 12 195 43
	movq	-16(%rbp), %rax	 # __n, tmp88
	salq	$2, %rax	 #, _9
	movq	%rax, %rcx	 # _9,
	call	_Znwy	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:195: 	  return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	.loc 12 195 62
	jmp	.L779	 #
.L778:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:197: 	return __allocator_base<_Tp>::allocate(__n, 0);
	.loc 12 197 40
	movq	-16(%rbp), %rdx	 # __n, tmp90
	movq	-8(%rbp), %rax	 # this, tmp91
	movl	$0, %r8d	 #,
	movq	%rax, %rcx	 # tmp91,
	call	_ZN9__gnu_cxx13new_allocatorImE8allocateEyPKv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:197: 	return __allocator_base<_Tp>::allocate(__n, 0);
	.loc 12 197 47
	nop	
.L779:
.LBE140:
.LBE139:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\alloc_traits.h:460:       { return __a.allocate(__n); }
	.loc 16 460 35
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI1220:
	ret	
.LFE5797:
	.seh_endproc
	.section	.text$_ZSt12__miter_baseIPmET_S1_,"x"
	.linkonce discard
	.globl	_ZSt12__miter_baseIPmET_S1_
	.def	_ZSt12__miter_baseIPmET_S1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt12__miter_baseIPmET_S1_
_ZSt12__miter_baseIPmET_S1_:
.LFB5798:
	.loc 18 560 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1221:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1222:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __it, __it
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\cpp_type_traits.h:561:     { return __it; }
	.loc 18 561 14
	movq	16(%rbp), %rax	 # __it, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\cpp_type_traits.h:561:     { return __it; }
	.loc 18 561 20
	popq	%rbp	 #
.LCFI1223:
	ret	
.LFE5798:
	.seh_endproc
	.section	.text$_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_,"x"
	.linkonce discard
	.globl	_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_
	.def	_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_
_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_:
.LFB5799:
	.loc 3 527 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1224:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI1225:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1226:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
.LCFI1227:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI1228:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __first, __first
	movq	%rdx, 40(%rbp)	 # __last, __last
	movq	%r8, 48(%rbp)	 # __result, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:529:       return std::__niter_wrap(__result,
	.loc 3 529 31
	movq	48(%rbp), %rax	 # __result, __result.17_1
	movq	%rax, %rcx	 # __result.17_1,
	call	_ZSt12__niter_baseIPmET_S1_	 #
	movq	%rax, %rsi	 #, _2
	movq	40(%rbp), %rax	 # __last, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZSt12__niter_baseIPmET_S1_	 #
	movq	%rax, %rbx	 #, _3
	movq	32(%rbp), %rcx	 # __first,
	call	_ZSt12__niter_baseIPmET_S1_	 #
	movq	%rsi, %r8	 # _2,
	movq	%rbx, %rdx	 # _3,
	movq	%rax, %rcx	 # _4,
	call	_ZSt14__copy_move_a1ILb0EPmS0_ET1_T0_S2_S1_	 #
	movq	%rax, %rdx	 #, _5
	leaq	48(%rbp), %rax	 #, tmp90
	movq	%rax, %rcx	 # tmp90,
	call	_ZSt12__niter_wrapIPmET_RKS1_S1_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:533:     }
	.loc 3 533 5
	addq	$32, %rsp	 #,
	popq	%rbx	 #
.LCFI1229:
	popq	%rsi	 #
.LCFI1230:
	popq	%rbp	 #
.LCFI1231:
	ret	
.LFE5799:
	.seh_endproc
	.section	.text$_ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_,"x"
	.linkonce discard
	.globl	_ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_
	.def	_ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_
_ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_:
.LFB5801:
	.loc 3 611 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1232:
	pushq	%rdi	 #
	.seh_pushreg	%rdi
.LCFI1233:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI1234:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1235:
	subq	$120, %rsp	 #,
	.seh_stackalloc	120
.LCFI1236:
	leaq	112(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 112
.LCFI1237:
	.seh_endprologue
	movq	%rcx, 48(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, %rbx	 #, tmp82
	movq	%r8, %rdi	 #, tmp83
	movq	%r9, %rsi	 #, tmp84
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:620: 	     (std::__miter_base(__first), std::__miter_base(__last), __result);
	.loc 3 620 7
	leaq	-32(%rbp), %rcx	 #, tmp85
	movq	(%rdi), %rax	 # __last, tmp86
	movq	8(%rdi), %rdx	 # __last,
	movq	%rax, -48(%rbp)	 # tmp86,
	movq	%rdx, -40(%rbp)	 #,
	leaq	-48(%rbp), %rax	 #, tmp87
	movq	%rax, %rdx	 # tmp87,
	call	_ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_	 #
	leaq	-16(%rbp), %rcx	 #, tmp88
	movq	(%rbx), %rax	 # __first, tmp89
	movq	8(%rbx), %rdx	 # __first,
	movq	%rax, -48(%rbp)	 # tmp89,
	movq	%rdx, -40(%rbp)	 #,
	leaq	-48(%rbp), %rax	 #, tmp90
	movq	%rax, %rdx	 # tmp90,
	call	_ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_	 #
	movq	48(%rbp), %rcx	 # .result_ptr, tmp91
	movq	-16(%rbp), %rax	 # D.127513, tmp92
	movq	-8(%rbp), %rdx	 # D.127513,
	movq	%rax, -48(%rbp)	 # tmp92,
	movq	%rdx, -40(%rbp)	 #,
	movq	-32(%rbp), %rax	 # D.127512, tmp93
	movq	-24(%rbp), %rdx	 # D.127512,
	movq	%rax, -64(%rbp)	 # tmp93,
	movq	%rdx, -56(%rbp)	 #,
	movq	(%rsi), %rax	 # __result, tmp94
	movq	8(%rsi), %rdx	 # __result,
	movq	%rax, -80(%rbp)	 # tmp94,
	movq	%rdx, -72(%rbp)	 #,
	leaq	-80(%rbp), %r8	 #, tmp95
	leaq	-64(%rbp), %rdx	 #, tmp96
	leaq	-48(%rbp), %rax	 #, tmp97
	movq	%r8, %r9	 # tmp95,
	movq	%rdx, %r8	 # tmp96,
	movq	%rax, %rdx	 # tmp97,
	call	_ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:620: 	     (std::__miter_base(__first), std::__miter_base(__last), __result);
	.loc 3 620 71
	nop	
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:621:     }
	.loc 3 621 5
	movq	48(%rbp), %rax	 # .result_ptr,
	addq	$120, %rsp	 #,
	popq	%rbx	 #
.LCFI1238:
	popq	%rsi	 #
.LCFI1239:
	popq	%rdi	 #
.LCFI1240:
	popq	%rbp	 #
.LCFI1241:
	ret	
.LFE5801:
	.seh_endproc
	.section	.text$_ZSt12__miter_baseISt13_Bit_iteratorET_S1_,"x"
	.linkonce discard
	.globl	_ZSt12__miter_baseISt13_Bit_iteratorET_S1_
	.def	_ZSt12__miter_baseISt13_Bit_iteratorET_S1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt12__miter_baseISt13_Bit_iteratorET_S1_
_ZSt12__miter_baseISt13_Bit_iteratorET_S1_:
.LFB5802:
	.loc 18 560 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1242:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1243:
	leaq	(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1244:
	.seh_endprologue
	movq	%rcx, 24(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, %rbx	 #, tmp82
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\cpp_type_traits.h:561:     { return __it; }
	.loc 18 561 14
	movq	24(%rbp), %rcx	 # .result_ptr, tmp83
	movq	(%rbx), %rax	 # __it, tmp84
	movq	8(%rbx), %rdx	 # __it,
	movq	%rax, (%rcx)	 # tmp84, <retval>
	movq	%rdx, 8(%rcx)	 #, <retval>
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\cpp_type_traits.h:561:     { return __it; }
	.loc 18 561 20
	movq	24(%rbp), %rax	 # .result_ptr,
	popq	%rbx	 #
.LCFI1245:
	popq	%rbp	 #
.LCFI1246:
	ret	
.LFE5802:
	.seh_endproc
	.section	.text$_ZSt22__copy_move_backward_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_,"x"
	.linkonce discard
	.globl	_ZSt22__copy_move_backward_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
	.def	_ZSt22__copy_move_backward_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt22__copy_move_backward_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
_ZSt22__copy_move_backward_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_:
.LFB5803:
	.loc 3 796 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1247:
	pushq	%rdi	 #
	.seh_pushreg	%rdi
.LCFI1248:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI1249:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1250:
	subq	$152, %rsp	 #,
	.seh_stackalloc	152
.LCFI1251:
	leaq	144(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 144
.LCFI1252:
	.seh_endprologue
	movq	%rcx, 48(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, %rsi	 #, tmp82
	movq	%r8, %rdi	 #, tmp83
	movq	%r9, %rbx	 #, tmp84
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:798:       return std::__niter_wrap(__result,
	.loc 3 798 31
	leaq	-64(%rbp), %rcx	 #, tmp85
	movq	(%rbx), %rax	 # __result, tmp86
	movq	8(%rbx), %rdx	 # __result,
	movq	%rax, -80(%rbp)	 # tmp86,
	movq	%rdx, -72(%rbp)	 #,
	leaq	-80(%rbp), %rax	 #, tmp87
	movq	%rax, %rdx	 # tmp87,
	call	_ZSt12__niter_baseISt13_Bit_iteratorET_S1_	 #
	leaq	-48(%rbp), %rcx	 #, tmp88
	movq	(%rdi), %rax	 # __last, tmp89
	movq	8(%rdi), %rdx	 # __last,
	movq	%rax, -80(%rbp)	 # tmp89,
	movq	%rdx, -72(%rbp)	 #,
	leaq	-80(%rbp), %rax	 #, tmp90
	movq	%rax, %rdx	 # tmp90,
	call	_ZSt12__niter_baseISt13_Bit_iteratorET_S1_	 #
	leaq	-32(%rbp), %rcx	 #, tmp91
	movq	(%rsi), %rax	 # __first, tmp92
	movq	8(%rsi), %rdx	 # __first,
	movq	%rax, -80(%rbp)	 # tmp92,
	movq	%rdx, -72(%rbp)	 #,
	leaq	-80(%rbp), %rax	 #, tmp93
	movq	%rax, %rdx	 # tmp93,
	call	_ZSt12__niter_baseISt13_Bit_iteratorET_S1_	 #
	leaq	-16(%rbp), %rcx	 #, tmp94
	movq	-32(%rbp), %rax	 # D.127597, tmp95
	movq	-24(%rbp), %rdx	 # D.127597,
	movq	%rax, -80(%rbp)	 # tmp95,
	movq	%rdx, -72(%rbp)	 #,
	movq	-48(%rbp), %rax	 # D.127596, tmp96
	movq	-40(%rbp), %rdx	 # D.127596,
	movq	%rax, -96(%rbp)	 # tmp96,
	movq	%rdx, -88(%rbp)	 #,
	movq	-64(%rbp), %rax	 # D.127595, tmp97
	movq	-56(%rbp), %rdx	 # D.127595,
	movq	%rax, -112(%rbp)	 # tmp97,
	movq	%rdx, -104(%rbp)	 #,
	leaq	-112(%rbp), %r8	 #, tmp98
	leaq	-96(%rbp), %rdx	 #, tmp99
	leaq	-80(%rbp), %rax	 #, tmp100
	movq	%r8, %r9	 # tmp98,
	movq	%rdx, %r8	 # tmp99,
	movq	%rax, %rdx	 # tmp100,
	call	_ZSt23__copy_move_backward_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_	 #
	movq	48(%rbp), %rcx	 # .result_ptr, tmp101
	movq	-16(%rbp), %rax	 # D.127598, tmp102
	movq	-8(%rbp), %rdx	 # D.127598,
	movq	%rax, -112(%rbp)	 # tmp102,
	movq	%rdx, -104(%rbp)	 #,
	leaq	-112(%rbp), %rax	 #, tmp103
	movq	%rax, %r8	 # tmp103,
	movq	%rbx, %rdx	 # tmp84,
	call	_ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:801: 		   std::__niter_base(__result)));
	.loc 3 801 34
	nop	
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:802:     }
	.loc 3 802 5
	movq	48(%rbp), %rax	 # .result_ptr,
	addq	$152, %rsp	 #,
	popq	%rbx	 #
.LCFI1253:
	popq	%rsi	 #
.LCFI1254:
	popq	%rdi	 #
.LCFI1255:
	popq	%rbp	 #
.LCFI1256:
	ret	
.LFE5803:
	.seh_endproc
	.section	.text$_ZSt4fillISt13_Bit_iteratorbEvT_S1_RKT0_,"x"
	.linkonce discard
	.globl	_ZSt4fillISt13_Bit_iteratorbEvT_S1_RKT0_
	.def	_ZSt4fillISt13_Bit_iteratorbEvT_S1_RKT0_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt4fillISt13_Bit_iteratorbEvT_S1_RKT0_
_ZSt4fillISt13_Bit_iteratorbEvT_S1_RKT0_:
.LFB5804:
	.loc 3 992 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1257:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI1258:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1259:
	subq	$64, %rsp	 #,
	.seh_stackalloc	64
.LCFI1260:
	leaq	64(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 64
.LCFI1261:
	.seh_endprologue
	movq	%rcx, %rsi	 #, tmp82
	movq	%rdx, %rbx	 #, tmp83
	movq	%r8, 48(%rbp)	 # __value, __value
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:999:       std::__fill_a(__first, __last, __value);
	.loc 3 999 20
	movq	(%rsi), %rax	 # __first, tmp84
	movq	8(%rsi), %rdx	 # __first,
	movq	%rax, -16(%rbp)	 # tmp84,
	movq	%rdx, -8(%rbp)	 #,
	movq	(%rbx), %rax	 # __last, tmp85
	movq	8(%rbx), %rdx	 # __last,
	movq	%rax, -32(%rbp)	 # tmp85,
	movq	%rdx, -24(%rbp)	 #,
	movq	48(%rbp), %rcx	 # __value, tmp86
	leaq	-32(%rbp), %rdx	 #, tmp87
	leaq	-16(%rbp), %rax	 #, tmp88
	movq	%rcx, %r8	 # tmp86,
	movq	%rax, %rcx	 # tmp88,
	call	_ZSt8__fill_aISt13_Bit_iteratorbEvT_S1_RKT0_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:1000:     }
	.loc 3 1000 5
	nop	
	addq	$64, %rsp	 #,
	popq	%rbx	 #
.LCFI1262:
	popq	%rsi	 #
.LCFI1263:
	popq	%rbp	 #
.LCFI1264:
	ret	
.LFE5804:
	.seh_endproc
	.section	.text$_ZNKSt6vectorIbSaIbEE12_M_check_lenEyPKc,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt6vectorIbSaIbEE12_M_check_lenEyPKc
	.def	_ZNKSt6vectorIbSaIbEE12_M_check_lenEyPKc;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt6vectorIbSaIbEE12_M_check_lenEyPKc
_ZNKSt6vectorIbSaIbEE12_M_check_lenEyPKc:
.LFB5805:
	.loc 8 1307 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1265:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1266:
	subq	$56, %rsp	 #,
	.seh_stackalloc	56
.LCFI1267:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI1268:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __n, __n
	movq	%r8, 48(%rbp)	 # __s, __s
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1309: 	if (max_size() - size() < __n)
	.loc 8 1309 14
	movq	32(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIbSaIbEE8max_sizeEv	 #
	movq	%rax, %rbx	 #, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1309: 	if (max_size() - size() < __n)
	.loc 8 1309 23
	movq	32(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIbSaIbEE4sizeEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1309: 	if (max_size() - size() < __n)
	.loc 8 1309 17
	subq	%rax, %rbx	 # _2, _1
	movq	%rbx, %rdx	 # _1, _3
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1309: 	if (max_size() - size() < __n)
	.loc 8 1309 26
	movq	40(%rbp), %rax	 # __n, __n.34_4
	cmpq	%rax, %rdx	 # __n.34_4, _3
	setb	%al	 #, retval.33_18
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1309: 	if (max_size() - size() < __n)
	.loc 8 1309 2
	testb	%al, %al	 # retval.33_18
	je	.L793	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1310: 	  __throw_length_error(__N(__s));
	.loc 8 1310 24
	movq	48(%rbp), %rax	 # __s, tmp95
	movq	%rax, %rcx	 # tmp95,
	call	_ZSt20__throw_length_errorPKc	 #
.L793:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1312: 	const size_type __len = size() + std::max(size(), __n);
	.loc 8 1312 30
	movq	32(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIbSaIbEE4sizeEv	 #
	movq	%rax, %rbx	 #, _5
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1312: 	const size_type __len = size() + std::max(size(), __n);
	.loc 8 1312 48
	movq	32(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIbSaIbEE4sizeEv	 #
	movq	%rax, -16(%rbp)	 # _6, D.124712
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1312: 	const size_type __len = size() + std::max(size(), __n);
	.loc 8 1312 43
	leaq	40(%rbp), %rdx	 #, tmp96
	leaq	-16(%rbp), %rax	 #, tmp97
	movq	%rax, %rcx	 # tmp97,
	call	_ZSt3maxIyERKT_S2_S2_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1312: 	const size_type __len = size() + std::max(size(), __n);
	.loc 8 1312 33
	movq	(%rax), %rax	 # *_7, _8
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1312: 	const size_type __len = size() + std::max(size(), __n);
	.loc 8 1312 18
	addq	%rbx, %rax	 # _5, tmp98
	movq	%rax, -8(%rbp)	 # tmp98, __len
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1313: 	return (__len < size() || __len > max_size()) ? max_size() : __len;
	.loc 8 1313 22
	movq	32(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIbSaIbEE4sizeEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1313: 	return (__len < size() || __len > max_size()) ? max_size() : __len;
	.loc 8 1313 48
	cmpq	%rax, -8(%rbp)	 # _9, __len
	jb	.L794	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1313: 	return (__len < size() || __len > max_size()) ? max_size() : __len;
	.loc 8 1313 44 discriminator 2
	movq	32(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIbSaIbEE8max_sizeEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1313: 	return (__len < size() || __len > max_size()) ? max_size() : __len;
	.loc 8 1313 25 discriminator 2
	cmpq	%rax, -8(%rbp)	 # _10, __len
	jbe	.L795	 #,
.L794:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1313: 	return (__len < size() || __len > max_size()) ? max_size() : __len;
	.loc 8 1313 58 discriminator 3
	movq	32(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIbSaIbEE8max_sizeEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1313: 	return (__len < size() || __len > max_size()) ? max_size() : __len;
	.loc 8 1313 48 discriminator 3
	jmp	.L796	 #
.L795:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1313: 	return (__len < size() || __len > max_size()) ? max_size() : __len;
	.loc 8 1313 48 is_stmt 0 discriminator 4
	movq	-8(%rbp), %rax	 # __len, iftmp.35_11
.L796:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1314:       }
	.loc 8 1314 7 is_stmt 1 discriminator 6
	addq	$56, %rsp	 #,
	popq	%rbx	 #
.LCFI1269:
	popq	%rbp	 #
.LCFI1270:
	ret	
.LFE5805:
	.seh_endproc
	.section	.text$_ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_,"x"
	.linkonce discard
	.globl	_ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_
	.def	_ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_
_ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_:
.LFB5806:
	.loc 3 611 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1271:
	pushq	%rdi	 #
	.seh_pushreg	%rdi
.LCFI1272:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI1273:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1274:
	subq	$120, %rsp	 #,
	.seh_stackalloc	120
.LCFI1275:
	leaq	112(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 112
.LCFI1276:
	.seh_endprologue
	movq	%rcx, 48(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, %rbx	 #, tmp82
	movq	%r8, %rdi	 #, tmp83
	movq	%r9, %rsi	 #, tmp84
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:620: 	     (std::__miter_base(__first), std::__miter_base(__last), __result);
	.loc 3 620 7
	leaq	-32(%rbp), %rcx	 #, tmp85
	movq	(%rdi), %rax	 # __last, tmp86
	movq	8(%rdi), %rdx	 # __last,
	movq	%rax, -48(%rbp)	 # tmp86,
	movq	%rdx, -40(%rbp)	 #,
	leaq	-48(%rbp), %rax	 #, tmp87
	movq	%rax, %rdx	 # tmp87,
	call	_ZSt12__miter_baseISt13_Bit_iteratorET_S1_	 #
	leaq	-16(%rbp), %rcx	 #, tmp88
	movq	(%rbx), %rax	 # __first, tmp89
	movq	8(%rbx), %rdx	 # __first,
	movq	%rax, -48(%rbp)	 # tmp89,
	movq	%rdx, -40(%rbp)	 #,
	leaq	-48(%rbp), %rax	 #, tmp90
	movq	%rax, %rdx	 # tmp90,
	call	_ZSt12__miter_baseISt13_Bit_iteratorET_S1_	 #
	movq	48(%rbp), %rcx	 # .result_ptr, tmp91
	movq	-16(%rbp), %rax	 # D.127652, tmp92
	movq	-8(%rbp), %rdx	 # D.127652,
	movq	%rax, -48(%rbp)	 # tmp92,
	movq	%rdx, -40(%rbp)	 #,
	movq	-32(%rbp), %rax	 # D.127651, tmp93
	movq	-24(%rbp), %rdx	 # D.127651,
	movq	%rax, -64(%rbp)	 # tmp93,
	movq	%rdx, -56(%rbp)	 #,
	movq	(%rsi), %rax	 # __result, tmp94
	movq	8(%rsi), %rdx	 # __result,
	movq	%rax, -80(%rbp)	 # tmp94,
	movq	%rdx, -72(%rbp)	 #,
	leaq	-80(%rbp), %r8	 #, tmp95
	leaq	-64(%rbp), %rdx	 #, tmp96
	leaq	-48(%rbp), %rax	 #, tmp97
	movq	%r8, %r9	 # tmp95,
	movq	%rdx, %r8	 # tmp96,
	movq	%rax, %rdx	 # tmp97,
	call	_ZSt13__copy_move_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:620: 	     (std::__miter_base(__first), std::__miter_base(__last), __result);
	.loc 3 620 71
	nop	
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:621:     }
	.loc 3 621 5
	movq	48(%rbp), %rax	 # .result_ptr,
	addq	$120, %rsp	 #,
	popq	%rbx	 #
.LCFI1277:
	popq	%rsi	 #
.LCFI1278:
	popq	%rdi	 #
.LCFI1279:
	popq	%rbp	 #
.LCFI1280:
	ret	
.LFE5806:
	.seh_endproc
	.section	.text$_ZSt12__relocate_aIPiS0_SaIiEET0_T_S3_S2_RT1_,"x"
	.linkonce discard
	.globl	_ZSt12__relocate_aIPiS0_SaIiEET0_T_S3_S2_RT1_
	.def	_ZSt12__relocate_aIPiS0_SaIiEET0_T_S3_S2_RT1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt12__relocate_aIPiS0_SaIiEET0_T_S3_S2_RT1_
_ZSt12__relocate_aIPiS0_SaIiEET0_T_S3_S2_RT1_:
.LFB5808:
	.loc 19 1040 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1281:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI1282:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1283:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
.LCFI1284:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI1285:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __first, __first
	movq	%rdx, 40(%rbp)	 # __last, __last
	movq	%r8, 48(%rbp)	 # __result, __result
	movq	%r9, 56(%rbp)	 # __alloc, __alloc
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:1046:       return __relocate_a_1(std::__niter_base(__first),
	.loc 19 1046 28
	movq	48(%rbp), %rax	 # __result, tmp87
	movq	%rax, %rcx	 # tmp87,
	call	_ZSt12__niter_baseIPiET_S1_	 #
	movq	%rax, %rsi	 #, _1
	movq	40(%rbp), %rax	 # __last, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZSt12__niter_baseIPiET_S1_	 #
	movq	%rax, %rbx	 #, _2
	movq	32(%rbp), %rcx	 # __first,
	call	_ZSt12__niter_baseIPiET_S1_	 #
	movq	56(%rbp), %rdx	 # __alloc, tmp89
	movq	%rdx, %r9	 # tmp89,
	movq	%rsi, %r8	 # _1,
	movq	%rbx, %rdx	 # _2,
	movq	%rax, %rcx	 # _3,
	call	_ZSt14__relocate_a_1IiiENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS2_E4typeES4_S4_S4_RSaIT0_E	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:1049:     }
	.loc 19 1049 5
	addq	$32, %rsp	 #,
	popq	%rbx	 #
.LCFI1286:
	popq	%rsi	 #
.LCFI1287:
	popq	%rbp	 #
.LCFI1288:
	ret	
.LFE5808:
	.seh_endproc
	.section	.text$_ZSt25__uninitialized_default_nIPiyET_S1_T0_,"x"
	.linkonce discard
	.globl	_ZSt25__uninitialized_default_nIPiyET_S1_T0_
	.def	_ZSt25__uninitialized_default_nIPiyET_S1_T0_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt25__uninitialized_default_nIPiyET_S1_T0_
_ZSt25__uninitialized_default_nIPiyET_S1_T0_:
.LFB5809:
	.loc 19 630 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1289:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1290:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __n, __n
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:635:       constexpr bool __can_fill
	.loc 19 635 22
	movb	$1, -1(%rbp)	 #, __can_fill
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:640: 	__uninit_default_n(__first, __n);
	.loc 19 640 20
	movq	24(%rbp), %rax	 # __n, tmp84
	movq	%rax, %rdx	 # tmp84,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPiyEET_S3_T0_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:641:     }
	.loc 19 641 5
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI1291:
	ret	
.LFE5809:
	.seh_endproc
	.section	.text$_ZN9__gnu_cxx13new_allocatorIN3DDT4NodeEE10deallocateEPS2_y,"x"
	.linkonce discard
	.align 2
	.globl	_ZN9__gnu_cxx13new_allocatorIN3DDT4NodeEE10deallocateEPS2_y
	.def	_ZN9__gnu_cxx13new_allocatorIN3DDT4NodeEE10deallocateEPS2_y;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN9__gnu_cxx13new_allocatorIN3DDT4NodeEE10deallocateEPS2_y
_ZN9__gnu_cxx13new_allocatorIN3DDT4NodeEE10deallocateEPS2_y:
.LFB5810:
	.loc 22 132 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1292:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1293:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __p, __p
	movq	%r8, 32(%rbp)	 # __t, __t
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:145: 	::operator delete(__p
	.loc 22 145 19
	movq	32(%rbp), %rdx	 # __t, tmp83
	movq	%rdx, %rax	 # tmp83, tmp84
	salq	$3, %rax	 #, tmp84
	addq	%rdx, %rax	 # tmp83, tmp84
	salq	$3, %rax	 #, tmp85
	movq	%rax, %rdx	 # tmp84, _2
	movq	24(%rbp), %rax	 # __p, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZdlPvy	 #
	nop	
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:150:       }
	.loc 22 150 7
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1294:
	ret	
.LFE5810:
	.seh_endproc
	.section	.text$_ZSt11__addressofIN3DDT4NodeEEPT_RS2_,"x"
	.linkonce discard
	.globl	_ZSt11__addressofIN3DDT4NodeEEPT_RS2_
	.def	_ZSt11__addressofIN3DDT4NodeEEPT_RS2_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt11__addressofIN3DDT4NodeEEPT_RS2_
_ZSt11__addressofIN3DDT4NodeEEPT_RS2_:
.LFB5811:
	.loc 17 49 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1295:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1296:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __r, __r
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\move.h:50:     { return __builtin_addressof(__r); }
	.loc 17 50 37
	movq	16(%rbp), %rax	 # __r, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\move.h:50:     { return __builtin_addressof(__r); }
	.loc 17 50 40
	popq	%rbp	 #
.LCFI1297:
	ret	
.LFE5811:
	.seh_endproc
	.section	.text$_ZSt8_DestroyIN3DDT4NodeEEvPT_,"x"
	.linkonce discard
	.globl	_ZSt8_DestroyIN3DDT4NodeEEvPT_
	.def	_ZSt8_DestroyIN3DDT4NodeEEvPT_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt8_DestroyIN3DDT4NodeEEvPT_
_ZSt8_DestroyIN3DDT4NodeEEvPT_:
.LFB5812:
	.loc 21 135 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1298:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1299:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __pointer, __pointer
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:138:       std::destroy_at(__pointer);
	.loc 21 138 22
	movq	16(%rbp), %rcx	 # __pointer,
	call	_ZSt10destroy_atIN3DDT4NodeEEvPT_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:142:     }
	.loc 21 142 5
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1300:
	ret	
.LFE5812:
	.seh_endproc
	.section	.text$_ZN9__gnu_cxx14__alloc_traitsISaImEmE27_S_propagate_on_copy_assignEv,"x"
	.linkonce discard
	.globl	_ZN9__gnu_cxx14__alloc_traitsISaImEmE27_S_propagate_on_copy_assignEv
	.def	_ZN9__gnu_cxx14__alloc_traitsISaImEmE27_S_propagate_on_copy_assignEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN9__gnu_cxx14__alloc_traitsISaImEmE27_S_propagate_on_copy_assignEv
_ZN9__gnu_cxx14__alloc_traitsISaImEmE27_S_propagate_on_copy_assignEv:
.LFB5814:
	.loc 13 103 27
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1301:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1302:
	.seh_endprologue
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\alloc_traits.h:104:     { return _Base_type::propagate_on_container_copy_assignment::value; }
	.loc 13 104 66
	movl	$0, %eax	 #, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\alloc_traits.h:104:     { return _Base_type::propagate_on_container_copy_assignment::value; }
	.loc 13 104 73
	popq	%rbp	 #
.LCFI1303:
	ret	
.LFE5814:
	.seh_endproc
	.section	.text$_ZNSt6vectorIbSaIbEEaSERKS1_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorIbSaIbEEaSERKS1_
	.def	_ZNSt6vectorIbSaIbEEaSERKS1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorIbSaIbEEaSERKS1_
_ZNSt6vectorIbSaIbEEaSERKS1_:
.LFB5813:
	.loc 8 736 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1304:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1305:
	subq	$168, %rsp	 #,
	.seh_stackalloc	168
.LCFI1306:
	leaq	160(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 160
.LCFI1307:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __x, __x
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:738: 	if (&__x == this)
	.loc 8 738 2
	movq	40(%rbp), %rax	 # __x, tmp106
	cmpq	32(%rbp), %rax	 # this, tmp106
	jne	.L812	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:739: 	  return *this;
	.loc 8 739 12
	movq	32(%rbp), %rax	 # this, _20
	jmp	.L813	 #
.L812:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:741: 	if (_Bit_alloc_traits::_S_propagate_on_copy_assign())
	.loc 8 741 52
	call	_ZN9__gnu_cxx14__alloc_traitsISaImEmE27_S_propagate_on_copy_assignEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:741: 	if (_Bit_alloc_traits::_S_propagate_on_copy_assign())
	.loc 8 741 2
	testb	%al, %al	 # retval.54_28
	je	.L814	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:743: 	    if (this->_M_get_Bit_allocator() != __x._M_get_Bit_allocator())
	.loc 8 743 66
	movq	40(%rbp), %rax	 # __x, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv	 #
	movq	%rax, %rbx	 #, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:743: 	    if (this->_M_get_Bit_allocator() != __x._M_get_Bit_allocator())
	.loc 8 743 36
	movq	32(%rbp), %rax	 # this, _3
	movq	%rax, %rcx	 # _3,
	call	_ZNSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:743: 	    if (this->_M_get_Bit_allocator() != __x._M_get_Bit_allocator())
	.loc 8 743 39
	movq	%rbx, %rdx	 # _2,
	movq	%rax, %rcx	 # _4,
	call	_ZSteqRKSaImES1_	 #
	xorl	$1, %eax	 #, retval.55_32
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:743: 	    if (this->_M_get_Bit_allocator() != __x._M_get_Bit_allocator())
	.loc 8 743 6
	testb	%al, %al	 # retval.55_32
	je	.L815	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:745: 		this->_M_deallocate();
	.loc 8 745 22
	movq	32(%rbp), %rax	 # this, _6
	movq	%rax, %rcx	 # _6,
	call	_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:747: 				     __x._M_get_Bit_allocator());
	.loc 8 747 34
	movq	40(%rbp), %rax	 # __x, _7
	movq	%rax, %rcx	 # _7,
	call	_ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv	 #
	movq	%rax, %rbx	 #, _8
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:746: 		std::__alloc_on_copy(_M_get_Bit_allocator(),
	.loc 8 746 44
	movq	32(%rbp), %rax	 # this, _9
	movq	%rax, %rcx	 # _9,
	call	_ZNSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:746: 		std::__alloc_on_copy(_M_get_Bit_allocator(),
	.loc 8 746 23
	movq	%rbx, %rdx	 # _8,
	movq	%rax, %rcx	 # _10,
	call	_ZSt15__alloc_on_copyISaImEEvRT_RKS1_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:748: 		_M_initialize(__x.size());
	.loc 8 748 16
	movq	40(%rbp), %rax	 # __x, tmp107
	movq	%rax, %rcx	 # tmp107,
	call	_ZNKSt6vectorIbSaIbEE4sizeEv	 #
	movq	%rax, %rdx	 # _11,
	movq	32(%rbp), %rcx	 # this,
	call	_ZNSt6vectorIbSaIbEE13_M_initializeEy	 #
	jmp	.L814	 #
.L815:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:752: 				   __x._M_get_Bit_allocator());
	.loc 8 752 32
	movq	40(%rbp), %rax	 # __x, _12
	movq	%rax, %rcx	 # _12,
	call	_ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv	 #
	movq	%rax, %rbx	 #, _13
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:751: 	      std::__alloc_on_copy(_M_get_Bit_allocator(),
	.loc 8 751 49
	movq	32(%rbp), %rax	 # this, _14
	movq	%rax, %rcx	 # _14,
	call	_ZNSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:751: 	      std::__alloc_on_copy(_M_get_Bit_allocator(),
	.loc 8 751 28
	movq	%rbx, %rdx	 # _13,
	movq	%rax, %rcx	 # _15,
	call	_ZSt15__alloc_on_copyISaImEEvRT_RKS1_	 #
.L814:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:755: 	if (__x.size() > capacity())
	.loc 8 755 14
	movq	40(%rbp), %rax	 # __x, tmp108
	movq	%rax, %rcx	 # tmp108,
	call	_ZNKSt6vectorIbSaIbEE4sizeEv	 #
	movq	%rax, %rbx	 #, _16
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:755: 	if (__x.size() > capacity())
	.loc 8 755 27
	movq	32(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIbSaIbEE8capacityEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:755: 	if (__x.size() > capacity())
	.loc 8 755 17
	cmpq	%rax, %rbx	 # _17, _16
	seta	%al	 #, retval.56_44
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:755: 	if (__x.size() > capacity())
	.loc 8 755 2
	testb	%al, %al	 # retval.56_44
	je	.L816	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:757: 	    this->_M_deallocate();
	.loc 8 757 25
	movq	32(%rbp), %rax	 # this, _18
	movq	%rax, %rcx	 # _18,
	call	_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:758: 	    _M_initialize(__x.size());
	.loc 8 758 19
	movq	40(%rbp), %rax	 # __x, tmp109
	movq	%rax, %rcx	 # tmp109,
	call	_ZNKSt6vectorIbSaIbEE4sizeEv	 #
	movq	%rax, %rdx	 # _19,
	movq	32(%rbp), %rcx	 # this,
	call	_ZNSt6vectorIbSaIbEE13_M_initializeEy	 #
.L816:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:760: 	this->_M_impl._M_finish = _M_copy_aligned(__x.begin(), __x.end(),
	.loc 8 760 43
	leaq	-48(%rbp), %rax	 #, tmp110
	movq	32(%rbp), %rdx	 # this,
	movq	%rax, %rcx	 # tmp110,
	call	_ZNSt6vectorIbSaIbEE5beginEv	 #
	leaq	-32(%rbp), %rax	 #, tmp111
	movq	40(%rbp), %rdx	 # __x, tmp112
	movq	%rax, %rcx	 # tmp111,
	call	_ZNKSt6vectorIbSaIbEE3endEv	 #
	leaq	-16(%rbp), %rax	 #, tmp113
	movq	40(%rbp), %rdx	 # __x, tmp114
	movq	%rax, %rcx	 # tmp113,
	call	_ZNKSt6vectorIbSaIbEE5beginEv	 #
	leaq	-64(%rbp), %rcx	 #, tmp115
	movq	-16(%rbp), %rax	 # D.127835, tmp116
	movq	-8(%rbp), %rdx	 # D.127835,
	movq	%rax, -80(%rbp)	 # tmp116,
	movq	%rdx, -72(%rbp)	 #,
	movq	-32(%rbp), %rax	 # D.127834, tmp117
	movq	-24(%rbp), %rdx	 # D.127834,
	movq	%rax, -96(%rbp)	 # tmp117,
	movq	%rdx, -88(%rbp)	 #,
	movq	-48(%rbp), %rax	 # D.127833, tmp118
	movq	-40(%rbp), %rdx	 # D.127833,
	movq	%rax, -112(%rbp)	 # tmp118,
	movq	%rdx, -104(%rbp)	 #,
	leaq	-96(%rbp), %r8	 #, tmp119
	leaq	-80(%rbp), %rdx	 #, tmp120
	leaq	-112(%rbp), %rax	 #, tmp121
	movq	%rax, 32(%rsp)	 # tmp121,
	movq	%r8, %r9	 # tmp119,
	movq	%rdx, %r8	 # tmp120,
	movq	32(%rbp), %rdx	 # this,
	call	_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:760: 	this->_M_impl._M_finish = _M_copy_aligned(__x.begin(), __x.end(),
	.loc 8 760 2
	movq	32(%rbp), %rax	 # this, tmp122
	movq	-64(%rbp), %rdx	 # MEM <unsigned char[12]> [(struct _Bit_iterator *)&D.124803], tmp123
	movq	%rdx, 16(%rax)	 # tmp123, MEM <unsigned char[12]> [(struct _Bit_iterator *)this_25(D) + 16B]
	movl	-56(%rbp), %edx	 # MEM <unsigned char[12]> [(struct _Bit_iterator *)&D.124803], tmp124
	movl	%edx, 24(%rax)	 # tmp124, MEM <unsigned char[12]> [(struct _Bit_iterator *)this_25(D) + 16B]
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:762: 	return *this;
	.loc 8 762 10
	movq	32(%rbp), %rax	 # this, _20
.L813:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:763:       }
	.loc 8 763 7
	addq	$168, %rsp	 #,
	popq	%rbx	 #
.LCFI1308:
	popq	%rbp	 #
.LCFI1309:
	ret	
.LFE5813:
	.seh_endproc
	.section	.text$_ZN9__gnu_cxx14__alloc_traitsISaIiEiE27_S_propagate_on_copy_assignEv,"x"
	.linkonce discard
	.globl	_ZN9__gnu_cxx14__alloc_traitsISaIiEiE27_S_propagate_on_copy_assignEv
	.def	_ZN9__gnu_cxx14__alloc_traitsISaIiEiE27_S_propagate_on_copy_assignEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN9__gnu_cxx14__alloc_traitsISaIiEiE27_S_propagate_on_copy_assignEv
_ZN9__gnu_cxx14__alloc_traitsISaIiEiE27_S_propagate_on_copy_assignEv:
.LFB5816:
	.loc 13 103 27
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1310:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1311:
	.seh_endprologue
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\alloc_traits.h:104:     { return _Base_type::propagate_on_container_copy_assignment::value; }
	.loc 13 104 66
	movl	$0, %eax	 #, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\alloc_traits.h:104:     { return _Base_type::propagate_on_container_copy_assignment::value; }
	.loc 13 104 73
	popq	%rbp	 #
.LCFI1312:
	ret	
.LFE5816:
	.seh_endproc
	.section	.text$_ZN9__gnu_cxx14__alloc_traitsISaIiEiE15_S_always_equalEv,"x"
	.linkonce discard
	.globl	_ZN9__gnu_cxx14__alloc_traitsISaIiEiE15_S_always_equalEv
	.def	_ZN9__gnu_cxx14__alloc_traitsISaIiEiE15_S_always_equalEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN9__gnu_cxx14__alloc_traitsISaIiEiE15_S_always_equalEv
_ZN9__gnu_cxx14__alloc_traitsISaIiEiE15_S_always_equalEv:
.LFB5817:
	.loc 13 112 27
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1313:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1314:
	.seh_endprologue
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\alloc_traits.h:113:     { return _Base_type::is_always_equal::value; }
	.loc 13 113 43
	movl	$1, %eax	 #, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\alloc_traits.h:113:     { return _Base_type::is_always_equal::value; }
	.loc 13 113 50
	popq	%rbp	 #
.LCFI1315:
	ret	
.LFE5817:
	.seh_endproc
	.section	.text$_ZSteqRKSaIiES1_,"x"
	.linkonce discard
	.globl	_ZSteqRKSaIiES1_
	.def	_ZSteqRKSaIiES1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSteqRKSaIiES1_
_ZSteqRKSaIiES1_:
.LFB5818:
	.loc 12 216 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1316:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1317:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # D.124826, D.124826
	movq	%rdx, 24(%rbp)	 # D.124827, D.124827
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:217:       { return true; }
	.loc 12 217 16
	movl	$1, %eax	 #, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:217:       { return true; }
	.loc 12 217 22
	popq	%rbp	 #
.LCFI1318:
	ret	
.LFE5818:
	.seh_endproc
	.section	.text$_ZSt4copyIPiS0_ET0_T_S2_S1_,"x"
	.linkonce discard
	.globl	_ZSt4copyIPiS0_ET0_T_S2_S1_
	.def	_ZSt4copyIPiS0_ET0_T_S2_S1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt4copyIPiS0_ET0_T_S2_S1_
_ZSt4copyIPiS0_ET0_T_S2_S1_:
.LFB5819:
	.loc 3 611 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1319:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1320:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI1321:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI1322:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __first, __first
	movq	%rdx, 40(%rbp)	 # __last, __last
	movq	%r8, 48(%rbp)	 # __result, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:620: 	     (std::__miter_base(__first), std::__miter_base(__last), __result);
	.loc 3 620 7
	movq	40(%rbp), %rax	 # __last, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZSt12__miter_baseIPiET_S1_	 #
	movq	%rax, %rbx	 #, _1
	movq	32(%rbp), %rcx	 # __first,
	call	_ZSt12__miter_baseIPiET_S1_	 #
	movq	48(%rbp), %rdx	 # __result, tmp87
	movq	%rdx, %r8	 # tmp87,
	movq	%rbx, %rdx	 # _1,
	movq	%rax, %rcx	 # _2,
	call	_ZSt13__copy_move_aILb0EPiS0_ET1_T0_S2_S1_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:621:     }
	.loc 3 621 5
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI1323:
	popq	%rbp	 #
.LCFI1324:
	ret	
.LFE5819:
	.seh_endproc
	.section	.text$_ZNSt6vectorIiSaIiEEaSERKS1_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorIiSaIiEEaSERKS1_
	.def	_ZNSt6vectorIiSaIiEEaSERKS1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorIiSaIiEEaSERKS1_
_ZNSt6vectorIiSaIiEEaSERKS1_:
.LFB5815:
	.loc 14 198 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1325:
	pushq	%r12	 #
	.seh_pushreg	%r12
.LCFI1326:
	pushq	%rdi	 #
	.seh_pushreg	%rdi
.LCFI1327:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI1328:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1329:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
.LCFI1330:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI1331:
	.seh_endprologue
	movq	%rcx, 48(%rbp)	 # this, this
	movq	%rdx, 56(%rbp)	 # __x, __x
.LBB141:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:201:       if (&__x != this)
	.loc 14 201 7
	movq	56(%rbp), %rax	 # __x, tmp150
	cmpq	48(%rbp), %rax	 # this, tmp150
	je	.L826	 #,
.LBB142:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:205: 	  if (_Alloc_traits::_S_propagate_on_copy_assign())
	.loc 14 205 50
	call	_ZN9__gnu_cxx14__alloc_traitsISaIiEiE27_S_propagate_on_copy_assignEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:205: 	  if (_Alloc_traits::_S_propagate_on_copy_assign())
	.loc 14 205 4
	testb	%al, %al	 # retval.58_66
	je	.L827	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:207: 	      if (!_Alloc_traits::_S_always_equal()
	.loc 14 207 43
	call	_ZN9__gnu_cxx14__alloc_traitsISaIiEiE15_S_always_equalEv	 #
	xorl	$1, %eax	 #, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:208: 	          && _M_get_Tp_allocator() != __x._M_get_Tp_allocator())
	.loc 14 208 12
	testb	%al, %al	 # _2
	je	.L828	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:208: 	          && _M_get_Tp_allocator() != __x._M_get_Tp_allocator())
	.loc 14 208 63 discriminator 1
	movq	56(%rbp), %rax	 # __x, _3
	movq	%rax, %rcx	 # _3,
	call	_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv	 #
	movq	%rax, %rbx	 #, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:208: 	          && _M_get_Tp_allocator() != __x._M_get_Tp_allocator())
	.loc 14 208 34 discriminator 1
	movq	48(%rbp), %rax	 # this, _5
	movq	%rax, %rcx	 # _5,
	call	_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:208: 	          && _M_get_Tp_allocator() != __x._M_get_Tp_allocator())
	.loc 14 208 37 discriminator 1
	movq	%rbx, %rdx	 # _4,
	movq	%rax, %rcx	 # _6,
	call	_ZSteqRKSaIiES1_	 #
	xorl	$1, %eax	 #, _8
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:208: 	          && _M_get_Tp_allocator() != __x._M_get_Tp_allocator())
	.loc 14 208 12 discriminator 1
	testb	%al, %al	 # _8
	je	.L828	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:208: 	          && _M_get_Tp_allocator() != __x._M_get_Tp_allocator())
	.loc 14 208 12 is_stmt 0 discriminator 3
	movl	$1, %eax	 #, iftmp.60_55
	jmp	.L829	 #
.L828:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:208: 	          && _M_get_Tp_allocator() != __x._M_get_Tp_allocator())
	.loc 14 208 12 discriminator 4
	movl	$0, %eax	 #, iftmp.60_55
.L829:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:207: 	      if (!_Alloc_traits::_S_always_equal()
	.loc 14 207 8 is_stmt 1 discriminator 6
	testb	%al, %al	 # iftmp.60_55
	je	.L830	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:211: 		  this->clear();
	.loc 14 211 16
	movq	48(%rbp), %rcx	 # this,
	call	_ZNSt6vectorIiSaIiEE5clearEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:212: 		  _M_deallocate(this->_M_impl._M_start,
	.loc 14 212 18
	movq	48(%rbp), %rax	 # this, _9
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:213: 				this->_M_impl._M_end_of_storage
	.loc 14 213 19
	movq	48(%rbp), %rdx	 # this, tmp151
	movq	16(%rdx), %rcx	 # this_63(D)->D.106011._M_impl.D.105361._M_end_of_storage, _10
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:214: 				- this->_M_impl._M_start);
	.loc 14 214 21
	movq	48(%rbp), %rdx	 # this, tmp152
	movq	(%rdx), %r8	 # this_63(D)->D.106011._M_impl.D.105361._M_start, _11
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:214: 				- this->_M_impl._M_start);
	.loc 14 214 5
	subq	%r8, %rcx	 # _11, _10
	movq	%rcx, %rdx	 # _10, _12
	sarq	$2, %rdx	 #, tmp153
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:212: 		  _M_deallocate(this->_M_impl._M_start,
	.loc 14 212 18
	movq	%rdx, %rcx	 # _13, _14
	movq	48(%rbp), %rdx	 # this, tmp154
	movq	(%rdx), %rdx	 # this_63(D)->D.106011._M_impl.D.105361._M_start, _15
	movq	%rcx, %r8	 # _14,
	movq	%rax, %rcx	 # _9,
	call	_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPiy	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:215: 		  this->_M_impl._M_start = nullptr;
	.loc 14 215 28
	movq	48(%rbp), %rax	 # this, tmp155
	movq	$0, (%rax)	 #, this_63(D)->D.106011._M_impl.D.105361._M_start
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:216: 		  this->_M_impl._M_finish = nullptr;
	.loc 14 216 29
	movq	48(%rbp), %rax	 # this, tmp156
	movq	$0, 8(%rax)	 #, this_63(D)->D.106011._M_impl.D.105361._M_finish
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:217: 		  this->_M_impl._M_end_of_storage = nullptr;
	.loc 14 217 37
	movq	48(%rbp), %rax	 # this, tmp157
	movq	$0, 16(%rax)	 #, this_63(D)->D.106011._M_impl.D.105361._M_end_of_storage
.L830:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:220: 				   __x._M_get_Tp_allocator());
	.loc 14 220 31
	movq	56(%rbp), %rax	 # __x, _16
	movq	%rax, %rcx	 # _16,
	call	_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv	 #
	movq	%rax, %rbx	 #, _17
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:219: 	      std::__alloc_on_copy(_M_get_Tp_allocator(),
	.loc 14 219 48
	movq	48(%rbp), %rax	 # this, _18
	movq	%rax, %rcx	 # _18,
	call	_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:219: 	      std::__alloc_on_copy(_M_get_Tp_allocator(),
	.loc 14 219 28
	movq	%rbx, %rdx	 # _17,
	movq	%rax, %rcx	 # _19,
	call	_ZSt15__alloc_on_copyISaIiEEvRT_RKS1_	 #
.L827:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:223: 	  const size_type __xlen = __x.size();
	.loc 14 223 37
	movq	56(%rbp), %rax	 # __x, tmp158
	movq	%rax, %rcx	 # tmp158,
	call	_ZNKSt6vectorIiSaIiEE4sizeEv	 #
	movq	%rax, -8(%rbp)	 # tmp159, __xlen
.LBB143:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:224: 	  if (__xlen > capacity())
	.loc 14 224 25
	movq	48(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIiSaIiEE8capacityEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:224: 	  if (__xlen > capacity())
	.loc 14 224 15
	cmpq	%rax, -8(%rbp)	 # _20, __xlen
	seta	%al	 #, retval.61_85
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:224: 	  if (__xlen > capacity())
	.loc 14 224 4
	testb	%al, %al	 # retval.61_85
	je	.L831	 #,
.LBB144:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:226: 	      pointer __tmp = _M_allocate_and_copy(__xlen, __x.begin(),
	.loc 14 226 44
	movq	56(%rbp), %rax	 # __x, tmp160
	movq	%rax, %rcx	 # tmp160,
	call	_ZNKSt6vectorIiSaIiEE3endEv	 #
	movq	%rax, %rbx	 #, D.127866
	movq	56(%rbp), %rax	 # __x, tmp161
	movq	%rax, %rcx	 # tmp161,
	call	_ZNKSt6vectorIiSaIiEE5beginEv	 #
	movq	%rax, %rdx	 #, D.127867
	movq	-8(%rbp), %rax	 # __xlen, tmp162
	movq	%rbx, %r9	 # D.127866,
	movq	%rdx, %r8	 # D.127867,
	movq	%rax, %rdx	 # tmp162,
	movq	48(%rbp), %rcx	 # this,
	call	_ZNSt6vectorIiSaIiEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKiS1_EEEEPiyT_S9_	 #
	movq	%rax, -16(%rbp)	 # _103, __tmp
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:229: 			    _M_get_Tp_allocator());
	.loc 14 229 27
	movq	48(%rbp), %rax	 # this, _21
	movq	%rax, %rcx	 # _21,
	call	_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv	 #
	movq	%rax, %rcx	 #, _22
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:228: 	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	.loc 14 228 21
	movq	48(%rbp), %rax	 # this, tmp163
	movq	8(%rax), %rdx	 # this_63(D)->D.106011._M_impl.D.105361._M_finish, _23
	movq	48(%rbp), %rax	 # this, tmp164
	movq	(%rax), %rax	 # this_63(D)->D.106011._M_impl.D.105361._M_start, _24
	movq	%rcx, %r8	 # _22,
	movq	%rax, %rcx	 # _24,
	call	_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:230: 	      _M_deallocate(this->_M_impl._M_start,
	.loc 14 230 21
	movq	48(%rbp), %rax	 # this, _25
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:231: 			    this->_M_impl._M_end_of_storage
	.loc 14 231 22
	movq	48(%rbp), %rdx	 # this, tmp165
	movq	16(%rdx), %rcx	 # this_63(D)->D.106011._M_impl.D.105361._M_end_of_storage, _26
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:232: 			    - this->_M_impl._M_start);
	.loc 14 232 24
	movq	48(%rbp), %rdx	 # this, tmp166
	movq	(%rdx), %r8	 # this_63(D)->D.106011._M_impl.D.105361._M_start, _27
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:232: 			    - this->_M_impl._M_start);
	.loc 14 232 8
	subq	%r8, %rcx	 # _27, _26
	movq	%rcx, %rdx	 # _26, _28
	sarq	$2, %rdx	 #, tmp167
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:230: 	      _M_deallocate(this->_M_impl._M_start,
	.loc 14 230 21
	movq	%rdx, %rcx	 # _29, _30
	movq	48(%rbp), %rdx	 # this, tmp168
	movq	(%rdx), %rdx	 # this_63(D)->D.106011._M_impl.D.105361._M_start, _31
	movq	%rcx, %r8	 # _30,
	movq	%rax, %rcx	 # _25,
	call	_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPiy	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:233: 	      this->_M_impl._M_start = __tmp;
	.loc 14 233 31
	movq	48(%rbp), %rax	 # this, tmp169
	movq	-16(%rbp), %rdx	 # __tmp, tmp170
	movq	%rdx, (%rax)	 # tmp170, this_63(D)->D.106011._M_impl.D.105361._M_start
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:234: 	      this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __xlen;
	.loc 14 234 56
	movq	48(%rbp), %rax	 # this, tmp171
	movq	(%rax), %rdx	 # this_63(D)->D.106011._M_impl.D.105361._M_start, _32
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:234: 	      this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __xlen;
	.loc 14 234 65
	movq	-8(%rbp), %rax	 # __xlen, tmp172
	salq	$2, %rax	 #, _33
	addq	%rax, %rdx	 # _33, _34
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:234: 	      this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __xlen;
	.loc 14 234 40
	movq	48(%rbp), %rax	 # this, tmp173
	movq	%rdx, 16(%rax)	 # _34, this_63(D)->D.106011._M_impl.D.105361._M_end_of_storage
.LBE144:
	jmp	.L832	 #
.L831:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:236: 	  else if (size() >= __xlen)
	.loc 14 236 17
	movq	48(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIiSaIiEE4sizeEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:236: 	  else if (size() >= __xlen)
	.loc 14 236 20
	cmpq	%rax, -8(%rbp)	 # _35, __xlen
	setbe	%al	 #, retval.62_87
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:236: 	  else if (size() >= __xlen)
	.loc 14 236 9
	testb	%al, %al	 # retval.62_87
	je	.L833	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:239: 			    end(), _M_get_Tp_allocator());
	.loc 14 239 34
	movq	48(%rbp), %rax	 # this, _36
	movq	%rax, %rcx	 # _36,
	call	_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv	 #
	movq	%rax, %rsi	 #, _37
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:238: 	      std::_Destroy(std::copy(__x.begin(), __x.end(), begin()),
	.loc 14 238 21
	movq	48(%rbp), %rcx	 # this,
	call	_ZNSt6vectorIiSaIiEE3endEv	 #
	movq	%rax, %rbx	 #, D.127872
	movq	48(%rbp), %rcx	 # this,
	call	_ZNSt6vectorIiSaIiEE5beginEv	 #
	movq	%rax, %r12	 #, D.127873
	movq	56(%rbp), %rax	 # __x, tmp174
	movq	%rax, %rcx	 # tmp174,
	call	_ZNKSt6vectorIiSaIiEE3endEv	 #
	movq	%rax, %rdi	 #, D.127874
	movq	56(%rbp), %rax	 # __x, tmp175
	movq	%rax, %rcx	 # tmp175,
	call	_ZNKSt6vectorIiSaIiEE5beginEv	 #
	movq	%r12, %r8	 # D.127873,
	movq	%rdi, %rdx	 # D.127874,
	movq	%rax, %rcx	 # D.127875,
	call	_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEENS1_IPiS6_EEET0_T_SB_SA_	 #
	movq	%rsi, %r8	 # _37,
	movq	%rbx, %rdx	 # D.127872,
	movq	%rax, %rcx	 # D.127876,
	call	_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiEvT_S7_RSaIT0_E	 #
	jmp	.L832	 #
.L833:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:243: 	      std::copy(__x._M_impl._M_start, __x._M_impl._M_start + size(),
	.loc 14 243 17
	movq	48(%rbp), %rax	 # this, tmp176
	movq	(%rax), %rbx	 # this_63(D)->D.106011._M_impl.D.105361._M_start, _38
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:243: 	      std::copy(__x._M_impl._M_start, __x._M_impl._M_start + size(),
	.loc 14 243 52
	movq	56(%rbp), %rax	 # __x, tmp177
	movq	(%rax), %rsi	 # __x_62(D)->D.106011._M_impl.D.105361._M_start, _39
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:243: 	      std::copy(__x._M_impl._M_start, __x._M_impl._M_start + size(),
	.loc 14 243 67
	movq	48(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIiSaIiEE4sizeEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:243: 	      std::copy(__x._M_impl._M_start, __x._M_impl._M_start + size(),
	.loc 14 243 61
	salq	$2, %rax	 #, _41
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:243: 	      std::copy(__x._M_impl._M_start, __x._M_impl._M_start + size(),
	.loc 14 243 17
	leaq	(%rsi,%rax), %rdx	 #, _42
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:243: 	      std::copy(__x._M_impl._M_start, __x._M_impl._M_start + size(),
	.loc 14 243 30
	movq	56(%rbp), %rax	 # __x, tmp178
	movq	(%rax), %rax	 # __x_62(D)->D.106011._M_impl.D.105361._M_start, _43
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:243: 	      std::copy(__x._M_impl._M_start, __x._M_impl._M_start + size(),
	.loc 14 243 17
	movq	%rbx, %r8	 # _38,
	movq	%rax, %rcx	 # _43,
	call	_ZSt4copyIPiS0_ET0_T_S2_S1_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:248: 					  _M_get_Tp_allocator());
	.loc 14 248 27
	movq	48(%rbp), %rax	 # this, _44
	movq	%rax, %rcx	 # _44,
	call	_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv	 #
	movq	%rax, %rsi	 #, _45
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:245: 	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
	.loc 14 245 35
	movq	48(%rbp), %rax	 # this, tmp179
	movq	8(%rax), %rdi	 # this_63(D)->D.106011._M_impl.D.105361._M_finish, _46
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:246: 					  __x._M_impl._M_finish,
	.loc 14 246 20
	movq	56(%rbp), %rax	 # __x, tmp180
	movq	8(%rax), %rbx	 # __x_62(D)->D.106011._M_impl.D.105361._M_finish, _47
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:245: 	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
	.loc 14 245 48
	movq	56(%rbp), %rax	 # __x, tmp181
	movq	(%rax), %r12	 # __x_62(D)->D.106011._M_impl.D.105361._M_start, _48
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:245: 	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
	.loc 14 245 63
	movq	48(%rbp), %rcx	 # this,
	call	_ZNKSt6vectorIiSaIiEE4sizeEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:245: 	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
	.loc 14 245 57
	salq	$2, %rax	 #, _50
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:245: 	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
	.loc 14 245 35
	addq	%r12, %rax	 # _48, _51
	movq	%rsi, %r9	 # _45,
	movq	%rdi, %r8	 # _46,
	movq	%rbx, %rdx	 # _47,
	movq	%rax, %rcx	 # _51,
	call	_ZSt22__uninitialized_copy_aIPiS0_iET0_T_S2_S1_RSaIT1_E	 #
.L832:
.LBE143:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:250: 	  this->_M_impl._M_finish = this->_M_impl._M_start + __xlen;
	.loc 14 250 44
	movq	48(%rbp), %rax	 # this, tmp182
	movq	(%rax), %rdx	 # this_63(D)->D.106011._M_impl.D.105361._M_start, _52
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:250: 	  this->_M_impl._M_finish = this->_M_impl._M_start + __xlen;
	.loc 14 250 53
	movq	-8(%rbp), %rax	 # __xlen, tmp183
	salq	$2, %rax	 #, _53
	addq	%rax, %rdx	 # _53, _54
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:250: 	  this->_M_impl._M_finish = this->_M_impl._M_start + __xlen;
	.loc 14 250 28
	movq	48(%rbp), %rax	 # this, tmp184
	movq	%rdx, 8(%rax)	 # _54, this_63(D)->D.106011._M_impl.D.105361._M_finish
.L826:
.LBE142:
.LBE141:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:252:       return *this;
	.loc 14 252 15
	movq	48(%rbp), %rax	 # this, _111
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\vector.tcc:253:     }
	.loc 14 253 5
	addq	$48, %rsp	 #,
	popq	%rbx	 #
.LCFI1332:
	popq	%rsi	 #
.LCFI1333:
	popq	%rdi	 #
.LCFI1334:
	popq	%r12	 #
.LCFI1335:
	popq	%rbp	 #
.LCFI1336:
	ret	
.LFE5815:
	.seh_endproc
	.section	.text$_ZNKSt6vectorIN3DDT4NodeESaIS1_EE8max_sizeEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt6vectorIN3DDT4NodeESaIS1_EE8max_sizeEv
	.def	_ZNKSt6vectorIN3DDT4NodeESaIS1_EE8max_sizeEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt6vectorIN3DDT4NodeESaIS1_EE8max_sizeEv
_ZNKSt6vectorIN3DDT4NodeESaIS1_EE8max_sizeEv:
.LFB5820:
	.loc 11 923 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1337:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1338:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:924:       { return _S_max_size(_M_get_Tp_allocator()); }
	.loc 11 924 47
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNKSt12_Vector_baseIN3DDT4NodeESaIS1_EE19_M_get_Tp_allocatorEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:924:       { return _S_max_size(_M_get_Tp_allocator()); }
	.loc 11 924 27
	movq	%rax, %rcx	 # _2,
	call	_ZNSt6vectorIN3DDT4NodeESaIS1_EE11_S_max_sizeERKS2_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:924:       { return _S_max_size(_M_get_Tp_allocator()); }
	.loc 11 924 52
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1339:
	ret	
.LFE5820:
	.seh_endproc
	.section	.text$_ZSt32__make_move_if_noexcept_iteratorIN3DDT4NodeEPKS1_ET0_PT_,"x"
	.linkonce discard
	.globl	_ZSt32__make_move_if_noexcept_iteratorIN3DDT4NodeEPKS1_ET0_PT_
	.def	_ZSt32__make_move_if_noexcept_iteratorIN3DDT4NodeEPKS1_ET0_PT_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt32__make_move_if_noexcept_iteratorIN3DDT4NodeEPKS1_ET0_PT_
_ZSt32__make_move_if_noexcept_iteratorIN3DDT4NodeEPKS1_ET0_PT_:
.LFB5821:
	.loc 15 1669 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1340:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1341:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __i, __i
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1670:     { return _ReturnType(__i); }
	.loc 15 1670 29
	movq	16(%rbp), %rax	 # __i, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1670:     { return _ReturnType(__i); }
	.loc 15 1670 32
	popq	%rbp	 #
.LCFI1342:
	ret	
.LFE5821:
	.seh_endproc
	.section	.text$_ZSt22__uninitialized_copy_aIPKN3DDT4NodeEPS1_S1_ET0_T_S6_S5_RSaIT1_E,"x"
	.linkonce discard
	.globl	_ZSt22__uninitialized_copy_aIPKN3DDT4NodeEPS1_S1_ET0_T_S6_S5_RSaIT1_E
	.def	_ZSt22__uninitialized_copy_aIPKN3DDT4NodeEPS1_S1_ET0_T_S6_S5_RSaIT1_E;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt22__uninitialized_copy_aIPKN3DDT4NodeEPS1_S1_ET0_T_S6_S5_RSaIT1_E
_ZSt22__uninitialized_copy_aIPKN3DDT4NodeEPS1_S1_ET0_T_S6_S5_RSaIT1_E:
.LFB5822:
	.loc 19 331 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1343:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1344:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # __result, __result
	movq	%r9, 40(%rbp)	 # D.125002, D.125002
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:333:     { return std::uninitialized_copy(__first, __last, __result); }
	.loc 19 333 37
	movq	32(%rbp), %rdx	 # __result, tmp84
	movq	24(%rbp), %rax	 # __last, tmp85
	movq	%rdx, %r8	 # tmp84,
	movq	%rax, %rdx	 # tmp85,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZSt18uninitialized_copyIPKN3DDT4NodeEPS1_ET0_T_S6_S5_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:333:     { return std::uninitialized_copy(__first, __last, __result); }
	.loc 19 333 66
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1345:
	ret	
.LFE5822:
	.seh_endproc
	.section	.text$_ZSt10destroy_atIN3DDT4NodeEEvPT_,"x"
	.linkonce discard
	.globl	_ZSt10destroy_atIN3DDT4NodeEEvPT_
	.def	_ZSt10destroy_atIN3DDT4NodeEEvPT_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt10destroy_atIN3DDT4NodeEEvPT_
_ZSt10destroy_atIN3DDT4NodeEEvPT_:
.LFB5823:
	.loc 21 80 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1346:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1347:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __location, __location
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:88: 	__location->~_Tp();
	.loc 21 88 18
	movq	16(%rbp), %rcx	 # __location,
	call	_ZN3DDT4NodeD1Ev	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:89:     }
	.loc 21 89 5
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1348:
	ret	
.LFE5823:
	.seh_endproc
	.section	.text$_ZNK9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS2_SaIS2_EEE4baseEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNK9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS2_SaIS2_EEE4baseEv
	.def	_ZNK9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS2_SaIS2_EEE4baseEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNK9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS2_SaIS2_EEE4baseEv
_ZNK9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS2_SaIS2_EEE4baseEv:
.LFB5826:
	.loc 15 1088 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1349:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1350:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1089:       { return _M_current; }
	.loc 15 1089 16
	movq	16(%rbp), %rax	 # this, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1089:       { return _M_current; }
	.loc 15 1089 28
	popq	%rbp	 #
.LCFI1351:
	ret	
.LFE5826:
	.seh_endproc
	.section	.text$_ZN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS2_SaIS2_EEEppEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS2_SaIS2_EEEppEv
	.def	_ZN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS2_SaIS2_EEEppEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS2_SaIS2_EEEppEv
_ZN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS2_SaIS2_EEEppEv:
.LFB5827:
	.loc 15 1035 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1352:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1353:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1037: 	++_M_current;
	.loc 15 1037 4
	movq	16(%rbp), %rax	 # this, tmp86
	movq	(%rax), %rax	 # this_4(D)->_M_current, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1037: 	++_M_current;
	.loc 15 1037 2
	leaq	72(%rax), %rdx	 #, _2
	movq	16(%rbp), %rax	 # this, tmp87
	movq	%rdx, (%rax)	 # _2, this_4(D)->_M_current
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1038: 	return *this;
	.loc 15 1038 10
	movq	16(%rbp), %rax	 # this, _6
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1039:       }
	.loc 15 1039 7
	popq	%rbp	 #
.LCFI1354:
	ret	
.LFE5827:
	.seh_endproc
	.section	.text$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_,"x"
	.linkonce discard
	.globl	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_
	.def	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_
_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_:
.LFB5825:
	.loc 19 85 9
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1355:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1356:
	subq	$56, %rsp	 #,
	.seh_stackalloc	56
.LCFI1357:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI1358:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __first, __first
	movq	%rdx, 40(%rbp)	 # __last, __last
	movq	%r8, 48(%rbp)	 # __result, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:88: 	  _ForwardIterator __cur = __result;
	.loc 19 88 21
	movq	48(%rbp), %rax	 # __result, tmp90
	movq	%rax, -8(%rbp)	 # tmp90, __cur
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:91: 	      for (; __first != __last; ++__first, (void)++__cur)
	.loc 19 91 8
	jmp	.L847	 #
.L848:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:92: 		std::_Construct(std::__addressof(*__cur), *__first);
	.loc 19 92 45
	leaq	32(%rbp), %rcx	 #, tmp99
	call	_ZNK9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS2_SaIS2_EEEdeEv	 #
	movq	%rax, %rbx	 #, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:92: 		std::_Construct(std::__addressof(*__cur), *__first);
	.loc 19 92 18
	movq	-8(%rbp), %rax	 # __cur, tmp91
	movq	%rax, %rcx	 # tmp91,
	call	_ZSt11__addressofIN3DDT4NodeEEPT_RS2_	 #
	movq	%rbx, %rdx	 # _1,
	movq	%rax, %rcx	 # _2,
.LEHB44:
	call	_ZSt10_ConstructIN3DDT4NodeEJRKS1_EEvPT_DpOT0_	 #
.LEHE44:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:91: 	      for (; __first != __last; ++__first, (void)++__cur)
	.loc 19 91 34
	leaq	32(%rbp), %rcx	 #, tmp100
	call	_ZN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS2_SaIS2_EEEppEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:91: 	      for (; __first != __last; ++__first, (void)++__cur)
	.loc 19 91 45
	addq	$72, -8(%rbp)	 #, __cur
.L847:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:91: 	      for (; __first != __last; ++__first, (void)++__cur)
	.loc 19 91 23 discriminator 1
	leaq	40(%rbp), %rax	 #, tmp92
	movq	%rax, %rdx	 # tmp92,
	leaq	32(%rbp), %rcx	 #, tmp101
	call	_ZN9__gnu_cxxeqIPKN3DDT4NodeES4_St6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T1_EERKNS8_IT0_SA_EE	 #
	xorl	$1, %eax	 #, retval.86_12
	testb	%al, %al	 # retval.86_12
	jne	.L848	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:93: 	      return __cur;
	.loc 19 93 15
	movq	-8(%rbp), %rax	 # __cur, _13
	jmp	.L854	 #
.L852:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:95: 	  __catch(...)
	.loc 19 95 4
	movq	%rax, %rcx	 # _4,
	call	__cxa_begin_catch	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:97: 	      std::_Destroy(__result, __cur);
	.loc 19 97 21
	movq	-8(%rbp), %rdx	 # __cur, tmp95
	movq	48(%rbp), %rax	 # __result, tmp96
	movq	%rax, %rcx	 # tmp96,
.LEHB45:
	call	_ZSt8_DestroyIPN3DDT4NodeEEvT_S3_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:98: 	      __throw_exception_again;
	.loc 19 98 8
	call	__cxa_rethrow	 #
.LEHE45:
.L853:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:95: 	  __catch(...)
	.loc 19 95 4
	movq	%rax, %rbx	 #, tmp97
	call	__cxa_end_catch	 #
	movq	%rbx, %rax	 # tmp97, D.129263
	movq	%rax, %rcx	 # D.129263,
.LEHB46:
	call	_Unwind_Resume	 #
.LEHE46:
.L854:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:100: 	}
	.loc 19 100 2
	addq	$56, %rsp	 #,
	popq	%rbx	 #
.LCFI1359:
	popq	%rbp	 #
.LCFI1360:
	ret	
.LFE5825:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
	.align 4
.LLSDA5825:
	.byte	0xff
	.byte	0x9b
	.uleb128 .LLSDATT5825-.LLSDATTD5825
.LLSDATTD5825:
	.byte	0x1
	.uleb128 .LLSDACSE5825-.LLSDACSB5825
.LLSDACSB5825:
	.uleb128 .LEHB44-.LFB5825
	.uleb128 .LEHE44-.LEHB44
	.uleb128 .L852-.LFB5825
	.uleb128 0x1
	.uleb128 .LEHB45-.LFB5825
	.uleb128 .LEHE45-.LEHB45
	.uleb128 .L853-.LFB5825
	.uleb128 0
	.uleb128 .LEHB46-.LFB5825
	.uleb128 .LEHE46-.LEHB46
	.uleb128 0
	.uleb128 0
.LLSDACSE5825:
	.byte	0x1
	.byte	0
	.align 4
	.long	0

.LLSDATT5825:
	.section	.text$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZSt14__copy_move_a2ILb0EPKN3DDT4NodeEPS1_ET1_T0_S6_S5_,"x"
	.linkonce discard
	.globl	_ZSt14__copy_move_a2ILb0EPKN3DDT4NodeEPS1_ET1_T0_S6_S5_
	.def	_ZSt14__copy_move_a2ILb0EPKN3DDT4NodeEPS1_ET1_T0_S6_S5_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt14__copy_move_a2ILb0EPKN3DDT4NodeEPS1_ET1_T0_S6_S5_
_ZSt14__copy_move_a2ILb0EPKN3DDT4NodeEPS1_ET1_T0_S6_S5_:
.LFB5828:
	.loc 3 486 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1361:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1362:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # __result, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:490:       if (std::is_constant_evaluated())
	.loc 3 490 37
	call	_ZSt21is_constant_evaluatedv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:490:       if (std::is_constant_evaluated())
	.loc 3 490 7
	testb	%al, %al	 # retval.87_5
	je	.L856	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:492: 	  __copy_m(__first, __last, __result);
	.loc 3 492 12
	movq	32(%rbp), %rdx	 # __result, tmp85
	movq	24(%rbp), %rax	 # __last, tmp86
	movq	%rdx, %r8	 # tmp85,
	movq	%rax, %rdx	 # tmp86,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKN3DDT4NodeEPS4_EET0_T_S9_S8_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:492: 	  __copy_m(__first, __last, __result);
	.loc 3 492 38
	jmp	.L857	 #
.L856:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:495: 			      _Category>::__copy_m(__first, __last, __result);
	.loc 3 495 30
	movq	32(%rbp), %rdx	 # __result, tmp87
	movq	24(%rbp), %rax	 # __last, tmp88
	movq	%rdx, %r8	 # tmp87,
	movq	%rax, %rdx	 # tmp88,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKN3DDT4NodeEPS4_EET0_T_S9_S8_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:495: 			      _Category>::__copy_m(__first, __last, __result);
	.loc 3 495 56
	nop	
.L857:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:496:     }
	.loc 3 496 5
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1363:
	ret	
.LFE5828:
	.seh_endproc
	.section	.text$_ZNK9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEplEx,"x"
	.linkonce discard
	.align 2
	.globl	_ZNK9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEplEx
	.def	_ZNK9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEplEx;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNK9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEplEx
_ZNK9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEplEx:
.LFB5829:
	.loc 15 1073 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1364:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1365:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __n, __n
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1074:       { return __normal_iterator(_M_current + __n); }
	.loc 15 1074 34
	movq	16(%rbp), %rax	 # this, tmp88
	movq	(%rax), %rcx	 # this_6(D)->_M_current, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1074:       { return __normal_iterator(_M_current + __n); }
	.loc 15 1074 47
	movq	24(%rbp), %rdx	 # __n, __n.88_2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1074:       { return __normal_iterator(_M_current + __n); }
	.loc 15 1074 45
	movq	%rdx, %rax	 # __n.88_2, tmp89
	salq	$3, %rax	 #, tmp89
	addq	%rdx, %rax	 # __n.88_2, tmp89
	salq	$3, %rax	 #, tmp90
	addq	%rcx, %rax	 # _1, _4
	movq	%rax, -8(%rbp)	 # _4, D.125075
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1074:       { return __normal_iterator(_M_current + __n); }
	.loc 15 1074 16
	leaq	-8(%rbp), %rdx	 #, tmp91
	leaq	-16(%rbp), %rax	 #, tmp92
	movq	%rax, %rcx	 # tmp92,
	call	_ZN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEC1ERKS3_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1074:       { return __normal_iterator(_M_current + __n); }
	.loc 15 1074 50
	movq	-16(%rbp), %rax	 # D.125076, D.128238
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1074:       { return __normal_iterator(_M_current + __n); }
	.loc 15 1074 53
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI1366:
	ret	
.LFE5829:
	.seh_endproc
	.section	.text$_ZN7OptimapIhiEaSERKS0_,"x"
	.linkonce discard
	.align 2
	.globl	_ZN7OptimapIhiEaSERKS0_
	.def	_ZN7OptimapIhiEaSERKS0_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN7OptimapIhiEaSERKS0_
_ZN7OptimapIhiEaSERKS0_:
.LFB5832:
	.loc 9 7 8
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1367:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1368:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # D.120432, D.120432
 # optimap.hpp:7: struct Optimap {
	.loc 9 7 8
	movq	24(%rbp), %rdx	 # D.120432, _1
	movq	16(%rbp), %rax	 # this, _2
	movq	%rax, %rcx	 # _2,
	call	_ZNSt6vectorIbSaIbEEaSERKS1_	 #
	movq	24(%rbp), %rax	 # D.120432, tmp88
	leaq	40(%rax), %rdx	 #, _3
	movq	16(%rbp), %rax	 # this, tmp89
	addq	$40, %rax	 #, _4
	movq	%rax, %rcx	 # _4,
	call	_ZNSt6vectorIiSaIiEEaSERKS1_	 #
	movq	16(%rbp), %rax	 # this, _10
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1369:
	ret	
.LFE5832:
	.seh_endproc
	.section	.text$_ZN3DDT4NodeaSERKS0_,"x"
	.linkonce discard
	.align 2
	.globl	_ZN3DDT4NodeaSERKS0_
	.def	_ZN3DDT4NodeaSERKS0_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN3DDT4NodeaSERKS0_
_ZN3DDT4NodeaSERKS0_:
.LFB5831:
	.loc 10 50 9
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1370:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1371:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # D.120435, D.120435
 # main.cpp:50: 	struct Node {
	.loc 10 50 9
	movq	24(%rbp), %rax	 # D.120435, tmp87
	movl	(%rax), %edx	 # _5(D)->action, _1
	movq	16(%rbp), %rax	 # this, tmp88
	movl	%edx, (%rax)	 # _1, this_6(D)->action
	movq	24(%rbp), %rax	 # D.120435, tmp89
	leaq	8(%rax), %rdx	 #, _2
	movq	16(%rbp), %rax	 # this, tmp90
	addq	$8, %rax	 #, _3
	movq	%rax, %rcx	 # _3,
	call	_ZN7OptimapIhiEaSERKS0_	 #
	movq	16(%rbp), %rax	 # this, _9
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1372:
	ret	
.LFE5831:
	.seh_endproc
	.section	.text$_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPN3DDT4NodeES5_EET0_T_S7_S6_,"x"
	.linkonce discard
	.globl	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPN3DDT4NodeES5_EET0_T_S7_S6_
	.def	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPN3DDT4NodeES5_EET0_T_S7_S6_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPN3DDT4NodeES5_EET0_T_S7_S6_
_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPN3DDT4NodeES5_EET0_T_S7_S6_:
.LFB5830:
	.loc 3 380 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1373:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1374:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # __result, __result
.LBB145:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:383: 	  for(_Distance __n = __last - __first; __n > 0; --__n)
	.loc 3 383 31
	movq	24(%rbp), %rax	 # __last, tmp85
	subq	16(%rbp), %rax	 # __first, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:383: 	  for(_Distance __n = __last - __first; __n > 0; --__n)
	.loc 3 383 18
	sarq	$3, %rax	 #, _1
	movq	%rax, %rdx	 # _1, tmp86
	movabsq	$-8198552921648689607, %rax	 #, tmp88
	imulq	%rdx, %rax	 # tmp86, tmp87
	movq	%rax, -8(%rbp)	 # tmp87, __n
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:383: 	  for(_Distance __n = __last - __first; __n > 0; --__n)
	.loc 3 383 4
	jmp	.L865	 #
.L866:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:385: 	      *__result = *__first;
	.loc 3 385 18 discriminator 3
	movq	32(%rbp), %rax	 # __result, tmp89
	movq	16(%rbp), %rdx	 # __first,
	movq	%rax, %rcx	 # tmp89,
	call	_ZN3DDT4NodeaSERKS0_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:386: 	      ++__first;
	.loc 3 386 8 discriminator 3
	addq	$72, 16(%rbp)	 #, __first
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:387: 	      ++__result;
	.loc 3 387 8 discriminator 3
	addq	$72, 32(%rbp)	 #, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:383: 	  for(_Distance __n = __last - __first; __n > 0; --__n)
	.loc 3 383 4 discriminator 3
	subq	$1, -8(%rbp)	 #, __n
.L865:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:383: 	  for(_Distance __n = __last - __first; __n > 0; --__n)
	.loc 3 383 46 discriminator 1
	cmpq	$0, -8(%rbp)	 #, __n
	jg	.L866	 #,
.LBE145:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:389: 	  return __result;
	.loc 3 389 11
	movq	32(%rbp), %rax	 # __result, _11
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:390: 	}
	.loc 3 390 2
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI1375:
	ret	
.LFE5830:
	.seh_endproc
	.section	.text$_ZN3DDT4NodeC1ERKS0_,"x"
	.linkonce discard
	.align 2
	.globl	_ZN3DDT4NodeC1ERKS0_
	.def	_ZN3DDT4NodeC1ERKS0_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN3DDT4NodeC1ERKS0_
_ZN3DDT4NodeC1ERKS0_:
.LFB5836:
	.loc 10 50 9
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1376:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1377:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # D.106484, D.106484
.LBB146:
 # main.cpp:50: 	struct Node {
	.loc 10 50 9
	movq	24(%rbp), %rax	 # D.106484, tmp86
	movl	(%rax), %edx	 # _8(D)->action, _1
	movq	16(%rbp), %rax	 # this, tmp87
	movl	%edx, (%rax)	 # _1, this_6(D)->action
	movq	16(%rbp), %rax	 # this, tmp88
	addq	$8, %rax	 #, _2
	movq	24(%rbp), %rdx	 # D.106484, tmp89
	addq	$8, %rdx	 #, _3
	movq	%rax, %rcx	 # _2,
	call	_ZN7OptimapIhiEC1ERKS0_	 #
.LBE146:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1378:
	ret	
.LFE5836:
	.seh_endproc
	.section	.text$_ZSt10_ConstructIN3DDT4NodeEJRS1_EEvPT_DpOT0_,"x"
	.linkonce discard
	.globl	_ZSt10_ConstructIN3DDT4NodeEJRS1_EEvPT_DpOT0_
	.def	_ZSt10_ConstructIN3DDT4NodeEJRS1_EEvPT_DpOT0_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt10_ConstructIN3DDT4NodeEJRS1_EEvPT_DpOT0_
_ZSt10_ConstructIN3DDT4NodeEJRS1_EEvPT_DpOT0_:
.LFB5833:
	.loc 21 108 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1379:
	pushq	%rdi	 #
	.seh_pushreg	%rdi
.LCFI1380:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI1381:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1382:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI1383:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI1384:
	.seh_endprologue
	movq	%rcx, 48(%rbp)	 # __p, __p
	movq	%rdx, 56(%rbp)	 # __args#0, __args#0
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:109:     { ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...); }
	.loc 21 109 61
	movq	56(%rbp), %rax	 # __args#0, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZSt7forwardIRN3DDT4NodeEEOT_RNSt16remove_referenceIS3_E4typeE	 #
	movq	%rax, %rdi	 #, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:109:     { ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...); }
	.loc 21 109 13
	movq	48(%rbp), %rbx	 # __p, _6
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:109:     { ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...); }
	.loc 21 109 7
	movq	%rbx, %rdx	 # _6,
	movl	$72, %ecx	 #,
	call	_ZnwyPv	 #
	movq	%rax, %rsi	 #, _8
	movq	%rdi, %rdx	 # _4,
	movq	%rsi, %rcx	 # _8,
.LEHB47:
	call	_ZN3DDT4NodeC1ERKS0_	 #
.LEHE47:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:109:     { ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...); }
	.loc 21 109 75
	jmp	.L872	 #
.L871:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:109:     { ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...); }
	.loc 21 109 7
	movq	%rax, %rdi	 #, tmp87
	movq	%rbx, %rdx	 # _6,
	movq	%rsi, %rcx	 # _8,
	call	_ZdlPvS_	 #
	movq	%rdi, %rax	 # tmp87, D.129264
	movq	%rax, %rcx	 # D.129264,
.LEHB48:
	call	_Unwind_Resume	 #
	nop	
.LEHE48:
.L872:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:109:     { ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...); }
	.loc 21 109 75
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI1385:
	popq	%rsi	 #
.LCFI1386:
	popq	%rdi	 #
.LCFI1387:
	popq	%rbp	 #
.LCFI1388:
	ret	
.LFE5833:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA5833:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE5833-.LLSDACSB5833
.LLSDACSB5833:
	.uleb128 .LEHB47-.LFB5833
	.uleb128 .LEHE47-.LEHB47
	.uleb128 .L871-.LFB5833
	.uleb128 0
	.uleb128 .LEHB48-.LFB5833
	.uleb128 .LEHE48-.LEHB48
	.uleb128 0
	.uleb128 0
.LLSDACSE5833:
	.section	.text$_ZSt10_ConstructIN3DDT4NodeEJRS1_EEvPT_DpOT0_,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZN9__gnu_cxx13new_allocatorI5BlorbE10deallocateEPS1_y,"x"
	.linkonce discard
	.align 2
	.globl	_ZN9__gnu_cxx13new_allocatorI5BlorbE10deallocateEPS1_y
	.def	_ZN9__gnu_cxx13new_allocatorI5BlorbE10deallocateEPS1_y;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN9__gnu_cxx13new_allocatorI5BlorbE10deallocateEPS1_y
_ZN9__gnu_cxx13new_allocatorI5BlorbE10deallocateEPS1_y:
.LFB5837:
	.loc 22 132 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1389:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1390:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __p, __p
	movq	%r8, 32(%rbp)	 # __t, __t
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:145: 	::operator delete(__p
	.loc 22 145 19
	movq	32(%rbp), %rdx	 # __t, tmp83
	movq	%rdx, %rax	 # tmp83, tmp84
	addq	%rax, %rax	 # tmp84
	addq	%rdx, %rax	 # tmp83, tmp84
	salq	$4, %rax	 #, tmp85
	movq	%rax, %rdx	 # tmp84, _2
	movq	24(%rbp), %rax	 # __p, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZdlPvy	 #
	nop	
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:150:       }
	.loc 22 150 7
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1391:
	ret	
.LFE5837:
	.seh_endproc
	.section	.text$_ZNKSt6vectorI5BlorbSaIS0_EE8max_sizeEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt6vectorI5BlorbSaIS0_EE8max_sizeEv
	.def	_ZNKSt6vectorI5BlorbSaIS0_EE8max_sizeEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt6vectorI5BlorbSaIS0_EE8max_sizeEv
_ZNKSt6vectorI5BlorbSaIS0_EE8max_sizeEv:
.LFB5838:
	.loc 11 923 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1392:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1393:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:924:       { return _S_max_size(_M_get_Tp_allocator()); }
	.loc 11 924 47
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNKSt12_Vector_baseI5BlorbSaIS0_EE19_M_get_Tp_allocatorEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:924:       { return _S_max_size(_M_get_Tp_allocator()); }
	.loc 11 924 27
	movq	%rax, %rcx	 # _2,
	call	_ZNSt6vectorI5BlorbSaIS0_EE11_S_max_sizeERKS1_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:924:       { return _S_max_size(_M_get_Tp_allocator()); }
	.loc 11 924 52
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1394:
	ret	
.LFE5838:
	.seh_endproc
	.section	.text$_ZNSt16allocator_traitsISaI5BlorbEE8allocateERS1_y,"x"
	.linkonce discard
	.globl	_ZNSt16allocator_traitsISaI5BlorbEE8allocateERS1_y
	.def	_ZNSt16allocator_traitsISaI5BlorbEE8allocateERS1_y;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt16allocator_traitsISaI5BlorbEE8allocateERS1_y
_ZNSt16allocator_traitsISaI5BlorbEE8allocateERS1_y:
.LFB5839:
	.loc 16 459 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1395:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1396:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __a, __a
	movq	%rdx, 24(%rbp)	 # __n, __n
	movq	16(%rbp), %rax	 # __a, tmp86
	movq	%rax, -8(%rbp)	 # tmp86, this
	movq	24(%rbp), %rax	 # __n, tmp87
	movq	%rax, -16(%rbp)	 # tmp87, __n
.LBB147:
.LBB148:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:194: 	if (std::is_constant_evaluated())
	.loc 12 194 32
	call	_ZSt21is_constant_evaluatedv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:194: 	if (std::is_constant_evaluated())
	.loc 12 194 2
	testb	%al, %al	 # retval.97_8
	je	.L878	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:195: 	  return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	.loc 12 195 43
	movq	-16(%rbp), %rdx	 # __n, tmp88
	movq	%rdx, %rax	 # tmp88, tmp89
	addq	%rax, %rax	 # tmp89
	addq	%rdx, %rax	 # tmp88, tmp89
	salq	$4, %rax	 #, tmp90
	movq	%rax, %rcx	 # _9,
	call	_Znwy	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:195: 	  return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	.loc 12 195 62
	jmp	.L879	 #
.L878:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:197: 	return __allocator_base<_Tp>::allocate(__n, 0);
	.loc 12 197 40
	movq	-16(%rbp), %rdx	 # __n, tmp92
	movq	-8(%rbp), %rax	 # this, tmp93
	movl	$0, %r8d	 #,
	movq	%rax, %rcx	 # tmp93,
	call	_ZN9__gnu_cxx13new_allocatorI5BlorbE8allocateEyPKv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:197: 	return __allocator_base<_Tp>::allocate(__n, 0);
	.loc 12 197 47
	nop	
.L879:
.LBE148:
.LBE147:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\alloc_traits.h:460:       { return __a.allocate(__n); }
	.loc 16 460 35
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI1397:
	ret	
.LFE5839:
	.seh_endproc
	.section	.text$_ZSt32__make_move_if_noexcept_iteratorI5BlorbPKS0_ET0_PT_,"x"
	.linkonce discard
	.globl	_ZSt32__make_move_if_noexcept_iteratorI5BlorbPKS0_ET0_PT_
	.def	_ZSt32__make_move_if_noexcept_iteratorI5BlorbPKS0_ET0_PT_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt32__make_move_if_noexcept_iteratorI5BlorbPKS0_ET0_PT_
_ZSt32__make_move_if_noexcept_iteratorI5BlorbPKS0_ET0_PT_:
.LFB5840:
	.loc 15 1669 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1398:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1399:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __i, __i
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1670:     { return _ReturnType(__i); }
	.loc 15 1670 29
	movq	16(%rbp), %rax	 # __i, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1670:     { return _ReturnType(__i); }
	.loc 15 1670 32
	popq	%rbp	 #
.LCFI1400:
	ret	
.LFE5840:
	.seh_endproc
	.section	.text$_ZSt22__uninitialized_copy_aIPK5BlorbPS0_S0_ET0_T_S5_S4_RSaIT1_E,"x"
	.linkonce discard
	.globl	_ZSt22__uninitialized_copy_aIPK5BlorbPS0_S0_ET0_T_S5_S4_RSaIT1_E
	.def	_ZSt22__uninitialized_copy_aIPK5BlorbPS0_S0_ET0_T_S5_S4_RSaIT1_E;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt22__uninitialized_copy_aIPK5BlorbPS0_S0_ET0_T_S5_S4_RSaIT1_E
_ZSt22__uninitialized_copy_aIPK5BlorbPS0_S0_ET0_T_S5_S4_RSaIT1_E:
.LFB5841:
	.loc 19 331 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1401:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1402:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # __result, __result
	movq	%r9, 40(%rbp)	 # D.125130, D.125130
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:333:     { return std::uninitialized_copy(__first, __last, __result); }
	.loc 19 333 37
	movq	32(%rbp), %rdx	 # __result, tmp84
	movq	24(%rbp), %rax	 # __last, tmp85
	movq	%rdx, %r8	 # tmp84,
	movq	%rax, %rdx	 # tmp85,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZSt18uninitialized_copyIPK5BlorbPS0_ET0_T_S5_S4_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:333:     { return std::uninitialized_copy(__first, __last, __result); }
	.loc 19 333 66
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1403:
	ret	
.LFE5841:
	.seh_endproc
	.section	.text$_ZSt8_DestroyIP5BlorbEvT_S2_,"x"
	.linkonce discard
	.globl	_ZSt8_DestroyIP5BlorbEvT_S2_
	.def	_ZSt8_DestroyIP5BlorbEvT_S2_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt8_DestroyIP5BlorbEvT_S2_
_ZSt8_DestroyIP5BlorbEvT_S2_:
.LFB5842:
	.loc 21 171 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1404:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1405:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:181:       if (std::is_constant_evaluated())
	.loc 21 181 37
	call	_ZSt21is_constant_evaluatedv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:181:       if (std::is_constant_evaluated())
	.loc 21 181 7
	testb	%al, %al	 # retval.99_4
	je	.L886	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:182: 	return _Destroy_aux<false>::__destroy(__first, __last);
	.loc 21 182 39
	movq	24(%rbp), %rax	 # __last, tmp83
	movq	%rax, %rdx	 # tmp83,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZNSt12_Destroy_auxILb0EE9__destroyIP5BlorbEEvT_S4_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:182: 	return _Destroy_aux<false>::__destroy(__first, __last);
	.loc 21 182 55
	jmp	.L885	 #
.L886:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:185: 	__destroy(__first, __last);
	.loc 21 185 11
	movq	24(%rbp), %rax	 # __last, tmp84
	movq	%rax, %rdx	 # tmp84,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZNSt12_Destroy_auxILb0EE9__destroyIP5BlorbEEvT_S4_	 #
	nop	
.L885:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:186:     }
	.loc 21 186 5
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1406:
	ret	
.LFE5842:
	.seh_endproc
	.section	.text$_ZSt14__copy_move_a2ILb1EP5BlorbS1_ET1_T0_S3_S2_,"x"
	.linkonce discard
	.globl	_ZSt14__copy_move_a2ILb1EP5BlorbS1_ET1_T0_S3_S2_
	.def	_ZSt14__copy_move_a2ILb1EP5BlorbS1_ET1_T0_S3_S2_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt14__copy_move_a2ILb1EP5BlorbS1_ET1_T0_S3_S2_
_ZSt14__copy_move_a2ILb1EP5BlorbS1_ET1_T0_S3_S2_:
.LFB5843:
	.loc 3 486 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1407:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1408:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # __result, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:490:       if (std::is_constant_evaluated())
	.loc 3 490 37
	call	_ZSt21is_constant_evaluatedv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:490:       if (std::is_constant_evaluated())
	.loc 3 490 7
	testb	%al, %al	 # retval.121_5
	je	.L889	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:492: 	  __copy_m(__first, __last, __result);
	.loc 3 492 12
	movq	32(%rbp), %rdx	 # __result, tmp85
	movq	24(%rbp), %rax	 # __last, tmp86
	movq	%rdx, %r8	 # tmp85,
	movq	%rax, %rdx	 # tmp86,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIP5BlorbS4_EET0_T_S6_S5_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:492: 	  __copy_m(__first, __last, __result);
	.loc 3 492 38
	jmp	.L890	 #
.L889:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:495: 			      _Category>::__copy_m(__first, __last, __result);
	.loc 3 495 30
	movq	32(%rbp), %rdx	 # __result, tmp87
	movq	24(%rbp), %rax	 # __last, tmp88
	movq	%rdx, %r8	 # tmp87,
	movq	%rax, %rdx	 # tmp88,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIP5BlorbS4_EET0_T_S6_S5_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:495: 			      _Category>::__copy_m(__first, __last, __result);
	.loc 3 495 56
	nop	
.L890:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:496:     }
	.loc 3 496 5
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1409:
	ret	
.LFE5843:
	.seh_endproc
	.section	.text$_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmy,"x"
	.linkonce discard
	.align 2
	.globl	_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmy
	.def	_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmy;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmy
_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmy:
.LFB5879:
	.loc 22 132 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1410:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1411:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __p, __p
	movq	%r8, 32(%rbp)	 # __t, __t
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:145: 	::operator delete(__p
	.loc 22 145 19
	movq	32(%rbp), %rax	 # __t, tmp83
	leaq	0(,%rax,4), %rdx	 #, _2
	movq	24(%rbp), %rax	 # __p, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZdlPvy	 #
	nop	
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:150:       }
	.loc 22 150 7
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1412:
	ret	
.LFE5879:
	.seh_endproc
	.section	.text$_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPiy,"x"
	.linkonce discard
	.align 2
	.globl	_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPiy
	.def	_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPiy;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPiy
_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPiy:
.LFB5880:
	.loc 22 132 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1413:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1414:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __p, __p
	movq	%r8, 32(%rbp)	 # __t, __t
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:145: 	::operator delete(__p
	.loc 22 145 19
	movq	32(%rbp), %rax	 # __t, tmp83
	leaq	0(,%rax,4), %rdx	 #, _2
	movq	24(%rbp), %rax	 # __p, tmp84
	movq	%rax, %rcx	 # tmp84,
	call	_ZdlPvy	 #
	nop	
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:150:       }
	.loc 22 150 7
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1415:
	ret	
.LFE5880:
	.seh_endproc
	.section	.text$_ZSt10destroy_atIiEvPT_,"x"
	.linkonce discard
	.globl	_ZSt10destroy_atIiEvPT_
	.def	_ZSt10destroy_atIiEvPT_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt10destroy_atIiEvPT_
_ZSt10destroy_atIiEvPT_:
.LFB5881:
	.loc 21 80 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1416:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1417:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __location, __location
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:89:     }
	.loc 21 89 5
	nop	
	popq	%rbp	 #
.LCFI1418:
	ret	
.LFE5881:
	.seh_endproc
	.section	.text$_ZSt12__niter_baseIPmET_S1_,"x"
	.linkonce discard
	.globl	_ZSt12__niter_baseIPmET_S1_
	.def	_ZSt12__niter_baseIPmET_S1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt12__niter_baseIPmET_S1_
_ZSt12__niter_baseIPmET_S1_:
.LFB5883:
	.loc 3 313 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1419:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1420:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __it, __it
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:315:     { return __it; }
	.loc 3 315 14
	movq	16(%rbp), %rax	 # __it, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:315:     { return __it; }
	.loc 3 315 20
	popq	%rbp	 #
.LCFI1421:
	ret	
.LFE5883:
	.seh_endproc
	.section	.text$_ZSt14__copy_move_a1ILb0EPmS0_ET1_T0_S2_S1_,"x"
	.linkonce discard
	.globl	_ZSt14__copy_move_a1ILb0EPmS0_ET1_T0_S2_S1_
	.def	_ZSt14__copy_move_a1ILb0EPmS0_ET1_T0_S2_S1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt14__copy_move_a1ILb0EPmS0_ET1_T0_S2_S1_
_ZSt14__copy_move_a1ILb0EPmS0_ET1_T0_S2_S1_:
.LFB5884:
	.loc 3 521 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1422:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1423:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # __result, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:522:     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
	.loc 3 522 42
	movq	32(%rbp), %rdx	 # __result, tmp84
	movq	24(%rbp), %rax	 # __last, tmp85
	movq	%rdx, %r8	 # tmp84,
	movq	%rax, %rdx	 # tmp85,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:522:     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
	.loc 3 522 71
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1424:
	ret	
.LFE5884:
	.seh_endproc
	.section	.text$_ZSt12__niter_wrapIPmET_RKS1_S1_,"x"
	.linkonce discard
	.globl	_ZSt12__niter_wrapIPmET_RKS1_S1_
	.def	_ZSt12__niter_wrapIPmET_RKS1_S1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt12__niter_wrapIPmET_RKS1_S1_
_ZSt12__niter_wrapIPmET_RKS1_S1_:
.LFB5885:
	.loc 3 335 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1425:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1426:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # D.125362, D.125362
	movq	%rdx, 24(%rbp)	 # __res, __res
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:336:     { return __res; }
	.loc 3 336 14
	movq	24(%rbp), %rax	 # __res, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:336:     { return __res; }
	.loc 3 336 21
	popq	%rbp	 #
.LCFI1427:
	ret	
.LFE5885:
	.seh_endproc
	.section	.text$_ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_,"x"
	.linkonce discard
	.globl	_ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_
	.def	_ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_
_ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_:
.LFB5886:
	.loc 18 560 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1428:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1429:
	leaq	(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1430:
	.seh_endprologue
	movq	%rcx, 24(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, %rbx	 #, tmp82
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\cpp_type_traits.h:561:     { return __it; }
	.loc 18 561 14
	movq	24(%rbp), %rcx	 # .result_ptr, tmp83
	movq	(%rbx), %rax	 # __it, tmp84
	movq	8(%rbx), %rdx	 # __it,
	movq	%rax, (%rcx)	 # tmp84, <retval>
	movq	%rdx, 8(%rcx)	 #, <retval>
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\cpp_type_traits.h:561:     { return __it; }
	.loc 18 561 20
	movq	24(%rbp), %rax	 # .result_ptr,
	popq	%rbx	 #
.LCFI1431:
	popq	%rbp	 #
.LCFI1432:
	ret	
.LFE5886:
	.seh_endproc
	.section	.text$_ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_,"x"
	.linkonce discard
	.globl	_ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_
	.def	_ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_
_ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_:
.LFB5887:
	.loc 3 527 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1433:
	pushq	%rdi	 #
	.seh_pushreg	%rdi
.LCFI1434:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI1435:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1436:
	subq	$152, %rsp	 #,
	.seh_stackalloc	152
.LCFI1437:
	leaq	144(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 144
.LCFI1438:
	.seh_endprologue
	movq	%rcx, 48(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, %rsi	 #, tmp82
	movq	%r8, %rdi	 #, tmp83
	movq	%r9, %rbx	 #, tmp84
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:529:       return std::__niter_wrap(__result,
	.loc 3 529 31
	leaq	-64(%rbp), %rcx	 #, tmp85
	movq	(%rbx), %rax	 # __result, tmp86
	movq	8(%rbx), %rdx	 # __result,
	movq	%rax, -80(%rbp)	 # tmp86,
	movq	%rdx, -72(%rbp)	 #,
	leaq	-80(%rbp), %rax	 #, tmp87
	movq	%rax, %rdx	 # tmp87,
	call	_ZSt12__niter_baseISt13_Bit_iteratorET_S1_	 #
	leaq	-48(%rbp), %rcx	 #, tmp88
	movq	(%rdi), %rax	 # __last, tmp89
	movq	8(%rdi), %rdx	 # __last,
	movq	%rax, -80(%rbp)	 # tmp89,
	movq	%rdx, -72(%rbp)	 #,
	leaq	-80(%rbp), %rax	 #, tmp90
	movq	%rax, %rdx	 # tmp90,
	call	_ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_	 #
	leaq	-32(%rbp), %rcx	 #, tmp91
	movq	(%rsi), %rax	 # __first, tmp92
	movq	8(%rsi), %rdx	 # __first,
	movq	%rax, -80(%rbp)	 # tmp92,
	movq	%rdx, -72(%rbp)	 #,
	leaq	-80(%rbp), %rax	 #, tmp93
	movq	%rax, %rdx	 # tmp93,
	call	_ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_	 #
	leaq	-16(%rbp), %rcx	 #, tmp94
	movq	-32(%rbp), %rax	 # D.127520, tmp95
	movq	-24(%rbp), %rdx	 # D.127520,
	movq	%rax, -80(%rbp)	 # tmp95,
	movq	%rdx, -72(%rbp)	 #,
	movq	-48(%rbp), %rax	 # D.127519, tmp96
	movq	-40(%rbp), %rdx	 # D.127519,
	movq	%rax, -96(%rbp)	 # tmp96,
	movq	%rdx, -88(%rbp)	 #,
	movq	-64(%rbp), %rax	 # D.127518, tmp97
	movq	-56(%rbp), %rdx	 # D.127518,
	movq	%rax, -112(%rbp)	 # tmp97,
	movq	%rdx, -104(%rbp)	 #,
	leaq	-112(%rbp), %r8	 #, tmp98
	leaq	-96(%rbp), %rdx	 #, tmp99
	leaq	-80(%rbp), %rax	 #, tmp100
	movq	%r8, %r9	 # tmp98,
	movq	%rdx, %r8	 # tmp99,
	movq	%rax, %rdx	 # tmp100,
	call	_ZSt14__copy_move_a1ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_	 #
	movq	48(%rbp), %rcx	 # .result_ptr, tmp101
	movq	-16(%rbp), %rax	 # D.127521, tmp102
	movq	-8(%rbp), %rdx	 # D.127521,
	movq	%rax, -112(%rbp)	 # tmp102,
	movq	%rdx, -104(%rbp)	 #,
	leaq	-112(%rbp), %rax	 #, tmp103
	movq	%rax, %r8	 # tmp103,
	movq	%rbx, %rdx	 # tmp84,
	call	_ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:532: 					     std::__niter_base(__result)));
	.loc 3 532 39
	nop	
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:533:     }
	.loc 3 533 5
	movq	48(%rbp), %rax	 # .result_ptr,
	addq	$152, %rsp	 #,
	popq	%rbx	 #
.LCFI1439:
	popq	%rsi	 #
.LCFI1440:
	popq	%rdi	 #
.LCFI1441:
	popq	%rbp	 #
.LCFI1442:
	ret	
.LFE5887:
	.seh_endproc
	.section	.text$_ZSt12__niter_baseISt13_Bit_iteratorET_S1_,"x"
	.linkonce discard
	.globl	_ZSt12__niter_baseISt13_Bit_iteratorET_S1_
	.def	_ZSt12__niter_baseISt13_Bit_iteratorET_S1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt12__niter_baseISt13_Bit_iteratorET_S1_
_ZSt12__niter_baseISt13_Bit_iteratorET_S1_:
.LFB5888:
	.loc 3 313 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1443:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1444:
	leaq	(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1445:
	.seh_endprologue
	movq	%rcx, 24(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, %rbx	 #, tmp82
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:315:     { return __it; }
	.loc 3 315 14
	movq	24(%rbp), %rcx	 # .result_ptr, tmp83
	movq	(%rbx), %rax	 # __it, tmp84
	movq	8(%rbx), %rdx	 # __it,
	movq	%rax, (%rcx)	 # tmp84, <retval>
	movq	%rdx, 8(%rcx)	 #, <retval>
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:315:     { return __it; }
	.loc 3 315 20
	movq	24(%rbp), %rax	 # .result_ptr,
	popq	%rbx	 #
.LCFI1446:
	popq	%rbp	 #
.LCFI1447:
	ret	
.LFE5888:
	.seh_endproc
	.section	.text$_ZSt23__copy_move_backward_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_,"x"
	.linkonce discard
	.globl	_ZSt23__copy_move_backward_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
	.def	_ZSt23__copy_move_backward_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt23__copy_move_backward_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
_ZSt23__copy_move_backward_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_:
.LFB5889:
	.loc 3 768 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1448:
	pushq	%rdi	 #
	.seh_pushreg	%rdi
.LCFI1449:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI1450:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1451:
	subq	$88, %rsp	 #,
	.seh_stackalloc	88
.LCFI1452:
	leaq	80(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 80
.LCFI1453:
	.seh_endprologue
	movq	%rcx, 48(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, %rbx	 #, tmp82
	movq	%r8, %rdi	 #, tmp83
	movq	%r9, %rsi	 #, tmp84
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:769:     { return std::__copy_move_backward_a2<_IsMove>(__first, __last, __result); }
	.loc 3 769 51
	movq	48(%rbp), %rcx	 # .result_ptr, tmp85
	movq	(%rbx), %rax	 # __first, tmp86
	movq	8(%rbx), %rdx	 # __first,
	movq	%rax, -16(%rbp)	 # tmp86,
	movq	%rdx, -8(%rbp)	 #,
	movq	(%rdi), %rax	 # __last, tmp87
	movq	8(%rdi), %rdx	 # __last,
	movq	%rax, -32(%rbp)	 # tmp87,
	movq	%rdx, -24(%rbp)	 #,
	movq	(%rsi), %rax	 # __result, tmp88
	movq	8(%rsi), %rdx	 # __result,
	movq	%rax, -48(%rbp)	 # tmp88,
	movq	%rdx, -40(%rbp)	 #,
	leaq	-48(%rbp), %r8	 #, tmp89
	leaq	-32(%rbp), %rdx	 #, tmp90
	leaq	-16(%rbp), %rax	 #, tmp91
	movq	%r8, %r9	 # tmp89,
	movq	%rdx, %r8	 # tmp90,
	movq	%rax, %rdx	 # tmp91,
	call	_ZSt23__copy_move_backward_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:769:     { return std::__copy_move_backward_a2<_IsMove>(__first, __last, __result); }
	.loc 3 769 77
	nop	
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:769:     { return std::__copy_move_backward_a2<_IsMove>(__first, __last, __result); }
	.loc 3 769 80
	movq	48(%rbp), %rax	 # .result_ptr,
	addq	$88, %rsp	 #,
	popq	%rbx	 #
.LCFI1454:
	popq	%rsi	 #
.LCFI1455:
	popq	%rdi	 #
.LCFI1456:
	popq	%rbp	 #
.LCFI1457:
	ret	
.LFE5889:
	.seh_endproc
	.section	.text$_ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_,"x"
	.linkonce discard
	.globl	_ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_
	.def	_ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_
_ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_:
.LFB5890:
	.loc 3 335 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1458:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1459:
	leaq	(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1460:
	.seh_endprologue
	movq	%rcx, 24(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, 32(%rbp)	 # D.125417, D.125417
	movq	%r8, %rbx	 #, tmp82
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:336:     { return __res; }
	.loc 3 336 14
	movq	24(%rbp), %rcx	 # .result_ptr, tmp83
	movq	(%rbx), %rax	 # __res, tmp84
	movq	8(%rbx), %rdx	 # __res,
	movq	%rax, (%rcx)	 # tmp84, <retval>
	movq	%rdx, 8(%rcx)	 #, <retval>
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:336:     { return __res; }
	.loc 3 336 21
	movq	24(%rbp), %rax	 # .result_ptr,
	popq	%rbx	 #
.LCFI1461:
	popq	%rbp	 #
.LCFI1462:
	ret	
.LFE5890:
	.seh_endproc
	.section	.text$_ZSt8__fill_aISt13_Bit_iteratorbEvT_S1_RKT0_,"x"
	.linkonce discard
	.globl	_ZSt8__fill_aISt13_Bit_iteratorbEvT_S1_RKT0_
	.def	_ZSt8__fill_aISt13_Bit_iteratorbEvT_S1_RKT0_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt8__fill_aISt13_Bit_iteratorbEvT_S1_RKT0_
_ZSt8__fill_aISt13_Bit_iteratorbEvT_S1_RKT0_:
.LFB5891:
	.loc 3 968 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1463:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI1464:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1465:
	subq	$64, %rsp	 #,
	.seh_stackalloc	64
.LCFI1466:
	leaq	64(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 64
.LCFI1467:
	.seh_endprologue
	movq	%rcx, %rsi	 #, tmp82
	movq	%rdx, %rbx	 #, tmp83
	movq	%r8, 48(%rbp)	 # __value, __value
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:969:     { std::__fill_a1(__first, __last, __value); }
	.loc 3 969 21
	movq	(%rsi), %rax	 # __first, tmp84
	movq	8(%rsi), %rdx	 # __first,
	movq	%rax, -16(%rbp)	 # tmp84,
	movq	%rdx, -8(%rbp)	 #,
	movq	(%rbx), %rax	 # __last, tmp85
	movq	8(%rbx), %rdx	 # __last,
	movq	%rax, -32(%rbp)	 # tmp85,
	movq	%rdx, -24(%rbp)	 #,
	movq	48(%rbp), %rcx	 # __value, tmp86
	leaq	-32(%rbp), %rdx	 #, tmp87
	leaq	-16(%rbp), %rax	 #, tmp88
	movq	%rcx, %r8	 # tmp86,
	movq	%rax, %rcx	 # tmp88,
	call	_ZSt9__fill_a1St13_Bit_iteratorS_RKb	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:969:     { std::__fill_a1(__first, __last, __value); }
	.loc 3 969 49
	nop	
	addq	$64, %rsp	 #,
	popq	%rbx	 #
.LCFI1468:
	popq	%rsi	 #
.LCFI1469:
	popq	%rbp	 #
.LCFI1470:
	ret	
.LFE5891:
	.seh_endproc
	.section	.text$_ZSt13__copy_move_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_,"x"
	.linkonce discard
	.globl	_ZSt13__copy_move_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
	.def	_ZSt13__copy_move_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt13__copy_move_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
_ZSt13__copy_move_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_:
.LFB5892:
	.loc 3 527 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1471:
	pushq	%rdi	 #
	.seh_pushreg	%rdi
.LCFI1472:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI1473:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1474:
	subq	$152, %rsp	 #,
	.seh_stackalloc	152
.LCFI1475:
	leaq	144(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 144
.LCFI1476:
	.seh_endprologue
	movq	%rcx, 48(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, %rsi	 #, tmp82
	movq	%r8, %rdi	 #, tmp83
	movq	%r9, %rbx	 #, tmp84
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:529:       return std::__niter_wrap(__result,
	.loc 3 529 31
	leaq	-64(%rbp), %rcx	 #, tmp85
	movq	(%rbx), %rax	 # __result, tmp86
	movq	8(%rbx), %rdx	 # __result,
	movq	%rax, -80(%rbp)	 # tmp86,
	movq	%rdx, -72(%rbp)	 #,
	leaq	-80(%rbp), %rax	 #, tmp87
	movq	%rax, %rdx	 # tmp87,
	call	_ZSt12__niter_baseISt13_Bit_iteratorET_S1_	 #
	leaq	-48(%rbp), %rcx	 #, tmp88
	movq	(%rdi), %rax	 # __last, tmp89
	movq	8(%rdi), %rdx	 # __last,
	movq	%rax, -80(%rbp)	 # tmp89,
	movq	%rdx, -72(%rbp)	 #,
	leaq	-80(%rbp), %rax	 #, tmp90
	movq	%rax, %rdx	 # tmp90,
	call	_ZSt12__niter_baseISt13_Bit_iteratorET_S1_	 #
	leaq	-32(%rbp), %rcx	 #, tmp91
	movq	(%rsi), %rax	 # __first, tmp92
	movq	8(%rsi), %rdx	 # __first,
	movq	%rax, -80(%rbp)	 # tmp92,
	movq	%rdx, -72(%rbp)	 #,
	leaq	-80(%rbp), %rax	 #, tmp93
	movq	%rax, %rdx	 # tmp93,
	call	_ZSt12__niter_baseISt13_Bit_iteratorET_S1_	 #
	leaq	-16(%rbp), %rcx	 #, tmp94
	movq	-32(%rbp), %rax	 # D.127657, tmp95
	movq	-24(%rbp), %rdx	 # D.127657,
	movq	%rax, -80(%rbp)	 # tmp95,
	movq	%rdx, -72(%rbp)	 #,
	movq	-48(%rbp), %rax	 # D.127656, tmp96
	movq	-40(%rbp), %rdx	 # D.127656,
	movq	%rax, -96(%rbp)	 # tmp96,
	movq	%rdx, -88(%rbp)	 #,
	movq	-64(%rbp), %rax	 # D.127655, tmp97
	movq	-56(%rbp), %rdx	 # D.127655,
	movq	%rax, -112(%rbp)	 # tmp97,
	movq	%rdx, -104(%rbp)	 #,
	leaq	-112(%rbp), %r8	 #, tmp98
	leaq	-96(%rbp), %rdx	 #, tmp99
	leaq	-80(%rbp), %rax	 #, tmp100
	movq	%r8, %r9	 # tmp98,
	movq	%rdx, %r8	 # tmp99,
	movq	%rax, %rdx	 # tmp100,
	call	_ZSt14__copy_move_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_	 #
	movq	48(%rbp), %rcx	 # .result_ptr, tmp101
	movq	-16(%rbp), %rax	 # D.127658, tmp102
	movq	-8(%rbp), %rdx	 # D.127658,
	movq	%rax, -112(%rbp)	 # tmp102,
	movq	%rdx, -104(%rbp)	 #,
	leaq	-112(%rbp), %rax	 #, tmp103
	movq	%rax, %r8	 # tmp103,
	movq	%rbx, %rdx	 # tmp84,
	call	_ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:532: 					     std::__niter_base(__result)));
	.loc 3 532 39
	nop	
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:533:     }
	.loc 3 533 5
	movq	48(%rbp), %rax	 # .result_ptr,
	addq	$152, %rsp	 #,
	popq	%rbx	 #
.LCFI1477:
	popq	%rsi	 #
.LCFI1478:
	popq	%rdi	 #
.LCFI1479:
	popq	%rbp	 #
.LCFI1480:
	ret	
.LFE5892:
	.seh_endproc
	.section	.text$_ZNK9__gnu_cxx13new_allocatorIiE11_M_max_sizeEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNK9__gnu_cxx13new_allocatorIiE11_M_max_sizeEv
	.def	_ZNK9__gnu_cxx13new_allocatorIiE11_M_max_sizeEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNK9__gnu_cxx13new_allocatorIiE11_M_max_sizeEv
_ZNK9__gnu_cxx13new_allocatorIiE11_M_max_sizeEv:
.LFB5894:
	.loc 22 197 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1481:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1482:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:200: 	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
	.loc 22 200 50
	movabsq	$2305843009213693951, %rax	 #, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:204:       }
	.loc 22 204 7
	popq	%rbp	 #
.LCFI1483:
	ret	
.LFE5894:
	.seh_endproc
	.section	.text$_ZN9__gnu_cxx13new_allocatorIiE8allocateEyPKv,"x"
	.linkonce discard
	.align 2
	.globl	_ZN9__gnu_cxx13new_allocatorIiE8allocateEyPKv
	.def	_ZN9__gnu_cxx13new_allocatorIiE8allocateEyPKv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN9__gnu_cxx13new_allocatorIiE8allocateEyPKv
_ZN9__gnu_cxx13new_allocatorIiE8allocateEyPKv:
.LFB5893:
	.loc 22 103 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1484:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1485:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __n, __n
	movq	%r8, 32(%rbp)	 # D.125444, D.125444
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:111: 	if (__builtin_expect(__n > this->_M_max_size(), false))
	.loc 22 111 46
	movq	16(%rbp), %rcx	 # this,
	call	_ZNK9__gnu_cxx13new_allocatorIiE11_M_max_sizeEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:111: 	if (__builtin_expect(__n > this->_M_max_size(), false))
	.loc 22 111 27
	cmpq	%rax, 24(%rbp)	 # _1, __n
	seta	%al	 #, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:111: 	if (__builtin_expect(__n > this->_M_max_size(), false))
	.loc 22 111 22
	movzbl	%al, %eax	 # _2, _3
	testl	%eax, %eax	 # _4
	setne	%al	 #, retval.43_10
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:111: 	if (__builtin_expect(__n > this->_M_max_size(), false))
	.loc 22 111 2
	testb	%al, %al	 # retval.43_10
	je	.L918	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:115: 	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
	.loc 22 115 6
	movabsq	$4611686018427387903, %rax	 #, tmp90
	cmpq	%rax, 24(%rbp)	 # tmp90, __n
	jbe	.L919	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:116: 	      std::__throw_bad_array_new_length();
	.loc 22 116 41
	call	_ZSt28__throw_bad_array_new_lengthv	 #
.L919:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:117: 	    std::__throw_bad_alloc();
	.loc 22 117 28
	call	_ZSt17__throw_bad_allocv	 #
.L918:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:127: 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	.loc 22 127 41
	movq	24(%rbp), %rax	 # __n, tmp91
	salq	$2, %rax	 #, _6
	movq	%rax, %rcx	 # _6,
	call	_Znwy	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:127: 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	.loc 22 127 60
	nop	
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:128:       }
	.loc 22 128 7
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1486:
	ret	
.LFE5893:
	.seh_endproc
	.section	.text$_ZSt12__niter_baseIPiET_S1_,"x"
	.linkonce discard
	.globl	_ZSt12__niter_baseIPiET_S1_
	.def	_ZSt12__niter_baseIPiET_S1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt12__niter_baseIPiET_S1_
_ZSt12__niter_baseIPiET_S1_:
.LFB5895:
	.loc 3 313 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1487:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1488:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __it, __it
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:315:     { return __it; }
	.loc 3 315 14
	movq	16(%rbp), %rax	 # __it, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:315:     { return __it; }
	.loc 3 315 20
	popq	%rbp	 #
.LCFI1489:
	ret	
.LFE5895:
	.seh_endproc
	.section	.text$_ZSt14__relocate_a_1IiiENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS2_E4typeES4_S4_S4_RSaIT0_E,"x"
	.linkonce discard
	.globl	_ZSt14__relocate_a_1IiiENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS2_E4typeES4_S4_S4_RSaIT0_E
	.def	_ZSt14__relocate_a_1IiiENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS2_E4typeES4_S4_S4_RSaIT0_E;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt14__relocate_a_1IiiENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS2_E4typeES4_S4_S4_RSaIT0_E
_ZSt14__relocate_a_1IiiENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS2_E4typeES4_S4_S4_RSaIT0_E:
.LFB5896:
	.loc 19 1006 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1490:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1491:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # __result, __result
	movq	%r9, 40(%rbp)	 # D.125457, D.125457
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:1009:       ptrdiff_t __count = __last - __first;
	.loc 19 1009 34
	movq	24(%rbp), %rax	 # __last, tmp89
	subq	16(%rbp), %rax	 # __first, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:1009:       ptrdiff_t __count = __last - __first;
	.loc 19 1009 17
	sarq	$2, %rax	 #, tmp90
	movq	%rax, -8(%rbp)	 # tmp90, __count
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:1010:       if (__count > 0)
	.loc 19 1010 7
	cmpq	$0, -8(%rbp)	 #, __count
	jle	.L924	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:1011: 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
	.loc 19 1011 39
	movq	-8(%rbp), %rax	 # __count, __count.44_2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:1011: 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
	.loc 19 1011 19
	leaq	0(,%rax,4), %rdx	 #, _3
	movq	32(%rbp), %rax	 # __result, tmp93
	movq	%rdx, %r8	 # _3,
	movq	16(%rbp), %rdx	 # __first,
	movq	%rax, %rcx	 # tmp93,
	call	memmove	 #
.L924:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:1012:       return __result + __count;
	.loc 19 1012 25
	movq	-8(%rbp), %rax	 # __count, __count.45_4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:1012:       return __result + __count;
	.loc 19 1012 23
	leaq	0(,%rax,4), %rdx	 #, _5
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:1012:       return __result + __count;
	.loc 19 1012 25
	movq	32(%rbp), %rax	 # __result, tmp94
	addq	%rdx, %rax	 # _5, _13
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:1013:     }
	.loc 19 1013 5
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI1492:
	ret	
.LFE5896:
	.seh_endproc
	.section	.text$_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPiyEET_S3_T0_,"x"
	.linkonce discard
	.globl	_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPiyEET_S3_T0_
	.def	_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPiyEET_S3_T0_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPiyEET_S3_T0_
_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPiyEET_S3_T0_:
.LFB5897:
	.loc 19 595 9
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1493:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1494:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __n, __n
.LBB149:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:597: 	  if (__n > 0)
	.loc 19 597 4
	cmpq	$0, 24(%rbp)	 #, __n
	je	.L927	 #,
.LBB150:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:600: 		= std::__addressof(*__first);
	.loc 19 600 21
	movq	16(%rbp), %rcx	 # __first,
	call	_ZSt11__addressofIiEPT_RS0_	 #
	movq	%rax, -8(%rbp)	 # tmp86, __val
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:601: 	      std::_Construct(__val);
	.loc 19 601 23
	movq	-8(%rbp), %rax	 # __val, tmp87
	movq	%rax, %rcx	 # tmp87,
	call	_ZSt10_ConstructIiJEEvPT_DpOT0_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:602: 	      ++__first;
	.loc 19 602 8
	addq	$4, 16(%rbp)	 #, __first
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:603: 	      __first = std::fill_n(__first, __n - 1, *__val);
	.loc 19 603 29
	movq	24(%rbp), %rax	 # __n, tmp88
	subq	$1, %rax	 #, _1
	movq	-8(%rbp), %rdx	 # __val, tmp89
	movq	%rdx, %r8	 # tmp89,
	movq	%rax, %rdx	 # _1,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZSt6fill_nIPiyiET_S1_T0_RKT1_	 #
	movq	%rax, 16(%rbp)	 # _12, __first
.L927:
.LBE150:
.LBE149:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:605: 	  return __first;
	.loc 19 605 11
	movq	16(%rbp), %rax	 # __first, _14
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:606: 	}
	.loc 19 606 2
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI1495:
	ret	
.LFE5897:
	.seh_endproc
	.section	.text$_ZNSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv
	.def	_ZNSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv
_ZNSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv:
.LFB5898:
	.loc 8 514 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1496:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1497:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:515:       { return this->_M_impl; }
	.loc 8 515 22
	movq	16(%rbp), %rax	 # this, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:515:       { return this->_M_impl; }
	.loc 8 515 31
	popq	%rbp	 #
.LCFI1498:
	ret	
.LFE5898:
	.seh_endproc
	.section	.text$_ZSteqRKSaImES1_,"x"
	.linkonce discard
	.globl	_ZSteqRKSaImES1_
	.def	_ZSteqRKSaImES1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSteqRKSaImES1_
_ZSteqRKSaImES1_:
.LFB5899:
	.loc 12 216 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1499:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1500:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # D.125471, D.125471
	movq	%rdx, 24(%rbp)	 # D.125472, D.125472
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:217:       { return true; }
	.loc 12 217 16
	movl	$1, %eax	 #, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\allocator.h:217:       { return true; }
	.loc 12 217 22
	popq	%rbp	 #
.LCFI1501:
	ret	
.LFE5899:
	.seh_endproc
	.section	.text$_ZSt15__alloc_on_copyISaImEEvRT_RKS1_,"x"
	.linkonce discard
	.globl	_ZSt15__alloc_on_copyISaImEEvRT_RKS1_
	.def	_ZSt15__alloc_on_copyISaImEEvRT_RKS1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt15__alloc_on_copyISaImEEvRT_RKS1_
_ZSt15__alloc_on_copyISaImEEvRT_RKS1_:
.LFB5900:
	.loc 16 576 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1502:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1503:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __one, __one
	movq	%rdx, 24(%rbp)	 # __two, __two
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\alloc_traits.h:586:     }
	.loc 16 586 5
	nop	
	popq	%rbp	 #
.LCFI1504:
	ret	
.LFE5900:
	.seh_endproc
	.section	.text$_ZNSt6vectorIbSaIbEE13_M_initializeEy,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorIbSaIbEE13_M_initializeEy
	.def	_ZNSt6vectorIbSaIbEE13_M_initializeEy;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorIbSaIbEE13_M_initializeEy
_ZNSt6vectorIbSaIbEE13_M_initializeEy:
.LFB5901:
	.loc 8 1137 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1505:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1506:
	subq	$80, %rsp	 #,
	.seh_stackalloc	80
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __n, __n
.LBB151:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1139: 	if (__n)
	.loc 8 1139 2
	cmpq	$0, 24(%rbp)	 #, __n
	je	.L936	 #,
.LBB152:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1141: 	    _Bit_pointer __q = this->_M_allocate(__n);
	.loc 8 1141 42
	movq	16(%rbp), %rax	 # this, _1
	movq	24(%rbp), %rdx	 # __n, tmp89
	movq	%rax, %rcx	 # _1,
	call	_ZNSt13_Bvector_baseISaIbEE11_M_allocateEy	 #
	movq	%rax, -8(%rbp)	 # _12, __q
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1142: 	    this->_M_impl._M_end_of_storage = __q + _S_nword(__n);
	.loc 8 1142 54
	movq	24(%rbp), %rax	 # __n, tmp90
	movq	%rax, %rcx	 # tmp90,
	call	_ZNSt13_Bvector_baseISaIbEE8_S_nwordEy	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1142: 	    this->_M_impl._M_end_of_storage = __q + _S_nword(__n);
	.loc 8 1142 44
	leaq	0(,%rax,4), %rdx	 #, _3
	movq	-8(%rbp), %rax	 # __q, tmp91
	addq	%rax, %rdx	 # tmp91, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1142: 	    this->_M_impl._M_end_of_storage = __q + _S_nword(__n);
	.loc 8 1142 38
	movq	16(%rbp), %rax	 # this, tmp92
	movq	%rdx, 32(%rax)	 # _4, this_10(D)->D.103908._M_impl.D.103391._M_end_of_storage
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1143: 	    iterator __start = iterator(std::__addressof(*__q), 0);
	.loc 8 1143 15
	movq	-8(%rbp), %rax	 # __q, tmp93
	movq	%rax, %rcx	 # tmp93,
	call	_ZSt11__addressofImEPT_RS0_	 #
	movq	%rax, %rdx	 #, _5
	leaq	-48(%rbp), %rax	 #, tmp94
	movl	$0, %r8d	 #,
	movq	%rax, %rcx	 # tmp94,
	call	_ZNSt13_Bit_iteratorC1EPmj	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1144: 	    this->_M_impl._M_start = __start;
	.loc 8 1144 6
	movq	16(%rbp), %rax	 # this, tmp95
	movq	-48(%rbp), %rdx	 # MEM <unsigned char[12]> [(struct _Bit_iterator *)&__start], tmp96
	movq	%rdx, (%rax)	 # tmp96, MEM <unsigned char[12]> [(struct _Bit_iterator *)this_10(D)]
	movl	-40(%rbp), %edx	 # MEM <unsigned char[12]> [(struct _Bit_iterator *)&__start], tmp97
	movl	%edx, 8(%rax)	 # tmp97, MEM <unsigned char[12]> [(struct _Bit_iterator *)this_10(D)]
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1145: 	    this->_M_impl._M_finish = __start + difference_type(__n);
	.loc 8 1145 40
	movq	24(%rbp), %rcx	 # __n, __n.57_6
	leaq	-32(%rbp), %rax	 #, tmp98
	leaq	-48(%rbp), %rdx	 #, tmp99
	movq	%rcx, %r8	 # __n.57_6,
	movq	%rax, %rcx	 # tmp98,
	call	_ZStplRKSt13_Bit_iteratorx	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1145: 	    this->_M_impl._M_finish = __start + difference_type(__n);
	.loc 8 1145 6
	movq	16(%rbp), %rax	 # this, tmp100
	movq	-32(%rbp), %rdx	 # MEM <unsigned char[12]> [(struct _Bit_iterator *)&D.125492], tmp101
	movq	%rdx, 16(%rax)	 # tmp101, MEM <unsigned char[12]> [(struct _Bit_iterator *)this_10(D) + 16B]
	movl	-24(%rbp), %edx	 # MEM <unsigned char[12]> [(struct _Bit_iterator *)&D.125492], tmp102
	movl	%edx, 24(%rax)	 # tmp102, MEM <unsigned char[12]> [(struct _Bit_iterator *)this_10(D) + 16B]
.L936:
.LBE152:
.LBE151:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_bvector.h:1147:       }
	.loc 8 1147 7
	nop	
	addq	$80, %rsp	 #,
	popq	%rbp	 #
.LCFI1507:
	ret	
.LFE5901:
	.seh_endproc
	.section	.text$_ZNSt6vectorIiSaIiEE5clearEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorIiSaIiEE5clearEv
	.def	_ZNSt6vectorIiSaIiEE5clearEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorIiSaIiEE5clearEv
_ZNSt6vectorIiSaIiEE5clearEv:
.LFB5902:
	.loc 11 1498 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1508:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1509:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1499:       { _M_erase_at_end(this->_M_impl._M_start); }
	.loc 11 1499 24
	movq	16(%rbp), %rax	 # this, tmp83
	movq	(%rax), %rax	 # this_3(D)->D.106011._M_impl.D.105361._M_start, _1
	movq	%rax, %rdx	 # _1,
	movq	16(%rbp), %rcx	 # this,
	call	_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1499:       { _M_erase_at_end(this->_M_impl._M_start); }
	.loc 11 1499 50
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1510:
	ret	
.LFE5902:
	.seh_endproc
	.section	.text$_ZSt15__alloc_on_copyISaIiEEvRT_RKS1_,"x"
	.linkonce discard
	.globl	_ZSt15__alloc_on_copyISaIiEEvRT_RKS1_
	.def	_ZSt15__alloc_on_copyISaIiEEvRT_RKS1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt15__alloc_on_copyISaIiEEvRT_RKS1_
_ZSt15__alloc_on_copyISaIiEEvRT_RKS1_:
.LFB5903:
	.loc 16 576 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1511:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1512:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __one, __one
	movq	%rdx, 24(%rbp)	 # __two, __two
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\alloc_traits.h:586:     }
	.loc 16 586 5
	nop	
	popq	%rbp	 #
.LCFI1513:
	ret	
.LFE5903:
	.seh_endproc
	.section	.text$_ZNSt6vectorIiSaIiEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKiS1_EEEEPiyT_S9_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorIiSaIiEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKiS1_EEEEPiyT_S9_
	.def	_ZNSt6vectorIiSaIiEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKiS1_EEEEPiyT_S9_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorIiSaIiEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKiS1_EEEEPiyT_S9_
_ZNSt6vectorIiSaIiEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKiS1_EEEEPiyT_S9_:
.LFB5904:
	.loc 11 1508 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1514:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1515:
	subq	$56, %rsp	 #,
	.seh_stackalloc	56
.LCFI1516:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI1517:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # this, this
	movq	%rdx, 40(%rbp)	 # __n, __n
	movq	%r8, 48(%rbp)	 # __first, __first
	movq	%r9, 56(%rbp)	 # __last, __last
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1511: 	  pointer __result = this->_M_allocate(__n);
	.loc 11 1511 40
	movq	32(%rbp), %rax	 # this, _1
	movq	40(%rbp), %rdx	 # __n, tmp91
	movq	%rax, %rcx	 # _1,
.LEHB49:
	call	_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEy	 #
.LEHE49:
	movq	%rax, -8(%rbp)	 # _11, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1515: 					  _M_get_Tp_allocator());
	.loc 11 1515 27
	movq	32(%rbp), %rax	 # this, _2
	movq	%rax, %rcx	 # _2,
	call	_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv	 #
	movq	%rax, %rcx	 #, _3
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1514: 	      std::__uninitialized_copy_a(__first, __last, __result,
	.loc 11 1514 35
	movq	-8(%rbp), %r8	 # __result, tmp92
	movq	56(%rbp), %rdx	 # __last, tmp93
	movq	48(%rbp), %rax	 # __first, tmp94
	movq	%rcx, %r9	 # _3,
	movq	%rax, %rcx	 # tmp94,
.LEHB50:
	call	_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiiET0_T_SA_S9_RSaIT1_E	 #
.LEHE50:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1516: 	      return __result;
	.loc 11 1516 15
	movq	-8(%rbp), %rax	 # __result, _15
	jmp	.L945	 #
.L943:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1518: 	  __catch(...)
	.loc 11 1518 4
	movq	%rax, %rcx	 # _4,
	call	__cxa_begin_catch	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1520: 	      _M_deallocate(__result, __n);
	.loc 11 1520 21
	movq	32(%rbp), %rax	 # this, _5
	movq	40(%rbp), %rcx	 # __n, tmp97
	movq	-8(%rbp), %rdx	 # __result, tmp98
	movq	%rcx, %r8	 # tmp97,
	movq	%rax, %rcx	 # _5,
.LEHB51:
	call	_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPiy	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1521: 	      __throw_exception_again;
	.loc 11 1521 8
	call	__cxa_rethrow	 #
.LEHE51:
.L944:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1518: 	  __catch(...)
	.loc 11 1518 4
	movq	%rax, %rbx	 #, tmp99
	call	__cxa_end_catch	 #
	movq	%rbx, %rax	 # tmp99, D.129302
	movq	%rax, %rcx	 # D.129302,
.LEHB52:
	call	_Unwind_Resume	 #
.LEHE52:
.L945:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1523: 	}
	.loc 11 1523 2
	addq	$56, %rsp	 #,
	popq	%rbx	 #
.LCFI1518:
	popq	%rbp	 #
.LCFI1519:
	ret	
.LFE5904:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
	.align 4
.LLSDA5904:
	.byte	0xff
	.byte	0x9b
	.uleb128 .LLSDATT5904-.LLSDATTD5904
.LLSDATTD5904:
	.byte	0x1
	.uleb128 .LLSDACSE5904-.LLSDACSB5904
.LLSDACSB5904:
	.uleb128 .LEHB49-.LFB5904
	.uleb128 .LEHE49-.LEHB49
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB50-.LFB5904
	.uleb128 .LEHE50-.LEHB50
	.uleb128 .L943-.LFB5904
	.uleb128 0x1
	.uleb128 .LEHB51-.LFB5904
	.uleb128 .LEHE51-.LEHB51
	.uleb128 .L944-.LFB5904
	.uleb128 0
	.uleb128 .LEHB52-.LFB5904
	.uleb128 .LEHE52-.LEHB52
	.uleb128 0
	.uleb128 0
.LLSDACSE5904:
	.byte	0x1
	.byte	0
	.align 4
	.long	0

.LLSDATT5904:
	.section	.text$_ZNSt6vectorIiSaIiEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKiS1_EEEEPiyT_S9_,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZNSt6vectorIiSaIiEE5beginEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorIiSaIiEE5beginEv
	.def	_ZNSt6vectorIiSaIiEE5beginEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorIiSaIiEE5beginEv
_ZNSt6vectorIiSaIiEE5beginEv:
.LFB5905:
	.loc 11 811 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1520:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1521:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:812:       { return iterator(this->_M_impl._M_start); }
	.loc 11 812 39
	movq	16(%rbp), %rdx	 # this, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:812:       { return iterator(this->_M_impl._M_start); }
	.loc 11 812 16
	leaq	-8(%rbp), %rax	 #, tmp85
	movq	%rax, %rcx	 # tmp85,
	call	_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC1ERKS1_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:812:       { return iterator(this->_M_impl._M_start); }
	.loc 11 812 47
	movq	-8(%rbp), %rax	 # D.125540, D.127937
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:812:       { return iterator(this->_M_impl._M_start); }
	.loc 11 812 50
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI1522:
	ret	
.LFE5905:
	.seh_endproc
	.section	.text$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEENS1_IPiS6_EEET0_T_SB_SA_,"x"
	.linkonce discard
	.globl	_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEENS1_IPiS6_EEET0_T_SB_SA_
	.def	_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEENS1_IPiS6_EEET0_T_SB_SA_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEENS1_IPiS6_EEET0_T_SB_SA_
_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEENS1_IPiS6_EEET0_T_SB_SA_:
.LFB5906:
	.loc 3 611 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1523:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1524:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI1525:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI1526:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __first, __first
	movq	%rdx, 40(%rbp)	 # __last, __last
	movq	%r8, 48(%rbp)	 # __result, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:620: 	     (std::__miter_base(__first), std::__miter_base(__last), __result);
	.loc 3 620 7
	movq	40(%rbp), %rax	 # __last, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEET_S8_	 #
	movq	%rax, %rbx	 #, D.127947
	movq	32(%rbp), %rcx	 # __first,
	call	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEET_S8_	 #
	movq	48(%rbp), %rdx	 # __result, tmp87
	movq	%rdx, %r8	 # tmp87,
	movq	%rbx, %rdx	 # D.127947,
	movq	%rax, %rcx	 # D.127948,
	call	_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEENS1_IPiS6_EEET1_T0_SB_SA_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:621:     }
	.loc 3 621 5
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI1527:
	popq	%rbp	 #
.LCFI1528:
	ret	
.LFE5906:
	.seh_endproc
	.section	.text$_ZNSt6vectorIiSaIiEE3endEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorIiSaIiEE3endEv
	.def	_ZNSt6vectorIiSaIiEE3endEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorIiSaIiEE3endEv
_ZNSt6vectorIiSaIiEE3endEv:
.LFB5907:
	.loc 11 829 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1529:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1530:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:830:       { return iterator(this->_M_impl._M_finish); }
	.loc 11 830 39
	movq	16(%rbp), %rax	 # this, tmp85
	leaq	8(%rax), %rdx	 #, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:830:       { return iterator(this->_M_impl._M_finish); }
	.loc 11 830 16
	leaq	-8(%rbp), %rax	 #, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC1ERKS1_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:830:       { return iterator(this->_M_impl._M_finish); }
	.loc 11 830 48
	movq	-8(%rbp), %rax	 # D.125596, D.127934
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:830:       { return iterator(this->_M_impl._M_finish); }
	.loc 11 830 51
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI1531:
	ret	
.LFE5907:
	.seh_endproc
	.section	.text$_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiEvT_S7_RSaIT0_E,"x"
	.linkonce discard
	.globl	_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiEvT_S7_RSaIT0_E
	.def	_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiEvT_S7_RSaIT0_E;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiEvT_S7_RSaIT0_E
_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiEvT_S7_RSaIT0_E:
.LFB5908:
	.loc 16 743 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1532:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1533:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # D.125599, D.125599
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\alloc_traits.h:746:       _Destroy(__first, __last);
	.loc 16 746 15
	movq	24(%rbp), %rax	 # __last, tmp82
	movq	%rax, %rdx	 # tmp82,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEvT_S7_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\alloc_traits.h:747:     }
	.loc 16 747 5
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1534:
	ret	
.LFE5908:
	.seh_endproc
	.section	.text$_ZSt12__miter_baseIPiET_S1_,"x"
	.linkonce discard
	.globl	_ZSt12__miter_baseIPiET_S1_
	.def	_ZSt12__miter_baseIPiET_S1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt12__miter_baseIPiET_S1_
_ZSt12__miter_baseIPiET_S1_:
.LFB5909:
	.loc 18 560 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1535:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1536:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __it, __it
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\cpp_type_traits.h:561:     { return __it; }
	.loc 18 561 14
	movq	16(%rbp), %rax	 # __it, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\cpp_type_traits.h:561:     { return __it; }
	.loc 18 561 20
	popq	%rbp	 #
.LCFI1537:
	ret	
.LFE5909:
	.seh_endproc
	.section	.text$_ZSt13__copy_move_aILb0EPiS0_ET1_T0_S2_S1_,"x"
	.linkonce discard
	.globl	_ZSt13__copy_move_aILb0EPiS0_ET1_T0_S2_S1_
	.def	_ZSt13__copy_move_aILb0EPiS0_ET1_T0_S2_S1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt13__copy_move_aILb0EPiS0_ET1_T0_S2_S1_
_ZSt13__copy_move_aILb0EPiS0_ET1_T0_S2_S1_:
.LFB5910:
	.loc 3 527 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1538:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI1539:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1540:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
.LCFI1541:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI1542:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __first, __first
	movq	%rdx, 40(%rbp)	 # __last, __last
	movq	%r8, 48(%rbp)	 # __result, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:529:       return std::__niter_wrap(__result,
	.loc 3 529 31
	movq	48(%rbp), %rax	 # __result, __result.70_1
	movq	%rax, %rcx	 # __result.70_1,
	call	_ZSt12__niter_baseIPiET_S1_	 #
	movq	%rax, %rsi	 #, _2
	movq	40(%rbp), %rax	 # __last, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZSt12__niter_baseIPiET_S1_	 #
	movq	%rax, %rbx	 #, _3
	movq	32(%rbp), %rcx	 # __first,
	call	_ZSt12__niter_baseIPiET_S1_	 #
	movq	%rsi, %r8	 # _2,
	movq	%rbx, %rdx	 # _3,
	movq	%rax, %rcx	 # _4,
	call	_ZSt14__copy_move_a1ILb0EPiS0_ET1_T0_S2_S1_	 #
	movq	%rax, %rdx	 #, _5
	leaq	48(%rbp), %rax	 #, tmp90
	movq	%rax, %rcx	 # tmp90,
	call	_ZSt12__niter_wrapIPiET_RKS1_S1_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:533:     }
	.loc 3 533 5
	addq	$32, %rsp	 #,
	popq	%rbx	 #
.LCFI1543:
	popq	%rsi	 #
.LCFI1544:
	popq	%rbp	 #
.LCFI1545:
	ret	
.LFE5910:
	.seh_endproc
	.section	.text$_ZSt22__uninitialized_copy_aIPiS0_iET0_T_S2_S1_RSaIT1_E,"x"
	.linkonce discard
	.globl	_ZSt22__uninitialized_copy_aIPiS0_iET0_T_S2_S1_RSaIT1_E
	.def	_ZSt22__uninitialized_copy_aIPiS0_iET0_T_S2_S1_RSaIT1_E;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt22__uninitialized_copy_aIPiS0_iET0_T_S2_S1_RSaIT1_E
_ZSt22__uninitialized_copy_aIPiS0_iET0_T_S2_S1_RSaIT1_E:
.LFB5911:
	.loc 19 331 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1546:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1547:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # __result, __result
	movq	%r9, 40(%rbp)	 # D.125631, D.125631
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:333:     { return std::uninitialized_copy(__first, __last, __result); }
	.loc 19 333 37
	movq	32(%rbp), %rdx	 # __result, tmp84
	movq	24(%rbp), %rax	 # __last, tmp85
	movq	%rdx, %r8	 # tmp84,
	movq	%rax, %rdx	 # tmp85,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZSt18uninitialized_copyIPiS0_ET0_T_S2_S1_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:333:     { return std::uninitialized_copy(__first, __last, __result); }
	.loc 19 333 66
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1548:
	ret	
.LFE5911:
	.seh_endproc
	.section	.text$_ZNSt16allocator_traitsISaIN3DDT4NodeEEE8max_sizeERKS2_,"x"
	.linkonce discard
	.globl	_ZNSt16allocator_traitsISaIN3DDT4NodeEEE8max_sizeERKS2_
	.def	_ZNSt16allocator_traitsISaIN3DDT4NodeEEE8max_sizeERKS2_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt16allocator_traitsISaIN3DDT4NodeEEE8max_sizeERKS2_
_ZNSt16allocator_traitsISaIN3DDT4NodeEEE8max_sizeERKS2_:
.LFB5913:
	.loc 16 543 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1549:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1550:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __a, __a
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\alloc_traits.h:548: 	return size_t(-1) / sizeof(value_type);
	.loc 16 548 39
	movabsq	$256204778801521550, %rax	 #, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\alloc_traits.h:550:       }
	.loc 16 550 7
	popq	%rbp	 #
.LCFI1551:
	ret	
.LFE5913:
	.seh_endproc
	.section	.text$_ZNSt6vectorIN3DDT4NodeESaIS1_EE11_S_max_sizeERKS2_,"x"
	.linkonce discard
	.globl	_ZNSt6vectorIN3DDT4NodeESaIS1_EE11_S_max_sizeERKS2_
	.def	_ZNSt6vectorIN3DDT4NodeESaIS1_EE11_S_max_sizeERKS2_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorIN3DDT4NodeESaIS1_EE11_S_max_sizeERKS2_
_ZNSt6vectorIN3DDT4NodeESaIS1_EE11_S_max_sizeERKS2_:
.LFB5912:
	.loc 11 1776 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1552:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1553:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __a, __a
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1781: 	const size_t __diffmax
	.loc 11 1781 15
	movabsq	$128102389400760775, %rax	 #, tmp90
	movq	%rax, -8(%rbp)	 # tmp90, __diffmax
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1783: 	const size_t __allocmax = _Alloc_traits::max_size(__a);
	.loc 11 1783 51
	movq	16(%rbp), %rcx	 # __a,
	call	_ZNSt16allocator_traitsISaIN3DDT4NodeEEE8max_sizeERKS2_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1783: 	const size_t __allocmax = _Alloc_traits::max_size(__a);
	.loc 11 1783 15
	movq	%rax, -16(%rbp)	 # _1, __allocmax
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1784: 	return (std::min)(__diffmax, __allocmax);
	.loc 11 1784 19
	leaq	-16(%rbp), %rdx	 #, tmp86
	leaq	-8(%rbp), %rax	 #, tmp87
	movq	%rax, %rcx	 # tmp87,
	call	_ZSt3minIyERKT_S2_S2_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1784: 	return (std::min)(__diffmax, __allocmax);
	.loc 11 1784 41
	movq	(%rax), %rax	 # *_2, _9
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1785:       }
	.loc 11 1785 7
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI1554:
	ret	
.LFE5912:
	.seh_endproc
	.section	.text$_ZSt18uninitialized_copyIPKN3DDT4NodeEPS1_ET0_T_S6_S5_,"x"
	.linkonce discard
	.globl	_ZSt18uninitialized_copyIPKN3DDT4NodeEPS1_ET0_T_S6_S5_
	.def	_ZSt18uninitialized_copyIPKN3DDT4NodeEPS1_ET0_T_S6_S5_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt18uninitialized_copyIPKN3DDT4NodeEPS1_ET0_T_S6_S5_
_ZSt18uninitialized_copyIPKN3DDT4NodeEPS1_ET0_T_S6_S5_:
.LFB5914:
	.loc 19 126 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1555:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1556:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # __result, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:145:       const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
	.loc 19 145 18
	movb	$1, -1(%rbp)	 #, __assignable
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:151: 	__uninit_copy(__first, __last, __result);
	.loc 19 151 15
	movq	32(%rbp), %rdx	 # __result, tmp84
	movq	24(%rbp), %rax	 # __last, tmp85
	movq	%rdx, %r8	 # tmp84,
	movq	%rax, %rdx	 # tmp85,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN3DDT4NodeEPS3_EET0_T_S8_S7_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:152:     }
	.loc 19 152 5
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI1557:
	ret	
.LFE5914:
	.seh_endproc
	.section	.text$_ZNK9__gnu_cxx13new_allocatorIN3DDT4NodeEE11_M_max_sizeEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNK9__gnu_cxx13new_allocatorIN3DDT4NodeEE11_M_max_sizeEv
	.def	_ZNK9__gnu_cxx13new_allocatorIN3DDT4NodeEE11_M_max_sizeEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNK9__gnu_cxx13new_allocatorIN3DDT4NodeEE11_M_max_sizeEv
_ZNK9__gnu_cxx13new_allocatorIN3DDT4NodeEE11_M_max_sizeEv:
.LFB5916:
	.loc 22 197 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1558:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1559:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:200: 	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
	.loc 22 200 50
	movabsq	$128102389400760775, %rax	 #, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:204:       }
	.loc 22 204 7
	popq	%rbp	 #
.LCFI1560:
	ret	
.LFE5916:
	.seh_endproc
	.section	.text$_ZN9__gnu_cxx13new_allocatorIN3DDT4NodeEE8allocateEyPKv,"x"
	.linkonce discard
	.align 2
	.globl	_ZN9__gnu_cxx13new_allocatorIN3DDT4NodeEE8allocateEyPKv
	.def	_ZN9__gnu_cxx13new_allocatorIN3DDT4NodeEE8allocateEyPKv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN9__gnu_cxx13new_allocatorIN3DDT4NodeEE8allocateEyPKv
_ZN9__gnu_cxx13new_allocatorIN3DDT4NodeEE8allocateEyPKv:
.LFB5915:
	.loc 22 103 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1561:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1562:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __n, __n
	movq	%r8, 32(%rbp)	 # D.125659, D.125659
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:111: 	if (__builtin_expect(__n > this->_M_max_size(), false))
	.loc 22 111 46
	movq	16(%rbp), %rcx	 # this,
	call	_ZNK9__gnu_cxx13new_allocatorIN3DDT4NodeEE11_M_max_sizeEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:111: 	if (__builtin_expect(__n > this->_M_max_size(), false))
	.loc 22 111 27
	cmpq	%rax, 24(%rbp)	 # _1, __n
	seta	%al	 #, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:111: 	if (__builtin_expect(__n > this->_M_max_size(), false))
	.loc 22 111 22
	movzbl	%al, %eax	 # _2, _3
	testl	%eax, %eax	 # _4
	setne	%al	 #, retval.77_10
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:111: 	if (__builtin_expect(__n > this->_M_max_size(), false))
	.loc 22 111 2
	testb	%al, %al	 # retval.77_10
	je	.L968	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:115: 	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
	.loc 22 115 6
	movabsq	$256204778801521550, %rax	 #, tmp90
	cmpq	%rax, 24(%rbp)	 # tmp90, __n
	jbe	.L969	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:116: 	      std::__throw_bad_array_new_length();
	.loc 22 116 41
	call	_ZSt28__throw_bad_array_new_lengthv	 #
.L969:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:117: 	    std::__throw_bad_alloc();
	.loc 22 117 28
	call	_ZSt17__throw_bad_allocv	 #
.L968:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:127: 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	.loc 22 127 41
	movq	24(%rbp), %rdx	 # __n, tmp91
	movq	%rdx, %rax	 # tmp91, tmp92
	salq	$3, %rax	 #, tmp92
	addq	%rdx, %rax	 # tmp91, tmp92
	salq	$3, %rax	 #, tmp93
	movq	%rax, %rcx	 # _6,
	call	_Znwy	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:127: 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	.loc 22 127 60
	nop	
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:128:       }
	.loc 22 128 7
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1563:
	ret	
.LFE5915:
	.seh_endproc
	.section	.text$_ZN9__gnu_cxxeqIPKN3DDT4NodeES4_St6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T1_EERKNS8_IT0_SA_EE,"x"
	.linkonce discard
	.globl	_ZN9__gnu_cxxeqIPKN3DDT4NodeES4_St6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T1_EERKNS8_IT0_SA_EE
	.def	_ZN9__gnu_cxxeqIPKN3DDT4NodeES4_St6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T1_EERKNS8_IT0_SA_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN9__gnu_cxxeqIPKN3DDT4NodeES4_St6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T1_EERKNS8_IT0_SA_EE
_ZN9__gnu_cxxeqIPKN3DDT4NodeES4_St6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T1_EERKNS8_IT0_SA_EE:
.LFB5917:
	.loc 15 1105 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1564:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1565:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI1566:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI1567:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __lhs, __lhs
	movq	%rdx, 40(%rbp)	 # __rhs, __rhs
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1108:     { return __lhs.base() == __rhs.base(); }
	.loc 15 1108 24
	movq	32(%rbp), %rcx	 # __lhs,
	call	_ZNK9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS2_SaIS2_EEE4baseEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1108:     { return __lhs.base() == __rhs.base(); }
	.loc 15 1108 27
	movq	(%rax), %rbx	 # *_1, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1108:     { return __lhs.base() == __rhs.base(); }
	.loc 15 1108 40
	movq	40(%rbp), %rax	 # __rhs, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZNK9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS2_SaIS2_EEE4baseEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1108:     { return __lhs.base() == __rhs.base(); }
	.loc 15 1108 27
	movq	(%rax), %rax	 # *_3, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1108:     { return __lhs.base() == __rhs.base(); }
	.loc 15 1108 41
	cmpq	%rax, %rbx	 # _4, _2
	sete	%al	 #, _10
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1108:     { return __lhs.base() == __rhs.base(); }
	.loc 15 1108 44
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI1568:
	popq	%rbp	 #
.LCFI1569:
	ret	
.LFE5917:
	.seh_endproc
	.section	.text$_ZNK9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS2_SaIS2_EEEdeEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNK9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS2_SaIS2_EEEdeEv
	.def	_ZNK9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS2_SaIS2_EEEdeEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNK9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS2_SaIS2_EEEdeEv
_ZNK9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS2_SaIS2_EEEdeEv:
.LFB5918:
	.loc 15 1025 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1570:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1571:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1026:       { return *_M_current; }
	.loc 15 1026 17
	movq	16(%rbp), %rax	 # this, tmp84
	movq	(%rax), %rax	 # this_2(D)->_M_current, _3
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1026:       { return *_M_current; }
	.loc 15 1026 29
	popq	%rbp	 #
.LCFI1572:
	ret	
.LFE5918:
	.seh_endproc
	.section	.text$_ZSt10_ConstructIN3DDT4NodeEJRKS1_EEvPT_DpOT0_,"x"
	.linkonce discard
	.globl	_ZSt10_ConstructIN3DDT4NodeEJRKS1_EEvPT_DpOT0_
	.def	_ZSt10_ConstructIN3DDT4NodeEJRKS1_EEvPT_DpOT0_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt10_ConstructIN3DDT4NodeEJRKS1_EEvPT_DpOT0_
_ZSt10_ConstructIN3DDT4NodeEJRKS1_EEvPT_DpOT0_:
.LFB5919:
	.loc 21 108 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1573:
	pushq	%rdi	 #
	.seh_pushreg	%rdi
.LCFI1574:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI1575:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1576:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI1577:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI1578:
	.seh_endprologue
	movq	%rcx, 48(%rbp)	 # __p, __p
	movq	%rdx, 56(%rbp)	 # __args#0, __args#0
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:109:     { ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...); }
	.loc 21 109 61
	movq	56(%rbp), %rax	 # __args#0, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZSt7forwardIRKN3DDT4NodeEEOT_RNSt16remove_referenceIS4_E4typeE	 #
	movq	%rax, %rdi	 #, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:109:     { ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...); }
	.loc 21 109 13
	movq	48(%rbp), %rbx	 # __p, _6
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:109:     { ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...); }
	.loc 21 109 7
	movq	%rbx, %rdx	 # _6,
	movl	$72, %ecx	 #,
	call	_ZnwyPv	 #
	movq	%rax, %rsi	 #, _8
	movq	%rdi, %rdx	 # _4,
	movq	%rsi, %rcx	 # _8,
.LEHB53:
	call	_ZN3DDT4NodeC1ERKS0_	 #
.LEHE53:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:109:     { ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...); }
	.loc 21 109 75
	jmp	.L978	 #
.L977:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:109:     { ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...); }
	.loc 21 109 7
	movq	%rax, %rdi	 #, tmp87
	movq	%rbx, %rdx	 # _6,
	movq	%rsi, %rcx	 # _8,
	call	_ZdlPvS_	 #
	movq	%rdi, %rax	 # tmp87, D.129303
	movq	%rax, %rcx	 # D.129303,
.LEHB54:
	call	_Unwind_Resume	 #
	nop	
.LEHE54:
.L978:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:109:     { ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...); }
	.loc 21 109 75
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI1579:
	popq	%rsi	 #
.LCFI1580:
	popq	%rdi	 #
.LCFI1581:
	popq	%rbp	 #
.LCFI1582:
	ret	
.LFE5919:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA5919:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE5919-.LLSDACSB5919
.LLSDACSB5919:
	.uleb128 .LEHB53-.LFB5919
	.uleb128 .LEHE53-.LEHB53
	.uleb128 .L977-.LFB5919
	.uleb128 0
	.uleb128 .LEHB54-.LFB5919
	.uleb128 .LEHE54-.LEHB54
	.uleb128 0
	.uleb128 0
.LLSDACSE5919:
	.section	.text$_ZSt10_ConstructIN3DDT4NodeEJRKS1_EEvPT_DpOT0_,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKN3DDT4NodeEPS4_EET0_T_S9_S8_,"x"
	.linkonce discard
	.globl	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKN3DDT4NodeEPS4_EET0_T_S9_S8_
	.def	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKN3DDT4NodeEPS4_EET0_T_S9_S8_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKN3DDT4NodeEPS4_EET0_T_S9_S8_
_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKN3DDT4NodeEPS4_EET0_T_S9_S8_:
.LFB5920:
	.loc 3 380 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1583:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1584:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # __result, __result
.LBB153:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:383: 	  for(_Distance __n = __last - __first; __n > 0; --__n)
	.loc 3 383 31
	movq	24(%rbp), %rax	 # __last, tmp85
	subq	16(%rbp), %rax	 # __first, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:383: 	  for(_Distance __n = __last - __first; __n > 0; --__n)
	.loc 3 383 18
	sarq	$3, %rax	 #, _1
	movq	%rax, %rdx	 # _1, tmp86
	movabsq	$-8198552921648689607, %rax	 #, tmp88
	imulq	%rdx, %rax	 # tmp86, tmp87
	movq	%rax, -8(%rbp)	 # tmp87, __n
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:383: 	  for(_Distance __n = __last - __first; __n > 0; --__n)
	.loc 3 383 4
	jmp	.L980	 #
.L981:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:385: 	      *__result = *__first;
	.loc 3 385 18 discriminator 3
	movq	32(%rbp), %rax	 # __result, tmp89
	movq	16(%rbp), %rdx	 # __first,
	movq	%rax, %rcx	 # tmp89,
	call	_ZN3DDT4NodeaSERKS0_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:386: 	      ++__first;
	.loc 3 386 8 discriminator 3
	addq	$72, 16(%rbp)	 #, __first
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:387: 	      ++__result;
	.loc 3 387 8 discriminator 3
	addq	$72, 32(%rbp)	 #, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:383: 	  for(_Distance __n = __last - __first; __n > 0; --__n)
	.loc 3 383 4 discriminator 3
	subq	$1, -8(%rbp)	 #, __n
.L980:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:383: 	  for(_Distance __n = __last - __first; __n > 0; --__n)
	.loc 3 383 46 discriminator 1
	cmpq	$0, -8(%rbp)	 #, __n
	jg	.L981	 #,
.LBE153:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:389: 	  return __result;
	.loc 3 389 11
	movq	32(%rbp), %rax	 # __result, _11
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:390: 	}
	.loc 3 390 2
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI1585:
	ret	
.LFE5920:
	.seh_endproc
	.section	.text$_ZSt7forwardIRN3DDT4NodeEEOT_RNSt16remove_referenceIS3_E4typeE,"x"
	.linkonce discard
	.globl	_ZSt7forwardIRN3DDT4NodeEEOT_RNSt16remove_referenceIS3_E4typeE
	.def	_ZSt7forwardIRN3DDT4NodeEEOT_RNSt16remove_referenceIS3_E4typeE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt7forwardIRN3DDT4NodeEEOT_RNSt16remove_referenceIS3_E4typeE
_ZSt7forwardIRN3DDT4NodeEEOT_RNSt16remove_referenceIS3_E4typeE:
.LFB5921:
	.loc 17 77 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1586:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1587:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\move.h:78:     { return static_cast<_Tp&&>(__t); }
	.loc 17 78 36
	movq	16(%rbp), %rax	 # __t, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\move.h:78:     { return static_cast<_Tp&&>(__t); }
	.loc 17 78 39
	popq	%rbp	 #
.LCFI1588:
	ret	
.LFE5921:
	.seh_endproc
	.section	.text$_ZNSt16allocator_traitsISaI5BlorbEE8max_sizeERKS1_,"x"
	.linkonce discard
	.globl	_ZNSt16allocator_traitsISaI5BlorbEE8max_sizeERKS1_
	.def	_ZNSt16allocator_traitsISaI5BlorbEE8max_sizeERKS1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt16allocator_traitsISaI5BlorbEE8max_sizeERKS1_
_ZNSt16allocator_traitsISaI5BlorbEE8max_sizeERKS1_:
.LFB5923:
	.loc 16 543 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1589:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1590:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __a, __a
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\alloc_traits.h:548: 	return size_t(-1) / sizeof(value_type);
	.loc 16 548 39
	movabsq	$384307168202282325, %rax	 #, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\alloc_traits.h:550:       }
	.loc 16 550 7
	popq	%rbp	 #
.LCFI1591:
	ret	
.LFE5923:
	.seh_endproc
	.section	.text$_ZNSt6vectorI5BlorbSaIS0_EE11_S_max_sizeERKS1_,"x"
	.linkonce discard
	.globl	_ZNSt6vectorI5BlorbSaIS0_EE11_S_max_sizeERKS1_
	.def	_ZNSt6vectorI5BlorbSaIS0_EE11_S_max_sizeERKS1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorI5BlorbSaIS0_EE11_S_max_sizeERKS1_
_ZNSt6vectorI5BlorbSaIS0_EE11_S_max_sizeERKS1_:
.LFB5922:
	.loc 11 1776 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1592:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1593:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __a, __a
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1781: 	const size_t __diffmax
	.loc 11 1781 15
	movabsq	$192153584101141162, %rax	 #, tmp90
	movq	%rax, -8(%rbp)	 # tmp90, __diffmax
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1783: 	const size_t __allocmax = _Alloc_traits::max_size(__a);
	.loc 11 1783 51
	movq	16(%rbp), %rcx	 # __a,
	call	_ZNSt16allocator_traitsISaI5BlorbEE8max_sizeERKS1_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1783: 	const size_t __allocmax = _Alloc_traits::max_size(__a);
	.loc 11 1783 15
	movq	%rax, -16(%rbp)	 # _1, __allocmax
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1784: 	return (std::min)(__diffmax, __allocmax);
	.loc 11 1784 19
	leaq	-16(%rbp), %rdx	 #, tmp86
	leaq	-8(%rbp), %rax	 #, tmp87
	movq	%rax, %rcx	 # tmp87,
	call	_ZSt3minIyERKT_S2_S2_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1784: 	return (std::min)(__diffmax, __allocmax);
	.loc 11 1784 41
	movq	(%rax), %rax	 # *_2, _9
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:1785:       }
	.loc 11 1785 7
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI1594:
	ret	
.LFE5922:
	.seh_endproc
	.section	.text$_ZNKSt12_Vector_baseI5BlorbSaIS0_EE19_M_get_Tp_allocatorEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNKSt12_Vector_baseI5BlorbSaIS0_EE19_M_get_Tp_allocatorEv
	.def	_ZNKSt12_Vector_baseI5BlorbSaIS0_EE19_M_get_Tp_allocatorEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNKSt12_Vector_baseI5BlorbSaIS0_EE19_M_get_Tp_allocatorEv
_ZNKSt12_Vector_baseI5BlorbSaIS0_EE19_M_get_Tp_allocatorEv:
.LFB5924:
	.loc 11 280 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1595:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1596:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:281:       { return this->_M_impl; }
	.loc 11 281 22
	movq	16(%rbp), %rax	 # this, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:281:       { return this->_M_impl; }
	.loc 11 281 31
	popq	%rbp	 #
.LCFI1597:
	ret	
.LFE5924:
	.seh_endproc
	.section	.text$_ZSt18uninitialized_copyIPK5BlorbPS0_ET0_T_S5_S4_,"x"
	.linkonce discard
	.globl	_ZSt18uninitialized_copyIPK5BlorbPS0_ET0_T_S5_S4_
	.def	_ZSt18uninitialized_copyIPK5BlorbPS0_ET0_T_S5_S4_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt18uninitialized_copyIPK5BlorbPS0_ET0_T_S5_S4_
_ZSt18uninitialized_copyIPK5BlorbPS0_ET0_T_S5_S4_:
.LFB5926:
	.loc 19 126 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1598:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1599:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # __result, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:145:       const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
	.loc 19 145 18
	movb	$1, -1(%rbp)	 #, __assignable
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:151: 	__uninit_copy(__first, __last, __result);
	.loc 19 151 15
	movq	32(%rbp), %rdx	 # __result, tmp84
	movq	24(%rbp), %rax	 # __last, tmp85
	movq	%rdx, %r8	 # tmp84,
	movq	%rax, %rdx	 # tmp85,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPK5BlorbPS2_EET0_T_S7_S6_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:152:     }
	.loc 19 152 5
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI1600:
	ret	
.LFE5926:
	.seh_endproc
	.section	.text$_ZNSt12_Destroy_auxILb0EE9__destroyIP5BlorbEEvT_S4_,"x"
	.linkonce discard
	.globl	_ZNSt12_Destroy_auxILb0EE9__destroyIP5BlorbEEvT_S4_
	.def	_ZNSt12_Destroy_auxILb0EE9__destroyIP5BlorbEEvT_S4_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt12_Destroy_auxILb0EE9__destroyIP5BlorbEEvT_S4_
_ZNSt12_Destroy_auxILb0EE9__destroyIP5BlorbEEvT_S4_:
.LFB5928:
	.loc 21 149 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1601:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1602:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:151: 	  for (; __first != __last; ++__first)
	.loc 21 151 4
	jmp	.L994	 #
.L995:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:152: 	    std::_Destroy(std::__addressof(*__first));
	.loc 21 152 19 discriminator 2
	movq	16(%rbp), %rcx	 # __first,
	call	_ZSt11__addressofI5BlorbEPT_RS1_	 #
	movq	%rax, %rcx	 # _1,
	call	_ZSt8_DestroyI5BlorbEvPT_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:151: 	  for (; __first != __last; ++__first)
	.loc 21 151 4 discriminator 2
	addq	$48, 16(%rbp)	 #, __first
.L994:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:151: 	  for (; __first != __last; ++__first)
	.loc 21 151 19 discriminator 1
	movq	16(%rbp), %rax	 # __first, tmp83
	cmpq	24(%rbp), %rax	 # __last, tmp83
	jne	.L995	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:153: 	}
	.loc 21 153 2
	nop	
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1603:
	ret	
.LFE5928:
	.seh_endproc
	.section	.text$_ZN3DDTaSERKS_,"x"
	.linkonce discard
	.align 2
	.globl	_ZN3DDTaSERKS_
	.def	_ZN3DDTaSERKS_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN3DDTaSERKS_
_ZN3DDTaSERKS_:
.LFB5931:
	.loc 10 47 8
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1604:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1605:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # D.125741, D.125741
 # main.cpp:47: struct DDT {
	.loc 10 47 8
	movq	24(%rbp), %rdx	 # D.125741, _1
	movq	16(%rbp), %rax	 # this, _2
	movq	%rax, %rcx	 # _2,
	call	_ZNSt6vectorIN3DDT4NodeESaIS1_EEaSERKS3_	 #
	movq	24(%rbp), %rax	 # D.125741, tmp87
	movl	24(%rax), %edx	 # _4(D)->current, _3
	movq	16(%rbp), %rax	 # this, tmp88
	movl	%edx, 24(%rax)	 # _3, this_5(D)->current
	movq	16(%rbp), %rax	 # this, _9
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1606:
	ret	
.LFE5931:
	.seh_endproc
	.section	.text$_ZN5BlorbaSEOS_,"x"
	.linkonce discard
	.align 2
	.globl	_ZN5BlorbaSEOS_
	.def	_ZN5BlorbaSEOS_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN5BlorbaSEOS_
_ZN5BlorbaSEOS_:
.LFB5930:
	.loc 10 154 8
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1607:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1608:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # D.125747, D.125747
 # main.cpp:154: struct Blorb {
	.loc 10 154 8
	movq	16(%rbp), %rax	 # this, tmp87
	movq	24(%rbp), %rdx	 # D.125747, tmp88
	movq	(%rdx), %rdx	 # _6(D)->pos, tmp89
	movq	%rdx, (%rax)	 # tmp89, this_5(D)->pos
	movq	24(%rbp), %rax	 # D.125747, tmp90
	movss	8(%rax), %xmm0	 # _6(D)->angle, _1
	movq	16(%rbp), %rax	 # this, tmp91
	movss	%xmm0, 8(%rax)	 # _1, this_5(D)->angle
	movq	24(%rbp), %rax	 # D.125747, tmp92
	leaq	16(%rax), %rdx	 #, _2
	movq	16(%rbp), %rax	 # this, tmp93
	addq	$16, %rax	 #, _3
	movq	%rax, %rcx	 # _3,
	call	_ZN3DDTaSERKS_	 #
	movq	16(%rbp), %rax	 # this, _10
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1609:
	ret	
.LFE5930:
	.seh_endproc
	.section	.text$_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIP5BlorbS4_EET0_T_S6_S5_,"x"
	.linkonce discard
	.globl	_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIP5BlorbS4_EET0_T_S6_S5_
	.def	_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIP5BlorbS4_EET0_T_S6_S5_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIP5BlorbS4_EET0_T_S6_S5_
_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIP5BlorbS4_EET0_T_S6_S5_:
.LFB5929:
	.loc 3 400 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1610:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1611:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # __result, __result
.LBB154:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:403: 	  for(_Distance __n = __last - __first; __n > 0; --__n)
	.loc 3 403 31
	movq	24(%rbp), %rax	 # __last, tmp86
	subq	16(%rbp), %rax	 # __first, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:403: 	  for(_Distance __n = __last - __first; __n > 0; --__n)
	.loc 3 403 18
	sarq	$4, %rax	 #, _1
	movq	%rax, %rdx	 # _1, tmp87
	movabsq	$-6148914691236517205, %rax	 #, tmp89
	imulq	%rdx, %rax	 # tmp87, tmp88
	movq	%rax, -8(%rbp)	 # tmp88, __n
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:403: 	  for(_Distance __n = __last - __first; __n > 0; --__n)
	.loc 3 403 4
	jmp	.L1001	 #
.L1002:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:405: 	      *__result = std::move(*__first);
	.loc 3 405 29 discriminator 3
	movq	16(%rbp), %rcx	 # __first,
	call	_ZSt4moveIR5BlorbEONSt16remove_referenceIT_E4typeEOS3_	 #
	movq	%rax, %rdx	 #, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:405: 	      *__result = std::move(*__first);
	.loc 3 405 18 discriminator 3
	movq	32(%rbp), %rax	 # __result, tmp90
	movq	%rax, %rcx	 # tmp90,
	call	_ZN5BlorbaSEOS_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:406: 	      ++__first;
	.loc 3 406 8 discriminator 3
	addq	$48, 16(%rbp)	 #, __first
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:407: 	      ++__result;
	.loc 3 407 8 discriminator 3
	addq	$48, 32(%rbp)	 #, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:403: 	  for(_Distance __n = __last - __first; __n > 0; --__n)
	.loc 3 403 4 discriminator 3
	subq	$1, -8(%rbp)	 #, __n
.L1001:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:403: 	  for(_Distance __n = __last - __first; __n > 0; --__n)
	.loc 3 403 46 discriminator 1
	cmpq	$0, -8(%rbp)	 #, __n
	jg	.L1002	 #,
.LBE154:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:409: 	  return __result;
	.loc 3 409 11
	movq	32(%rbp), %rax	 # __result, _12
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:410: 	}
	.loc 3 410 2
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI1612:
	ret	
.LFE5929:
	.seh_endproc
	.section	.text$_ZNK9__gnu_cxx13new_allocatorImE11_M_max_sizeEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNK9__gnu_cxx13new_allocatorImE11_M_max_sizeEv
	.def	_ZNK9__gnu_cxx13new_allocatorImE11_M_max_sizeEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNK9__gnu_cxx13new_allocatorImE11_M_max_sizeEv
_ZNK9__gnu_cxx13new_allocatorImE11_M_max_sizeEv:
.LFB5949:
	.loc 22 197 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1613:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1614:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:200: 	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
	.loc 22 200 50
	movabsq	$2305843009213693951, %rax	 #, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:204:       }
	.loc 22 204 7
	popq	%rbp	 #
.LCFI1615:
	ret	
.LFE5949:
	.seh_endproc
	.section	.text$_ZN9__gnu_cxx13new_allocatorImE8allocateEyPKv,"x"
	.linkonce discard
	.align 2
	.globl	_ZN9__gnu_cxx13new_allocatorImE8allocateEyPKv
	.def	_ZN9__gnu_cxx13new_allocatorImE8allocateEyPKv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN9__gnu_cxx13new_allocatorImE8allocateEyPKv
_ZN9__gnu_cxx13new_allocatorImE8allocateEyPKv:
.LFB5948:
	.loc 22 103 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1616:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1617:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __n, __n
	movq	%r8, 32(%rbp)	 # D.125905, D.125905
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:111: 	if (__builtin_expect(__n > this->_M_max_size(), false))
	.loc 22 111 46
	movq	16(%rbp), %rcx	 # this,
	call	_ZNK9__gnu_cxx13new_allocatorImE11_M_max_sizeEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:111: 	if (__builtin_expect(__n > this->_M_max_size(), false))
	.loc 22 111 27
	cmpq	%rax, 24(%rbp)	 # _1, __n
	seta	%al	 #, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:111: 	if (__builtin_expect(__n > this->_M_max_size(), false))
	.loc 22 111 22
	movzbl	%al, %eax	 # _2, _3
	testl	%eax, %eax	 # _4
	setne	%al	 #, retval.16_10
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:111: 	if (__builtin_expect(__n > this->_M_max_size(), false))
	.loc 22 111 2
	testb	%al, %al	 # retval.16_10
	je	.L1007	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:115: 	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
	.loc 22 115 6
	movabsq	$4611686018427387903, %rax	 #, tmp90
	cmpq	%rax, 24(%rbp)	 # tmp90, __n
	jbe	.L1008	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:116: 	      std::__throw_bad_array_new_length();
	.loc 22 116 41
	call	_ZSt28__throw_bad_array_new_lengthv	 #
.L1008:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:117: 	    std::__throw_bad_alloc();
	.loc 22 117 28
	call	_ZSt17__throw_bad_allocv	 #
.L1007:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:127: 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	.loc 22 127 41
	movq	24(%rbp), %rax	 # __n, tmp91
	salq	$2, %rax	 #, _6
	movq	%rax, %rcx	 # _6,
	call	_Znwy	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:127: 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	.loc 22 127 60
	nop	
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:128:       }
	.loc 22 128 7
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1618:
	ret	
.LFE5948:
	.seh_endproc
	.section	.text$_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_,"x"
	.linkonce discard
	.globl	_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_
	.def	_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_
_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_:
.LFB5950:
	.loc 3 486 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1619:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1620:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # __result, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:490:       if (std::is_constant_evaluated())
	.loc 3 490 37
	call	_ZSt21is_constant_evaluatedv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:490:       if (std::is_constant_evaluated())
	.loc 3 490 7
	testb	%al, %al	 # retval.18_5
	je	.L1011	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:492: 	  __copy_m(__first, __last, __result);
	.loc 3 492 12
	movq	32(%rbp), %rdx	 # __result, tmp85
	movq	24(%rbp), %rax	 # __last, tmp86
	movq	%rdx, %r8	 # tmp85,
	movq	%rax, %rdx	 # tmp86,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPmS3_EET0_T_S5_S4_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:492: 	  __copy_m(__first, __last, __result);
	.loc 3 492 38
	jmp	.L1012	 #
.L1011:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:495: 			      _Category>::__copy_m(__first, __last, __result);
	.loc 3 495 30
	movq	32(%rbp), %rdx	 # __result, tmp87
	movq	24(%rbp), %rax	 # __last, tmp88
	movq	%rdx, %r8	 # tmp87,
	movq	%rax, %rdx	 # tmp88,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:495: 			      _Category>::__copy_m(__first, __last, __result);
	.loc 3 495 56
	nop	
.L1012:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:496:     }
	.loc 3 496 5
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1621:
	ret	
.LFE5950:
	.seh_endproc
	.section	.text$_ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_,"x"
	.linkonce discard
	.globl	_ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_
	.def	_ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_
_ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_:
.LFB5951:
	.loc 3 313 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1622:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1623:
	leaq	(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1624:
	.seh_endprologue
	movq	%rcx, 24(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, %rbx	 #, tmp82
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:315:     { return __it; }
	.loc 3 315 14
	movq	24(%rbp), %rcx	 # .result_ptr, tmp83
	movq	(%rbx), %rax	 # __it, tmp84
	movq	8(%rbx), %rdx	 # __it,
	movq	%rax, (%rcx)	 # tmp84, <retval>
	movq	%rdx, 8(%rcx)	 #, <retval>
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:315:     { return __it; }
	.loc 3 315 20
	movq	24(%rbp), %rax	 # .result_ptr,
	popq	%rbx	 #
.LCFI1625:
	popq	%rbp	 #
.LCFI1626:
	ret	
.LFE5951:
	.seh_endproc
	.section	.text$_ZSt14__copy_move_a1ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_,"x"
	.linkonce discard
	.globl	_ZSt14__copy_move_a1ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_
	.def	_ZSt14__copy_move_a1ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt14__copy_move_a1ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_
_ZSt14__copy_move_a1ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_:
.LFB5952:
	.loc 3 521 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1627:
	pushq	%rdi	 #
	.seh_pushreg	%rdi
.LCFI1628:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI1629:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1630:
	subq	$88, %rsp	 #,
	.seh_stackalloc	88
.LCFI1631:
	leaq	80(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 80
.LCFI1632:
	.seh_endprologue
	movq	%rcx, 48(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, %rbx	 #, tmp82
	movq	%r8, %rdi	 #, tmp83
	movq	%r9, %rsi	 #, tmp84
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:522:     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
	.loc 3 522 42
	movq	48(%rbp), %rcx	 # .result_ptr, tmp85
	movq	(%rbx), %rax	 # __first, tmp86
	movq	8(%rbx), %rdx	 # __first,
	movq	%rax, -16(%rbp)	 # tmp86,
	movq	%rdx, -8(%rbp)	 #,
	movq	(%rdi), %rax	 # __last, tmp87
	movq	8(%rdi), %rdx	 # __last,
	movq	%rax, -32(%rbp)	 # tmp87,
	movq	%rdx, -24(%rbp)	 #,
	movq	(%rsi), %rax	 # __result, tmp88
	movq	8(%rsi), %rdx	 # __result,
	movq	%rax, -48(%rbp)	 # tmp88,
	movq	%rdx, -40(%rbp)	 #,
	leaq	-48(%rbp), %r8	 #, tmp89
	leaq	-32(%rbp), %rdx	 #, tmp90
	leaq	-16(%rbp), %rax	 #, tmp91
	movq	%r8, %r9	 # tmp89,
	movq	%rdx, %r8	 # tmp90,
	movq	%rax, %rdx	 # tmp91,
	call	_ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:522:     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
	.loc 3 522 68
	nop	
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:522:     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
	.loc 3 522 71
	movq	48(%rbp), %rax	 # .result_ptr,
	addq	$88, %rsp	 #,
	popq	%rbx	 #
.LCFI1633:
	popq	%rsi	 #
.LCFI1634:
	popq	%rdi	 #
.LCFI1635:
	popq	%rbp	 #
.LCFI1636:
	ret	
.LFE5952:
	.seh_endproc
	.section	.text$_ZSt23__copy_move_backward_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_,"x"
	.linkonce discard
	.globl	_ZSt23__copy_move_backward_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
	.def	_ZSt23__copy_move_backward_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt23__copy_move_backward_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
_ZSt23__copy_move_backward_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_:
.LFB5953:
	.loc 3 750 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1637:
	pushq	%rdi	 #
	.seh_pushreg	%rdi
.LCFI1638:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI1639:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1640:
	subq	$88, %rsp	 #,
	.seh_stackalloc	88
.LCFI1641:
	leaq	80(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 80
.LCFI1642:
	.seh_endprologue
	movq	%rcx, 48(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, %rbx	 #, tmp83
	movq	%r8, %rdi	 #, tmp84
	movq	%r9, %rsi	 #, tmp85
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:754:       if (std::is_constant_evaluated())
	.loc 3 754 37
	call	_ZSt21is_constant_evaluatedv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:754:       if (std::is_constant_evaluated())
	.loc 3 754 7
	testb	%al, %al	 # retval.31_4
	je	.L1018	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:756: 	  __copy_move_b(__first, __last, __result);
	.loc 3 756 17
	movq	48(%rbp), %rcx	 # .result_ptr, tmp86
	movq	(%rbx), %rax	 # __first, tmp87
	movq	8(%rbx), %rdx	 # __first,
	movq	%rax, -16(%rbp)	 # tmp87,
	movq	%rdx, -8(%rbp)	 #,
	movq	(%rdi), %rax	 # __last, tmp88
	movq	8(%rdi), %rdx	 # __last,
	movq	%rax, -32(%rbp)	 # tmp88,
	movq	%rdx, -24(%rbp)	 #,
	movq	(%rsi), %rax	 # __result, tmp89
	movq	8(%rsi), %rdx	 # __result,
	movq	%rax, -48(%rbp)	 # tmp89,
	movq	%rdx, -40(%rbp)	 #,
	leaq	-48(%rbp), %r8	 #, tmp90
	leaq	-32(%rbp), %rdx	 #, tmp91
	leaq	-16(%rbp), %rax	 #, tmp92
	movq	%r8, %r9	 # tmp90,
	movq	%rdx, %r8	 # tmp91,
	movq	%rax, %rdx	 # tmp92,
	call	_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bISt13_Bit_iteratorS3_EET0_T_S5_S4_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:756: 	  __copy_move_b(__first, __last, __result);
	.loc 3 756 43
	jmp	.L1019	 #
.L1018:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:760: 				       _Category>::__copy_move_b(__first,
	.loc 3 760 37
	movq	48(%rbp), %rcx	 # .result_ptr, tmp93
	movq	(%rbx), %rax	 # __first, tmp94
	movq	8(%rbx), %rdx	 # __first,
	movq	%rax, -48(%rbp)	 # tmp94,
	movq	%rdx, -40(%rbp)	 #,
	movq	(%rdi), %rax	 # __last, tmp95
	movq	8(%rdi), %rdx	 # __last,
	movq	%rax, -32(%rbp)	 # tmp95,
	movq	%rdx, -24(%rbp)	 #,
	movq	(%rsi), %rax	 # __result, tmp96
	movq	8(%rsi), %rdx	 # __result,
	movq	%rax, -16(%rbp)	 # tmp96,
	movq	%rdx, -8(%rbp)	 #,
	leaq	-16(%rbp), %r8	 #, tmp97
	leaq	-32(%rbp), %rdx	 #, tmp98
	leaq	-48(%rbp), %rax	 #, tmp99
	movq	%r8, %r9	 # tmp97,
	movq	%rdx, %r8	 # tmp98,
	movq	%rax, %rdx	 # tmp99,
	call	_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bISt13_Bit_iteratorS3_EET0_T_S5_S4_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:762: 								 __result);
	.loc 3 762 18
	nop	
.L1019:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:763:     }
	.loc 3 763 5
	movq	48(%rbp), %rax	 # .result_ptr,
	addq	$88, %rsp	 #,
	popq	%rbx	 #
.LCFI1643:
	popq	%rsi	 #
.LCFI1644:
	popq	%rdi	 #
.LCFI1645:
	popq	%rbp	 #
.LCFI1646:
	ret	
.LFE5953:
	.seh_endproc
	.section	.text$_ZSt14__copy_move_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_,"x"
	.linkonce discard
	.globl	_ZSt14__copy_move_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
	.def	_ZSt14__copy_move_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt14__copy_move_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
_ZSt14__copy_move_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_:
.LFB5954:
	.loc 3 521 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1647:
	pushq	%rdi	 #
	.seh_pushreg	%rdi
.LCFI1648:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI1649:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1650:
	subq	$88, %rsp	 #,
	.seh_stackalloc	88
.LCFI1651:
	leaq	80(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 80
.LCFI1652:
	.seh_endprologue
	movq	%rcx, 48(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, %rbx	 #, tmp82
	movq	%r8, %rdi	 #, tmp83
	movq	%r9, %rsi	 #, tmp84
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:522:     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
	.loc 3 522 42
	movq	48(%rbp), %rcx	 # .result_ptr, tmp85
	movq	(%rbx), %rax	 # __first, tmp86
	movq	8(%rbx), %rdx	 # __first,
	movq	%rax, -16(%rbp)	 # tmp86,
	movq	%rdx, -8(%rbp)	 #,
	movq	(%rdi), %rax	 # __last, tmp87
	movq	8(%rdi), %rdx	 # __last,
	movq	%rax, -32(%rbp)	 # tmp87,
	movq	%rdx, -24(%rbp)	 #,
	movq	(%rsi), %rax	 # __result, tmp88
	movq	8(%rsi), %rdx	 # __result,
	movq	%rax, -48(%rbp)	 # tmp88,
	movq	%rdx, -40(%rbp)	 #,
	leaq	-48(%rbp), %r8	 #, tmp89
	leaq	-32(%rbp), %rdx	 #, tmp90
	leaq	-16(%rbp), %rax	 #, tmp91
	movq	%r8, %r9	 # tmp89,
	movq	%rdx, %r8	 # tmp90,
	movq	%rax, %rdx	 # tmp91,
	call	_ZSt14__copy_move_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:522:     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
	.loc 3 522 68
	nop	
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:522:     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
	.loc 3 522 71
	movq	48(%rbp), %rax	 # .result_ptr,
	addq	$88, %rsp	 #,
	popq	%rbx	 #
.LCFI1653:
	popq	%rsi	 #
.LCFI1654:
	popq	%rdi	 #
.LCFI1655:
	popq	%rbp	 #
.LCFI1656:
	ret	
.LFE5954:
	.seh_endproc
	.section	.text$_ZSt10_ConstructIiJEEvPT_DpOT0_,"x"
	.linkonce discard
	.globl	_ZSt10_ConstructIiJEEvPT_DpOT0_
	.def	_ZSt10_ConstructIiJEEvPT_DpOT0_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt10_ConstructIiJEEvPT_DpOT0_
_ZSt10_ConstructIiJEEvPT_DpOT0_:
.LFB5955:
	.loc 21 108 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1657:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1658:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __p, __p
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:109:     { ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...); }
	.loc 21 109 13
	movq	16(%rbp), %rax	 # __p, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:109:     { ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...); }
	.loc 21 109 7
	movq	%rax, %rdx	 # _2,
	movl	$4, %ecx	 #,
	call	_ZnwyPv	 #
	movl	$0, (%rax)	 #, MEM[(int *)_5]
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:109:     { ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...); }
	.loc 21 109 75
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1659:
	ret	
.LFE5955:
	.seh_endproc
	.section	.text$_ZSt6fill_nIPiyiET_S1_T0_RKT1_,"x"
	.linkonce discard
	.globl	_ZSt6fill_nIPiyiET_S1_T0_RKT1_
	.def	_ZSt6fill_nIPiyiET_S1_T0_RKT1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt6fill_nIPiyiET_S1_T0_RKT1_
_ZSt6fill_nIPiyiET_S1_T0_RKT1_:
.LFB5956:
	.loc 3 1144 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1660:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1661:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI1662:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI1663:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __first, __first
	movq	%rdx, 40(%rbp)	 # __n, __n
	movq	%r8, 48(%rbp)	 # __value, __value
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:1150: 			       std::__iterator_category(__first));
	.loc 3 1150 35
	leaq	32(%rbp), %rcx	 #, tmp91
	call	_ZSt19__iterator_categoryIPiENSt15iterator_traitsIT_E17iterator_categoryERKS2_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:1149:       return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
	.loc 3 1149 29
	movq	40(%rbp), %rax	 # __n, tmp87
	movq	%rax, %rcx	 # tmp87,
	call	_ZSt17__size_to_integery	 #
	movq	%rax, %rdx	 #, _1
	movq	32(%rbp), %rax	 # __first, __first.53_2
	movq	48(%rbp), %rcx	 # __value, tmp88
	movl	%ebx, %r9d	 # D.127791,
	movq	%rcx, %r8	 # tmp88,
	movq	%rax, %rcx	 # __first.53_2,
	call	_ZSt10__fill_n_aIPiyiET_S1_T0_RKT1_St26random_access_iterator_tag	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:1151:     }
	.loc 3 1151 5
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI1664:
	popq	%rbp	 #
.LCFI1665:
	ret	
.LFE5956:
	.seh_endproc
	.section	.text$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiiET0_T_SA_S9_RSaIT1_E,"x"
	.linkonce discard
	.globl	_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiiET0_T_SA_S9_RSaIT1_E
	.def	_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiiET0_T_SA_S9_RSaIT1_E;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiiET0_T_SA_S9_RSaIT1_E
_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiiET0_T_SA_S9_RSaIT1_E:
.LFB5957:
	.loc 19 331 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1666:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1667:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # __result, __result
	movq	%r9, 40(%rbp)	 # D.126105, D.126105
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:333:     { return std::uninitialized_copy(__first, __last, __result); }
	.loc 19 333 37
	movq	32(%rbp), %rdx	 # __result, tmp84
	movq	24(%rbp), %rax	 # __last, tmp85
	movq	%rdx, %r8	 # tmp84,
	movq	%rax, %rdx	 # tmp85,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:333:     { return std::uninitialized_copy(__first, __last, __result); }
	.loc 19 333 66
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1668:
	ret	
.LFE5957:
	.seh_endproc
	.section	.text$_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC1ERKS1_,"x"
	.linkonce discard
	.align 2
	.globl	_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC1ERKS1_
	.def	_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC1ERKS1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC1ERKS1_
_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC1ERKS1_:
.LFB5960:
	.loc 15 1010 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1669:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1670:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __i, __i
.LBB155:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1011:       : _M_current(__i) { }
	.loc 15 1011 9
	movq	24(%rbp), %rax	 # __i, tmp83
	movq	(%rax), %rdx	 # *__i_5(D), _1
	movq	16(%rbp), %rax	 # this, tmp84
	movq	%rdx, (%rax)	 # _1, this_3(D)->_M_current
.LBE155:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1011:       : _M_current(__i) { }
	.loc 15 1011 27
	nop	
	popq	%rbp	 #
.LCFI1671:
	ret	
.LFE5960:
	.seh_endproc
	.section	.text$_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEET_S8_,"x"
	.linkonce discard
	.globl	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEET_S8_
	.def	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEET_S8_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEET_S8_
_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEET_S8_:
.LFB5961:
	.loc 18 560 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1672:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1673:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __it, __it
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\cpp_type_traits.h:561:     { return __it; }
	.loc 18 561 14
	movq	16(%rbp), %rax	 # __it, D.127908
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\cpp_type_traits.h:561:     { return __it; }
	.loc 18 561 20
	popq	%rbp	 #
.LCFI1674:
	ret	
.LFE5961:
	.seh_endproc
	.section	.text$_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEENS1_IPiS6_EEET1_T0_SB_SA_,"x"
	.linkonce discard
	.globl	_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEENS1_IPiS6_EEET1_T0_SB_SA_
	.def	_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEENS1_IPiS6_EEET1_T0_SB_SA_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEENS1_IPiS6_EEET1_T0_SB_SA_
_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEENS1_IPiS6_EEET1_T0_SB_SA_:
.LFB5962:
	.loc 3 527 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1675:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI1676:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1677:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
.LCFI1678:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI1679:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __first, __first
	movq	%rdx, 40(%rbp)	 # __last, __last
	movq	%r8, 48(%rbp)	 # __result, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:529:       return std::__niter_wrap(__result,
	.loc 3 529 31
	movq	48(%rbp), %rax	 # __result, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZSt12__niter_baseIPiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE	 #
	movq	%rax, %rsi	 #, _1
	movq	40(%rbp), %rax	 # __last, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZSt12__niter_baseIPKiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE	 #
	movq	%rax, %rbx	 #, _2
	movq	32(%rbp), %rcx	 # __first,
	call	_ZSt12__niter_baseIPKiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE	 #
	movq	%rsi, %r8	 # _1,
	movq	%rbx, %rdx	 # _2,
	movq	%rax, %rcx	 # _3,
	call	_ZSt14__copy_move_a1ILb0EPKiPiET1_T0_S4_S3_	 #
	movq	%rax, %rdx	 #, _4
	movq	48(%rbp), %rax	 # __result, tmp90
	movq	%rax, %rcx	 # tmp90,
	call	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES2_ET_S7_T0_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:533:     }
	.loc 3 533 5
	addq	$32, %rsp	 #,
	popq	%rbx	 #
.LCFI1680:
	popq	%rsi	 #
.LCFI1681:
	popq	%rbp	 #
.LCFI1682:
	ret	
.LFE5962:
	.seh_endproc
	.section	.text$_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEvT_S7_,"x"
	.linkonce discard
	.globl	_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEvT_S7_
	.def	_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEvT_S7_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEvT_S7_
_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEvT_S7_:
.LFB5964:
	.loc 21 171 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1683:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1684:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:181:       if (std::is_constant_evaluated())
	.loc 21 181 37
	call	_ZSt21is_constant_evaluatedv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:181:       if (std::is_constant_evaluated())
	.loc 21 181 7
	testb	%al, %al	 # retval.68_4
	je	.L1033	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:182: 	return _Destroy_aux<false>::__destroy(__first, __last);
	.loc 21 182 39
	movq	24(%rbp), %rax	 # __last, tmp83
	movq	%rax, %rdx	 # tmp83,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEEvT_S9_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:182: 	return _Destroy_aux<false>::__destroy(__first, __last);
	.loc 21 182 55
	jmp	.L1032	 #
.L1033:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:185: 	__destroy(__first, __last);
	.loc 21 185 11
	movq	24(%rbp), %rax	 # __last, tmp84
	movq	%rax, %rdx	 # tmp84,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEEvT_S9_	 #
	nop	
.L1032:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:186:     }
	.loc 21 186 5
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1685:
	ret	
.LFE5964:
	.seh_endproc
	.section	.text$_ZSt14__copy_move_a1ILb0EPiS0_ET1_T0_S2_S1_,"x"
	.linkonce discard
	.globl	_ZSt14__copy_move_a1ILb0EPiS0_ET1_T0_S2_S1_
	.def	_ZSt14__copy_move_a1ILb0EPiS0_ET1_T0_S2_S1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt14__copy_move_a1ILb0EPiS0_ET1_T0_S2_S1_
_ZSt14__copy_move_a1ILb0EPiS0_ET1_T0_S2_S1_:
.LFB5965:
	.loc 3 521 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1686:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1687:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # __result, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:522:     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
	.loc 3 522 42
	movq	32(%rbp), %rdx	 # __result, tmp84
	movq	24(%rbp), %rax	 # __last, tmp85
	movq	%rdx, %r8	 # tmp84,
	movq	%rax, %rdx	 # tmp85,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZSt14__copy_move_a2ILb0EPiS0_ET1_T0_S2_S1_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:522:     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
	.loc 3 522 71
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1688:
	ret	
.LFE5965:
	.seh_endproc
	.section	.text$_ZSt12__niter_wrapIPiET_RKS1_S1_,"x"
	.linkonce discard
	.globl	_ZSt12__niter_wrapIPiET_RKS1_S1_
	.def	_ZSt12__niter_wrapIPiET_RKS1_S1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt12__niter_wrapIPiET_RKS1_S1_
_ZSt12__niter_wrapIPiET_RKS1_S1_:
.LFB5966:
	.loc 3 335 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1689:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1690:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # D.126360, D.126360
	movq	%rdx, 24(%rbp)	 # __res, __res
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:336:     { return __res; }
	.loc 3 336 14
	movq	24(%rbp), %rax	 # __res, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:336:     { return __res; }
	.loc 3 336 21
	popq	%rbp	 #
.LCFI1691:
	ret	
.LFE5966:
	.seh_endproc
	.section	.text$_ZSt18uninitialized_copyIPiS0_ET0_T_S2_S1_,"x"
	.linkonce discard
	.globl	_ZSt18uninitialized_copyIPiS0_ET0_T_S2_S1_
	.def	_ZSt18uninitialized_copyIPiS0_ET0_T_S2_S1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt18uninitialized_copyIPiS0_ET0_T_S2_S1_
_ZSt18uninitialized_copyIPiS0_ET0_T_S2_S1_:
.LFB5967:
	.loc 19 126 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1692:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1693:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # __result, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:145:       const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
	.loc 19 145 18
	movb	$1, -1(%rbp)	 #, __assignable
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:151: 	__uninit_copy(__first, __last, __result);
	.loc 19 151 15
	movq	32(%rbp), %rdx	 # __result, tmp84
	movq	24(%rbp), %rax	 # __last, tmp85
	movq	%rdx, %r8	 # tmp84,
	movq	%rax, %rdx	 # tmp85,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPiS2_EET0_T_S4_S3_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:152:     }
	.loc 19 152 5
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI1694:
	ret	
.LFE5967:
	.seh_endproc
	.section	.text$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN3DDT4NodeEPS3_EET0_T_S8_S7_,"x"
	.linkonce discard
	.globl	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN3DDT4NodeEPS3_EET0_T_S8_S7_
	.def	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN3DDT4NodeEPS3_EET0_T_S8_S7_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN3DDT4NodeEPS3_EET0_T_S8_S7_
_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN3DDT4NodeEPS3_EET0_T_S8_S7_:
.LFB5969:
	.loc 19 85 9
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1695:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1696:
	subq	$56, %rsp	 #,
	.seh_stackalloc	56
.LCFI1697:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI1698:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __first, __first
	movq	%rdx, 40(%rbp)	 # __last, __last
	movq	%r8, 48(%rbp)	 # __result, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:88: 	  _ForwardIterator __cur = __result;
	.loc 19 88 21
	movq	48(%rbp), %rax	 # __result, tmp87
	movq	%rax, -8(%rbp)	 # tmp87, __cur
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:91: 	      for (; __first != __last; ++__first, (void)++__cur)
	.loc 19 91 8
	jmp	.L1042	 #
.L1043:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:92: 		std::_Construct(std::__addressof(*__cur), *__first);
	.loc 19 92 18
	movq	-8(%rbp), %rax	 # __cur, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZSt11__addressofIN3DDT4NodeEEPT_RS2_	 #
	movq	32(%rbp), %rdx	 # __first,
	movq	%rax, %rcx	 # _1,
.LEHB55:
	call	_ZSt10_ConstructIN3DDT4NodeEJRKS1_EEvPT_DpOT0_	 #
.LEHE55:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:91: 	      for (; __first != __last; ++__first, (void)++__cur)
	.loc 19 91 8
	addq	$72, 32(%rbp)	 #, __first
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:91: 	      for (; __first != __last; ++__first, (void)++__cur)
	.loc 19 91 45
	addq	$72, -8(%rbp)	 #, __cur
.L1042:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:91: 	      for (; __first != __last; ++__first, (void)++__cur)
	.loc 19 91 23 discriminator 1
	movq	32(%rbp), %rax	 # __first, tmp89
	cmpq	40(%rbp), %rax	 # __last, tmp89
	jne	.L1043	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:93: 	      return __cur;
	.loc 19 93 15
	movq	-8(%rbp), %rax	 # __cur, _12
	jmp	.L1049	 #
.L1047:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:95: 	  __catch(...)
	.loc 19 95 4
	movq	%rax, %rcx	 # _2,
	call	__cxa_begin_catch	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:97: 	      std::_Destroy(__result, __cur);
	.loc 19 97 21
	movq	-8(%rbp), %rdx	 # __cur, tmp92
	movq	48(%rbp), %rax	 # __result, tmp93
	movq	%rax, %rcx	 # tmp93,
.LEHB56:
	call	_ZSt8_DestroyIPN3DDT4NodeEEvT_S3_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:98: 	      __throw_exception_again;
	.loc 19 98 8
	call	__cxa_rethrow	 #
.LEHE56:
.L1048:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:95: 	  __catch(...)
	.loc 19 95 4
	movq	%rax, %rbx	 #, tmp94
	call	__cxa_end_catch	 #
	movq	%rbx, %rax	 # tmp94, D.129324
	movq	%rax, %rcx	 # D.129324,
.LEHB57:
	call	_Unwind_Resume	 #
.LEHE57:
.L1049:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:100: 	}
	.loc 19 100 2
	addq	$56, %rsp	 #,
	popq	%rbx	 #
.LCFI1699:
	popq	%rbp	 #
.LCFI1700:
	ret	
.LFE5969:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
	.align 4
.LLSDA5969:
	.byte	0xff
	.byte	0x9b
	.uleb128 .LLSDATT5969-.LLSDATTD5969
.LLSDATTD5969:
	.byte	0x1
	.uleb128 .LLSDACSE5969-.LLSDACSB5969
.LLSDACSB5969:
	.uleb128 .LEHB55-.LFB5969
	.uleb128 .LEHE55-.LEHB55
	.uleb128 .L1047-.LFB5969
	.uleb128 0x1
	.uleb128 .LEHB56-.LFB5969
	.uleb128 .LEHE56-.LEHB56
	.uleb128 .L1048-.LFB5969
	.uleb128 0
	.uleb128 .LEHB57-.LFB5969
	.uleb128 .LEHE57-.LEHB57
	.uleb128 0
	.uleb128 0
.LLSDACSE5969:
	.byte	0x1
	.byte	0
	.align 4
	.long	0

.LLSDATT5969:
	.section	.text$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN3DDT4NodeEPS3_EET0_T_S8_S7_,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZSt7forwardIRKN3DDT4NodeEEOT_RNSt16remove_referenceIS4_E4typeE,"x"
	.linkonce discard
	.globl	_ZSt7forwardIRKN3DDT4NodeEEOT_RNSt16remove_referenceIS4_E4typeE
	.def	_ZSt7forwardIRKN3DDT4NodeEEOT_RNSt16remove_referenceIS4_E4typeE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt7forwardIRKN3DDT4NodeEEOT_RNSt16remove_referenceIS4_E4typeE
_ZSt7forwardIRKN3DDT4NodeEEOT_RNSt16remove_referenceIS4_E4typeE:
.LFB5970:
	.loc 17 77 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1701:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1702:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\move.h:78:     { return static_cast<_Tp&&>(__t); }
	.loc 17 78 36
	movq	16(%rbp), %rax	 # __t, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\move.h:78:     { return static_cast<_Tp&&>(__t); }
	.loc 17 78 39
	popq	%rbp	 #
.LCFI1703:
	ret	
.LFE5970:
	.seh_endproc
	.section	.text$_ZNK9__gnu_cxx13new_allocatorI5BlorbE11_M_max_sizeEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNK9__gnu_cxx13new_allocatorI5BlorbE11_M_max_sizeEv
	.def	_ZNK9__gnu_cxx13new_allocatorI5BlorbE11_M_max_sizeEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNK9__gnu_cxx13new_allocatorI5BlorbE11_M_max_sizeEv
_ZNK9__gnu_cxx13new_allocatorI5BlorbE11_M_max_sizeEv:
.LFB5972:
	.loc 22 197 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1704:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1705:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:200: 	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
	.loc 22 200 50
	movabsq	$192153584101141162, %rax	 #, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:204:       }
	.loc 22 204 7
	popq	%rbp	 #
.LCFI1706:
	ret	
.LFE5972:
	.seh_endproc
	.section	.text$_ZN9__gnu_cxx13new_allocatorI5BlorbE8allocateEyPKv,"x"
	.linkonce discard
	.align 2
	.globl	_ZN9__gnu_cxx13new_allocatorI5BlorbE8allocateEyPKv
	.def	_ZN9__gnu_cxx13new_allocatorI5BlorbE8allocateEyPKv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN9__gnu_cxx13new_allocatorI5BlorbE8allocateEyPKv
_ZN9__gnu_cxx13new_allocatorI5BlorbE8allocateEyPKv:
.LFB5971:
	.loc 22 103 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1707:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1708:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __n, __n
	movq	%r8, 32(%rbp)	 # D.126471, D.126471
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:111: 	if (__builtin_expect(__n > this->_M_max_size(), false))
	.loc 22 111 46
	movq	16(%rbp), %rcx	 # this,
	call	_ZNK9__gnu_cxx13new_allocatorI5BlorbE11_M_max_sizeEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:111: 	if (__builtin_expect(__n > this->_M_max_size(), false))
	.loc 22 111 27
	cmpq	%rax, 24(%rbp)	 # _1, __n
	seta	%al	 #, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:111: 	if (__builtin_expect(__n > this->_M_max_size(), false))
	.loc 22 111 22
	movzbl	%al, %eax	 # _2, _3
	testl	%eax, %eax	 # _4
	setne	%al	 #, retval.98_10
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:111: 	if (__builtin_expect(__n > this->_M_max_size(), false))
	.loc 22 111 2
	testb	%al, %al	 # retval.98_10
	je	.L1055	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:115: 	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
	.loc 22 115 6
	movabsq	$384307168202282325, %rax	 #, tmp90
	cmpq	%rax, 24(%rbp)	 # tmp90, __n
	jbe	.L1056	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:116: 	      std::__throw_bad_array_new_length();
	.loc 22 116 41
	call	_ZSt28__throw_bad_array_new_lengthv	 #
.L1056:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:117: 	    std::__throw_bad_alloc();
	.loc 22 117 28
	call	_ZSt17__throw_bad_allocv	 #
.L1055:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:127: 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	.loc 22 127 41
	movq	24(%rbp), %rdx	 # __n, tmp91
	movq	%rdx, %rax	 # tmp91, tmp92
	addq	%rax, %rax	 # tmp92
	addq	%rdx, %rax	 # tmp91, tmp92
	salq	$4, %rax	 #, tmp93
	movq	%rax, %rcx	 # _6,
	call	_Znwy	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:127: 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	.loc 22 127 60
	nop	
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\ext\new_allocator.h:128:       }
	.loc 22 128 7
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1709:
	ret	
.LFE5971:
	.seh_endproc
	.section	.text$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPK5BlorbPS2_EET0_T_S7_S6_,"x"
	.linkonce discard
	.globl	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPK5BlorbPS2_EET0_T_S7_S6_
	.def	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPK5BlorbPS2_EET0_T_S7_S6_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPK5BlorbPS2_EET0_T_S7_S6_
_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPK5BlorbPS2_EET0_T_S7_S6_:
.LFB5973:
	.loc 19 85 9
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1710:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1711:
	subq	$56, %rsp	 #,
	.seh_stackalloc	56
.LCFI1712:
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
.LCFI1713:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __first, __first
	movq	%rdx, 40(%rbp)	 # __last, __last
	movq	%r8, 48(%rbp)	 # __result, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:88: 	  _ForwardIterator __cur = __result;
	.loc 19 88 21
	movq	48(%rbp), %rax	 # __result, tmp87
	movq	%rax, -8(%rbp)	 # tmp87, __cur
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:91: 	      for (; __first != __last; ++__first, (void)++__cur)
	.loc 19 91 8
	jmp	.L1059	 #
.L1060:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:92: 		std::_Construct(std::__addressof(*__cur), *__first);
	.loc 19 92 18
	movq	-8(%rbp), %rax	 # __cur, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZSt11__addressofI5BlorbEPT_RS1_	 #
	movq	32(%rbp), %rdx	 # __first,
	movq	%rax, %rcx	 # _1,
.LEHB58:
	call	_ZSt10_ConstructI5BlorbJRKS0_EEvPT_DpOT0_	 #
.LEHE58:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:91: 	      for (; __first != __last; ++__first, (void)++__cur)
	.loc 19 91 8
	addq	$48, 32(%rbp)	 #, __first
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:91: 	      for (; __first != __last; ++__first, (void)++__cur)
	.loc 19 91 45
	addq	$48, -8(%rbp)	 #, __cur
.L1059:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:91: 	      for (; __first != __last; ++__first, (void)++__cur)
	.loc 19 91 23 discriminator 1
	movq	32(%rbp), %rax	 # __first, tmp89
	cmpq	40(%rbp), %rax	 # __last, tmp89
	jne	.L1060	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:93: 	      return __cur;
	.loc 19 93 15
	movq	-8(%rbp), %rax	 # __cur, _12
	jmp	.L1066	 #
.L1064:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:95: 	  __catch(...)
	.loc 19 95 4
	movq	%rax, %rcx	 # _2,
	call	__cxa_begin_catch	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:97: 	      std::_Destroy(__result, __cur);
	.loc 19 97 21
	movq	-8(%rbp), %rdx	 # __cur, tmp92
	movq	48(%rbp), %rax	 # __result, tmp93
	movq	%rax, %rcx	 # tmp93,
.LEHB59:
	call	_ZSt8_DestroyIP5BlorbEvT_S2_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:98: 	      __throw_exception_again;
	.loc 19 98 8
	call	__cxa_rethrow	 #
.LEHE59:
.L1065:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:95: 	  __catch(...)
	.loc 19 95 4
	movq	%rax, %rbx	 #, tmp94
	call	__cxa_end_catch	 #
	movq	%rbx, %rax	 # tmp94, D.129325
	movq	%rax, %rcx	 # D.129325,
.LEHB60:
	call	_Unwind_Resume	 #
.LEHE60:
.L1066:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:100: 	}
	.loc 19 100 2
	addq	$56, %rsp	 #,
	popq	%rbx	 #
.LCFI1714:
	popq	%rbp	 #
.LCFI1715:
	ret	
.LFE5973:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
	.align 4
.LLSDA5973:
	.byte	0xff
	.byte	0x9b
	.uleb128 .LLSDATT5973-.LLSDATTD5973
.LLSDATTD5973:
	.byte	0x1
	.uleb128 .LLSDACSE5973-.LLSDACSB5973
.LLSDACSB5973:
	.uleb128 .LEHB58-.LFB5973
	.uleb128 .LEHE58-.LEHB58
	.uleb128 .L1064-.LFB5973
	.uleb128 0x1
	.uleb128 .LEHB59-.LFB5973
	.uleb128 .LEHE59-.LEHB59
	.uleb128 .L1065-.LFB5973
	.uleb128 0
	.uleb128 .LEHB60-.LFB5973
	.uleb128 .LEHE60-.LEHB60
	.uleb128 0
	.uleb128 0
.LLSDACSE5973:
	.byte	0x1
	.byte	0
	.align 4
	.long	0

.LLSDATT5973:
	.section	.text$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPK5BlorbPS2_EET0_T_S7_S6_,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZSt11__addressofI5BlorbEPT_RS1_,"x"
	.linkonce discard
	.globl	_ZSt11__addressofI5BlorbEPT_RS1_
	.def	_ZSt11__addressofI5BlorbEPT_RS1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt11__addressofI5BlorbEPT_RS1_
_ZSt11__addressofI5BlorbEPT_RS1_:
.LFB5974:
	.loc 17 49 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1716:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1717:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __r, __r
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\move.h:50:     { return __builtin_addressof(__r); }
	.loc 17 50 37
	movq	16(%rbp), %rax	 # __r, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\move.h:50:     { return __builtin_addressof(__r); }
	.loc 17 50 40
	popq	%rbp	 #
.LCFI1718:
	ret	
.LFE5974:
	.seh_endproc
	.section	.text$_ZSt8_DestroyI5BlorbEvPT_,"x"
	.linkonce discard
	.globl	_ZSt8_DestroyI5BlorbEvPT_
	.def	_ZSt8_DestroyI5BlorbEvPT_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt8_DestroyI5BlorbEvPT_
_ZSt8_DestroyI5BlorbEvPT_:
.LFB5975:
	.loc 21 135 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1719:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1720:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __pointer, __pointer
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:138:       std::destroy_at(__pointer);
	.loc 21 138 22
	movq	16(%rbp), %rcx	 # __pointer,
	call	_ZSt10destroy_atI5BlorbEvPT_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:142:     }
	.loc 21 142 5
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1721:
	ret	
.LFE5975:
	.seh_endproc
	.section	.text$_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPmS3_EET0_T_S5_S4_,"x"
	.linkonce discard
	.globl	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPmS3_EET0_T_S5_S4_
	.def	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPmS3_EET0_T_S5_S4_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPmS3_EET0_T_S5_S4_
_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPmS3_EET0_T_S5_S4_:
.LFB5984:
	.loc 3 380 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1722:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1723:
	subq	$16, %rsp	 #,
	.seh_stackalloc	16
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # __result, __result
.LBB156:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:383: 	  for(_Distance __n = __last - __first; __n > 0; --__n)
	.loc 3 383 31
	movq	24(%rbp), %rax	 # __last, tmp86
	subq	16(%rbp), %rax	 # __first, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:383: 	  for(_Distance __n = __last - __first; __n > 0; --__n)
	.loc 3 383 18
	sarq	$2, %rax	 #, tmp87
	movq	%rax, -8(%rbp)	 # tmp87, __n
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:383: 	  for(_Distance __n = __last - __first; __n > 0; --__n)
	.loc 3 383 4
	jmp	.L1071	 #
.L1072:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:385: 	      *__result = *__first;
	.loc 3 385 18 discriminator 3
	movq	16(%rbp), %rax	 # __first, tmp88
	movl	(%rax), %edx	 # *__first_3, _2
	movq	32(%rbp), %rax	 # __result, tmp89
	movl	%edx, (%rax)	 # _2, *__result_4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:386: 	      ++__first;
	.loc 3 386 8 discriminator 3
	addq	$4, 16(%rbp)	 #, __first
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:387: 	      ++__result;
	.loc 3 387 8 discriminator 3
	addq	$4, 32(%rbp)	 #, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:383: 	  for(_Distance __n = __last - __first; __n > 0; --__n)
	.loc 3 383 4 discriminator 3
	subq	$1, -8(%rbp)	 #, __n
.L1071:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:383: 	  for(_Distance __n = __last - __first; __n > 0; --__n)
	.loc 3 383 46 discriminator 1
	cmpq	$0, -8(%rbp)	 #, __n
	jg	.L1072	 #,
.LBE156:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:389: 	  return __result;
	.loc 3 389 11
	movq	32(%rbp), %rax	 # __result, _12
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:390: 	}
	.loc 3 390 2
	addq	$16, %rsp	 #,
	popq	%rbp	 #
.LCFI1724:
	ret	
.LFE5984:
	.seh_endproc
	.section	.text$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_,"x"
	.linkonce discard
	.globl	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_
	.def	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_
_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_:
.LFB5985:
	.loc 3 420 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1725:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1726:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # __result, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:429: 	  const ptrdiff_t _Num = __last - __first;
	.loc 3 429 34
	movq	24(%rbp), %rax	 # __last, tmp89
	subq	16(%rbp), %rax	 # __first, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:429: 	  const ptrdiff_t _Num = __last - __first;
	.loc 3 429 20
	sarq	$2, %rax	 #, tmp90
	movq	%rax, -8(%rbp)	 # tmp90, _Num
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:430: 	  if (_Num)
	.loc 3 430 4
	cmpq	$0, -8(%rbp)	 #, _Num
	je	.L1075	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:431: 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
	.loc 3 431 57
	movq	-8(%rbp), %rax	 # _Num, _Num.19_2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:431: 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
	.loc 3 431 23
	leaq	0(,%rax,4), %rdx	 #, _3
	movq	32(%rbp), %rax	 # __result, tmp93
	movq	%rdx, %r8	 # _3,
	movq	16(%rbp), %rdx	 # __first,
	movq	%rax, %rcx	 # tmp93,
	call	memmove	 #
.L1075:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:432: 	  return __result + _Num;
	.loc 3 432 22
	movq	-8(%rbp), %rax	 # _Num, _Num.20_4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:432: 	  return __result + _Num;
	.loc 3 432 20
	leaq	0(,%rax,4), %rdx	 #, _5
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:432: 	  return __result + _Num;
	.loc 3 432 22
	movq	32(%rbp), %rax	 # __result, tmp94
	addq	%rdx, %rax	 # _5, _13
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:433: 	}
	.loc 3 433 2
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI1727:
	ret	
.LFE5985:
	.seh_endproc
	.section	.text$_ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_,"x"
	.linkonce discard
	.globl	_ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_
	.def	_ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_
_ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_:
.LFB5987:
	.loc 3 486 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1728:
	pushq	%rdi	 #
	.seh_pushreg	%rdi
.LCFI1729:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI1730:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1731:
	subq	$88, %rsp	 #,
	.seh_stackalloc	88
.LCFI1732:
	leaq	80(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 80
.LCFI1733:
	.seh_endprologue
	movq	%rcx, 48(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, %rbx	 #, tmp83
	movq	%r8, %rdi	 #, tmp84
	movq	%r9, %rsi	 #, tmp85
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:490:       if (std::is_constant_evaluated())
	.loc 3 490 37
	call	_ZSt21is_constant_evaluatedv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:490:       if (std::is_constant_evaluated())
	.loc 3 490 7
	testb	%al, %al	 # retval.21_4
	je	.L1078	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:492: 	  __copy_m(__first, __last, __result);
	.loc 3 492 12
	movq	48(%rbp), %rcx	 # .result_ptr, tmp86
	movq	(%rbx), %rax	 # __first, tmp87
	movq	8(%rbx), %rdx	 # __first,
	movq	%rax, -16(%rbp)	 # tmp87,
	movq	%rdx, -8(%rbp)	 #,
	movq	(%rdi), %rax	 # __last, tmp88
	movq	8(%rdi), %rdx	 # __last,
	movq	%rax, -32(%rbp)	 # tmp88,
	movq	%rdx, -24(%rbp)	 #,
	movq	(%rsi), %rax	 # __result, tmp89
	movq	8(%rsi), %rdx	 # __result,
	movq	%rax, -48(%rbp)	 # tmp89,
	movq	%rdx, -40(%rbp)	 #,
	leaq	-48(%rbp), %r8	 #, tmp90
	leaq	-32(%rbp), %rdx	 #, tmp91
	leaq	-16(%rbp), %rax	 #, tmp92
	movq	%r8, %r9	 # tmp90,
	movq	%rdx, %r8	 # tmp91,
	movq	%rax, %rdx	 # tmp92,
	call	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:492: 	  __copy_m(__first, __last, __result);
	.loc 3 492 38
	jmp	.L1079	 #
.L1078:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:495: 			      _Category>::__copy_m(__first, __last, __result);
	.loc 3 495 30
	movq	48(%rbp), %rcx	 # .result_ptr, tmp93
	movq	(%rbx), %rax	 # __first, tmp94
	movq	8(%rbx), %rdx	 # __first,
	movq	%rax, -48(%rbp)	 # tmp94,
	movq	%rdx, -40(%rbp)	 #,
	movq	(%rdi), %rax	 # __last, tmp95
	movq	8(%rdi), %rdx	 # __last,
	movq	%rax, -32(%rbp)	 # tmp95,
	movq	%rdx, -24(%rbp)	 #,
	movq	(%rsi), %rax	 # __result, tmp96
	movq	8(%rsi), %rdx	 # __result,
	movq	%rax, -16(%rbp)	 # tmp96,
	movq	%rdx, -8(%rbp)	 #,
	leaq	-16(%rbp), %r8	 #, tmp97
	leaq	-32(%rbp), %rdx	 #, tmp98
	leaq	-48(%rbp), %rax	 #, tmp99
	movq	%r8, %r9	 # tmp97,
	movq	%rdx, %r8	 # tmp98,
	movq	%rax, %rdx	 # tmp99,
	call	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:495: 			      _Category>::__copy_m(__first, __last, __result);
	.loc 3 495 56
	nop	
.L1079:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:496:     }
	.loc 3 496 5
	movq	48(%rbp), %rax	 # .result_ptr,
	addq	$88, %rsp	 #,
	popq	%rbx	 #
.LCFI1734:
	popq	%rsi	 #
.LCFI1735:
	popq	%rdi	 #
.LCFI1736:
	popq	%rbp	 #
.LCFI1737:
	ret	
.LFE5987:
	.seh_endproc
	.section	.text$_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bISt13_Bit_iteratorS3_EET0_T_S5_S4_,"x"
	.linkonce discard
	.globl	_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bISt13_Bit_iteratorS3_EET0_T_S5_S4_
	.def	_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bISt13_Bit_iteratorS3_EET0_T_S5_S4_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bISt13_Bit_iteratorS3_EET0_T_S5_S4_
_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bISt13_Bit_iteratorS3_EET0_T_S5_S4_:
.LFB5988:
	.loc 3 697 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1738:
	pushq	%rdi	 #
	.seh_pushreg	%rdi
.LCFI1739:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI1740:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1741:
	subq	$88, %rsp	 #,
	.seh_stackalloc	88
.LCFI1742:
	leaq	80(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 80
.LCFI1743:
	.seh_endprologue
	movq	%rcx, 48(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, %rsi	 #, tmp84
	movq	%r8, %rdi	 #, tmp85
	movq	%r9, %rbx	 #, tmp86
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:700: 	    __n = __last - __first;
	.loc 3 700 19
	movq	%rsi, %rdx	 # tmp84,
	movq	%rdi, %rcx	 # tmp85,
	call	_ZStmiRKSt18_Bit_iterator_baseS1_	 #
	movq	%rax, -8(%rbp)	 # tmp87, __n
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:701: 	  for (; __n > 0; --__n)
	.loc 3 701 4
	jmp	.L1081	 #
.L1082:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:702: 	    *--__result = *--__last;
	.loc 3 702 21 discriminator 2
	movq	%rdi, %rcx	 # tmp85,
	call	_ZNSt13_Bit_iteratormmEv	 #
	movq	%rax, %rdx	 #, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:702: 	    *--__result = *--__last;
	.loc 3 702 20 discriminator 2
	leaq	-48(%rbp), %rax	 #, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZNKSt13_Bit_iteratordeEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:702: 	    *--__result = *--__last;
	.loc 3 702 7 discriminator 2
	movq	%rbx, %rcx	 # tmp86,
	call	_ZNSt13_Bit_iteratormmEv	 #
	movq	%rax, %rdx	 #, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:702: 	    *--__result = *--__last;
	.loc 3 702 6 discriminator 2
	leaq	-32(%rbp), %rax	 #, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZNKSt13_Bit_iteratordeEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:702: 	    *--__result = *--__last;
	.loc 3 702 18 discriminator 2
	leaq	-48(%rbp), %rdx	 #, tmp90
	leaq	-32(%rbp), %rax	 #, tmp91
	movq	%rax, %rcx	 # tmp91,
	call	_ZNSt14_Bit_referenceaSERKS_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:701: 	  for (; __n > 0; --__n)
	.loc 3 701 4 discriminator 2
	subq	$1, -8(%rbp)	 #, __n
.L1081:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:701: 	  for (; __n > 0; --__n)
	.loc 3 701 15 discriminator 1
	cmpq	$0, -8(%rbp)	 #, __n
	jg	.L1082	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:703: 	  return __result;
	.loc 3 703 11
	movq	48(%rbp), %rcx	 # .result_ptr, tmp92
	movq	(%rbx), %rax	 # __result, tmp93
	movq	8(%rbx), %rdx	 # __result,
	movq	%rax, (%rcx)	 # tmp93, <retval>
	movq	%rdx, 8(%rcx)	 #, <retval>
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:704: 	}
	.loc 3 704 2
	movq	48(%rbp), %rax	 # .result_ptr,
	addq	$88, %rsp	 #,
	popq	%rbx	 #
.LCFI1744:
	popq	%rsi	 #
.LCFI1745:
	popq	%rdi	 #
.LCFI1746:
	popq	%rbp	 #
.LCFI1747:
	ret	
.LFE5988:
	.seh_endproc
	.section	.text$_ZSt14__copy_move_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_,"x"
	.linkonce discard
	.globl	_ZSt14__copy_move_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
	.def	_ZSt14__copy_move_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt14__copy_move_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
_ZSt14__copy_move_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_:
.LFB5989:
	.loc 3 486 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1748:
	pushq	%rdi	 #
	.seh_pushreg	%rdi
.LCFI1749:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI1750:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1751:
	subq	$88, %rsp	 #,
	.seh_stackalloc	88
.LCFI1752:
	leaq	80(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 80
.LCFI1753:
	.seh_endprologue
	movq	%rcx, 48(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, %rbx	 #, tmp83
	movq	%r8, %rdi	 #, tmp84
	movq	%r9, %rsi	 #, tmp85
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:490:       if (std::is_constant_evaluated())
	.loc 3 490 37
	call	_ZSt21is_constant_evaluatedv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:490:       if (std::is_constant_evaluated())
	.loc 3 490 7
	testb	%al, %al	 # retval.38_4
	je	.L1085	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:492: 	  __copy_m(__first, __last, __result);
	.loc 3 492 12
	movq	48(%rbp), %rcx	 # .result_ptr, tmp86
	movq	(%rbx), %rax	 # __first, tmp87
	movq	8(%rbx), %rdx	 # __first,
	movq	%rax, -16(%rbp)	 # tmp87,
	movq	%rdx, -8(%rbp)	 #,
	movq	(%rdi), %rax	 # __last, tmp88
	movq	8(%rdi), %rdx	 # __last,
	movq	%rax, -32(%rbp)	 # tmp88,
	movq	%rdx, -24(%rbp)	 #,
	movq	(%rsi), %rax	 # __result, tmp89
	movq	8(%rsi), %rdx	 # __result,
	movq	%rax, -48(%rbp)	 # tmp89,
	movq	%rdx, -40(%rbp)	 #,
	leaq	-48(%rbp), %r8	 #, tmp90
	leaq	-32(%rbp), %rdx	 #, tmp91
	leaq	-16(%rbp), %rax	 #, tmp92
	movq	%r8, %r9	 # tmp90,
	movq	%rdx, %r8	 # tmp91,
	movq	%rax, %rdx	 # tmp92,
	call	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt13_Bit_iteratorS3_EET0_T_S5_S4_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:492: 	  __copy_m(__first, __last, __result);
	.loc 3 492 38
	jmp	.L1086	 #
.L1085:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:495: 			      _Category>::__copy_m(__first, __last, __result);
	.loc 3 495 30
	movq	48(%rbp), %rcx	 # .result_ptr, tmp93
	movq	(%rbx), %rax	 # __first, tmp94
	movq	8(%rbx), %rdx	 # __first,
	movq	%rax, -48(%rbp)	 # tmp94,
	movq	%rdx, -40(%rbp)	 #,
	movq	(%rdi), %rax	 # __last, tmp95
	movq	8(%rdi), %rdx	 # __last,
	movq	%rax, -32(%rbp)	 # tmp95,
	movq	%rdx, -24(%rbp)	 #,
	movq	(%rsi), %rax	 # __result, tmp96
	movq	8(%rsi), %rdx	 # __result,
	movq	%rax, -16(%rbp)	 # tmp96,
	movq	%rdx, -8(%rbp)	 #,
	leaq	-16(%rbp), %r8	 #, tmp97
	leaq	-32(%rbp), %rdx	 #, tmp98
	leaq	-48(%rbp), %rax	 #, tmp99
	movq	%r8, %r9	 # tmp97,
	movq	%rdx, %r8	 # tmp98,
	movq	%rax, %rdx	 # tmp99,
	call	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt13_Bit_iteratorS3_EET0_T_S5_S4_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:495: 			      _Category>::__copy_m(__first, __last, __result);
	.loc 3 495 56
	nop	
.L1086:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:496:     }
	.loc 3 496 5
	movq	48(%rbp), %rax	 # .result_ptr,
	addq	$88, %rsp	 #,
	popq	%rbx	 #
.LCFI1754:
	popq	%rsi	 #
.LCFI1755:
	popq	%rdi	 #
.LCFI1756:
	popq	%rbp	 #
.LCFI1757:
	ret	
.LFE5989:
	.seh_endproc
	.section	.text$_ZSt19__iterator_categoryIPiENSt15iterator_traitsIT_E17iterator_categoryERKS2_,"x"
	.linkonce discard
	.globl	_ZSt19__iterator_categoryIPiENSt15iterator_traitsIT_E17iterator_categoryERKS2_
	.def	_ZSt19__iterator_categoryIPiENSt15iterator_traitsIT_E17iterator_categoryERKS2_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt19__iterator_categoryIPiENSt15iterator_traitsIT_E17iterator_categoryERKS2_
_ZSt19__iterator_categoryIPiENSt15iterator_traitsIT_E17iterator_categoryERKS2_:
.LFB5990:
	.file 24 "c:/users/pluto/scoop/apps/gcc/current/include/c++/11.2.0/bits/stl_iterator_base_types.h"
	.loc 24 238 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1758:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1759:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # D.126705, D.126705
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator_base_types.h:239:     { return typename iterator_traits<_Iter>::iterator_category(); }
	.loc 24 239 68
	popq	%rbp	 #
.LCFI1760:
	ret	
.LFE5990:
	.seh_endproc
	.section	.text$_ZSt10__fill_n_aIPiyiET_S1_T0_RKT1_St26random_access_iterator_tag,"x"
	.linkonce discard
	.globl	_ZSt10__fill_n_aIPiyiET_S1_T0_RKT1_St26random_access_iterator_tag
	.def	_ZSt10__fill_n_aIPiyiET_S1_T0_RKT1_St26random_access_iterator_tag;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt10__fill_n_aIPiyiET_S1_T0_RKT1_St26random_access_iterator_tag
_ZSt10__fill_n_aIPiyiET_S1_T0_RKT1_St26random_access_iterator_tag:
.LFB5991:
	.loc 3 1109 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1761:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1762:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __n, __n
	movq	%r8, 32(%rbp)	 # __value, __value
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:1115:       if (__n <= 0)
	.loc 3 1115 7
	cmpq	$0, 24(%rbp)	 #, __n
	jne	.L1090	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:1116: 	return __first;
	.loc 3 1116 9
	movq	16(%rbp), %rax	 # __first, _4
	jmp	.L1091	 #
.L1090:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:1120:       std::__fill_a(__first, __first + __n, __value);
	.loc 3 1120 38
	movq	24(%rbp), %rax	 # __n, tmp87
	leaq	0(,%rax,4), %rdx	 #, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:1120:       std::__fill_a(__first, __first + __n, __value);
	.loc 3 1120 20
	movq	16(%rbp), %rax	 # __first, tmp88
	addq	%rdx, %rax	 # _1, _2
	movq	32(%rbp), %rdx	 # __value, tmp89
	movq	%rdx, %r8	 # tmp89,
	movq	%rax, %rdx	 # _2,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZSt8__fill_aIPiiEvT_S1_RKT0_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:1121:       return __first + __n;
	.loc 3 1121 22
	movq	24(%rbp), %rax	 # __n, tmp90
	leaq	0(,%rax,4), %rdx	 #, _3
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:1121:       return __first + __n;
	.loc 3 1121 24
	movq	16(%rbp), %rax	 # __first, tmp91
	addq	%rdx, %rax	 # _3, _4
.L1091:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:1122:     }
	.loc 3 1122 5
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1763:
	ret	
.LFE5991:
	.seh_endproc
	.section	.text$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_,"x"
	.linkonce discard
	.globl	_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_
	.def	_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_
_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_:
.LFB5992:
	.loc 19 126 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1764:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1765:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # __result, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:145:       const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
	.loc 19 145 18
	movb	$1, -1(%rbp)	 #, __assignable
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:151: 	__uninit_copy(__first, __last, __result);
	.loc 19 151 15
	movq	32(%rbp), %rdx	 # __result, tmp84
	movq	24(%rbp), %rax	 # __last, tmp85
	movq	%rdx, %r8	 # tmp84,
	movq	%rax, %rdx	 # tmp85,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiEET0_T_SC_SB_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:152:     }
	.loc 19 152 5
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI1766:
	ret	
.LFE5992:
	.seh_endproc
	.section	.text$_ZSt12__niter_baseIPKiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE,"x"
	.linkonce discard
	.globl	_ZSt12__niter_baseIPKiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE
	.def	_ZSt12__niter_baseIPKiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt12__niter_baseIPKiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE
_ZSt12__niter_baseIPKiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE:
.LFB5993:
	.loc 15 1257 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1767:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1768:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __it, __it
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1259:     { return __it.base(); }
	.loc 15 1259 23
	leaq	16(%rbp), %rcx	 #, tmp87
	call	_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1259:     { return __it.base(); }
	.loc 15 1259 24
	movq	(%rax), %rax	 # *_1, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1259:     { return __it.base(); }
	.loc 15 1259 27
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1769:
	ret	
.LFE5993:
	.seh_endproc
	.section	.text$_ZSt12__niter_baseIPiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE,"x"
	.linkonce discard
	.globl	_ZSt12__niter_baseIPiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE
	.def	_ZSt12__niter_baseIPiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt12__niter_baseIPiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE
_ZSt12__niter_baseIPiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE:
.LFB5994:
	.loc 15 1257 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1770:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1771:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __it, __it
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1259:     { return __it.base(); }
	.loc 15 1259 23
	leaq	16(%rbp), %rcx	 #, tmp87
	call	_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1259:     { return __it.base(); }
	.loc 15 1259 24
	movq	(%rax), %rax	 # *_1, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1259:     { return __it.base(); }
	.loc 15 1259 27
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1772:
	ret	
.LFE5994:
	.seh_endproc
	.section	.text$_ZSt14__copy_move_a1ILb0EPKiPiET1_T0_S4_S3_,"x"
	.linkonce discard
	.globl	_ZSt14__copy_move_a1ILb0EPKiPiET1_T0_S4_S3_
	.def	_ZSt14__copy_move_a1ILb0EPKiPiET1_T0_S4_S3_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt14__copy_move_a1ILb0EPKiPiET1_T0_S4_S3_
_ZSt14__copy_move_a1ILb0EPKiPiET1_T0_S4_S3_:
.LFB5995:
	.loc 3 521 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1773:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1774:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # __result, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:522:     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
	.loc 3 522 42
	movq	32(%rbp), %rdx	 # __result, tmp84
	movq	24(%rbp), %rax	 # __last, tmp85
	movq	%rdx, %r8	 # tmp84,
	movq	%rax, %rdx	 # tmp85,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZSt14__copy_move_a2ILb0EPKiPiET1_T0_S4_S3_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:522:     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
	.loc 3 522 71
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1775:
	ret	
.LFE5995:
	.seh_endproc
	.section	.text$_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES2_ET_S7_T0_,"x"
	.linkonce discard
	.globl	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES2_ET_S7_T0_
	.def	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES2_ET_S7_T0_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES2_ET_S7_T0_
_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES2_ET_S7_T0_:
.LFB5996:
	.loc 3 328 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1776:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1777:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __from, __from
	movq	%rdx, 24(%rbp)	 # __res, __res
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:329:     { return __from + (__res - std::__niter_base(__from)); }
	.loc 3 329 49
	movq	16(%rbp), %rcx	 # __from,
	call	_ZSt12__niter_baseIPiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE	 #
	movq	%rax, %rdx	 #, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:329:     { return __from + (__res - std::__niter_base(__from)); }
	.loc 3 329 30
	movq	24(%rbp), %rax	 # __res, tmp87
	subq	%rdx, %rax	 # _1, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:329:     { return __from + (__res - std::__niter_base(__from)); }
	.loc 3 329 21
	sarq	$2, %rax	 #, tmp88
	movq	%rax, %rdx	 # _3,
	leaq	16(%rbp), %rcx	 #, tmp91
	call	_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEplEx	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:329:     { return __from + (__res - std::__niter_base(__from)); }
	.loc 3 329 60
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1778:
	ret	
.LFE5996:
	.seh_endproc
	.section	.text$_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv
	.def	_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv
_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv:
.LFB5998:
	.loc 15 1088 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1779:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1780:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1089:       { return _M_current; }
	.loc 15 1089 16
	movq	16(%rbp), %rax	 # this, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1089:       { return _M_current; }
	.loc 15 1089 28
	popq	%rbp	 #
.LCFI1781:
	ret	
.LFE5998:
	.seh_endproc
	.section	.text$_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEppEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEppEv
	.def	_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEppEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEppEv
_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEppEv:
.LFB5999:
	.loc 15 1035 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1782:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1783:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1037: 	++_M_current;
	.loc 15 1037 4
	movq	16(%rbp), %rax	 # this, tmp86
	movq	(%rax), %rax	 # this_4(D)->_M_current, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1037: 	++_M_current;
	.loc 15 1037 2
	leaq	4(%rax), %rdx	 #, _2
	movq	16(%rbp), %rax	 # this, tmp87
	movq	%rdx, (%rax)	 # _2, this_4(D)->_M_current
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1038: 	return *this;
	.loc 15 1038 10
	movq	16(%rbp), %rax	 # this, _6
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1039:       }
	.loc 15 1039 7
	popq	%rbp	 #
.LCFI1784:
	ret	
.LFE5999:
	.seh_endproc
	.section	.text$_ZN9__gnu_cxxeqIPiS1_St6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T1_EERKNS5_IT0_S7_EE,"x"
	.linkonce discard
	.globl	_ZN9__gnu_cxxeqIPiS1_St6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T1_EERKNS5_IT0_S7_EE
	.def	_ZN9__gnu_cxxeqIPiS1_St6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T1_EERKNS5_IT0_S7_EE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN9__gnu_cxxeqIPiS1_St6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T1_EERKNS5_IT0_S7_EE
_ZN9__gnu_cxxeqIPiS1_St6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T1_EERKNS5_IT0_S7_EE:
.LFB6000:
	.loc 15 1105 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1785:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1786:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI1787:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI1788:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __lhs, __lhs
	movq	%rdx, 40(%rbp)	 # __rhs, __rhs
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1108:     { return __lhs.base() == __rhs.base(); }
	.loc 15 1108 24
	movq	32(%rbp), %rcx	 # __lhs,
	call	_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1108:     { return __lhs.base() == __rhs.base(); }
	.loc 15 1108 27
	movq	(%rax), %rbx	 # *_1, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1108:     { return __lhs.base() == __rhs.base(); }
	.loc 15 1108 40
	movq	40(%rbp), %rax	 # __rhs, tmp88
	movq	%rax, %rcx	 # tmp88,
	call	_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1108:     { return __lhs.base() == __rhs.base(); }
	.loc 15 1108 27
	movq	(%rax), %rax	 # *_3, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1108:     { return __lhs.base() == __rhs.base(); }
	.loc 15 1108 41
	cmpq	%rax, %rbx	 # _4, _2
	sete	%al	 #, _10
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1108:     { return __lhs.base() == __rhs.base(); }
	.loc 15 1108 44
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI1789:
	popq	%rbp	 #
.LCFI1790:
	ret	
.LFE6000:
	.seh_endproc
	.section	.text$_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEEvT_S9_,"x"
	.linkonce discard
	.globl	_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEEvT_S9_
	.def	_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEEvT_S9_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEEvT_S9_
_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEEvT_S9_:
.LFB5997:
	.loc 21 149 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1791:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1792:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:151: 	  for (; __first != __last; ++__first)
	.loc 21 151 4
	jmp	.L1109	 #
.L1110:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:152: 	    std::_Destroy(std::__addressof(*__first));
	.loc 21 152 37 discriminator 2
	leaq	16(%rbp), %rcx	 #, tmp88
	call	_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:152: 	    std::_Destroy(std::__addressof(*__first));
	.loc 21 152 19 discriminator 2
	movq	%rax, %rcx	 # _1,
	call	_ZSt11__addressofIiEPT_RS0_	 #
	movq	%rax, %rcx	 # _2,
	call	_ZSt8_DestroyIiEvPT_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:151: 	  for (; __first != __last; ++__first)
	.loc 21 151 30 discriminator 2
	leaq	16(%rbp), %rcx	 #, tmp89
	call	_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEppEv	 #
.L1109:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:151: 	  for (; __first != __last; ++__first)
	.loc 21 151 19 discriminator 1
	leaq	24(%rbp), %rax	 #, tmp86
	movq	%rax, %rdx	 # tmp86,
	leaq	16(%rbp), %rcx	 #, tmp90
	call	_ZN9__gnu_cxxeqIPiS1_St6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T1_EERKNS5_IT0_S7_EE	 #
	xorl	$1, %eax	 #, retval.69_7
	testb	%al, %al	 # retval.69_7
	jne	.L1110	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:153: 	}
	.loc 21 153 2
	nop	
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1793:
	ret	
.LFE5997:
	.seh_endproc
	.section	.text$_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEEvT_S9_,"x"
	.linkonce discard
	.globl	_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEEvT_S9_
	.def	_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEEvT_S9_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEEvT_S9_
_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEEvT_S9_:
.LFB6001:
	.loc 21 161 9
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1794:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1795:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # D.126830, D.126830
	movq	%rdx, 24(%rbp)	 # D.126831, D.126831
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:161:         __destroy(_ForwardIterator, _ForwardIterator) { }
	.loc 21 161 57
	nop	
	popq	%rbp	 #
.LCFI1796:
	ret	
.LFE6001:
	.seh_endproc
	.section	.text$_ZSt14__copy_move_a2ILb0EPiS0_ET1_T0_S2_S1_,"x"
	.linkonce discard
	.globl	_ZSt14__copy_move_a2ILb0EPiS0_ET1_T0_S2_S1_
	.def	_ZSt14__copy_move_a2ILb0EPiS0_ET1_T0_S2_S1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt14__copy_move_a2ILb0EPiS0_ET1_T0_S2_S1_
_ZSt14__copy_move_a2ILb0EPiS0_ET1_T0_S2_S1_:
.LFB6002:
	.loc 3 486 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1797:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1798:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # __result, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:490:       if (std::is_constant_evaluated())
	.loc 3 490 37
	call	_ZSt21is_constant_evaluatedv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:490:       if (std::is_constant_evaluated())
	.loc 3 490 7
	testb	%al, %al	 # retval.71_5
	je	.L1113	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:492: 	  __copy_m(__first, __last, __result);
	.loc 3 492 12
	movq	32(%rbp), %rdx	 # __result, tmp85
	movq	24(%rbp), %rax	 # __last, tmp86
	movq	%rdx, %r8	 # tmp85,
	movq	%rax, %rdx	 # tmp86,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPiS3_EET0_T_S5_S4_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:492: 	  __copy_m(__first, __last, __result);
	.loc 3 492 38
	jmp	.L1114	 #
.L1113:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:495: 			      _Category>::__copy_m(__first, __last, __result);
	.loc 3 495 30
	movq	32(%rbp), %rdx	 # __result, tmp87
	movq	24(%rbp), %rax	 # __last, tmp88
	movq	%rdx, %r8	 # tmp87,
	movq	%rax, %rdx	 # tmp88,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:495: 			      _Category>::__copy_m(__first, __last, __result);
	.loc 3 495 56
	nop	
.L1114:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:496:     }
	.loc 3 496 5
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1799:
	ret	
.LFE6002:
	.seh_endproc
	.section	.text$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPiS2_EET0_T_S4_S3_,"x"
	.linkonce discard
	.globl	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPiS2_EET0_T_S4_S3_
	.def	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPiS2_EET0_T_S4_S3_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPiS2_EET0_T_S4_S3_
_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPiS2_EET0_T_S4_S3_:
.LFB6003:
	.loc 19 108 9
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1800:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1801:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # __result, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:110:         { return std::copy(__first, __last, __result); }
	.loc 19 110 27
	movq	32(%rbp), %rdx	 # __result, tmp84
	movq	24(%rbp), %rax	 # __last, tmp85
	movq	%rdx, %r8	 # tmp84,
	movq	%rax, %rdx	 # tmp85,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZSt4copyIPiS0_ET0_T_S2_S1_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:110:         { return std::copy(__first, __last, __result); }
	.loc 19 110 56
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1802:
	ret	
.LFE6003:
	.seh_endproc
	.section	.text$_ZN5BlorbC1ERKS_,"x"
	.linkonce discard
	.align 2
	.globl	_ZN5BlorbC1ERKS_
	.def	_ZN5BlorbC1ERKS_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZN5BlorbC1ERKS_
_ZN5BlorbC1ERKS_:
.LFB6007:
	.loc 10 154 8
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1803:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1804:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # D.107846, D.107846
.LBB157:
 # main.cpp:154: struct Blorb {
	.loc 10 154 8
	movq	16(%rbp), %rax	 # this, tmp86
	movq	24(%rbp), %rdx	 # D.107846, tmp87
	movq	(%rdx), %rdx	 # _8(D)->pos, tmp88
	movq	%rdx, (%rax)	 # tmp88, this_6(D)->pos
	movq	24(%rbp), %rax	 # D.107846, tmp89
	movss	8(%rax), %xmm0	 # _8(D)->angle, _1
	movq	16(%rbp), %rax	 # this, tmp90
	movss	%xmm0, 8(%rax)	 # _1, this_6(D)->angle
	movq	16(%rbp), %rax	 # this, tmp91
	addq	$16, %rax	 #, _2
	movq	24(%rbp), %rdx	 # D.107846, tmp92
	addq	$16, %rdx	 #, _3
	movq	%rax, %rcx	 # _2,
	call	_ZN3DDTC1ERKS_	 #
.LBE157:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1805:
	ret	
.LFE6007:
	.seh_endproc
	.section	.text$_ZSt10_ConstructI5BlorbJRKS0_EEvPT_DpOT0_,"x"
	.linkonce discard
	.globl	_ZSt10_ConstructI5BlorbJRKS0_EEvPT_DpOT0_
	.def	_ZSt10_ConstructI5BlorbJRKS0_EEvPT_DpOT0_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt10_ConstructI5BlorbJRKS0_EEvPT_DpOT0_
_ZSt10_ConstructI5BlorbJRKS0_EEvPT_DpOT0_:
.LFB6004:
	.loc 21 108 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1806:
	pushq	%rdi	 #
	.seh_pushreg	%rdi
.LCFI1807:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI1808:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1809:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI1810:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI1811:
	.seh_endprologue
	movq	%rcx, 48(%rbp)	 # __p, __p
	movq	%rdx, 56(%rbp)	 # __args#0, __args#0
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:109:     { ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...); }
	.loc 21 109 61
	movq	56(%rbp), %rax	 # __args#0, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZSt7forwardIRK5BlorbEOT_RNSt16remove_referenceIS3_E4typeE	 #
	movq	%rax, %rdi	 #, _4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:109:     { ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...); }
	.loc 21 109 13
	movq	48(%rbp), %rbx	 # __p, _6
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:109:     { ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...); }
	.loc 21 109 7
	movq	%rbx, %rdx	 # _6,
	movl	$48, %ecx	 #,
	call	_ZnwyPv	 #
	movq	%rax, %rsi	 #, _8
	movq	%rdi, %rdx	 # _4,
	movq	%rsi, %rcx	 # _8,
.LEHB61:
	call	_ZN5BlorbC1ERKS_	 #
.LEHE61:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:109:     { ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...); }
	.loc 21 109 75
	jmp	.L1121	 #
.L1120:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:109:     { ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...); }
	.loc 21 109 7
	movq	%rax, %rdi	 #, tmp87
	movq	%rbx, %rdx	 # _6,
	movq	%rsi, %rcx	 # _8,
	call	_ZdlPvS_	 #
	movq	%rdi, %rax	 # tmp87, D.129347
	movq	%rax, %rcx	 # D.129347,
.LEHB62:
	call	_Unwind_Resume	 #
	nop	
.LEHE62:
.L1121:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_construct.h:109:     { ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...); }
	.loc 21 109 75
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI1812:
	popq	%rsi	 #
.LCFI1813:
	popq	%rdi	 #
.LCFI1814:
	popq	%rbp	 #
.LCFI1815:
	ret	
.LFE6004:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA6004:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE6004-.LLSDACSB6004
.LLSDACSB6004:
	.uleb128 .LEHB61-.LFB6004
	.uleb128 .LEHE61-.LEHB61
	.uleb128 .L1120-.LFB6004
	.uleb128 0
	.uleb128 .LEHB62-.LFB6004
	.uleb128 .LEHE62-.LEHB62
	.uleb128 0
	.uleb128 0
.LLSDACSE6004:
	.section	.text$_ZSt10_ConstructI5BlorbJRKS0_EEvPT_DpOT0_,"x"
	.linkonce discard
	.seh_endproc
	.section	.text$_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_,"x"
	.linkonce discard
	.globl	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_
	.def	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_
_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_:
.LFB6008:
	.loc 3 380 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1816:
	pushq	%rdi	 #
	.seh_pushreg	%rdi
.LCFI1817:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI1818:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1819:
	subq	$72, %rsp	 #,
	.seh_stackalloc	72
.LCFI1820:
	leaq	64(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 64
.LCFI1821:
	.seh_endprologue
	movq	%rcx, 48(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, %rbx	 #, tmp84
	movq	%r8, %rdi	 #, tmp85
	movq	%r9, %rsi	 #, tmp86
.LBB158:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:383: 	  for(_Distance __n = __last - __first; __n > 0; --__n)
	.loc 3 383 31
	movq	%rbx, %rdx	 # tmp84,
	movq	%rdi, %rcx	 # tmp85,
	call	_ZStmiRKSt18_Bit_iterator_baseS1_	 #
	movq	%rax, -8(%rbp)	 # tmp87, __n
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:383: 	  for(_Distance __n = __last - __first; __n > 0; --__n)
	.loc 3 383 4
	jmp	.L1123	 #
.L1124:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:385: 	      *__result = *__first;
	.loc 3 385 20 discriminator 3
	movq	%rbx, %rcx	 # tmp84,
	call	_ZNKSt19_Bit_const_iteratordeEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:385: 	      *__result = *__first;
	.loc 3 385 18 discriminator 3
	movzbl	%al, %edi	 # _1, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:385: 	      *__result = *__first;
	.loc 3 385 8 discriminator 3
	leaq	-32(%rbp), %rax	 #, tmp88
	movq	%rsi, %rdx	 # tmp86,
	movq	%rax, %rcx	 # tmp88,
	call	_ZNKSt13_Bit_iteratordeEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:385: 	      *__result = *__first;
	.loc 3 385 18 discriminator 3
	leaq	-32(%rbp), %rax	 #, tmp89
	movl	%edi, %edx	 # _2,
	movq	%rax, %rcx	 # tmp89,
	call	_ZNSt14_Bit_referenceaSEb	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:386: 	      ++__first;
	.loc 3 386 8 discriminator 3
	movq	%rbx, %rcx	 # tmp84,
	call	_ZNSt19_Bit_const_iteratorppEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:387: 	      ++__result;
	.loc 3 387 8 discriminator 3
	movq	%rsi, %rcx	 # tmp86,
	call	_ZNSt13_Bit_iteratorppEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:383: 	  for(_Distance __n = __last - __first; __n > 0; --__n)
	.loc 3 383 4 discriminator 3
	subq	$1, -8(%rbp)	 #, __n
.L1123:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:383: 	  for(_Distance __n = __last - __first; __n > 0; --__n)
	.loc 3 383 46 discriminator 1
	cmpq	$0, -8(%rbp)	 #, __n
	jg	.L1124	 #,
.LBE158:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:389: 	  return __result;
	.loc 3 389 11
	movq	48(%rbp), %rcx	 # .result_ptr, tmp90
	movq	(%rsi), %rax	 # __result, tmp91
	movq	8(%rsi), %rdx	 # __result,
	movq	%rax, (%rcx)	 # tmp91, <retval>
	movq	%rdx, 8(%rcx)	 #, <retval>
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:390: 	}
	.loc 3 390 2
	movq	48(%rbp), %rax	 # .result_ptr,
	addq	$72, %rsp	 #,
	popq	%rbx	 #
.LCFI1822:
	popq	%rsi	 #
.LCFI1823:
	popq	%rdi	 #
.LCFI1824:
	popq	%rbp	 #
.LCFI1825:
	ret	
.LFE6008:
	.seh_endproc
	.section	.text$_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt13_Bit_iteratorS3_EET0_T_S5_S4_,"x"
	.linkonce discard
	.globl	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt13_Bit_iteratorS3_EET0_T_S5_S4_
	.def	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt13_Bit_iteratorS3_EET0_T_S5_S4_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt13_Bit_iteratorS3_EET0_T_S5_S4_
_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt13_Bit_iteratorS3_EET0_T_S5_S4_:
.LFB6009:
	.loc 3 380 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1826:
	pushq	%rdi	 #
	.seh_pushreg	%rdi
.LCFI1827:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI1828:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1829:
	subq	$88, %rsp	 #,
	.seh_stackalloc	88
.LCFI1830:
	leaq	80(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 80
.LCFI1831:
	.seh_endprologue
	movq	%rcx, 48(%rbp)	 # .result_ptr, .result_ptr
	movq	%rdx, %rbx	 #, tmp82
	movq	%r8, %rdi	 #, tmp83
	movq	%r9, %rsi	 #, tmp84
.LBB159:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:383: 	  for(_Distance __n = __last - __first; __n > 0; --__n)
	.loc 3 383 31
	movq	%rbx, %rdx	 # tmp82,
	movq	%rdi, %rcx	 # tmp83,
	call	_ZStmiRKSt18_Bit_iterator_baseS1_	 #
	movq	%rax, -8(%rbp)	 # tmp85, __n
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:383: 	  for(_Distance __n = __last - __first; __n > 0; --__n)
	.loc 3 383 4
	jmp	.L1127	 #
.L1128:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:385: 	      *__result = *__first;
	.loc 3 385 20 discriminator 3
	leaq	-48(%rbp), %rax	 #, tmp86
	movq	%rbx, %rdx	 # tmp82,
	movq	%rax, %rcx	 # tmp86,
	call	_ZNKSt13_Bit_iteratordeEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:385: 	      *__result = *__first;
	.loc 3 385 8 discriminator 3
	leaq	-32(%rbp), %rax	 #, tmp87
	movq	%rsi, %rdx	 # tmp84,
	movq	%rax, %rcx	 # tmp87,
	call	_ZNKSt13_Bit_iteratordeEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:385: 	      *__result = *__first;
	.loc 3 385 18 discriminator 3
	leaq	-48(%rbp), %rdx	 #, tmp88
	leaq	-32(%rbp), %rax	 #, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZNSt14_Bit_referenceaSERKS_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:386: 	      ++__first;
	.loc 3 386 8 discriminator 3
	movq	%rbx, %rcx	 # tmp82,
	call	_ZNSt13_Bit_iteratorppEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:387: 	      ++__result;
	.loc 3 387 8 discriminator 3
	movq	%rsi, %rcx	 # tmp84,
	call	_ZNSt13_Bit_iteratorppEv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:383: 	  for(_Distance __n = __last - __first; __n > 0; --__n)
	.loc 3 383 4 discriminator 3
	subq	$1, -8(%rbp)	 #, __n
.L1127:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:383: 	  for(_Distance __n = __last - __first; __n > 0; --__n)
	.loc 3 383 46 discriminator 1
	cmpq	$0, -8(%rbp)	 #, __n
	jg	.L1128	 #,
.LBE159:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:389: 	  return __result;
	.loc 3 389 11
	movq	48(%rbp), %rcx	 # .result_ptr, tmp90
	movq	(%rsi), %rax	 # __result, tmp91
	movq	8(%rsi), %rdx	 # __result,
	movq	%rax, (%rcx)	 # tmp91, <retval>
	movq	%rdx, 8(%rcx)	 #, <retval>
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:390: 	}
	.loc 3 390 2
	movq	48(%rbp), %rax	 # .result_ptr,
	addq	$88, %rsp	 #,
	popq	%rbx	 #
.LCFI1832:
	popq	%rsi	 #
.LCFI1833:
	popq	%rdi	 #
.LCFI1834:
	popq	%rbp	 #
.LCFI1835:
	ret	
.LFE6009:
	.seh_endproc
	.section	.text$_ZSt8__fill_aIPiiEvT_S1_RKT0_,"x"
	.linkonce discard
	.globl	_ZSt8__fill_aIPiiEvT_S1_RKT0_
	.def	_ZSt8__fill_aIPiiEvT_S1_RKT0_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt8__fill_aIPiiEvT_S1_RKT0_
_ZSt8__fill_aIPiiEvT_S1_RKT0_:
.LFB6010:
	.loc 3 968 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1836:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1837:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # __value, __value
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:969:     { std::__fill_a1(__first, __last, __value); }
	.loc 3 969 21
	movq	32(%rbp), %rdx	 # __value, tmp82
	movq	24(%rbp), %rax	 # __last, tmp83
	movq	%rdx, %r8	 # tmp82,
	movq	%rax, %rdx	 # tmp83,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZSt9__fill_a1IPiiEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S8_RKS4_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:969:     { std::__fill_a1(__first, __last, __value); }
	.loc 3 969 49
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1838:
	ret	
.LFE6010:
	.seh_endproc
	.section	.text$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiEET0_T_SC_SB_,"x"
	.linkonce discard
	.globl	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiEET0_T_SC_SB_
	.def	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiEET0_T_SC_SB_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiEET0_T_SC_SB_
_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiEET0_T_SC_SB_:
.LFB6011:
	.loc 19 108 9
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1839:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1840:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # __result, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:110:         { return std::copy(__first, __last, __result); }
	.loc 19 110 27
	movq	32(%rbp), %rdx	 # __result, tmp84
	movq	24(%rbp), %rax	 # __last, tmp85
	movq	%rdx, %r8	 # tmp84,
	movq	%rax, %rdx	 # tmp85,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_uninitialized.h:110:         { return std::copy(__first, __last, __result); }
	.loc 19 110 56
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1841:
	ret	
.LFE6011:
	.seh_endproc
	.section	.text$_ZSt14__copy_move_a2ILb0EPKiPiET1_T0_S4_S3_,"x"
	.linkonce discard
	.globl	_ZSt14__copy_move_a2ILb0EPKiPiET1_T0_S4_S3_
	.def	_ZSt14__copy_move_a2ILb0EPKiPiET1_T0_S4_S3_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt14__copy_move_a2ILb0EPKiPiET1_T0_S4_S3_
_ZSt14__copy_move_a2ILb0EPKiPiET1_T0_S4_S3_:
.LFB6012:
	.loc 3 486 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1842:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1843:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # __result, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:490:       if (std::is_constant_evaluated())
	.loc 3 490 37
	call	_ZSt21is_constant_evaluatedv	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:490:       if (std::is_constant_evaluated())
	.loc 3 490 7
	testb	%al, %al	 # retval.64_5
	je	.L1134	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:492: 	  __copy_m(__first, __last, __result);
	.loc 3 492 12
	movq	32(%rbp), %rdx	 # __result, tmp85
	movq	24(%rbp), %rax	 # __last, tmp86
	movq	%rdx, %r8	 # tmp85,
	movq	%rax, %rdx	 # tmp86,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKiPiEET0_T_S7_S6_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:492: 	  __copy_m(__first, __last, __result);
	.loc 3 492 38
	jmp	.L1135	 #
.L1134:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:495: 			      _Category>::__copy_m(__first, __last, __result);
	.loc 3 495 30
	movq	32(%rbp), %rdx	 # __result, tmp87
	movq	24(%rbp), %rax	 # __last, tmp88
	movq	%rdx, %r8	 # tmp87,
	movq	%rax, %rdx	 # tmp88,
	movq	16(%rbp), %rcx	 # __first,
	call	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:495: 			      _Category>::__copy_m(__first, __last, __result);
	.loc 3 495 56
	nop	
.L1135:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:496:     }
	.loc 3 496 5
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1844:
	ret	
.LFE6012:
	.seh_endproc
	.section	.text$_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEplEx,"x"
	.linkonce discard
	.align 2
	.globl	_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEplEx
	.def	_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEplEx;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEplEx
_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEplEx:
.LFB6013:
	.loc 15 1073 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1845:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1846:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
	movq	%rdx, 24(%rbp)	 # __n, __n
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1074:       { return __normal_iterator(_M_current + __n); }
	.loc 15 1074 34
	movq	16(%rbp), %rax	 # this, tmp88
	movq	(%rax), %rdx	 # this_6(D)->_M_current, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1074:       { return __normal_iterator(_M_current + __n); }
	.loc 15 1074 47
	movq	24(%rbp), %rax	 # __n, __n.67_2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1074:       { return __normal_iterator(_M_current + __n); }
	.loc 15 1074 45
	salq	$2, %rax	 #, _3
	addq	%rdx, %rax	 # _1, _4
	movq	%rax, -8(%rbp)	 # _4, D.126997
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1074:       { return __normal_iterator(_M_current + __n); }
	.loc 15 1074 16
	leaq	-8(%rbp), %rdx	 #, tmp89
	leaq	-16(%rbp), %rax	 #, tmp90
	movq	%rax, %rcx	 # tmp90,
	call	_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC1ERKS1_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1074:       { return __normal_iterator(_M_current + __n); }
	.loc 15 1074 50
	movq	-16(%rbp), %rax	 # D.126998, D.127959
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1074:       { return __normal_iterator(_M_current + __n); }
	.loc 15 1074 53
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI1847:
	ret	
.LFE6013:
	.seh_endproc
	.section	.text$_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv,"x"
	.linkonce discard
	.align 2
	.globl	_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv
	.def	_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv
_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv:
.LFB6014:
	.loc 15 1025 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1848:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1849:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1026:       { return *_M_current; }
	.loc 15 1026 17
	movq	16(%rbp), %rax	 # this, tmp84
	movq	(%rax), %rax	 # this_2(D)->_M_current, _3
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_iterator.h:1026:       { return *_M_current; }
	.loc 15 1026 29
	popq	%rbp	 #
.LCFI1850:
	ret	
.LFE6014:
	.seh_endproc
	.section	.text$_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPiS3_EET0_T_S5_S4_,"x"
	.linkonce discard
	.globl	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPiS3_EET0_T_S5_S4_
	.def	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPiS3_EET0_T_S5_S4_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPiS3_EET0_T_S5_S4_
_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPiS3_EET0_T_S5_S4_:
.LFB6015:
	.loc 3 380 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1851:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1852:
	subq	$16, %rsp	 #,
	.seh_stackalloc	16
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # __result, __result
.LBB160:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:383: 	  for(_Distance __n = __last - __first; __n > 0; --__n)
	.loc 3 383 31
	movq	24(%rbp), %rax	 # __last, tmp86
	subq	16(%rbp), %rax	 # __first, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:383: 	  for(_Distance __n = __last - __first; __n > 0; --__n)
	.loc 3 383 18
	sarq	$2, %rax	 #, tmp87
	movq	%rax, -8(%rbp)	 # tmp87, __n
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:383: 	  for(_Distance __n = __last - __first; __n > 0; --__n)
	.loc 3 383 4
	jmp	.L1141	 #
.L1142:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:385: 	      *__result = *__first;
	.loc 3 385 18 discriminator 3
	movq	16(%rbp), %rax	 # __first, tmp88
	movl	(%rax), %edx	 # *__first_3, _2
	movq	32(%rbp), %rax	 # __result, tmp89
	movl	%edx, (%rax)	 # _2, *__result_4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:386: 	      ++__first;
	.loc 3 386 8 discriminator 3
	addq	$4, 16(%rbp)	 #, __first
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:387: 	      ++__result;
	.loc 3 387 8 discriminator 3
	addq	$4, 32(%rbp)	 #, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:383: 	  for(_Distance __n = __last - __first; __n > 0; --__n)
	.loc 3 383 4 discriminator 3
	subq	$1, -8(%rbp)	 #, __n
.L1141:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:383: 	  for(_Distance __n = __last - __first; __n > 0; --__n)
	.loc 3 383 46 discriminator 1
	cmpq	$0, -8(%rbp)	 #, __n
	jg	.L1142	 #,
.LBE160:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:389: 	  return __result;
	.loc 3 389 11
	movq	32(%rbp), %rax	 # __result, _12
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:390: 	}
	.loc 3 390 2
	addq	$16, %rsp	 #,
	popq	%rbp	 #
.LCFI1853:
	ret	
.LFE6015:
	.seh_endproc
	.section	.text$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_,"x"
	.linkonce discard
	.globl	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_
	.def	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_
_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_:
.LFB6016:
	.loc 3 420 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1854:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1855:
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # __result, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:429: 	  const ptrdiff_t _Num = __last - __first;
	.loc 3 429 34
	movq	24(%rbp), %rax	 # __last, tmp89
	subq	16(%rbp), %rax	 # __first, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:429: 	  const ptrdiff_t _Num = __last - __first;
	.loc 3 429 20
	sarq	$2, %rax	 #, tmp90
	movq	%rax, -8(%rbp)	 # tmp90, _Num
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:430: 	  if (_Num)
	.loc 3 430 4
	cmpq	$0, -8(%rbp)	 #, _Num
	je	.L1145	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:431: 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
	.loc 3 431 57
	movq	-8(%rbp), %rax	 # _Num, _Num.65_2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:431: 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
	.loc 3 431 23
	leaq	0(,%rax,4), %rdx	 #, _3
	movq	32(%rbp), %rax	 # __result, tmp93
	movq	%rdx, %r8	 # _3,
	movq	16(%rbp), %rdx	 # __first,
	movq	%rax, %rcx	 # tmp93,
	call	memmove	 #
.L1145:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:432: 	  return __result + _Num;
	.loc 3 432 22
	movq	-8(%rbp), %rax	 # _Num, _Num.66_4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:432: 	  return __result + _Num;
	.loc 3 432 20
	leaq	0(,%rax,4), %rdx	 #, _5
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:432: 	  return __result + _Num;
	.loc 3 432 22
	movq	32(%rbp), %rax	 # __result, tmp94
	addq	%rdx, %rax	 # _5, _13
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:433: 	}
	.loc 3 433 2
	addq	$48, %rsp	 #,
	popq	%rbp	 #
.LCFI1856:
	ret	
.LFE6016:
	.seh_endproc
	.section	.text$_ZSt7forwardIRK5BlorbEOT_RNSt16remove_referenceIS3_E4typeE,"x"
	.linkonce discard
	.globl	_ZSt7forwardIRK5BlorbEOT_RNSt16remove_referenceIS3_E4typeE
	.def	_ZSt7forwardIRK5BlorbEOT_RNSt16remove_referenceIS3_E4typeE;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt7forwardIRK5BlorbEOT_RNSt16remove_referenceIS3_E4typeE
_ZSt7forwardIRK5BlorbEOT_RNSt16remove_referenceIS3_E4typeE:
.LFB6017:
	.loc 17 77 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1857:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1858:
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __t, __t
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\move.h:78:     { return static_cast<_Tp&&>(__t); }
	.loc 17 78 36
	movq	16(%rbp), %rax	 # __t, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\move.h:78:     { return static_cast<_Tp&&>(__t); }
	.loc 17 78 39
	popq	%rbp	 #
.LCFI1859:
	ret	
.LFE6017:
	.seh_endproc
	.section	.text$_ZSt9__fill_a1IPiiEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S8_RKS4_,"x"
	.linkonce discard
	.globl	_ZSt9__fill_a1IPiiEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S8_RKS4_
	.def	_ZSt9__fill_a1IPiiEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S8_RKS4_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt9__fill_a1IPiiEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S8_RKS4_
_ZSt9__fill_a1IPiiEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S8_RKS4_:
.LFB6018:
	.loc 3 919 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1860:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1861:
	subq	$16, %rsp	 #,
	.seh_stackalloc	16
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # __value, __value
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:922:       const _Tp __tmp = __value;
	.loc 3 922 17
	movq	32(%rbp), %rax	 # __value, tmp82
	movl	(%rax), %eax	 # *__value_4(D), tmp83
	movl	%eax, -4(%rbp)	 # tmp83, __tmp
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:923:       for (; __first != __last; ++__first)
	.loc 3 923 7
	jmp	.L1150	 #
.L1151:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:924: 	*__first = __tmp;
	.loc 3 924 11 discriminator 2
	movq	16(%rbp), %rax	 # __first, tmp84
	movl	-4(%rbp), %edx	 # __tmp, tmp85
	movl	%edx, (%rax)	 # tmp85, *__first_1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:923:       for (; __first != __last; ++__first)
	.loc 3 923 7 discriminator 2
	addq	$4, 16(%rbp)	 #, __first
.L1150:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:923:       for (; __first != __last; ++__first)
	.loc 3 923 22 discriminator 1
	movq	16(%rbp), %rax	 # __first, tmp86
	cmpq	24(%rbp), %rax	 # __last, tmp86
	jne	.L1151	 #,
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:925:     }
	.loc 3 925 5
	nop	
	nop	
	addq	$16, %rsp	 #,
	popq	%rbp	 #
.LCFI1862:
	ret	
.LFE6018:
	.seh_endproc
	.section	.text$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_,"x"
	.linkonce discard
	.globl	_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_
	.def	_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_
_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_:
.LFB6019:
	.loc 3 611 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1863:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1864:
	subq	$40, %rsp	 #,
	.seh_stackalloc	40
.LCFI1865:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI1866:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __first, __first
	movq	%rdx, 40(%rbp)	 # __last, __last
	movq	%r8, 48(%rbp)	 # __result, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:620: 	     (std::__miter_base(__first), std::__miter_base(__last), __result);
	.loc 3 620 7
	movq	40(%rbp), %rax	 # __last, tmp86
	movq	%rax, %rcx	 # tmp86,
	call	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEET_S8_	 #
	movq	%rax, %rbx	 #, D.127904
	movq	32(%rbp), %rcx	 # __first,
	call	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEET_S8_	 #
	movq	48(%rbp), %rdx	 # __result, tmp87
	movq	%rdx, %r8	 # tmp87,
	movq	%rbx, %rdx	 # D.127904,
	movq	%rax, %rcx	 # D.127905,
	call	_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET1_T0_SA_S9_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:621:     }
	.loc 3 621 5
	addq	$40, %rsp	 #,
	popq	%rbx	 #
.LCFI1867:
	popq	%rbp	 #
.LCFI1868:
	ret	
.LFE6019:
	.seh_endproc
	.section	.text$_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKiPiEET0_T_S7_S6_,"x"
	.linkonce discard
	.globl	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKiPiEET0_T_S7_S6_
	.def	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKiPiEET0_T_S7_S6_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKiPiEET0_T_S7_S6_
_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKiPiEET0_T_S7_S6_:
.LFB6020:
	.loc 3 380 2
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1869:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1870:
	subq	$16, %rsp	 #,
	.seh_stackalloc	16
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # __first, __first
	movq	%rdx, 24(%rbp)	 # __last, __last
	movq	%r8, 32(%rbp)	 # __result, __result
.LBB161:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:383: 	  for(_Distance __n = __last - __first; __n > 0; --__n)
	.loc 3 383 31
	movq	24(%rbp), %rax	 # __last, tmp86
	subq	16(%rbp), %rax	 # __first, _1
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:383: 	  for(_Distance __n = __last - __first; __n > 0; --__n)
	.loc 3 383 18
	sarq	$2, %rax	 #, tmp87
	movq	%rax, -8(%rbp)	 # tmp87, __n
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:383: 	  for(_Distance __n = __last - __first; __n > 0; --__n)
	.loc 3 383 4
	jmp	.L1155	 #
.L1156:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:385: 	      *__result = *__first;
	.loc 3 385 18 discriminator 3
	movq	16(%rbp), %rax	 # __first, tmp88
	movl	(%rax), %edx	 # *__first_3, _2
	movq	32(%rbp), %rax	 # __result, tmp89
	movl	%edx, (%rax)	 # _2, *__result_4
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:386: 	      ++__first;
	.loc 3 386 8 discriminator 3
	addq	$4, 16(%rbp)	 #, __first
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:387: 	      ++__result;
	.loc 3 387 8 discriminator 3
	addq	$4, 32(%rbp)	 #, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:383: 	  for(_Distance __n = __last - __first; __n > 0; --__n)
	.loc 3 383 4 discriminator 3
	subq	$1, -8(%rbp)	 #, __n
.L1155:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:383: 	  for(_Distance __n = __last - __first; __n > 0; --__n)
	.loc 3 383 46 discriminator 1
	cmpq	$0, -8(%rbp)	 #, __n
	jg	.L1156	 #,
.LBE161:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:389: 	  return __result;
	.loc 3 389 11
	movq	32(%rbp), %rax	 # __result, _12
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:390: 	}
	.loc 3 390 2
	addq	$16, %rsp	 #,
	popq	%rbp	 #
.LCFI1871:
	ret	
.LFE6020:
	.seh_endproc
	.section	.text$_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET1_T0_SA_S9_,"x"
	.linkonce discard
	.globl	_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET1_T0_SA_S9_
	.def	_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET1_T0_SA_S9_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET1_T0_SA_S9_
_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET1_T0_SA_S9_:
.LFB6021:
	.loc 3 527 5
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1872:
	pushq	%rsi	 #
	.seh_pushreg	%rsi
.LCFI1873:
	pushq	%rbx	 #
	.seh_pushreg	%rbx
.LCFI1874:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
.LCFI1875:
	leaq	32(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 32
.LCFI1876:
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __first, __first
	movq	%rdx, 40(%rbp)	 # __last, __last
	movq	%r8, 48(%rbp)	 # __result, __result
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:529:       return std::__niter_wrap(__result,
	.loc 3 529 31
	movq	48(%rbp), %rax	 # __result, __result.63_1
	movq	%rax, %rcx	 # __result.63_1,
	call	_ZSt12__niter_baseIPiET_S1_	 #
	movq	%rax, %rsi	 #, _2
	movq	40(%rbp), %rax	 # __last, tmp89
	movq	%rax, %rcx	 # tmp89,
	call	_ZSt12__niter_baseIPKiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE	 #
	movq	%rax, %rbx	 #, _3
	movq	32(%rbp), %rcx	 # __first,
	call	_ZSt12__niter_baseIPKiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE	 #
	movq	%rsi, %r8	 # _2,
	movq	%rbx, %rdx	 # _3,
	movq	%rax, %rcx	 # _4,
	call	_ZSt14__copy_move_a1ILb0EPKiPiET1_T0_S4_S3_	 #
	movq	%rax, %rdx	 #, _5
	leaq	48(%rbp), %rax	 #, tmp90
	movq	%rax, %rcx	 # tmp90,
	call	_ZSt12__niter_wrapIPiET_RKS1_S1_	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_algobase.h:533:     }
	.loc 3 533 5
	addq	$32, %rsp	 #,
	popq	%rbx	 #
.LCFI1877:
	popq	%rsi	 #
.LCFI1878:
	popq	%rbp	 #
.LCFI1879:
	ret	
.LFE6021:
	.seh_endproc
	.text
	.def	__tcf_0;	.scl	3;	.type	32;	.endef
	.seh_proc	__tcf_0
__tcf_0:
.LFB6023:
	.loc 10 165 20
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1880:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1881:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
 # main.cpp:165: std::vector<Blorb> bs;
	.loc 10 165 20
	leaq	bs(%rip), %rax	 #, tmp82
	movq	%rax, %rcx	 # tmp82,
	call	_ZNSt6vectorI5BlorbSaIS0_EED1Ev	 #
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1882:
	ret	
.LFE6023:
	.seh_endproc
	.def	_Z41__static_initialization_and_destruction_0ii;	.scl	3;	.type	32;	.endef
	.seh_proc	_Z41__static_initialization_and_destruction_0ii
_Z41__static_initialization_and_destruction_0ii:
.LFB6022:
	.loc 10 249 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1883:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1884:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movl	%ecx, 16(%rbp)	 # __initialize_p, __initialize_p
	movl	%edx, 24(%rbp)	 # __priority, __priority
 # main.cpp:249: }
	.loc 10 249 1
	cmpl	$1, 16(%rbp)	 #, __initialize_p
	jne	.L1163	 #,
 # main.cpp:249: }
	.loc 10 249 1 is_stmt 0 discriminator 1
	cmpl	$65535, 24(%rbp)	 #, __priority
	jne	.L1163	 #,
 # main.cpp:165: std::vector<Blorb> bs;
	.loc 10 165 20 is_stmt 1
	leaq	bs(%rip), %rax	 #, tmp82
	movq	%rax, %rcx	 # tmp82,
	call	_ZNSt6vectorI5BlorbSaIS0_EEC1Ev	 #
	leaq	__tcf_0(%rip), %rax	 #, tmp83
	movq	%rax, %rcx	 # tmp83,
	call	atexit	 #
.L1163:
 # main.cpp:249: }
	.loc 10 249 1
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1885:
	ret	
.LFE6022:
	.seh_endproc
	.section	.text$_ZNSt6vectorI5BlorbSaIS0_EED1Ev,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt6vectorI5BlorbSaIS0_EED1Ev
	.def	_ZNSt6vectorI5BlorbSaIS0_EED1Ev;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt6vectorI5BlorbSaIS0_EED1Ev
_ZNSt6vectorI5BlorbSaIS0_EED1Ev:
.LFB6026:
	.loc 11 678 7
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1886:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1887:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # this, this
.LBB162:
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:681: 		      _M_get_Tp_allocator());
	.loc 11 681 28
	movq	16(%rbp), %rax	 # this, _1
	movq	%rax, %rcx	 # _1,
	call	_ZNSt12_Vector_baseI5BlorbSaIS0_EE19_M_get_Tp_allocatorEv	 #
	movq	%rax, %rcx	 #, _2
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:680: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	.loc 11 680 15
	movq	16(%rbp), %rax	 # this, tmp87
	movq	8(%rax), %rdx	 # this_6(D)->D.107662._M_impl.D.107007._M_finish, _3
	movq	16(%rbp), %rax	 # this, tmp88
	movq	(%rax), %rax	 # this_6(D)->D.107662._M_impl.D.107007._M_start, _4
	movq	%rcx, %r8	 # _2,
	movq	%rax, %rcx	 # _4,
	call	_ZSt8_DestroyIP5BlorbS0_EvT_S2_RSaIT0_E	 #
 # c:\users\pluto\scoop\apps\gcc\current\include\c++\11.2.0\bits\stl_vector.h:683:       }
	.loc 11 683 7
	movq	16(%rbp), %rax	 # this, _5
	movq	%rax, %rcx	 # _5,
	call	_ZNSt12_Vector_baseI5BlorbSaIS0_EED2Ev	 #
.LBE162:
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1888:
	ret	
.LFE6026:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA6026:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE6026-.LLSDACSB6026
.LLSDACSB6026:
.LLSDACSE6026:
	.section	.text$_ZNSt6vectorI5BlorbSaIS0_EED1Ev,"x"
	.linkonce discard
	.seh_endproc
	.text
	.def	_GLOBAL__sub_I__Zpl;	.scl	3;	.type	32;	.endef
	.seh_proc	_GLOBAL__sub_I__Zpl
_GLOBAL__sub_I__Zpl:
.LFB6027:
	.loc 10 249 1
	pushq	%rbp	 #
	.seh_pushreg	%rbp
.LCFI1889:
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
.LCFI1890:
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
 # main.cpp:249: }
	.loc 10 249 1
	movl	$65535, %edx	 #,
	movl	$1, %ecx	 #,
	call	_Z41__static_initialization_and_destruction_0ii	 #
	nop	
	addq	$32, %rsp	 #,
	popq	%rbp	 #
.LCFI1891:
	ret	
.LFE6027:
	.seh_endproc
	.section	.ctors,"w"
	.align 8
	.quad	_GLOBAL__sub_I__Zpl
	.section .rdata,"dr"
	.align 4
.LC0:
	.long	1132396544
	.align 4
.LC1:
	.long	1065353216
	.align 4
.LC2:
	.long	1123942400
	.align 4
.LC3:
	.long	1074137746
	.align 4
.LC4:
	.long	1082526354
	.align 4
.LC5:
	.long	1176256512
	.align 16
.LC7:
	.long	2147483647
	.long	0
	.long	0
	.long	0
	.align 4
.LC8:
	.long	897988541
	.align 16
.LC9:
	.long	-2147483648
	.long	0
	.long	0
	.long	0
	.align 4
.LC10:
	.long	1113927392
	.align 4
.LC13:
	.long	1101004800
	.align 4
.LC14:
	.long	1097859072
	.align 4
.LC19:
	.long	1112014848
	.align 4
.LC20:
	.long	1145569280
	.align 4
.LC21:
	.long	1138819072
	.align 4
.LC22:
	.long	1109393408
	.align 4
.LC23:
	.long	1073741824
	.section	.debug_frame,"dr"
.Lframe0:
	.long	.LECIE0-.LSCIE0
.LSCIE0:
	.long	0xffffffff
	.byte	0x3
	.ascii "\0"
	.uleb128 0x1
	.sleb128 -8
	.uleb128 0x10
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x1
	.align 8
.LECIE0:
.LSFDE0:
	.long	.LEFDE0-.LASFDE0
.LASFDE0:
	.secrel32	.Lframe0
	.quad	.LFB270
	.quad	.LFE270-.LFB270
	.byte	0x4
	.long	.LCFI0-.LFB270
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1-.LCFI0
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI2-.LCFI1
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE0:
.LSFDE2:
	.long	.LEFDE2-.LASFDE2
.LASFDE2:
	.secrel32	.Lframe0
	.quad	.LFB432
	.quad	.LFE432-.LFB432
	.byte	0x4
	.long	.LCFI3-.LFB432
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI4-.LCFI3
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI5-.LCFI4
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE2:
.LSFDE4:
	.long	.LEFDE4-.LASFDE4
.LASFDE4:
	.secrel32	.Lframe0
	.quad	.LFB434
	.quad	.LFE434-.LFB434
	.byte	0x4
	.long	.LCFI6-.LFB434
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI7-.LCFI6
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI8-.LCFI7
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE4:
.LSFDE6:
	.long	.LEFDE6-.LASFDE6
.LASFDE6:
	.secrel32	.Lframe0
	.quad	.LFB704
	.quad	.LFE704-.LFB704
	.byte	0x4
	.long	.LCFI9-.LFB704
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI10-.LCFI9
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI11-.LCFI10
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE6:
.LSFDE8:
	.long	.LEFDE8-.LASFDE8
.LASFDE8:
	.secrel32	.Lframe0
	.quad	.LFB1117
	.quad	.LFE1117-.LFB1117
	.byte	0x4
	.long	.LCFI12-.LFB1117
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI13-.LCFI12
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI14-.LCFI13
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI15-.LCFI14
	.byte	0xc3
	.byte	0x4
	.long	.LCFI16-.LCFI15
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x10
	.align 8
.LEFDE8:
.LSFDE10:
	.long	.LEFDE10-.LASFDE10
.LASFDE10:
	.secrel32	.Lframe0
	.quad	.LFB1118
	.quad	.LFE1118-.LFB1118
	.byte	0x4
	.long	.LCFI17-.LFB1118
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI18-.LCFI17
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI19-.LCFI18
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE10:
.LSFDE12:
	.long	.LEFDE12-.LASFDE12
.LASFDE12:
	.secrel32	.Lframe0
	.quad	.LFB1119
	.quad	.LFE1119-.LFB1119
	.byte	0x4
	.long	.LCFI20-.LFB1119
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI21-.LCFI20
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI22-.LCFI21
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE12:
.LSFDE14:
	.long	.LEFDE14-.LASFDE14
.LASFDE14:
	.secrel32	.Lframe0
	.quad	.LFB1120
	.quad	.LFE1120-.LFB1120
	.byte	0x4
	.long	.LCFI23-.LFB1120
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI24-.LCFI23
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI25-.LCFI24
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE14:
.LSFDE16:
	.long	.LEFDE16-.LASFDE16
.LASFDE16:
	.secrel32	.Lframe0
	.quad	.LFB1121
	.quad	.LFE1121-.LFB1121
	.byte	0x4
	.long	.LCFI26-.LFB1121
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI27-.LCFI26
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI28-.LCFI27
	.byte	0xe
	.uleb128 0x60
	.byte	0x4
	.long	.LCFI29-.LCFI28
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI30-.LCFI29
	.byte	0xc3
	.byte	0x4
	.long	.LCFI31-.LCFI30
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 7
	.align 8
.LEFDE16:
.LSFDE18:
	.long	.LEFDE18-.LASFDE18
.LASFDE18:
	.secrel32	.Lframe0
	.quad	.LFB1122
	.quad	.LFE1122-.LFB1122
	.byte	0x4
	.long	.LCFI32-.LFB1122
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI33-.LCFI32
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI34-.LCFI33
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI35-.LCFI34
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI36-.LCFI35
	.byte	0xc3
	.byte	0x4
	.long	.LCFI37-.LCFI36
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE18:
.LSFDE20:
	.long	.LEFDE20-.LASFDE20
.LASFDE20:
	.secrel32	.Lframe0
	.quad	.LFB1123
	.quad	.LFE1123-.LFB1123
	.byte	0x4
	.long	.LCFI38-.LFB1123
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI39-.LCFI38
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI40-.LCFI39
	.byte	0xe
	.uleb128 0x60
	.byte	0x4
	.long	.LCFI41-.LCFI40
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI42-.LCFI41
	.byte	0xc3
	.byte	0x4
	.long	.LCFI43-.LCFI42
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 7
	.align 8
.LEFDE20:
.LSFDE22:
	.long	.LEFDE22-.LASFDE22
.LASFDE22:
	.secrel32	.Lframe0
	.quad	.LFB1124
	.quad	.LFE1124-.LFB1124
	.byte	0x4
	.long	.LCFI44-.LFB1124
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI45-.LCFI44
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI46-.LCFI45
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE22:
.LSFDE24:
	.long	.LEFDE24-.LASFDE24
.LASFDE24:
	.secrel32	.Lframe0
	.quad	.LFB1125
	.quad	.LFE1125-.LFB1125
	.byte	0x4
	.long	.LCFI47-.LFB1125
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI48-.LCFI47
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI49-.LCFI48
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI50-.LCFI49
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI51-.LCFI50
	.byte	0xc3
	.byte	0x4
	.long	.LCFI52-.LCFI51
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE24:
.LSFDE26:
	.long	.LEFDE26-.LASFDE26
.LASFDE26:
	.secrel32	.Lframe0
	.quad	.LFB1126
	.quad	.LFE1126-.LFB1126
	.byte	0x4
	.long	.LCFI53-.LFB1126
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI54-.LCFI53
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI55-.LCFI54
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE26:
.LSFDE28:
	.long	.LEFDE28-.LASFDE28
.LASFDE28:
	.secrel32	.Lframe0
	.quad	.LFB1127
	.quad	.LFE1127-.LFB1127
	.byte	0x4
	.long	.LCFI56-.LFB1127
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI57-.LCFI56
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI58-.LCFI57
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI59-.LCFI58
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI60-.LCFI59
	.byte	0xc3
	.byte	0x4
	.long	.LCFI61-.LCFI60
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE28:
.LSFDE30:
	.long	.LEFDE30-.LASFDE30
.LASFDE30:
	.secrel32	.Lframe0
	.quad	.LFB1128
	.quad	.LFE1128-.LFB1128
	.byte	0x4
	.long	.LCFI62-.LFB1128
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI63-.LCFI62
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI64-.LCFI63
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE30:
.LSFDE32:
	.long	.LEFDE32-.LASFDE32
.LASFDE32:
	.secrel32	.Lframe0
	.quad	.LFB1139
	.quad	.LFE1139-.LFB1139
	.byte	0x4
	.long	.LCFI65-.LFB1139
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI66-.LCFI65
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI67-.LCFI66
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE32:
.LSFDE34:
	.long	.LEFDE34-.LASFDE34
.LASFDE34:
	.secrel32	.Lframe0
	.quad	.LFB1140
	.quad	.LFE1140-.LFB1140
	.byte	0x4
	.long	.LCFI68-.LFB1140
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI69-.LCFI68
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI70-.LCFI69
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE34:
.LSFDE36:
	.long	.LEFDE36-.LASFDE36
.LASFDE36:
	.secrel32	.Lframe0
	.quad	.LFB1141
	.quad	.LFE1141-.LFB1141
	.byte	0x4
	.long	.LCFI71-.LFB1141
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI72-.LCFI71
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI73-.LCFI72
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE36:
.LSFDE38:
	.long	.LEFDE38-.LASFDE38
.LASFDE38:
	.secrel32	.Lframe0
	.quad	.LFB1142
	.quad	.LFE1142-.LFB1142
	.byte	0x4
	.long	.LCFI74-.LFB1142
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI75-.LCFI74
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI76-.LCFI75
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE38:
.LSFDE40:
	.long	.LEFDE40-.LASFDE40
.LASFDE40:
	.secrel32	.Lframe0
	.quad	.LFB1143
	.quad	.LFE1143-.LFB1143
	.byte	0x4
	.long	.LCFI77-.LFB1143
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI78-.LCFI77
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI79-.LCFI78
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE40:
.LSFDE42:
	.long	.LEFDE42-.LASFDE42
.LASFDE42:
	.secrel32	.Lframe0
	.quad	.LFB1144
	.quad	.LFE1144-.LFB1144
	.byte	0x4
	.long	.LCFI80-.LFB1144
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI81-.LCFI80
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI82-.LCFI81
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE42:
.LSFDE44:
	.long	.LEFDE44-.LASFDE44
.LASFDE44:
	.secrel32	.Lframe0
	.quad	.LFB1145
	.quad	.LFE1145-.LFB1145
	.byte	0x4
	.long	.LCFI83-.LFB1145
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI84-.LCFI83
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI85-.LCFI84
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE44:
.LSFDE46:
	.long	.LEFDE46-.LASFDE46
.LASFDE46:
	.secrel32	.Lframe0
	.quad	.LFB1146
	.quad	.LFE1146-.LFB1146
	.byte	0x4
	.long	.LCFI86-.LFB1146
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI87-.LCFI86
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI88-.LCFI87
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE46:
.LSFDE48:
	.long	.LEFDE48-.LASFDE48
.LASFDE48:
	.secrel32	.Lframe0
	.quad	.LFB1147
	.quad	.LFE1147-.LFB1147
	.byte	0x4
	.long	.LCFI89-.LFB1147
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI90-.LCFI89
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI91-.LCFI90
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE48:
.LSFDE50:
	.long	.LEFDE50-.LASFDE50
.LASFDE50:
	.secrel32	.Lframe0
	.quad	.LFB1148
	.quad	.LFE1148-.LFB1148
	.byte	0x4
	.long	.LCFI92-.LFB1148
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI93-.LCFI92
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI94-.LCFI93
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE50:
.LSFDE52:
	.long	.LEFDE52-.LASFDE52
.LASFDE52:
	.secrel32	.Lframe0
	.quad	.LFB1149
	.quad	.LFE1149-.LFB1149
	.byte	0x4
	.long	.LCFI95-.LFB1149
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI96-.LCFI95
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI97-.LCFI96
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE52:
.LSFDE54:
	.long	.LEFDE54-.LASFDE54
.LASFDE54:
	.secrel32	.Lframe0
	.quad	.LFB1152
	.quad	.LFE1152-.LFB1152
	.byte	0x4
	.long	.LCFI98-.LFB1152
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI99-.LCFI98
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI100-.LCFI99
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE54:
.LSFDE56:
	.long	.LEFDE56-.LASFDE56
.LASFDE56:
	.secrel32	.Lframe0
	.quad	.LFB1153
	.quad	.LFE1153-.LFB1153
	.byte	0x4
	.long	.LCFI101-.LFB1153
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI102-.LCFI101
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI103-.LCFI102
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE56:
.LSFDE58:
	.long	.LEFDE58-.LASFDE58
.LASFDE58:
	.secrel32	.Lframe0
	.quad	.LFB1155
	.quad	.LFE1155-.LFB1155
	.byte	0x4
	.long	.LCFI104-.LFB1155
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI105-.LCFI104
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI106-.LCFI105
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE58:
.LSFDE60:
	.long	.LEFDE60-.LASFDE60
.LASFDE60:
	.secrel32	.Lframe0
	.quad	.LFB1156
	.quad	.LFE1156-.LFB1156
	.byte	0x4
	.long	.LCFI107-.LFB1156
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI108-.LCFI107
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI109-.LCFI108
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE60:
.LSFDE62:
	.long	.LEFDE62-.LASFDE62
.LASFDE62:
	.secrel32	.Lframe0
	.quad	.LFB1161
	.quad	.LFE1161-.LFB1161
	.byte	0x4
	.long	.LCFI110-.LFB1161
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI111-.LCFI110
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI112-.LCFI111
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE62:
.LSFDE64:
	.long	.LEFDE64-.LASFDE64
.LASFDE64:
	.secrel32	.Lframe0
	.quad	.LFB1163
	.quad	.LFE1163-.LFB1163
	.byte	0x4
	.long	.LCFI113-.LFB1163
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI114-.LCFI113
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI115-.LCFI114
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE64:
.LSFDE66:
	.long	.LEFDE66-.LASFDE66
.LASFDE66:
	.secrel32	.Lframe0
	.quad	.LFB1164
	.quad	.LFE1164-.LFB1164
	.byte	0x4
	.long	.LCFI116-.LFB1164
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI117-.LCFI116
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI118-.LCFI117
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE66:
.LSFDE68:
	.long	.LEFDE68-.LASFDE68
.LASFDE68:
	.secrel32	.Lframe0
	.quad	.LFB1165
	.quad	.LFE1165-.LFB1165
	.byte	0x4
	.long	.LCFI119-.LFB1165
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI120-.LCFI119
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI121-.LCFI120
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE68:
.LSFDE70:
	.long	.LEFDE70-.LASFDE70
.LASFDE70:
	.secrel32	.Lframe0
	.quad	.LFB1245
	.quad	.LFE1245-.LFB1245
	.byte	0x4
	.long	.LCFI122-.LFB1245
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI123-.LCFI122
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI124-.LCFI123
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE70:
.LSFDE72:
	.long	.LEFDE72-.LASFDE72
.LASFDE72:
	.secrel32	.Lframe0
	.quad	.LFB1246
	.quad	.LFE1246-.LFB1246
	.byte	0x4
	.long	.LCFI125-.LFB1246
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI126-.LCFI125
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI127-.LCFI126
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE72:
.LSFDE74:
	.long	.LEFDE74-.LASFDE74
.LASFDE74:
	.secrel32	.Lframe0
	.quad	.LFB1247
	.quad	.LFE1247-.LFB1247
	.byte	0x4
	.long	.LCFI128-.LFB1247
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI129-.LCFI128
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI130-.LCFI129
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE74:
.LSFDE76:
	.long	.LEFDE76-.LASFDE76
.LASFDE76:
	.secrel32	.Lframe0
	.quad	.LFB1248
	.quad	.LFE1248-.LFB1248
	.byte	0x4
	.long	.LCFI131-.LFB1248
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI132-.LCFI131
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI133-.LCFI132
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE76:
.LSFDE78:
	.long	.LEFDE78-.LASFDE78
.LASFDE78:
	.secrel32	.Lframe0
	.quad	.LFB1249
	.quad	.LFE1249-.LFB1249
	.byte	0x4
	.long	.LCFI134-.LFB1249
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI135-.LCFI134
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI136-.LCFI135
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE78:
.LSFDE80:
	.long	.LEFDE80-.LASFDE80
.LASFDE80:
	.secrel32	.Lframe0
	.quad	.LFB1250
	.quad	.LFE1250-.LFB1250
	.byte	0x4
	.long	.LCFI137-.LFB1250
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI138-.LCFI137
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI139-.LCFI138
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE80:
.LSFDE82:
	.long	.LEFDE82-.LASFDE82
.LASFDE82:
	.secrel32	.Lframe0
	.quad	.LFB1251
	.quad	.LFE1251-.LFB1251
	.byte	0x4
	.long	.LCFI140-.LFB1251
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI141-.LCFI140
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI142-.LCFI141
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE82:
.LSFDE84:
	.long	.LEFDE84-.LASFDE84
.LASFDE84:
	.secrel32	.Lframe0
	.quad	.LFB1252
	.quad	.LFE1252-.LFB1252
	.byte	0x4
	.long	.LCFI143-.LFB1252
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI144-.LCFI143
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI145-.LCFI144
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE84:
.LSFDE86:
	.long	.LEFDE86-.LASFDE86
.LASFDE86:
	.secrel32	.Lframe0
	.quad	.LFB1253
	.quad	.LFE1253-.LFB1253
	.byte	0x4
	.long	.LCFI146-.LFB1253
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI147-.LCFI146
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI148-.LCFI147
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE86:
.LSFDE88:
	.long	.LEFDE88-.LASFDE88
.LASFDE88:
	.secrel32	.Lframe0
	.quad	.LFB1254
	.quad	.LFE1254-.LFB1254
	.byte	0x4
	.long	.LCFI149-.LFB1254
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI150-.LCFI149
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI151-.LCFI150
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE88:
.LSFDE90:
	.long	.LEFDE90-.LASFDE90
.LASFDE90:
	.secrel32	.Lframe0
	.quad	.LFB1255
	.quad	.LFE1255-.LFB1255
	.byte	0x4
	.long	.LCFI152-.LFB1255
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI153-.LCFI152
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI154-.LCFI153
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE90:
.LSFDE92:
	.long	.LEFDE92-.LASFDE92
.LASFDE92:
	.secrel32	.Lframe0
	.quad	.LFB1256
	.quad	.LFE1256-.LFB1256
	.byte	0x4
	.long	.LCFI155-.LFB1256
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI156-.LCFI155
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI157-.LCFI156
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE92:
.LSFDE94:
	.long	.LEFDE94-.LASFDE94
.LASFDE94:
	.secrel32	.Lframe0
	.quad	.LFB1257
	.quad	.LFE1257-.LFB1257
	.byte	0x4
	.long	.LCFI158-.LFB1257
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI159-.LCFI158
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI160-.LCFI159
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE94:
.LSFDE96:
	.long	.LEFDE96-.LASFDE96
.LASFDE96:
	.secrel32	.Lframe0
	.quad	.LFB1258
	.quad	.LFE1258-.LFB1258
	.byte	0x4
	.long	.LCFI161-.LFB1258
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI162-.LCFI161
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI163-.LCFI162
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE96:
.LSFDE98:
	.long	.LEFDE98-.LASFDE98
.LASFDE98:
	.secrel32	.Lframe0
	.quad	.LFB1259
	.quad	.LFE1259-.LFB1259
	.byte	0x4
	.long	.LCFI164-.LFB1259
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI165-.LCFI164
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI166-.LCFI165
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE98:
.LSFDE100:
	.long	.LEFDE100-.LASFDE100
.LASFDE100:
	.secrel32	.Lframe0
	.quad	.LFB1260
	.quad	.LFE1260-.LFB1260
	.byte	0x4
	.long	.LCFI167-.LFB1260
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI168-.LCFI167
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI169-.LCFI168
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE100:
.LSFDE102:
	.long	.LEFDE102-.LASFDE102
.LASFDE102:
	.secrel32	.Lframe0
	.quad	.LFB1261
	.quad	.LFE1261-.LFB1261
	.byte	0x4
	.long	.LCFI170-.LFB1261
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI171-.LCFI170
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI172-.LCFI171
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE102:
.LSFDE104:
	.long	.LEFDE104-.LASFDE104
.LASFDE104:
	.secrel32	.Lframe0
	.quad	.LFB1262
	.quad	.LFE1262-.LFB1262
	.byte	0x4
	.long	.LCFI173-.LFB1262
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI174-.LCFI173
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI175-.LCFI174
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE104:
.LSFDE106:
	.long	.LEFDE106-.LASFDE106
.LASFDE106:
	.secrel32	.Lframe0
	.quad	.LFB1263
	.quad	.LFE1263-.LFB1263
	.byte	0x4
	.long	.LCFI176-.LFB1263
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI177-.LCFI176
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.long	.LCFI178-.LCFI177
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI179-.LCFI178
	.byte	0x97
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI180-.LCFI179
	.byte	0xd7
	.byte	0x4
	.long	.LCFI181-.LCFI180
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 7
	.align 8
.LEFDE106:
.LSFDE108:
	.long	.LEFDE108-.LASFDE108
.LASFDE108:
	.secrel32	.Lframe0
	.quad	.LFB1264
	.quad	.LFE1264-.LFB1264
	.byte	0x4
	.long	.LCFI182-.LFB1264
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI183-.LCFI182
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI184-.LCFI183
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE108:
.LSFDE110:
	.long	.LEFDE110-.LASFDE110
.LASFDE110:
	.secrel32	.Lframe0
	.quad	.LFB1265
	.quad	.LFE1265-.LFB1265
	.byte	0x4
	.long	.LCFI185-.LFB1265
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI186-.LCFI185
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI187-.LCFI186
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE110:
.LSFDE112:
	.long	.LEFDE112-.LASFDE112
.LASFDE112:
	.secrel32	.Lframe0
	.quad	.LFB1266
	.quad	.LFE1266-.LFB1266
	.byte	0x4
	.long	.LCFI188-.LFB1266
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI189-.LCFI188
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI190-.LCFI189
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE112:
.LSFDE114:
	.long	.LEFDE114-.LASFDE114
.LASFDE114:
	.secrel32	.Lframe0
	.quad	.LFB1267
	.quad	.LFE1267-.LFB1267
	.byte	0x4
	.long	.LCFI191-.LFB1267
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI192-.LCFI191
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI193-.LCFI192
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE114:
.LSFDE116:
	.long	.LEFDE116-.LASFDE116
.LASFDE116:
	.secrel32	.Lframe0
	.quad	.LFB1277
	.quad	.LFE1277-.LFB1277
	.byte	0x4
	.long	.LCFI194-.LFB1277
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI195-.LCFI194
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI196-.LCFI195
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.long	.LCFI197-.LCFI196
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI198-.LCFI197
	.byte	0xc3
	.byte	0x4
	.long	.LCFI199-.LCFI198
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 5
	.align 8
.LEFDE116:
.LSFDE118:
	.long	.LEFDE118-.LASFDE118
.LASFDE118:
	.secrel32	.Lframe0
	.quad	.LFB1321
	.quad	.LFE1321-.LFB1321
	.byte	0x4
	.long	.LCFI200-.LFB1321
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI201-.LCFI200
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI202-.LCFI201
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE118:
.LSFDE120:
	.long	.LEFDE120-.LASFDE120
.LASFDE120:
	.secrel32	.Lframe0
	.quad	.LFB1322
	.quad	.LFE1322-.LFB1322
	.byte	0x4
	.long	.LCFI203-.LFB1322
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI204-.LCFI203
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI205-.LCFI204
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE120:
.LSFDE122:
	.long	.LEFDE122-.LASFDE122
.LASFDE122:
	.secrel32	.Lframe0
	.quad	.LFB1841
	.quad	.LFE1841-.LFB1841
	.byte	0x4
	.long	.LCFI206-.LFB1841
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI207-.LCFI206
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI208-.LCFI207
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE122:
.LSFDE124:
	.long	.LEFDE124-.LASFDE124
.LASFDE124:
	.secrel32	.Lframe0
	.quad	.LFB1845
	.quad	.LFE1845-.LFB1845
	.byte	0x4
	.long	.LCFI209-.LFB1845
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI210-.LCFI209
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI211-.LCFI210
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE124:
.LSFDE126:
	.long	.LEFDE126-.LASFDE126
.LASFDE126:
	.secrel32	.Lframe0
	.quad	.LFB1846
	.quad	.LFE1846-.LFB1846
	.byte	0x4
	.long	.LCFI212-.LFB1846
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI213-.LCFI212
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI214-.LCFI213
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE126:
.LSFDE128:
	.long	.LEFDE128-.LASFDE128
.LASFDE128:
	.secrel32	.Lframe0
	.quad	.LFB1847
	.quad	.LFE1847-.LFB1847
	.byte	0x4
	.long	.LCFI215-.LFB1847
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI216-.LCFI215
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI217-.LCFI216
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE128:
.LSFDE130:
	.long	.LEFDE130-.LASFDE130
.LASFDE130:
	.secrel32	.Lframe0
	.quad	.LFB1855
	.quad	.LFE1855-.LFB1855
	.byte	0x4
	.long	.LCFI218-.LFB1855
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI219-.LCFI218
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI220-.LCFI219
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE130:
.LSFDE132:
	.long	.LEFDE132-.LASFDE132
.LASFDE132:
	.secrel32	.Lframe0
	.quad	.LFB1857
	.quad	.LFE1857-.LFB1857
	.byte	0x4
	.long	.LCFI221-.LFB1857
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI222-.LCFI221
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI223-.LCFI222
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE132:
.LSFDE134:
	.long	.LEFDE134-.LASFDE134
.LASFDE134:
	.secrel32	.Lframe0
	.quad	.LFB1858
	.quad	.LFE1858-.LFB1858
	.byte	0x4
	.long	.LCFI224-.LFB1858
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI225-.LCFI224
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI226-.LCFI225
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE134:
.LSFDE136:
	.long	.LEFDE136-.LASFDE136
.LASFDE136:
	.secrel32	.Lframe0
	.quad	.LFB1859
	.quad	.LFE1859-.LFB1859
	.byte	0x4
	.long	.LCFI227-.LFB1859
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI228-.LCFI227
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI229-.LCFI228
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE136:
.LSFDE138:
	.long	.LEFDE138-.LASFDE138
.LASFDE138:
	.secrel32	.Lframe0
	.quad	.LFB1862
	.quad	.LFE1862-.LFB1862
	.byte	0x4
	.long	.LCFI230-.LFB1862
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI231-.LCFI230
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI232-.LCFI231
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE138:
.LSFDE140:
	.long	.LEFDE140-.LASFDE140
.LASFDE140:
	.secrel32	.Lframe0
	.quad	.LFB1865
	.quad	.LFE1865-.LFB1865
	.byte	0x4
	.long	.LCFI233-.LFB1865
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI234-.LCFI233
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI235-.LCFI234
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE140:
.LSFDE142:
	.long	.LEFDE142-.LASFDE142
.LASFDE142:
	.secrel32	.Lframe0
	.quad	.LFB1868
	.quad	.LFE1868-.LFB1868
	.byte	0x4
	.long	.LCFI236-.LFB1868
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI237-.LCFI236
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI238-.LCFI237
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE142:
.LSFDE144:
	.long	.LEFDE144-.LASFDE144
.LASFDE144:
	.secrel32	.Lframe0
	.quad	.LFB1870
	.quad	.LFE1870-.LFB1870
	.byte	0x4
	.long	.LCFI239-.LFB1870
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI240-.LCFI239
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI241-.LCFI240
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE144:
.LSFDE146:
	.long	.LEFDE146-.LASFDE146
.LASFDE146:
	.secrel32	.Lframe0
	.quad	.LFB1871
	.quad	.LFE1871-.LFB1871
	.byte	0x4
	.long	.LCFI242-.LFB1871
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI243-.LCFI242
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI244-.LCFI243
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE146:
.LSFDE148:
	.long	.LEFDE148-.LASFDE148
.LASFDE148:
	.secrel32	.Lframe0
	.quad	.LFB1873
	.quad	.LFE1873-.LFB1873
	.byte	0x4
	.long	.LCFI245-.LFB1873
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI246-.LCFI245
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI247-.LCFI246
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE148:
.LSFDE150:
	.long	.LEFDE150-.LASFDE150
.LASFDE150:
	.secrel32	.Lframe0
	.quad	.LFB1875
	.quad	.LFE1875-.LFB1875
	.byte	0x4
	.long	.LCFI248-.LFB1875
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI249-.LCFI248
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI250-.LCFI249
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE150:
.LSFDE152:
	.long	.LEFDE152-.LASFDE152
.LASFDE152:
	.secrel32	.Lframe0
	.quad	.LFB1877
	.quad	.LFE1877-.LFB1877
	.byte	0x4
	.long	.LCFI251-.LFB1877
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI252-.LCFI251
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI253-.LCFI252
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE152:
.LSFDE154:
	.long	.LEFDE154-.LASFDE154
.LASFDE154:
	.secrel32	.Lframe0
	.quad	.LFB1878
	.quad	.LFE1878-.LFB1878
	.byte	0x4
	.long	.LCFI254-.LFB1878
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI255-.LCFI254
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI256-.LCFI255
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE154:
.LSFDE156:
	.long	.LEFDE156-.LASFDE156
.LASFDE156:
	.secrel32	.Lframe0
	.quad	.LFB1886
	.quad	.LFE1886-.LFB1886
	.byte	0x4
	.long	.LCFI257-.LFB1886
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI258-.LCFI257
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI259-.LCFI258
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE156:
.LSFDE158:
	.long	.LEFDE158-.LASFDE158
.LASFDE158:
	.secrel32	.Lframe0
	.quad	.LFB1889
	.quad	.LFE1889-.LFB1889
	.byte	0x4
	.long	.LCFI260-.LFB1889
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI261-.LCFI260
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI262-.LCFI261
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE158:
.LSFDE160:
	.long	.LEFDE160-.LASFDE160
.LASFDE160:
	.secrel32	.Lframe0
	.quad	.LFB1890
	.quad	.LFE1890-.LFB1890
	.byte	0x4
	.long	.LCFI263-.LFB1890
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI264-.LCFI263
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI265-.LCFI264
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE160:
.LSFDE162:
	.long	.LEFDE162-.LASFDE162
.LASFDE162:
	.secrel32	.Lframe0
	.quad	.LFB1891
	.quad	.LFE1891-.LFB1891
	.byte	0x4
	.long	.LCFI266-.LFB1891
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI267-.LCFI266
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI268-.LCFI267
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE162:
.LSFDE164:
	.long	.LEFDE164-.LASFDE164
.LASFDE164:
	.secrel32	.Lframe0
	.quad	.LFB1892
	.quad	.LFE1892-.LFB1892
	.byte	0x4
	.long	.LCFI269-.LFB1892
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI270-.LCFI269
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI271-.LCFI270
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE164:
.LSFDE166:
	.long	.LEFDE166-.LASFDE166
.LASFDE166:
	.secrel32	.Lframe0
	.quad	.LFB1896
	.quad	.LFE1896-.LFB1896
	.byte	0x4
	.long	.LCFI272-.LFB1896
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI273-.LCFI272
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI274-.LCFI273
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE166:
.LSFDE168:
	.long	.LEFDE168-.LASFDE168
.LASFDE168:
	.secrel32	.Lframe0
	.quad	.LFB1898
	.quad	.LFE1898-.LFB1898
	.byte	0x4
	.long	.LCFI275-.LFB1898
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI276-.LCFI275
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI277-.LCFI276
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE168:
.LSFDE170:
	.long	.LEFDE170-.LASFDE170
.LASFDE170:
	.secrel32	.Lframe0
	.quad	.LFB1899
	.quad	.LFE1899-.LFB1899
	.byte	0x4
	.long	.LCFI278-.LFB1899
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI279-.LCFI278
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI280-.LCFI279
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE170:
.LSFDE172:
	.long	.LEFDE172-.LASFDE172
.LASFDE172:
	.secrel32	.Lframe0
	.quad	.LFB1999
	.quad	.LFE1999-.LFB1999
	.byte	0x4
	.long	.LCFI281-.LFB1999
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI282-.LCFI281
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI283-.LCFI282
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE172:
.LSFDE174:
	.long	.LEFDE174-.LASFDE174
.LASFDE174:
	.secrel32	.Lframe0
	.quad	.LFB2000
	.quad	.LFE2000-.LFB2000
	.byte	0x4
	.long	.LCFI284-.LFB2000
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI285-.LCFI284
	.byte	0xe
	.uleb128 0x18
	.byte	0x84
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI286-.LCFI285
	.byte	0xe
	.uleb128 0x20
	.byte	0x83
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI287-.LCFI286
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.long	.LCFI288-.LCFI287
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI289-.LCFI288
	.byte	0xc3
	.byte	0x4
	.long	.LCFI290-.LCFI289
	.byte	0xc4
	.byte	0x4
	.long	.LCFI291-.LCFI290
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE174:
.LSFDE176:
	.long	.LEFDE176-.LASFDE176
.LASFDE176:
	.secrel32	.Lframe0
	.quad	.LFB4173
	.quad	.LFE4173-.LFB4173
	.byte	0x4
	.long	.LCFI292-.LFB4173
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI293-.LCFI292
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI294-.LCFI293
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE176:
.LSFDE178:
	.long	.LEFDE178-.LASFDE178
.LASFDE178:
	.secrel32	.Lframe0
	.quad	.LFB4654
	.quad	.LFE4654-.LFB4654
	.byte	0x4
	.long	.LCFI295-.LFB4654
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI296-.LCFI295
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI297-.LCFI296
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE178:
.LSFDE180:
	.long	.LEFDE180-.LASFDE180
.LASFDE180:
	.secrel32	.Lframe0
	.quad	.LFB4659
	.quad	.LFE4659-.LFB4659
	.byte	0x4
	.long	.LCFI298-.LFB4659
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI299-.LCFI298
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI300-.LCFI299
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI301-.LCFI300
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI302-.LCFI301
	.byte	0xc3
	.byte	0x4
	.long	.LCFI303-.LCFI302
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE180:
.LSFDE182:
	.long	.LEFDE182-.LASFDE182
.LASFDE182:
	.secrel32	.Lframe0
	.quad	.LFB4660
	.quad	.LFE4660-.LFB4660
	.byte	0x4
	.long	.LCFI304-.LFB4660
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI305-.LCFI304
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI306-.LCFI305
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI307-.LCFI306
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI308-.LCFI307
	.byte	0xc3
	.byte	0x4
	.long	.LCFI309-.LCFI308
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE182:
.LSFDE184:
	.long	.LEFDE184-.LASFDE184
.LASFDE184:
	.secrel32	.Lframe0
	.quad	.LFB4661
	.quad	.LFE4661-.LFB4661
	.byte	0x4
	.long	.LCFI310-.LFB4661
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI311-.LCFI310
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI312-.LCFI311
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE184:
.LSFDE186:
	.long	.LEFDE186-.LASFDE186
.LASFDE186:
	.secrel32	.Lframe0
	.quad	.LFB4662
	.quad	.LFE4662-.LFB4662
	.byte	0x4
	.long	.LCFI313-.LFB4662
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI314-.LCFI313
	.byte	0xe
	.uleb128 0x18
	.byte	0x85
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI315-.LCFI314
	.byte	0xe
	.uleb128 0x20
	.byte	0x84
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI316-.LCFI315
	.byte	0xe
	.uleb128 0x28
	.byte	0x83
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI317-.LCFI316
	.byte	0xe
	.uleb128 0x60
	.byte	0x4
	.long	.LCFI318-.LCFI317
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x30
	.byte	0x4
	.long	.LCFI319-.LCFI318
	.byte	0xc3
	.byte	0x4
	.long	.LCFI320-.LCFI319
	.byte	0xc4
	.byte	0x4
	.long	.LCFI321-.LCFI320
	.byte	0xc5
	.byte	0x4
	.long	.LCFI322-.LCFI321
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE186:
.LSFDE188:
	.long	.LEFDE188-.LASFDE188
.LASFDE188:
	.secrel32	.Lframe0
	.quad	.LFB4669
	.quad	.LFE4669-.LFB4669
	.byte	0x4
	.long	.LCFI323-.LFB4669
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI324-.LCFI323
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI325-.LCFI324
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE188:
.LSFDE190:
	.long	.LEFDE190-.LASFDE190
.LASFDE190:
	.secrel32	.Lframe0
	.quad	.LFB4670
	.quad	.LFE4670-.LFB4670
	.byte	0x4
	.long	.LCFI326-.LFB4670
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI327-.LCFI326
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI328-.LCFI327
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE190:
.LSFDE192:
	.long	.LEFDE192-.LASFDE192
.LASFDE192:
	.secrel32	.Lframe0
	.quad	.LFB4673
	.quad	.LFE4673-.LFB4673
	.byte	0x4
	.long	.LCFI329-.LFB4673
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI330-.LCFI329
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI331-.LCFI330
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE192:
.LSFDE194:
	.long	.LEFDE194-.LASFDE194
.LASFDE194:
	.secrel32	.Lframe0
	.quad	.LFB4676
	.quad	.LFE4676-.LFB4676
	.byte	0x4
	.long	.LCFI332-.LFB4676
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI333-.LCFI332
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI334-.LCFI333
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE194:
.LSFDE196:
	.long	.LEFDE196-.LASFDE196
.LASFDE196:
	.secrel32	.Lframe0
	.quad	.LFB4678
	.quad	.LFE4678-.LFB4678
	.byte	0x4
	.long	.LCFI335-.LFB4678
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI336-.LCFI335
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI337-.LCFI336
	.byte	0xe
	.uleb128 0x90
	.byte	0x4
	.long	.LCFI338-.LCFI337
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI339-.LCFI338
	.byte	0xc3
	.byte	0x4
	.long	.LCFI340-.LCFI339
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 13
	.align 8
.LEFDE196:
.LSFDE198:
	.long	.LEFDE198-.LASFDE198
.LASFDE198:
	.secrel32	.Lframe0
	.quad	.LFB4681
	.quad	.LFE4681-.LFB4681
	.byte	0x4
	.long	.LCFI341-.LFB4681
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI342-.LCFI341
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI343-.LCFI342
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI344-.LCFI343
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI345-.LCFI344
	.byte	0xc3
	.byte	0x4
	.long	.LCFI346-.LCFI345
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE198:
.LSFDE200:
	.long	.LEFDE200-.LASFDE200
.LASFDE200:
	.secrel32	.Lframe0
	.quad	.LFB4682
	.quad	.LFE4682-.LFB4682
	.byte	0x4
	.long	.LCFI347-.LFB4682
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI348-.LCFI347
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI349-.LCFI348
	.byte	0xe
	.uleb128 0xb0
	.byte	0x4
	.long	.LCFI350-.LCFI349
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI351-.LCFI350
	.byte	0xc3
	.byte	0x4
	.long	.LCFI352-.LCFI351
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 17
	.align 8
.LEFDE200:
.LSFDE202:
	.long	.LEFDE202-.LASFDE202
.LASFDE202:
	.secrel32	.Lframe0
	.quad	.LFB4686
	.quad	.LFE4686-.LFB4686
	.byte	0x4
	.long	.LCFI353-.LFB4686
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI354-.LCFI353
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI355-.LCFI354
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE202:
.LSFDE204:
	.long	.LEFDE204-.LASFDE204
.LASFDE204:
	.secrel32	.Lframe0
	.quad	.LFB4687
	.quad	.LFE4687-.LFB4687
	.byte	0x4
	.long	.LCFI356-.LFB4687
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI357-.LCFI356
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI358-.LCFI357
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI359-.LCFI358
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI360-.LCFI359
	.byte	0xc3
	.byte	0x4
	.long	.LCFI361-.LCFI360
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE204:
.LSFDE206:
	.long	.LEFDE206-.LASFDE206
.LASFDE206:
	.secrel32	.Lframe0
	.quad	.LFB4688
	.quad	.LFE4688-.LFB4688
	.byte	0x4
	.long	.LCFI362-.LFB4688
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI363-.LCFI362
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI364-.LCFI363
	.byte	0xe
	.uleb128 0x60
	.byte	0x4
	.long	.LCFI365-.LCFI364
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI366-.LCFI365
	.byte	0xc3
	.byte	0x4
	.long	.LCFI367-.LCFI366
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 7
	.align 8
.LEFDE206:
.LSFDE208:
	.long	.LEFDE208-.LASFDE208
.LASFDE208:
	.secrel32	.Lframe0
	.quad	.LFB4691
	.quad	.LFE4691-.LFB4691
	.byte	0x4
	.long	.LCFI368-.LFB4691
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI369-.LCFI368
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI370-.LCFI369
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE208:
.LSFDE210:
	.long	.LEFDE210-.LASFDE210
.LASFDE210:
	.secrel32	.Lframe0
	.quad	.LFB4697
	.quad	.LFE4697-.LFB4697
	.byte	0x4
	.long	.LCFI371-.LFB4697
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI372-.LCFI371
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI373-.LCFI372
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE210:
.LSFDE212:
	.long	.LEFDE212-.LASFDE212
.LASFDE212:
	.secrel32	.Lframe0
	.quad	.LFB4698
	.quad	.LFE4698-.LFB4698
	.byte	0x4
	.long	.LCFI374-.LFB4698
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI375-.LCFI374
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI376-.LCFI375
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE212:
.LSFDE214:
	.long	.LEFDE214-.LASFDE214
.LASFDE214:
	.secrel32	.Lframe0
	.quad	.LFB4701
	.quad	.LFE4701-.LFB4701
	.byte	0x4
	.long	.LCFI377-.LFB4701
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI378-.LCFI377
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI379-.LCFI378
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE214:
.LSFDE216:
	.long	.LEFDE216-.LASFDE216
.LASFDE216:
	.secrel32	.Lframe0
	.quad	.LFB4702
	.quad	.LFE4702-.LFB4702
	.byte	0x4
	.long	.LCFI380-.LFB4702
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI381-.LCFI380
	.byte	0xe
	.uleb128 0x18
	.byte	0x84
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI382-.LCFI381
	.byte	0xe
	.uleb128 0x20
	.byte	0x83
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI383-.LCFI382
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.long	.LCFI384-.LCFI383
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI385-.LCFI384
	.byte	0xc3
	.byte	0x4
	.long	.LCFI386-.LCFI385
	.byte	0xc4
	.byte	0x4
	.long	.LCFI387-.LCFI386
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE216:
.LSFDE218:
	.long	.LEFDE218-.LASFDE218
.LASFDE218:
	.secrel32	.Lframe0
	.quad	.LFB4703
	.quad	.LFE4703-.LFB4703
	.byte	0x4
	.long	.LCFI388-.LFB4703
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI389-.LCFI388
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI390-.LCFI389
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE218:
.LSFDE220:
	.long	.LEFDE220-.LASFDE220
.LASFDE220:
	.secrel32	.Lframe0
	.quad	.LFB4704
	.quad	.LFE4704-.LFB4704
	.byte	0x4
	.long	.LCFI391-.LFB4704
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI392-.LCFI391
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.long	.LCFI393-.LCFI392
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI394-.LCFI393
	.byte	0x97
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI395-.LCFI394
	.byte	0xd7
	.byte	0x4
	.long	.LCFI396-.LCFI395
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 7
	.align 8
.LEFDE220:
.LSFDE222:
	.long	.LEFDE222-.LASFDE222
.LASFDE222:
	.secrel32	.Lframe0
	.quad	.LFB4708
	.quad	.LFE4708-.LFB4708
	.byte	0x4
	.long	.LCFI397-.LFB4708
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI398-.LCFI397
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI399-.LCFI398
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE222:
.LSFDE224:
	.long	.LEFDE224-.LASFDE224
.LASFDE224:
	.secrel32	.Lframe0
	.quad	.LFB4705
	.quad	.LFE4705-.LFB4705
	.byte	0x4
	.long	.LCFI400-.LFB4705
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI401-.LCFI400
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI402-.LCFI401
	.byte	0xe
	.uleb128 0x80
	.byte	0x4
	.long	.LCFI403-.LCFI402
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI404-.LCFI403
	.byte	0xc3
	.byte	0x4
	.long	.LCFI405-.LCFI404
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 11
	.align 8
.LEFDE224:
.LSFDE226:
	.long	.LEFDE226-.LASFDE226
.LASFDE226:
	.secrel32	.Lframe0
	.quad	.LFB4709
	.quad	.LFE4709-.LFB4709
	.byte	0x4
	.long	.LCFI406-.LFB4709
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI407-.LCFI406
	.byte	0xe
	.uleb128 0x18
	.byte	0x85
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI408-.LCFI407
	.byte	0xe
	.uleb128 0x20
	.byte	0x84
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI409-.LCFI408
	.byte	0xe
	.uleb128 0x28
	.byte	0x83
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI410-.LCFI409
	.byte	0xe
	.uleb128 0x90
	.byte	0x4
	.long	.LCFI411-.LCFI410
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x30
	.byte	0x4
	.long	.LCFI412-.LCFI411
	.byte	0xc3
	.byte	0x4
	.long	.LCFI413-.LCFI412
	.byte	0xc4
	.byte	0x4
	.long	.LCFI414-.LCFI413
	.byte	0xc5
	.byte	0x4
	.long	.LCFI415-.LCFI414
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 9
	.align 8
.LEFDE226:
.LSFDE228:
	.long	.LEFDE228-.LASFDE228
.LASFDE228:
	.secrel32	.Lframe0
	.quad	.LFB5070
	.quad	.LFE5070-.LFB5070
	.byte	0x4
	.long	.LCFI416-.LFB5070
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI417-.LCFI416
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI418-.LCFI417
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE228:
.LSFDE230:
	.long	.LEFDE230-.LASFDE230
.LASFDE230:
	.secrel32	.Lframe0
	.quad	.LFB5084
	.quad	.LFE5084-.LFB5084
	.byte	0x4
	.long	.LCFI419-.LFB5084
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI420-.LCFI419
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI421-.LCFI420
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE230:
.LSFDE232:
	.long	.LEFDE232-.LASFDE232
.LASFDE232:
	.secrel32	.Lframe0
	.quad	.LFB5085
	.quad	.LFE5085-.LFB5085
	.byte	0x4
	.long	.LCFI422-.LFB5085
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI423-.LCFI422
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI424-.LCFI423
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE232:
.LSFDE234:
	.long	.LEFDE234-.LASFDE234
.LASFDE234:
	.secrel32	.Lframe0
	.quad	.LFB5088
	.quad	.LFE5088-.LFB5088
	.byte	0x4
	.long	.LCFI425-.LFB5088
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI426-.LCFI425
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI427-.LCFI426
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE234:
.LSFDE236:
	.long	.LEFDE236-.LASFDE236
.LASFDE236:
	.secrel32	.Lframe0
	.quad	.LFB5094
	.quad	.LFE5094-.LFB5094
	.byte	0x4
	.long	.LCFI428-.LFB5094
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI429-.LCFI428
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI430-.LCFI429
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE236:
.LSFDE238:
	.long	.LEFDE238-.LASFDE238
.LASFDE238:
	.secrel32	.Lframe0
	.quad	.LFB5095
	.quad	.LFE5095-.LFB5095
	.byte	0x4
	.long	.LCFI431-.LFB5095
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI432-.LCFI431
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI433-.LCFI432
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE238:
.LSFDE240:
	.long	.LEFDE240-.LASFDE240
.LASFDE240:
	.secrel32	.Lframe0
	.quad	.LFB5098
	.quad	.LFE5098-.LFB5098
	.byte	0x4
	.long	.LCFI434-.LFB5098
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI435-.LCFI434
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI436-.LCFI435
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE240:
.LSFDE242:
	.long	.LEFDE242-.LASFDE242
.LASFDE242:
	.secrel32	.Lframe0
	.quad	.LFB5100
	.quad	.LFE5100-.LFB5100
	.byte	0x4
	.long	.LCFI437-.LFB5100
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI438-.LCFI437
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI439-.LCFI438
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI440-.LCFI439
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI441-.LCFI440
	.byte	0xc3
	.byte	0x4
	.long	.LCFI442-.LCFI441
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE242:
.LSFDE244:
	.long	.LEFDE244-.LASFDE244
.LASFDE244:
	.secrel32	.Lframe0
	.quad	.LFB5103
	.quad	.LFE5103-.LFB5103
	.byte	0x4
	.long	.LCFI443-.LFB5103
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI444-.LCFI443
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI445-.LCFI444
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE244:
.LSFDE246:
	.long	.LEFDE246-.LASFDE246
.LASFDE246:
	.secrel32	.Lframe0
	.quad	.LFB5106
	.quad	.LFE5106-.LFB5106
	.byte	0x4
	.long	.LCFI446-.LFB5106
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI447-.LCFI446
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI448-.LCFI447
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE246:
.LSFDE248:
	.long	.LEFDE248-.LASFDE248
.LASFDE248:
	.secrel32	.Lframe0
	.quad	.LFB5107
	.quad	.LFE5107-.LFB5107
	.byte	0x4
	.long	.LCFI449-.LFB5107
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI450-.LCFI449
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI451-.LCFI450
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE248:
.LSFDE250:
	.long	.LEFDE250-.LASFDE250
.LASFDE250:
	.secrel32	.Lframe0
	.quad	.LFB5108
	.quad	.LFE5108-.LFB5108
	.byte	0x4
	.long	.LCFI452-.LFB5108
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI453-.LCFI452
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI454-.LCFI453
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE250:
.LSFDE252:
	.long	.LEFDE252-.LASFDE252
.LASFDE252:
	.secrel32	.Lframe0
	.quad	.LFB5109
	.quad	.LFE5109-.LFB5109
	.byte	0x4
	.long	.LCFI455-.LFB5109
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI456-.LCFI455
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI457-.LCFI456
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE252:
.LSFDE254:
	.long	.LEFDE254-.LASFDE254
.LASFDE254:
	.secrel32	.Lframe0
	.quad	.LFB5112
	.quad	.LFE5112-.LFB5112
	.byte	0x4
	.long	.LCFI458-.LFB5112
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI459-.LCFI458
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI460-.LCFI459
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE254:
.LSFDE256:
	.long	.LEFDE256-.LASFDE256
.LASFDE256:
	.secrel32	.Lframe0
	.quad	.LFB5114
	.quad	.LFE5114-.LFB5114
	.byte	0x4
	.long	.LCFI461-.LFB5114
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI462-.LCFI461
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI463-.LCFI462
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE256:
.LSFDE258:
	.long	.LEFDE258-.LASFDE258
.LASFDE258:
	.secrel32	.Lframe0
	.quad	.LFB5117
	.quad	.LFE5117-.LFB5117
	.byte	0x4
	.long	.LCFI464-.LFB5117
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI465-.LCFI464
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI466-.LCFI465
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE258:
.LSFDE260:
	.long	.LEFDE260-.LASFDE260
.LASFDE260:
	.secrel32	.Lframe0
	.quad	.LFB5121
	.quad	.LFE5121-.LFB5121
	.byte	0x4
	.long	.LCFI467-.LFB5121
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI468-.LCFI467
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI469-.LCFI468
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE260:
.LSFDE262:
	.long	.LEFDE262-.LASFDE262
.LASFDE262:
	.secrel32	.Lframe0
	.quad	.LFB5122
	.quad	.LFE5122-.LFB5122
	.byte	0x4
	.long	.LCFI470-.LFB5122
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI471-.LCFI470
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI472-.LCFI471
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE262:
.LSFDE264:
	.long	.LEFDE264-.LASFDE264
.LASFDE264:
	.secrel32	.Lframe0
	.quad	.LFB5124
	.quad	.LFE5124-.LFB5124
	.byte	0x4
	.long	.LCFI473-.LFB5124
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI474-.LCFI473
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI475-.LCFI474
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE264:
.LSFDE266:
	.long	.LEFDE266-.LASFDE266
.LASFDE266:
	.secrel32	.Lframe0
	.quad	.LFB5125
	.quad	.LFE5125-.LFB5125
	.byte	0x4
	.long	.LCFI476-.LFB5125
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI477-.LCFI476
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI478-.LCFI477
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE266:
.LSFDE268:
	.long	.LEFDE268-.LASFDE268
.LASFDE268:
	.secrel32	.Lframe0
	.quad	.LFB5126
	.quad	.LFE5126-.LFB5126
	.byte	0x4
	.long	.LCFI479-.LFB5126
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI480-.LCFI479
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI481-.LCFI480
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE268:
.LSFDE270:
	.long	.LEFDE270-.LASFDE270
.LASFDE270:
	.secrel32	.Lframe0
	.quad	.LFB5127
	.quad	.LFE5127-.LFB5127
	.byte	0x4
	.long	.LCFI482-.LFB5127
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI483-.LCFI482
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI484-.LCFI483
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI485-.LCFI484
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI486-.LCFI485
	.byte	0xc3
	.byte	0x4
	.long	.LCFI487-.LCFI486
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE270:
.LSFDE272:
	.long	.LEFDE272-.LASFDE272
.LASFDE272:
	.secrel32	.Lframe0
	.quad	.LFB5123
	.quad	.LFE5123-.LFB5123
	.byte	0x4
	.long	.LCFI488-.LFB5123
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI489-.LCFI488
	.byte	0xe
	.uleb128 0x18
	.byte	0x8c
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI490-.LCFI489
	.byte	0xe
	.uleb128 0x20
	.byte	0x85
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI491-.LCFI490
	.byte	0xe
	.uleb128 0x28
	.byte	0x84
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI492-.LCFI491
	.byte	0xe
	.uleb128 0x30
	.byte	0x83
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI493-.LCFI492
	.byte	0xe
	.uleb128 0x60
	.byte	0x4
	.long	.LCFI494-.LCFI493
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x30
	.byte	0x4
	.long	.LCFI495-.LCFI494
	.byte	0xc3
	.byte	0x4
	.long	.LCFI496-.LCFI495
	.byte	0xc4
	.byte	0x4
	.long	.LCFI497-.LCFI496
	.byte	0xc5
	.byte	0x4
	.long	.LCFI498-.LCFI497
	.byte	0xcc
	.byte	0x4
	.long	.LCFI499-.LCFI498
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 1
	.align 8
.LEFDE272:
.LSFDE274:
	.long	.LEFDE274-.LASFDE274
.LASFDE274:
	.secrel32	.Lframe0
	.quad	.LFB5128
	.quad	.LFE5128-.LFB5128
	.byte	0x4
	.long	.LCFI500-.LFB5128
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI501-.LCFI500
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI502-.LCFI501
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE274:
.LSFDE276:
	.long	.LEFDE276-.LASFDE276
.LASFDE276:
	.secrel32	.Lframe0
	.quad	.LFB5129
	.quad	.LFE5129-.LFB5129
	.byte	0x4
	.long	.LCFI503-.LFB5129
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI504-.LCFI503
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI505-.LCFI504
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE276:
.LSFDE278:
	.long	.LEFDE278-.LASFDE278
.LASFDE278:
	.secrel32	.Lframe0
	.quad	.LFB5130
	.quad	.LFE5130-.LFB5130
	.byte	0x4
	.long	.LCFI506-.LFB5130
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI507-.LCFI506
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI508-.LCFI507
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.long	.LCFI509-.LCFI508
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI510-.LCFI509
	.byte	0xc3
	.byte	0x4
	.long	.LCFI511-.LCFI510
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 5
	.align 8
.LEFDE278:
.LSFDE280:
	.long	.LEFDE280-.LASFDE280
.LASFDE280:
	.secrel32	.Lframe0
	.quad	.LFB5131
	.quad	.LFE5131-.LFB5131
	.byte	0x4
	.long	.LCFI512-.LFB5131
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI513-.LCFI512
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI514-.LCFI513
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE280:
.LSFDE282:
	.long	.LEFDE282-.LASFDE282
.LASFDE282:
	.secrel32	.Lframe0
	.quad	.LFB5134
	.quad	.LFE5134-.LFB5134
	.byte	0x4
	.long	.LCFI515-.LFB5134
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI516-.LCFI515
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI517-.LCFI516
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE282:
.LSFDE284:
	.long	.LEFDE284-.LASFDE284
.LASFDE284:
	.secrel32	.Lframe0
	.quad	.LFB5136
	.quad	.LFE5136-.LFB5136
	.byte	0x4
	.long	.LCFI518-.LFB5136
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI519-.LCFI518
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI520-.LCFI519
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE284:
.LSFDE286:
	.long	.LEFDE286-.LASFDE286
.LASFDE286:
	.secrel32	.Lframe0
	.quad	.LFB5139
	.quad	.LFE5139-.LFB5139
	.byte	0x4
	.long	.LCFI521-.LFB5139
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI522-.LCFI521
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI523-.LCFI522
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE286:
.LSFDE288:
	.long	.LEFDE288-.LASFDE288
.LASFDE288:
	.secrel32	.Lframe0
	.quad	.LFB5141
	.quad	.LFE5141-.LFB5141
	.byte	0x4
	.long	.LCFI524-.LFB5141
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI525-.LCFI524
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI526-.LCFI525
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE288:
.LSFDE290:
	.long	.LEFDE290-.LASFDE290
.LASFDE290:
	.secrel32	.Lframe0
	.quad	.LFB5142
	.quad	.LFE5142-.LFB5142
	.byte	0x4
	.long	.LCFI527-.LFB5142
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI528-.LCFI527
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI529-.LCFI528
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE290:
.LSFDE292:
	.long	.LEFDE292-.LASFDE292
.LASFDE292:
	.secrel32	.Lframe0
	.quad	.LFB5143
	.quad	.LFE5143-.LFB5143
	.byte	0x4
	.long	.LCFI530-.LFB5143
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI531-.LCFI530
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI532-.LCFI531
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE292:
.LSFDE294:
	.long	.LEFDE294-.LASFDE294
.LASFDE294:
	.secrel32	.Lframe0
	.quad	.LFB5144
	.quad	.LFE5144-.LFB5144
	.byte	0x4
	.long	.LCFI533-.LFB5144
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI534-.LCFI533
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI535-.LCFI534
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE294:
.LSFDE296:
	.long	.LEFDE296-.LASFDE296
.LASFDE296:
	.secrel32	.Lframe0
	.quad	.LFB5145
	.quad	.LFE5145-.LFB5145
	.byte	0x4
	.long	.LCFI536-.LFB5145
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI537-.LCFI536
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI538-.LCFI537
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE296:
.LSFDE298:
	.long	.LEFDE298-.LASFDE298
.LASFDE298:
	.secrel32	.Lframe0
	.quad	.LFB5146
	.quad	.LFE5146-.LFB5146
	.byte	0x4
	.long	.LCFI539-.LFB5146
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI540-.LCFI539
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI541-.LCFI540
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE298:
.LSFDE300:
	.long	.LEFDE300-.LASFDE300
.LASFDE300:
	.secrel32	.Lframe0
	.quad	.LFB5147
	.quad	.LFE5147-.LFB5147
	.byte	0x4
	.long	.LCFI542-.LFB5147
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI543-.LCFI542
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI544-.LCFI543
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE300:
.LSFDE302:
	.long	.LEFDE302-.LASFDE302
.LASFDE302:
	.secrel32	.Lframe0
	.quad	.LFB5149
	.quad	.LFE5149-.LFB5149
	.byte	0x4
	.long	.LCFI545-.LFB5149
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI546-.LCFI545
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI547-.LCFI546
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE302:
.LSFDE304:
	.long	.LEFDE304-.LASFDE304
.LASFDE304:
	.secrel32	.Lframe0
	.quad	.LFB5151
	.quad	.LFE5151-.LFB5151
	.byte	0x4
	.long	.LCFI548-.LFB5151
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI549-.LCFI548
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI550-.LCFI549
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE304:
.LSFDE306:
	.long	.LEFDE306-.LASFDE306
.LASFDE306:
	.secrel32	.Lframe0
	.quad	.LFB5152
	.quad	.LFE5152-.LFB5152
	.byte	0x4
	.long	.LCFI551-.LFB5152
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI552-.LCFI551
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI553-.LCFI552
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.long	.LCFI554-.LCFI553
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI555-.LCFI554
	.byte	0xc3
	.byte	0x4
	.long	.LCFI556-.LCFI555
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 5
	.align 8
.LEFDE306:
.LSFDE308:
	.long	.LEFDE308-.LASFDE308
.LASFDE308:
	.secrel32	.Lframe0
	.quad	.LFB5302
	.quad	.LFE5302-.LFB5302
	.byte	0x4
	.long	.LCFI557-.LFB5302
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI558-.LCFI557
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI559-.LCFI558
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE308:
.LSFDE310:
	.long	.LEFDE310-.LASFDE310
.LASFDE310:
	.secrel32	.Lframe0
	.quad	.LFB5304
	.quad	.LFE5304-.LFB5304
	.byte	0x4
	.long	.LCFI560-.LFB5304
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI561-.LCFI560
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI562-.LCFI561
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE310:
.LSFDE312:
	.long	.LEFDE312-.LASFDE312
.LASFDE312:
	.secrel32	.Lframe0
	.quad	.LFB5307
	.quad	.LFE5307-.LFB5307
	.byte	0x4
	.long	.LCFI563-.LFB5307
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI564-.LCFI563
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI565-.LCFI564
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE312:
.LSFDE314:
	.long	.LEFDE314-.LASFDE314
.LASFDE314:
	.secrel32	.Lframe0
	.quad	.LFB5311
	.quad	.LFE5311-.LFB5311
	.byte	0x4
	.long	.LCFI566-.LFB5311
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI567-.LCFI566
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI568-.LCFI567
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE314:
.LSFDE316:
	.long	.LEFDE316-.LASFDE316
.LASFDE316:
	.secrel32	.Lframe0
	.quad	.LFB5313
	.quad	.LFE5313-.LFB5313
	.byte	0x4
	.long	.LCFI569-.LFB5313
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI570-.LCFI569
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI571-.LCFI570
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE316:
.LSFDE318:
	.long	.LEFDE318-.LASFDE318
.LASFDE318:
	.secrel32	.Lframe0
	.quad	.LFB5316
	.quad	.LFE5316-.LFB5316
	.byte	0x4
	.long	.LCFI572-.LFB5316
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI573-.LCFI572
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI574-.LCFI573
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE318:
.LSFDE320:
	.long	.LEFDE320-.LASFDE320
.LASFDE320:
	.secrel32	.Lframe0
	.quad	.LFB5318
	.quad	.LFE5318-.LFB5318
	.byte	0x4
	.long	.LCFI575-.LFB5318
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI576-.LCFI575
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI577-.LCFI576
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE320:
.LSFDE322:
	.long	.LEFDE322-.LASFDE322
.LASFDE322:
	.secrel32	.Lframe0
	.quad	.LFB5319
	.quad	.LFE5319-.LFB5319
	.byte	0x4
	.long	.LCFI578-.LFB5319
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI579-.LCFI578
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI580-.LCFI579
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE322:
.LSFDE324:
	.long	.LEFDE324-.LASFDE324
.LASFDE324:
	.secrel32	.Lframe0
	.quad	.LFB5320
	.quad	.LFE5320-.LFB5320
	.byte	0x4
	.long	.LCFI581-.LFB5320
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI582-.LCFI581
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI583-.LCFI582
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE324:
.LSFDE326:
	.long	.LEFDE326-.LASFDE326
.LASFDE326:
	.secrel32	.Lframe0
	.quad	.LFB5321
	.quad	.LFE5321-.LFB5321
	.byte	0x4
	.long	.LCFI584-.LFB5321
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI585-.LCFI584
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI586-.LCFI585
	.byte	0xe
	.uleb128 0xb0
	.byte	0x4
	.long	.LCFI587-.LCFI586
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI588-.LCFI587
	.byte	0xc3
	.byte	0x4
	.long	.LCFI589-.LCFI588
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 17
	.align 8
.LEFDE326:
.LSFDE328:
	.long	.LEFDE328-.LASFDE328
.LASFDE328:
	.secrel32	.Lframe0
	.quad	.LFB5322
	.quad	.LFE5322-.LFB5322
	.byte	0x4
	.long	.LCFI590-.LFB5322
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI591-.LCFI590
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI592-.LCFI591
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE328:
.LSFDE330:
	.long	.LEFDE330-.LASFDE330
.LASFDE330:
	.secrel32	.Lframe0
	.quad	.LFB5327
	.quad	.LFE5327-.LFB5327
	.byte	0x4
	.long	.LCFI593-.LFB5327
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI594-.LCFI593
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI595-.LCFI594
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE330:
.LSFDE332:
	.long	.LEFDE332-.LASFDE332
.LASFDE332:
	.secrel32	.Lframe0
	.quad	.LFB5328
	.quad	.LFE5328-.LFB5328
	.byte	0x4
	.long	.LCFI596-.LFB5328
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI597-.LCFI596
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI598-.LCFI597
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE332:
.LSFDE334:
	.long	.LEFDE334-.LASFDE334
.LASFDE334:
	.secrel32	.Lframe0
	.quad	.LFB5329
	.quad	.LFE5329-.LFB5329
	.byte	0x4
	.long	.LCFI599-.LFB5329
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI600-.LCFI599
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI601-.LCFI600
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE334:
.LSFDE336:
	.long	.LEFDE336-.LASFDE336
.LASFDE336:
	.secrel32	.Lframe0
	.quad	.LFB5330
	.quad	.LFE5330-.LFB5330
	.byte	0x4
	.long	.LCFI602-.LFB5330
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI603-.LCFI602
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI604-.LCFI603
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE336:
.LSFDE338:
	.long	.LEFDE338-.LASFDE338
.LASFDE338:
	.secrel32	.Lframe0
	.quad	.LFB5332
	.quad	.LFE5332-.LFB5332
	.byte	0x4
	.long	.LCFI605-.LFB5332
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI606-.LCFI605
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI607-.LCFI606
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE338:
.LSFDE340:
	.long	.LEFDE340-.LASFDE340
.LASFDE340:
	.secrel32	.Lframe0
	.quad	.LFB5335
	.quad	.LFE5335-.LFB5335
	.byte	0x4
	.long	.LCFI608-.LFB5335
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI609-.LCFI608
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI610-.LCFI609
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE340:
.LSFDE342:
	.long	.LEFDE342-.LASFDE342
.LASFDE342:
	.secrel32	.Lframe0
	.quad	.LFB5337
	.quad	.LFE5337-.LFB5337
	.byte	0x4
	.long	.LCFI611-.LFB5337
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI612-.LCFI611
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI613-.LCFI612
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE342:
.LSFDE344:
	.long	.LEFDE344-.LASFDE344
.LASFDE344:
	.secrel32	.Lframe0
	.quad	.LFB5338
	.quad	.LFE5338-.LFB5338
	.byte	0x4
	.long	.LCFI614-.LFB5338
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI615-.LCFI614
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI616-.LCFI615
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE344:
.LSFDE346:
	.long	.LEFDE346-.LASFDE346
.LASFDE346:
	.secrel32	.Lframe0
	.quad	.LFB5339
	.quad	.LFE5339-.LFB5339
	.byte	0x4
	.long	.LCFI617-.LFB5339
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI618-.LCFI617
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI619-.LCFI618
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE346:
.LSFDE348:
	.long	.LEFDE348-.LASFDE348
.LASFDE348:
	.secrel32	.Lframe0
	.quad	.LFB5340
	.quad	.LFE5340-.LFB5340
	.byte	0x4
	.long	.LCFI620-.LFB5340
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI621-.LCFI620
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI622-.LCFI621
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE348:
.LSFDE350:
	.long	.LEFDE350-.LASFDE350
.LASFDE350:
	.secrel32	.Lframe0
	.quad	.LFB5341
	.quad	.LFE5341-.LFB5341
	.byte	0x4
	.long	.LCFI623-.LFB5341
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI624-.LCFI623
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI625-.LCFI624
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI626-.LCFI625
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI627-.LCFI626
	.byte	0xc3
	.byte	0x4
	.long	.LCFI628-.LCFI627
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE350:
.LSFDE352:
	.long	.LEFDE352-.LASFDE352
.LASFDE352:
	.secrel32	.Lframe0
	.quad	.LFB5343
	.quad	.LFE5343-.LFB5343
	.byte	0x4
	.long	.LCFI629-.LFB5343
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI630-.LCFI629
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI631-.LCFI630
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE352:
.LSFDE354:
	.long	.LEFDE354-.LASFDE354
.LASFDE354:
	.secrel32	.Lframe0
	.quad	.LFB5344
	.quad	.LFE5344-.LFB5344
	.byte	0x4
	.long	.LCFI632-.LFB5344
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI633-.LCFI632
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI634-.LCFI633
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE354:
.LSFDE356:
	.long	.LEFDE356-.LASFDE356
.LASFDE356:
	.secrel32	.Lframe0
	.quad	.LFB5345
	.quad	.LFE5345-.LFB5345
	.byte	0x4
	.long	.LCFI635-.LFB5345
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI636-.LCFI635
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI637-.LCFI636
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE356:
.LSFDE358:
	.long	.LEFDE358-.LASFDE358
.LASFDE358:
	.secrel32	.Lframe0
	.quad	.LFB5346
	.quad	.LFE5346-.LFB5346
	.byte	0x4
	.long	.LCFI638-.LFB5346
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI639-.LCFI638
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI640-.LCFI639
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE358:
.LSFDE360:
	.long	.LEFDE360-.LASFDE360
.LASFDE360:
	.secrel32	.Lframe0
	.quad	.LFB5347
	.quad	.LFE5347-.LFB5347
	.byte	0x4
	.long	.LCFI641-.LFB5347
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI642-.LCFI641
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI643-.LCFI642
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE360:
.LSFDE362:
	.long	.LEFDE362-.LASFDE362
.LASFDE362:
	.secrel32	.Lframe0
	.quad	.LFB5348
	.quad	.LFE5348-.LFB5348
	.byte	0x4
	.long	.LCFI644-.LFB5348
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI645-.LCFI644
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI646-.LCFI645
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE362:
.LSFDE364:
	.long	.LEFDE364-.LASFDE364
.LASFDE364:
	.secrel32	.Lframe0
	.quad	.LFB5349
	.quad	.LFE5349-.LFB5349
	.byte	0x4
	.long	.LCFI647-.LFB5349
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI648-.LCFI647
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI649-.LCFI648
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.long	.LCFI650-.LCFI649
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI651-.LCFI650
	.byte	0xc3
	.byte	0x4
	.long	.LCFI652-.LCFI651
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 5
	.align 8
.LEFDE364:
.LSFDE366:
	.long	.LEFDE366-.LASFDE366
.LASFDE366:
	.secrel32	.Lframe0
	.quad	.LFB5350
	.quad	.LFE5350-.LFB5350
	.byte	0x4
	.long	.LCFI653-.LFB5350
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI654-.LCFI653
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI655-.LCFI654
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI656-.LCFI655
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI657-.LCFI656
	.byte	0xc3
	.byte	0x4
	.long	.LCFI658-.LCFI657
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE366:
.LSFDE368:
	.long	.LEFDE368-.LASFDE368
.LASFDE368:
	.secrel32	.Lframe0
	.quad	.LFB5351
	.quad	.LFE5351-.LFB5351
	.byte	0x4
	.long	.LCFI659-.LFB5351
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI660-.LCFI659
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI661-.LCFI660
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE368:
.LSFDE370:
	.long	.LEFDE370-.LASFDE370
.LASFDE370:
	.secrel32	.Lframe0
	.quad	.LFB5352
	.quad	.LFE5352-.LFB5352
	.byte	0x4
	.long	.LCFI662-.LFB5352
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI663-.LCFI662
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI664-.LCFI663
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE370:
.LSFDE372:
	.long	.LEFDE372-.LASFDE372
.LASFDE372:
	.secrel32	.Lframe0
	.quad	.LFB5353
	.quad	.LFE5353-.LFB5353
	.byte	0x4
	.long	.LCFI665-.LFB5353
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI666-.LCFI665
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI667-.LCFI666
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE372:
.LSFDE374:
	.long	.LEFDE374-.LASFDE374
.LASFDE374:
	.secrel32	.Lframe0
	.quad	.LFB5354
	.quad	.LFE5354-.LFB5354
	.byte	0x4
	.long	.LCFI668-.LFB5354
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI669-.LCFI668
	.byte	0xe
	.uleb128 0x18
	.byte	0x84
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI670-.LCFI669
	.byte	0xe
	.uleb128 0x20
	.byte	0x83
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI671-.LCFI670
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI672-.LCFI671
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI673-.LCFI672
	.byte	0xc3
	.byte	0x4
	.long	.LCFI674-.LCFI673
	.byte	0xc4
	.byte	0x4
	.long	.LCFI675-.LCFI674
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 1
	.align 8
.LEFDE374:
.LSFDE376:
	.long	.LEFDE376-.LASFDE376
.LASFDE376:
	.secrel32	.Lframe0
	.quad	.LFB5356
	.quad	.LFE5356-.LFB5356
	.byte	0x4
	.long	.LCFI676-.LFB5356
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI677-.LCFI676
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI678-.LCFI677
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE376:
.LSFDE378:
	.long	.LEFDE378-.LASFDE378
.LASFDE378:
	.secrel32	.Lframe0
	.quad	.LFB5357
	.quad	.LFE5357-.LFB5357
	.byte	0x4
	.long	.LCFI679-.LFB5357
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI680-.LCFI679
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI681-.LCFI680
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE378:
.LSFDE380:
	.long	.LEFDE380-.LASFDE380
.LASFDE380:
	.secrel32	.Lframe0
	.quad	.LFB5358
	.quad	.LFE5358-.LFB5358
	.byte	0x4
	.long	.LCFI682-.LFB5358
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI683-.LCFI682
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI684-.LCFI683
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE380:
.LSFDE382:
	.long	.LEFDE382-.LASFDE382
.LASFDE382:
	.secrel32	.Lframe0
	.quad	.LFB5359
	.quad	.LFE5359-.LFB5359
	.byte	0x4
	.long	.LCFI685-.LFB5359
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI686-.LCFI685
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI687-.LCFI686
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE382:
.LSFDE384:
	.long	.LEFDE384-.LASFDE384
.LASFDE384:
	.secrel32	.Lframe0
	.quad	.LFB5362
	.quad	.LFE5362-.LFB5362
	.byte	0x4
	.long	.LCFI688-.LFB5362
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI689-.LCFI688
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI690-.LCFI689
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE384:
.LSFDE386:
	.long	.LEFDE386-.LASFDE386
.LASFDE386:
	.secrel32	.Lframe0
	.quad	.LFB5364
	.quad	.LFE5364-.LFB5364
	.byte	0x4
	.long	.LCFI691-.LFB5364
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI692-.LCFI691
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI693-.LCFI692
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE386:
.LSFDE388:
	.long	.LEFDE388-.LASFDE388
.LASFDE388:
	.secrel32	.Lframe0
	.quad	.LFB5367
	.quad	.LFE5367-.LFB5367
	.byte	0x4
	.long	.LCFI694-.LFB5367
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI695-.LCFI694
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI696-.LCFI695
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE388:
.LSFDE390:
	.long	.LEFDE390-.LASFDE390
.LASFDE390:
	.secrel32	.Lframe0
	.quad	.LFB5369
	.quad	.LFE5369-.LFB5369
	.byte	0x4
	.long	.LCFI697-.LFB5369
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI698-.LCFI697
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI699-.LCFI698
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE390:
.LSFDE392:
	.long	.LEFDE392-.LASFDE392
.LASFDE392:
	.secrel32	.Lframe0
	.quad	.LFB5370
	.quad	.LFE5370-.LFB5370
	.byte	0x4
	.long	.LCFI700-.LFB5370
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI701-.LCFI700
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI702-.LCFI701
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE392:
.LSFDE394:
	.long	.LEFDE394-.LASFDE394
.LASFDE394:
	.secrel32	.Lframe0
	.quad	.LFB5371
	.quad	.LFE5371-.LFB5371
	.byte	0x4
	.long	.LCFI703-.LFB5371
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI704-.LCFI703
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI705-.LCFI704
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE394:
.LSFDE396:
	.long	.LEFDE396-.LASFDE396
.LASFDE396:
	.secrel32	.Lframe0
	.quad	.LFB5372
	.quad	.LFE5372-.LFB5372
	.byte	0x4
	.long	.LCFI706-.LFB5372
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI707-.LCFI706
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI708-.LCFI707
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI709-.LCFI708
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI710-.LCFI709
	.byte	0xc3
	.byte	0x4
	.long	.LCFI711-.LCFI710
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE396:
.LSFDE398:
	.long	.LEFDE398-.LASFDE398
.LASFDE398:
	.secrel32	.Lframe0
	.quad	.LFB5374
	.quad	.LFE5374-.LFB5374
	.byte	0x4
	.long	.LCFI712-.LFB5374
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI713-.LCFI712
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI714-.LCFI713
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE398:
.LSFDE400:
	.long	.LEFDE400-.LASFDE400
.LASFDE400:
	.secrel32	.Lframe0
	.quad	.LFB5375
	.quad	.LFE5375-.LFB5375
	.byte	0x4
	.long	.LCFI715-.LFB5375
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI716-.LCFI715
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI717-.LCFI716
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE400:
.LSFDE402:
	.long	.LEFDE402-.LASFDE402
.LASFDE402:
	.secrel32	.Lframe0
	.quad	.LFB5376
	.quad	.LFE5376-.LFB5376
	.byte	0x4
	.long	.LCFI718-.LFB5376
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI719-.LCFI718
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI720-.LCFI719
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE402:
.LSFDE404:
	.long	.LEFDE404-.LASFDE404
.LASFDE404:
	.secrel32	.Lframe0
	.quad	.LFB5379
	.quad	.LFE5379-.LFB5379
	.byte	0x4
	.long	.LCFI721-.LFB5379
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI722-.LCFI721
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI723-.LCFI722
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE404:
.LSFDE406:
	.long	.LEFDE406-.LASFDE406
.LASFDE406:
	.secrel32	.Lframe0
	.quad	.LFB5380
	.quad	.LFE5380-.LFB5380
	.byte	0x4
	.long	.LCFI724-.LFB5380
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI725-.LCFI724
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI726-.LCFI725
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE406:
.LSFDE408:
	.long	.LEFDE408-.LASFDE408
.LASFDE408:
	.secrel32	.Lframe0
	.quad	.LFB5381
	.quad	.LFE5381-.LFB5381
	.byte	0x4
	.long	.LCFI727-.LFB5381
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI728-.LCFI727
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI729-.LCFI728
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI730-.LCFI729
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI731-.LCFI730
	.byte	0xc3
	.byte	0x4
	.long	.LCFI732-.LCFI731
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE408:
.LSFDE410:
	.long	.LEFDE410-.LASFDE410
.LASFDE410:
	.secrel32	.Lframe0
	.quad	.LFB5383
	.quad	.LFE5383-.LFB5383
	.byte	0x4
	.long	.LCFI733-.LFB5383
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI734-.LCFI733
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI735-.LCFI734
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI736-.LCFI735
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI737-.LCFI736
	.byte	0xc3
	.byte	0x4
	.long	.LCFI738-.LCFI737
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE410:
.LSFDE412:
	.long	.LEFDE412-.LASFDE412
.LASFDE412:
	.secrel32	.Lframe0
	.quad	.LFB5382
	.quad	.LFE5382-.LFB5382
	.byte	0x4
	.long	.LCFI739-.LFB5382
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI740-.LCFI739
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI741-.LCFI740
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.long	.LCFI742-.LCFI741
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI743-.LCFI742
	.byte	0xc3
	.byte	0x4
	.long	.LCFI744-.LCFI743
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 5
	.align 8
.LEFDE412:
.LSFDE414:
	.long	.LEFDE414-.LASFDE414
.LASFDE414:
	.secrel32	.Lframe0
	.quad	.LFB5478
	.quad	.LFE5478-.LFB5478
	.byte	0x4
	.long	.LCFI745-.LFB5478
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI746-.LCFI745
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI747-.LCFI746
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE414:
.LSFDE416:
	.long	.LEFDE416-.LASFDE416
.LASFDE416:
	.secrel32	.Lframe0
	.quad	.LFB5481
	.quad	.LFE5481-.LFB5481
	.byte	0x4
	.long	.LCFI748-.LFB5481
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI749-.LCFI748
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI750-.LCFI749
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE416:
.LSFDE418:
	.long	.LEFDE418-.LASFDE418
.LASFDE418:
	.secrel32	.Lframe0
	.quad	.LFB5482
	.quad	.LFE5482-.LFB5482
	.byte	0x4
	.long	.LCFI751-.LFB5482
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI752-.LCFI751
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI753-.LCFI752
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE418:
.LSFDE420:
	.long	.LEFDE420-.LASFDE420
.LASFDE420:
	.secrel32	.Lframe0
	.quad	.LFB5483
	.quad	.LFE5483-.LFB5483
	.byte	0x4
	.long	.LCFI754-.LFB5483
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI755-.LCFI754
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI756-.LCFI755
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE420:
.LSFDE422:
	.long	.LEFDE422-.LASFDE422
.LASFDE422:
	.secrel32	.Lframe0
	.quad	.LFB5485
	.quad	.LFE5485-.LFB5485
	.byte	0x4
	.long	.LCFI757-.LFB5485
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI758-.LCFI757
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI759-.LCFI758
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE422:
.LSFDE424:
	.long	.LEFDE424-.LASFDE424
.LASFDE424:
	.secrel32	.Lframe0
	.quad	.LFB5488
	.quad	.LFE5488-.LFB5488
	.byte	0x4
	.long	.LCFI760-.LFB5488
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI761-.LCFI760
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI762-.LCFI761
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE424:
.LSFDE426:
	.long	.LEFDE426-.LASFDE426
.LASFDE426:
	.secrel32	.Lframe0
	.quad	.LFB5490
	.quad	.LFE5490-.LFB5490
	.byte	0x4
	.long	.LCFI763-.LFB5490
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI764-.LCFI763
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI765-.LCFI764
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE426:
.LSFDE428:
	.long	.LEFDE428-.LASFDE428
.LASFDE428:
	.secrel32	.Lframe0
	.quad	.LFB5491
	.quad	.LFE5491-.LFB5491
	.byte	0x4
	.long	.LCFI766-.LFB5491
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI767-.LCFI766
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI768-.LCFI767
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE428:
.LSFDE430:
	.long	.LEFDE430-.LASFDE430
.LASFDE430:
	.secrel32	.Lframe0
	.quad	.LFB5492
	.quad	.LFE5492-.LFB5492
	.byte	0x4
	.long	.LCFI769-.LFB5492
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI770-.LCFI769
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI771-.LCFI770
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE430:
.LSFDE432:
	.long	.LEFDE432-.LASFDE432
.LASFDE432:
	.secrel32	.Lframe0
	.quad	.LFB5493
	.quad	.LFE5493-.LFB5493
	.byte	0x4
	.long	.LCFI772-.LFB5493
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI773-.LCFI772
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI774-.LCFI773
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE432:
.LSFDE434:
	.long	.LEFDE434-.LASFDE434
.LASFDE434:
	.secrel32	.Lframe0
	.quad	.LFB5494
	.quad	.LFE5494-.LFB5494
	.byte	0x4
	.long	.LCFI775-.LFB5494
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI776-.LCFI775
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI777-.LCFI776
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE434:
.LSFDE436:
	.long	.LEFDE436-.LASFDE436
.LASFDE436:
	.secrel32	.Lframe0
	.quad	.LFB5495
	.quad	.LFE5495-.LFB5495
	.byte	0x4
	.long	.LCFI778-.LFB5495
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI779-.LCFI778
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI780-.LCFI779
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE436:
.LSFDE438:
	.long	.LEFDE438-.LASFDE438
.LASFDE438:
	.secrel32	.Lframe0
	.quad	.LFB5496
	.quad	.LFE5496-.LFB5496
	.byte	0x4
	.long	.LCFI781-.LFB5496
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI782-.LCFI781
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI783-.LCFI782
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI784-.LCFI783
	.byte	0xc3
	.byte	0x4
	.long	.LCFI785-.LCFI784
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x10
	.align 8
.LEFDE438:
.LSFDE440:
	.long	.LEFDE440-.LASFDE440
.LASFDE440:
	.secrel32	.Lframe0
	.quad	.LFB5497
	.quad	.LFE5497-.LFB5497
	.byte	0x4
	.long	.LCFI786-.LFB5497
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI787-.LCFI786
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI788-.LCFI787
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE440:
.LSFDE442:
	.long	.LEFDE442-.LASFDE442
.LASFDE442:
	.secrel32	.Lframe0
	.quad	.LFB5498
	.quad	.LFE5498-.LFB5498
	.byte	0x4
	.long	.LCFI789-.LFB5498
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI790-.LCFI789
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI791-.LCFI790
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE442:
.LSFDE444:
	.long	.LEFDE444-.LASFDE444
.LASFDE444:
	.secrel32	.Lframe0
	.quad	.LFB5499
	.quad	.LFE5499-.LFB5499
	.byte	0x4
	.long	.LCFI792-.LFB5499
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI793-.LCFI792
	.byte	0xe
	.uleb128 0x18
	.byte	0x84
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI794-.LCFI793
	.byte	0xe
	.uleb128 0x20
	.byte	0x83
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI795-.LCFI794
	.byte	0xe
	.uleb128 0x90
	.byte	0x4
	.long	.LCFI796-.LCFI795
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI797-.LCFI796
	.byte	0xc3
	.byte	0x4
	.long	.LCFI798-.LCFI797
	.byte	0xc4
	.byte	0x4
	.long	.LCFI799-.LCFI798
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 11
	.align 8
.LEFDE444:
.LSFDE446:
	.long	.LEFDE446-.LASFDE446
.LASFDE446:
	.secrel32	.Lframe0
	.quad	.LFB5500
	.quad	.LFE5500-.LFB5500
	.byte	0x4
	.long	.LCFI800-.LFB5500
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI801-.LCFI800
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI802-.LCFI801
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE446:
.LSFDE448:
	.long	.LEFDE448-.LASFDE448
.LASFDE448:
	.secrel32	.Lframe0
	.quad	.LFB5501
	.quad	.LFE5501-.LFB5501
	.byte	0x4
	.long	.LCFI803-.LFB5501
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI804-.LCFI803
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI805-.LCFI804
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE448:
.LSFDE450:
	.long	.LEFDE450-.LASFDE450
.LASFDE450:
	.secrel32	.Lframe0
	.quad	.LFB5502
	.quad	.LFE5502-.LFB5502
	.byte	0x4
	.long	.LCFI806-.LFB5502
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI807-.LCFI806
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI808-.LCFI807
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE450:
.LSFDE452:
	.long	.LEFDE452-.LASFDE452
.LASFDE452:
	.secrel32	.Lframe0
	.quad	.LFB5503
	.quad	.LFE5503-.LFB5503
	.byte	0x4
	.long	.LCFI809-.LFB5503
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI810-.LCFI809
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI811-.LCFI810
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE452:
.LSFDE454:
	.long	.LEFDE454-.LASFDE454
.LASFDE454:
	.secrel32	.Lframe0
	.quad	.LFB5504
	.quad	.LFE5504-.LFB5504
	.byte	0x4
	.long	.LCFI812-.LFB5504
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI813-.LCFI812
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI814-.LCFI813
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE454:
.LSFDE456:
	.long	.LEFDE456-.LASFDE456
.LASFDE456:
	.secrel32	.Lframe0
	.quad	.LFB5505
	.quad	.LFE5505-.LFB5505
	.byte	0x4
	.long	.LCFI815-.LFB5505
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI816-.LCFI815
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI817-.LCFI816
	.byte	0xe
	.uleb128 0x60
	.byte	0x4
	.long	.LCFI818-.LCFI817
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI819-.LCFI818
	.byte	0xc3
	.byte	0x4
	.long	.LCFI820-.LCFI819
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 7
	.align 8
.LEFDE456:
.LSFDE458:
	.long	.LEFDE458-.LASFDE458
.LASFDE458:
	.secrel32	.Lframe0
	.quad	.LFB5506
	.quad	.LFE5506-.LFB5506
	.byte	0x4
	.long	.LCFI821-.LFB5506
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI822-.LCFI821
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI823-.LCFI822
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE458:
.LSFDE460:
	.long	.LEFDE460-.LASFDE460
.LASFDE460:
	.secrel32	.Lframe0
	.quad	.LFB5507
	.quad	.LFE5507-.LFB5507
	.byte	0x4
	.long	.LCFI824-.LFB5507
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI825-.LCFI824
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI826-.LCFI825
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE460:
.LSFDE462:
	.long	.LEFDE462-.LASFDE462
.LASFDE462:
	.secrel32	.Lframe0
	.quad	.LFB5509
	.quad	.LFE5509-.LFB5509
	.byte	0x4
	.long	.LCFI827-.LFB5509
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI828-.LCFI827
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI829-.LCFI828
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE462:
.LSFDE464:
	.long	.LEFDE464-.LASFDE464
.LASFDE464:
	.secrel32	.Lframe0
	.quad	.LFB5511
	.quad	.LFE5511-.LFB5511
	.byte	0x4
	.long	.LCFI830-.LFB5511
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI831-.LCFI830
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI832-.LCFI831
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE464:
.LSFDE466:
	.long	.LEFDE466-.LASFDE466
.LASFDE466:
	.secrel32	.Lframe0
	.quad	.LFB5512
	.quad	.LFE5512-.LFB5512
	.byte	0x4
	.long	.LCFI833-.LFB5512
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI834-.LCFI833
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI835-.LCFI834
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE466:
.LSFDE468:
	.long	.LEFDE468-.LASFDE468
.LASFDE468:
	.secrel32	.Lframe0
	.quad	.LFB5513
	.quad	.LFE5513-.LFB5513
	.byte	0x4
	.long	.LCFI836-.LFB5513
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI837-.LCFI836
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI838-.LCFI837
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE468:
.LSFDE470:
	.long	.LEFDE470-.LASFDE470
.LASFDE470:
	.secrel32	.Lframe0
	.quad	.LFB5518
	.quad	.LFE5518-.LFB5518
	.byte	0x4
	.long	.LCFI839-.LFB5518
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI840-.LCFI839
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI841-.LCFI840
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE470:
.LSFDE472:
	.long	.LEFDE472-.LASFDE472
.LASFDE472:
	.secrel32	.Lframe0
	.quad	.LFB5515
	.quad	.LFE5515-.LFB5515
	.byte	0x4
	.long	.LCFI842-.LFB5515
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI843-.LCFI842
	.byte	0xe
	.uleb128 0x18
	.byte	0x85
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI844-.LCFI843
	.byte	0xe
	.uleb128 0x20
	.byte	0x84
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI845-.LCFI844
	.byte	0xe
	.uleb128 0x28
	.byte	0x83
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI846-.LCFI845
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.long	.LCFI847-.LCFI846
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x30
	.byte	0x4
	.long	.LCFI848-.LCFI847
	.byte	0xc3
	.byte	0x4
	.long	.LCFI849-.LCFI848
	.byte	0xc4
	.byte	0x4
	.long	.LCFI850-.LCFI849
	.byte	0xc5
	.byte	0x4
	.long	.LCFI851-.LCFI850
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 1
	.align 8
.LEFDE472:
.LSFDE474:
	.long	.LEFDE474-.LASFDE474
.LASFDE474:
	.secrel32	.Lframe0
	.quad	.LFB5514
	.quad	.LFE5514-.LFB5514
	.byte	0x4
	.long	.LCFI852-.LFB5514
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI853-.LCFI852
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI854-.LCFI853
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE474:
.LSFDE476:
	.long	.LEFDE476-.LASFDE476
.LASFDE476:
	.secrel32	.Lframe0
	.quad	.LFB5519
	.quad	.LFE5519-.LFB5519
	.byte	0x4
	.long	.LCFI855-.LFB5519
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI856-.LCFI855
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI857-.LCFI856
	.byte	0xe
	.uleb128 0x80
	.byte	0x4
	.long	.LCFI858-.LCFI857
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI859-.LCFI858
	.byte	0xc3
	.byte	0x4
	.long	.LCFI860-.LCFI859
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 11
	.align 8
.LEFDE476:
.LSFDE478:
	.long	.LEFDE478-.LASFDE478
.LASFDE478:
	.secrel32	.Lframe0
	.quad	.LFB5522
	.quad	.LFE5522-.LFB5522
	.byte	0x4
	.long	.LCFI861-.LFB5522
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI862-.LCFI861
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI863-.LCFI862
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE478:
.LSFDE480:
	.long	.LEFDE480-.LASFDE480
.LASFDE480:
	.secrel32	.Lframe0
	.quad	.LFB5523
	.quad	.LFE5523-.LFB5523
	.byte	0x4
	.long	.LCFI864-.LFB5523
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI865-.LCFI864
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI866-.LCFI865
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE480:
.LSFDE482:
	.long	.LEFDE482-.LASFDE482
.LASFDE482:
	.secrel32	.Lframe0
	.quad	.LFB5526
	.quad	.LFE5526-.LFB5526
	.byte	0x4
	.long	.LCFI867-.LFB5526
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI868-.LCFI867
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI869-.LCFI868
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE482:
.LSFDE484:
	.long	.LEFDE484-.LASFDE484
.LASFDE484:
	.secrel32	.Lframe0
	.quad	.LFB5527
	.quad	.LFE5527-.LFB5527
	.byte	0x4
	.long	.LCFI870-.LFB5527
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI871-.LCFI870
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI872-.LCFI871
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE484:
.LSFDE486:
	.long	.LEFDE486-.LASFDE486
.LASFDE486:
	.secrel32	.Lframe0
	.quad	.LFB5528
	.quad	.LFE5528-.LFB5528
	.byte	0x4
	.long	.LCFI873-.LFB5528
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI874-.LCFI873
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI875-.LCFI874
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE486:
.LSFDE488:
	.long	.LEFDE488-.LASFDE488
.LASFDE488:
	.secrel32	.Lframe0
	.quad	.LFB5529
	.quad	.LFE5529-.LFB5529
	.byte	0x4
	.long	.LCFI876-.LFB5529
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI877-.LCFI876
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI878-.LCFI877
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE488:
.LSFDE490:
	.long	.LEFDE490-.LASFDE490
.LASFDE490:
	.secrel32	.Lframe0
	.quad	.LFB5530
	.quad	.LFE5530-.LFB5530
	.byte	0x4
	.long	.LCFI879-.LFB5530
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI880-.LCFI879
	.byte	0xe
	.uleb128 0x18
	.byte	0x84
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI881-.LCFI880
	.byte	0xe
	.uleb128 0x20
	.byte	0x83
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI882-.LCFI881
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI883-.LCFI882
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI884-.LCFI883
	.byte	0xc3
	.byte	0x4
	.long	.LCFI885-.LCFI884
	.byte	0xc4
	.byte	0x4
	.long	.LCFI886-.LCFI885
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 1
	.align 8
.LEFDE490:
.LSFDE492:
	.long	.LEFDE492-.LASFDE492
.LASFDE492:
	.secrel32	.Lframe0
	.quad	.LFB5532
	.quad	.LFE5532-.LFB5532
	.byte	0x4
	.long	.LCFI887-.LFB5532
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI888-.LCFI887
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI889-.LCFI888
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE492:
.LSFDE494:
	.long	.LEFDE494-.LASFDE494
.LASFDE494:
	.secrel32	.Lframe0
	.quad	.LFB5533
	.quad	.LFE5533-.LFB5533
	.byte	0x4
	.long	.LCFI890-.LFB5533
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI891-.LCFI890
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI892-.LCFI891
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE494:
.LSFDE496:
	.long	.LEFDE496-.LASFDE496
.LASFDE496:
	.secrel32	.Lframe0
	.quad	.LFB5534
	.quad	.LFE5534-.LFB5534
	.byte	0x4
	.long	.LCFI893-.LFB5534
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI894-.LCFI893
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI895-.LCFI894
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE496:
.LSFDE498:
	.long	.LEFDE498-.LASFDE498
.LASFDE498:
	.secrel32	.Lframe0
	.quad	.LFB5535
	.quad	.LFE5535-.LFB5535
	.byte	0x4
	.long	.LCFI896-.LFB5535
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI897-.LCFI896
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI898-.LCFI897
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE498:
.LSFDE500:
	.long	.LEFDE500-.LASFDE500
.LASFDE500:
	.secrel32	.Lframe0
	.quad	.LFB5536
	.quad	.LFE5536-.LFB5536
	.byte	0x4
	.long	.LCFI899-.LFB5536
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI900-.LCFI899
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI901-.LCFI900
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE500:
.LSFDE502:
	.long	.LEFDE502-.LASFDE502
.LASFDE502:
	.secrel32	.Lframe0
	.quad	.LFB5540
	.quad	.LFE5540-.LFB5540
	.byte	0x4
	.long	.LCFI902-.LFB5540
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI903-.LCFI902
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI904-.LCFI903
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE502:
.LSFDE504:
	.long	.LEFDE504-.LASFDE504
.LASFDE504:
	.secrel32	.Lframe0
	.quad	.LFB5541
	.quad	.LFE5541-.LFB5541
	.byte	0x4
	.long	.LCFI905-.LFB5541
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI906-.LCFI905
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI907-.LCFI906
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE504:
.LSFDE506:
	.long	.LEFDE506-.LASFDE506
.LASFDE506:
	.secrel32	.Lframe0
	.quad	.LFB5543
	.quad	.LFE5543-.LFB5543
	.byte	0x4
	.long	.LCFI908-.LFB5543
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI909-.LCFI908
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI910-.LCFI909
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE506:
.LSFDE508:
	.long	.LEFDE508-.LASFDE508
.LASFDE508:
	.secrel32	.Lframe0
	.quad	.LFB5544
	.quad	.LFE5544-.LFB5544
	.byte	0x4
	.long	.LCFI911-.LFB5544
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI912-.LCFI911
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI913-.LCFI912
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE508:
.LSFDE510:
	.long	.LEFDE510-.LASFDE510
.LASFDE510:
	.secrel32	.Lframe0
	.quad	.LFB5546
	.quad	.LFE5546-.LFB5546
	.byte	0x4
	.long	.LCFI914-.LFB5546
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI915-.LCFI914
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI916-.LCFI915
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE510:
.LSFDE512:
	.long	.LEFDE512-.LASFDE512
.LASFDE512:
	.secrel32	.Lframe0
	.quad	.LFB5545
	.quad	.LFE5545-.LFB5545
	.byte	0x4
	.long	.LCFI917-.LFB5545
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI918-.LCFI917
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI919-.LCFI918
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE512:
.LSFDE514:
	.long	.LEFDE514-.LASFDE514
.LASFDE514:
	.secrel32	.Lframe0
	.quad	.LFB5547
	.quad	.LFE5547-.LFB5547
	.byte	0x4
	.long	.LCFI920-.LFB5547
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI921-.LCFI920
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI922-.LCFI921
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI923-.LCFI922
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI924-.LCFI923
	.byte	0xc3
	.byte	0x4
	.long	.LCFI925-.LCFI924
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE514:
.LSFDE516:
	.long	.LEFDE516-.LASFDE516
.LASFDE516:
	.secrel32	.Lframe0
	.quad	.LFB5542
	.quad	.LFE5542-.LFB5542
	.byte	0x4
	.long	.LCFI926-.LFB5542
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI927-.LCFI926
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI928-.LCFI927
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE516:
.LSFDE518:
	.long	.LEFDE518-.LASFDE518
.LASFDE518:
	.secrel32	.Lframe0
	.quad	.LFB5549
	.quad	.LFE5549-.LFB5549
	.byte	0x4
	.long	.LCFI929-.LFB5549
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI930-.LCFI929
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI931-.LCFI930
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE518:
.LSFDE520:
	.long	.LEFDE520-.LASFDE520
.LASFDE520:
	.secrel32	.Lframe0
	.quad	.LFB5551
	.quad	.LFE5551-.LFB5551
	.byte	0x4
	.long	.LCFI932-.LFB5551
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI933-.LCFI932
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI934-.LCFI933
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE520:
.LSFDE522:
	.long	.LEFDE522-.LASFDE522
.LASFDE522:
	.secrel32	.Lframe0
	.quad	.LFB5552
	.quad	.LFE5552-.LFB5552
	.byte	0x4
	.long	.LCFI935-.LFB5552
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI936-.LCFI935
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI937-.LCFI936
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE522:
.LSFDE524:
	.long	.LEFDE524-.LASFDE524
.LASFDE524:
	.secrel32	.Lframe0
	.quad	.LFB5557
	.quad	.LFE5557-.LFB5557
	.byte	0x4
	.long	.LCFI938-.LFB5557
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI939-.LCFI938
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI940-.LCFI939
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE524:
.LSFDE526:
	.long	.LEFDE526-.LASFDE526
.LASFDE526:
	.secrel32	.Lframe0
	.quad	.LFB5554
	.quad	.LFE5554-.LFB5554
	.byte	0x4
	.long	.LCFI941-.LFB5554
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI942-.LCFI941
	.byte	0xe
	.uleb128 0x18
	.byte	0x85
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI943-.LCFI942
	.byte	0xe
	.uleb128 0x20
	.byte	0x84
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI944-.LCFI943
	.byte	0xe
	.uleb128 0x28
	.byte	0x83
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI945-.LCFI944
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.long	.LCFI946-.LCFI945
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x30
	.byte	0x4
	.long	.LCFI947-.LCFI946
	.byte	0xc3
	.byte	0x4
	.long	.LCFI948-.LCFI947
	.byte	0xc4
	.byte	0x4
	.long	.LCFI949-.LCFI948
	.byte	0xc5
	.byte	0x4
	.long	.LCFI950-.LCFI949
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 1
	.align 8
.LEFDE526:
.LSFDE528:
	.long	.LEFDE528-.LASFDE528
.LASFDE528:
	.secrel32	.Lframe0
	.quad	.LFB5553
	.quad	.LFE5553-.LFB5553
	.byte	0x4
	.long	.LCFI951-.LFB5553
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI952-.LCFI951
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI953-.LCFI952
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE528:
.LSFDE530:
	.long	.LEFDE530-.LASFDE530
.LASFDE530:
	.secrel32	.Lframe0
	.quad	.LFB5558
	.quad	.LFE5558-.LFB5558
	.byte	0x4
	.long	.LCFI954-.LFB5558
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI955-.LCFI954
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI956-.LCFI955
	.byte	0xe
	.uleb128 0x80
	.byte	0x4
	.long	.LCFI957-.LCFI956
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI958-.LCFI957
	.byte	0xc3
	.byte	0x4
	.long	.LCFI959-.LCFI958
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 11
	.align 8
.LEFDE530:
.LSFDE532:
	.long	.LEFDE532-.LASFDE532
.LASFDE532:
	.secrel32	.Lframe0
	.quad	.LFB5564
	.quad	.LFE5564-.LFB5564
	.byte	0x4
	.long	.LCFI960-.LFB5564
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI961-.LCFI960
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI962-.LCFI961
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE532:
.LSFDE534:
	.long	.LEFDE534-.LASFDE534
.LASFDE534:
	.secrel32	.Lframe0
	.quad	.LFB5565
	.quad	.LFE5565-.LFB5565
	.byte	0x4
	.long	.LCFI963-.LFB5565
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI964-.LCFI963
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI965-.LCFI964
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE534:
.LSFDE536:
	.long	.LEFDE536-.LASFDE536
.LASFDE536:
	.secrel32	.Lframe0
	.quad	.LFB5566
	.quad	.LFE5566-.LFB5566
	.byte	0x4
	.long	.LCFI966-.LFB5566
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI967-.LCFI966
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI968-.LCFI967
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI969-.LCFI968
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI970-.LCFI969
	.byte	0xc3
	.byte	0x4
	.long	.LCFI971-.LCFI970
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE536:
.LSFDE538:
	.long	.LEFDE538-.LASFDE538
.LASFDE538:
	.secrel32	.Lframe0
	.quad	.LFB5567
	.quad	.LFE5567-.LFB5567
	.byte	0x4
	.long	.LCFI972-.LFB5567
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI973-.LCFI972
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI974-.LCFI973
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE538:
.LSFDE540:
	.long	.LEFDE540-.LASFDE540
.LASFDE540:
	.secrel32	.Lframe0
	.quad	.LFB5568
	.quad	.LFE5568-.LFB5568
	.byte	0x4
	.long	.LCFI975-.LFB5568
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI976-.LCFI975
	.byte	0xe
	.uleb128 0x18
	.byte	0x84
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI977-.LCFI976
	.byte	0xe
	.uleb128 0x20
	.byte	0x83
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI978-.LCFI977
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI979-.LCFI978
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI980-.LCFI979
	.byte	0xc3
	.byte	0x4
	.long	.LCFI981-.LCFI980
	.byte	0xc4
	.byte	0x4
	.long	.LCFI982-.LCFI981
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 1
	.align 8
.LEFDE540:
.LSFDE542:
	.long	.LEFDE542-.LASFDE542
.LASFDE542:
	.secrel32	.Lframe0
	.quad	.LFB5569
	.quad	.LFE5569-.LFB5569
	.byte	0x4
	.long	.LCFI983-.LFB5569
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI984-.LCFI983
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI985-.LCFI984
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE542:
.LSFDE544:
	.long	.LEFDE544-.LASFDE544
.LASFDE544:
	.secrel32	.Lframe0
	.quad	.LFB5648
	.quad	.LFE5648-.LFB5648
	.byte	0x4
	.long	.LCFI986-.LFB5648
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI987-.LCFI986
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI988-.LCFI987
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE544:
.LSFDE546:
	.long	.LEFDE546-.LASFDE546
.LASFDE546:
	.secrel32	.Lframe0
	.quad	.LFB5650
	.quad	.LFE5650-.LFB5650
	.byte	0x4
	.long	.LCFI989-.LFB5650
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI990-.LCFI989
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI991-.LCFI990
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE546:
.LSFDE548:
	.long	.LEFDE548-.LASFDE548
.LASFDE548:
	.secrel32	.Lframe0
	.quad	.LFB5651
	.quad	.LFE5651-.LFB5651
	.byte	0x4
	.long	.LCFI992-.LFB5651
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI993-.LCFI992
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI994-.LCFI993
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE548:
.LSFDE550:
	.long	.LEFDE550-.LASFDE550
.LASFDE550:
	.secrel32	.Lframe0
	.quad	.LFB5652
	.quad	.LFE5652-.LFB5652
	.byte	0x4
	.long	.LCFI995-.LFB5652
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI996-.LCFI995
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI997-.LCFI996
	.byte	0xe
	.uleb128 0x70
	.byte	0x4
	.long	.LCFI998-.LCFI997
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI999-.LCFI998
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1000-.LCFI999
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 9
	.align 8
.LEFDE550:
.LSFDE552:
	.long	.LEFDE552-.LASFDE552
.LASFDE552:
	.secrel32	.Lframe0
	.quad	.LFB5654
	.quad	.LFE5654-.LFB5654
	.byte	0x4
	.long	.LCFI1001-.LFB5654
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1002-.LCFI1001
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1003-.LCFI1002
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE552:
.LSFDE554:
	.long	.LEFDE554-.LASFDE554
.LASFDE554:
	.secrel32	.Lframe0
	.quad	.LFB5656
	.quad	.LFE5656-.LFB5656
	.byte	0x4
	.long	.LCFI1004-.LFB5656
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1005-.LCFI1004
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1006-.LCFI1005
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE554:
.LSFDE556:
	.long	.LEFDE556-.LASFDE556
.LASFDE556:
	.secrel32	.Lframe0
	.quad	.LFB5657
	.quad	.LFE5657-.LFB5657
	.byte	0x4
	.long	.LCFI1007-.LFB5657
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1008-.LCFI1007
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1009-.LCFI1008
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE556:
.LSFDE558:
	.long	.LEFDE558-.LASFDE558
.LASFDE558:
	.secrel32	.Lframe0
	.quad	.LFB5658
	.quad	.LFE5658-.LFB5658
	.byte	0x4
	.long	.LCFI1010-.LFB5658
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1011-.LCFI1010
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1012-.LCFI1011
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE558:
.LSFDE560:
	.long	.LEFDE560-.LASFDE560
.LASFDE560:
	.secrel32	.Lframe0
	.quad	.LFB5659
	.quad	.LFE5659-.LFB5659
	.byte	0x4
	.long	.LCFI1013-.LFB5659
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1014-.LCFI1013
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1015-.LCFI1014
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE560:
.LSFDE562:
	.long	.LEFDE562-.LASFDE562
.LASFDE562:
	.secrel32	.Lframe0
	.quad	.LFB5660
	.quad	.LFE5660-.LFB5660
	.byte	0x4
	.long	.LCFI1016-.LFB5660
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1017-.LCFI1016
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1018-.LCFI1017
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE562:
.LSFDE564:
	.long	.LEFDE564-.LASFDE564
.LASFDE564:
	.secrel32	.Lframe0
	.quad	.LFB5661
	.quad	.LFE5661-.LFB5661
	.byte	0x4
	.long	.LCFI1019-.LFB5661
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1020-.LCFI1019
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1021-.LCFI1020
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE564:
.LSFDE566:
	.long	.LEFDE566-.LASFDE566
.LASFDE566:
	.secrel32	.Lframe0
	.quad	.LFB5662
	.quad	.LFE5662-.LFB5662
	.byte	0x4
	.long	.LCFI1022-.LFB5662
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1023-.LCFI1022
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1024-.LCFI1023
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE566:
.LSFDE568:
	.long	.LEFDE568-.LASFDE568
.LASFDE568:
	.secrel32	.Lframe0
	.quad	.LFB5664
	.quad	.LFE5664-.LFB5664
	.byte	0x4
	.long	.LCFI1025-.LFB5664
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1026-.LCFI1025
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1027-.LCFI1026
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI1028-.LCFI1027
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI1029-.LCFI1028
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1030-.LCFI1029
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE568:
.LSFDE570:
	.long	.LEFDE570-.LASFDE570
.LASFDE570:
	.secrel32	.Lframe0
	.quad	.LFB5663
	.quad	.LFE5663-.LFB5663
	.byte	0x4
	.long	.LCFI1031-.LFB5663
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1032-.LCFI1031
	.byte	0xe
	.uleb128 0x18
	.byte	0x85
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1033-.LCFI1032
	.byte	0xe
	.uleb128 0x20
	.byte	0x84
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI1034-.LCFI1033
	.byte	0xe
	.uleb128 0x28
	.byte	0x83
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI1035-.LCFI1034
	.byte	0xe
	.uleb128 0xb0
	.byte	0x4
	.long	.LCFI1036-.LCFI1035
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x30
	.byte	0x4
	.long	.LCFI1037-.LCFI1036
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1038-.LCFI1037
	.byte	0xc4
	.byte	0x4
	.long	.LCFI1039-.LCFI1038
	.byte	0xc5
	.byte	0x4
	.long	.LCFI1040-.LCFI1039
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 13
	.align 8
.LEFDE570:
.LSFDE572:
	.long	.LEFDE572-.LASFDE572
.LASFDE572:
	.secrel32	.Lframe0
	.quad	.LFB5665
	.quad	.LFE5665-.LFB5665
	.byte	0x4
	.long	.LCFI1041-.LFB5665
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1042-.LCFI1041
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1043-.LCFI1042
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE572:
.LSFDE574:
	.long	.LEFDE574-.LASFDE574
.LASFDE574:
	.secrel32	.Lframe0
	.quad	.LFB5666
	.quad	.LFE5666-.LFB5666
	.byte	0x4
	.long	.LCFI1044-.LFB5666
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1045-.LCFI1044
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1046-.LCFI1045
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE574:
.LSFDE576:
	.long	.LEFDE576-.LASFDE576
.LASFDE576:
	.secrel32	.Lframe0
	.quad	.LFB5667
	.quad	.LFE5667-.LFB5667
	.byte	0x4
	.long	.LCFI1047-.LFB5667
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1048-.LCFI1047
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1049-.LCFI1048
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE576:
.LSFDE578:
	.long	.LEFDE578-.LASFDE578
.LASFDE578:
	.secrel32	.Lframe0
	.quad	.LFB5669
	.quad	.LFE5669-.LFB5669
	.byte	0x4
	.long	.LCFI1050-.LFB5669
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1051-.LCFI1050
	.byte	0xe
	.uleb128 0x18
	.byte	0x85
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1052-.LCFI1051
	.byte	0xe
	.uleb128 0x20
	.byte	0x84
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI1053-.LCFI1052
	.byte	0xe
	.uleb128 0x28
	.byte	0x83
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI1054-.LCFI1053
	.byte	0xe
	.uleb128 0xa0
	.byte	0x4
	.long	.LCFI1055-.LCFI1054
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x30
	.byte	0x4
	.long	.LCFI1056-.LCFI1055
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1057-.LCFI1056
	.byte	0xc4
	.byte	0x4
	.long	.LCFI1058-.LCFI1057
	.byte	0xc5
	.byte	0x4
	.long	.LCFI1059-.LCFI1058
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 11
	.align 8
.LEFDE578:
.LSFDE580:
	.long	.LEFDE580-.LASFDE580
.LASFDE580:
	.secrel32	.Lframe0
	.quad	.LFB5668
	.quad	.LFE5668-.LFB5668
	.byte	0x4
	.long	.LCFI1060-.LFB5668
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1061-.LCFI1060
	.byte	0xe
	.uleb128 0x18
	.byte	0x84
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1062-.LCFI1061
	.byte	0xe
	.uleb128 0x20
	.byte	0x83
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI1063-.LCFI1062
	.byte	0xe
	.uleb128 0x160
	.byte	0x4
	.long	.LCFI1064-.LCFI1063
	.byte	0xc
	.uleb128 0x6
	.uleb128 0xe0
	.byte	0x4
	.long	.LCFI1065-.LCFI1064
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1066-.LCFI1065
	.byte	0xc4
	.byte	0x4
	.long	.LCFI1067-.LCFI1066
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 37
	.align 8
.LEFDE580:
.LSFDE582:
	.long	.LEFDE582-.LASFDE582
.LASFDE582:
	.secrel32	.Lframe0
	.quad	.LFB5671
	.quad	.LFE5671-.LFB5671
	.byte	0x4
	.long	.LCFI1068-.LFB5671
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1069-.LCFI1068
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1070-.LCFI1069
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE582:
.LSFDE584:
	.long	.LEFDE584-.LASFDE584
.LASFDE584:
	.secrel32	.Lframe0
	.quad	.LFB5670
	.quad	.LFE5670-.LFB5670
	.byte	0x4
	.long	.LCFI1071-.LFB5670
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1072-.LCFI1071
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1073-.LCFI1072
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE584:
.LSFDE586:
	.long	.LEFDE586-.LASFDE586
.LASFDE586:
	.secrel32	.Lframe0
	.quad	.LFB5672
	.quad	.LFE5672-.LFB5672
	.byte	0x4
	.long	.LCFI1074-.LFB5672
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1075-.LCFI1074
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1076-.LCFI1075
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE586:
.LSFDE588:
	.long	.LEFDE588-.LASFDE588
.LASFDE588:
	.secrel32	.Lframe0
	.quad	.LFB5673
	.quad	.LFE5673-.LFB5673
	.byte	0x4
	.long	.LCFI1077-.LFB5673
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1078-.LCFI1077
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1079-.LCFI1078
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE588:
.LSFDE590:
	.long	.LEFDE590-.LASFDE590
.LASFDE590:
	.secrel32	.Lframe0
	.quad	.LFB5674
	.quad	.LFE5674-.LFB5674
	.byte	0x4
	.long	.LCFI1080-.LFB5674
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1081-.LCFI1080
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1082-.LCFI1081
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE590:
.LSFDE592:
	.long	.LEFDE592-.LASFDE592
.LASFDE592:
	.secrel32	.Lframe0
	.quad	.LFB5675
	.quad	.LFE5675-.LFB5675
	.byte	0x4
	.long	.LCFI1083-.LFB5675
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1084-.LCFI1083
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1085-.LCFI1084
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE592:
.LSFDE594:
	.long	.LEFDE594-.LASFDE594
.LASFDE594:
	.secrel32	.Lframe0
	.quad	.LFB5676
	.quad	.LFE5676-.LFB5676
	.byte	0x4
	.long	.LCFI1086-.LFB5676
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1087-.LCFI1086
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1088-.LCFI1087
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.long	.LCFI1089-.LCFI1088
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI1090-.LCFI1089
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1091-.LCFI1090
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 5
	.align 8
.LEFDE594:
.LSFDE596:
	.long	.LEFDE596-.LASFDE596
.LASFDE596:
	.secrel32	.Lframe0
	.quad	.LFB5678
	.quad	.LFE5678-.LFB5678
	.byte	0x4
	.long	.LCFI1092-.LFB5678
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1093-.LCFI1092
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1094-.LCFI1093
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE596:
.LSFDE598:
	.long	.LEFDE598-.LASFDE598
.LASFDE598:
	.secrel32	.Lframe0
	.quad	.LFB5681
	.quad	.LFE5681-.LFB5681
	.byte	0x4
	.long	.LCFI1095-.LFB5681
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1096-.LCFI1095
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1097-.LCFI1096
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI1098-.LCFI1097
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI1099-.LCFI1098
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1100-.LCFI1099
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE598:
.LSFDE600:
	.long	.LEFDE600-.LASFDE600
.LASFDE600:
	.secrel32	.Lframe0
	.quad	.LFB5682
	.quad	.LFE5682-.LFB5682
	.byte	0x4
	.long	.LCFI1101-.LFB5682
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1102-.LCFI1101
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1103-.LCFI1102
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.long	.LCFI1104-.LCFI1103
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI1105-.LCFI1104
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1106-.LCFI1105
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 5
	.align 8
.LEFDE600:
.LSFDE602:
	.long	.LEFDE602-.LASFDE602
.LASFDE602:
	.secrel32	.Lframe0
	.quad	.LFB5683
	.quad	.LFE5683-.LFB5683
	.byte	0x4
	.long	.LCFI1107-.LFB5683
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1108-.LCFI1107
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1109-.LCFI1108
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI1110-.LCFI1109
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI1111-.LCFI1110
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1112-.LCFI1111
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE602:
.LSFDE604:
	.long	.LEFDE604-.LASFDE604
.LASFDE604:
	.secrel32	.Lframe0
	.quad	.LFB5684
	.quad	.LFE5684-.LFB5684
	.byte	0x4
	.long	.LCFI1113-.LFB5684
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1114-.LCFI1113
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1115-.LCFI1114
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE604:
.LSFDE606:
	.long	.LEFDE606-.LASFDE606
.LASFDE606:
	.secrel32	.Lframe0
	.quad	.LFB5685
	.quad	.LFE5685-.LFB5685
	.byte	0x4
	.long	.LCFI1116-.LFB5685
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1117-.LCFI1116
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1118-.LCFI1117
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI1119-.LCFI1118
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI1120-.LCFI1119
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1121-.LCFI1120
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE606:
.LSFDE608:
	.long	.LEFDE608-.LASFDE608
.LASFDE608:
	.secrel32	.Lframe0
	.quad	.LFB5686
	.quad	.LFE5686-.LFB5686
	.byte	0x4
	.long	.LCFI1122-.LFB5686
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1123-.LCFI1122
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1124-.LCFI1123
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE608:
.LSFDE610:
	.long	.LEFDE610-.LASFDE610
.LASFDE610:
	.secrel32	.Lframe0
	.quad	.LFB5687
	.quad	.LFE5687-.LFB5687
	.byte	0x4
	.long	.LCFI1125-.LFB5687
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1126-.LCFI1125
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1127-.LCFI1126
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE610:
.LSFDE612:
	.long	.LEFDE612-.LASFDE612
.LASFDE612:
	.secrel32	.Lframe0
	.quad	.LFB5688
	.quad	.LFE5688-.LFB5688
	.byte	0x4
	.long	.LCFI1128-.LFB5688
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1129-.LCFI1128
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1130-.LCFI1129
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE612:
.LSFDE614:
	.long	.LEFDE614-.LASFDE614
.LASFDE614:
	.secrel32	.Lframe0
	.quad	.LFB5689
	.quad	.LFE5689-.LFB5689
	.byte	0x4
	.long	.LCFI1131-.LFB5689
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1132-.LCFI1131
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1133-.LCFI1132
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE614:
.LSFDE616:
	.long	.LEFDE616-.LASFDE616
.LASFDE616:
	.secrel32	.Lframe0
	.quad	.LFB5690
	.quad	.LFE5690-.LFB5690
	.byte	0x4
	.long	.LCFI1134-.LFB5690
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1135-.LCFI1134
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1136-.LCFI1135
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE616:
.LSFDE618:
	.long	.LEFDE618-.LASFDE618
.LASFDE618:
	.secrel32	.Lframe0
	.quad	.LFB5691
	.quad	.LFE5691-.LFB5691
	.byte	0x4
	.long	.LCFI1137-.LFB5691
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1138-.LCFI1137
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1139-.LCFI1138
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE618:
.LSFDE620:
	.long	.LEFDE620-.LASFDE620
.LASFDE620:
	.secrel32	.Lframe0
	.quad	.LFB5692
	.quad	.LFE5692-.LFB5692
	.byte	0x4
	.long	.LCFI1140-.LFB5692
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1141-.LCFI1140
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1142-.LCFI1141
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE620:
.LSFDE622:
	.long	.LEFDE622-.LASFDE622
.LASFDE622:
	.secrel32	.Lframe0
	.quad	.LFB5693
	.quad	.LFE5693-.LFB5693
	.byte	0x4
	.long	.LCFI1143-.LFB5693
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1144-.LCFI1143
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1145-.LCFI1144
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE622:
.LSFDE624:
	.long	.LEFDE624-.LASFDE624
.LASFDE624:
	.secrel32	.Lframe0
	.quad	.LFB5694
	.quad	.LFE5694-.LFB5694
	.byte	0x4
	.long	.LCFI1146-.LFB5694
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1147-.LCFI1146
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1148-.LCFI1147
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE624:
.LSFDE626:
	.long	.LEFDE626-.LASFDE626
.LASFDE626:
	.secrel32	.Lframe0
	.quad	.LFB5696
	.quad	.LFE5696-.LFB5696
	.byte	0x4
	.long	.LCFI1149-.LFB5696
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1150-.LCFI1149
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1151-.LCFI1150
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE626:
.LSFDE628:
	.long	.LEFDE628-.LASFDE628
.LASFDE628:
	.secrel32	.Lframe0
	.quad	.LFB5697
	.quad	.LFE5697-.LFB5697
	.byte	0x4
	.long	.LCFI1152-.LFB5697
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1153-.LCFI1152
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1154-.LCFI1153
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI1155-.LCFI1154
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI1156-.LCFI1155
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1157-.LCFI1156
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE628:
.LSFDE630:
	.long	.LEFDE630-.LASFDE630
.LASFDE630:
	.secrel32	.Lframe0
	.quad	.LFB5695
	.quad	.LFE5695-.LFB5695
	.byte	0x4
	.long	.LCFI1158-.LFB5695
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1159-.LCFI1158
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1160-.LCFI1159
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE630:
.LSFDE632:
	.long	.LEFDE632-.LASFDE632
.LASFDE632:
	.secrel32	.Lframe0
	.quad	.LFB5698
	.quad	.LFE5698-.LFB5698
	.byte	0x4
	.long	.LCFI1161-.LFB5698
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1162-.LCFI1161
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1163-.LCFI1162
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE632:
.LSFDE634:
	.long	.LEFDE634-.LASFDE634
.LASFDE634:
	.secrel32	.Lframe0
	.quad	.LFB5699
	.quad	.LFE5699-.LFB5699
	.byte	0x4
	.long	.LCFI1164-.LFB5699
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1165-.LCFI1164
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1166-.LCFI1165
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.long	.LCFI1167-.LCFI1166
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI1168-.LCFI1167
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1169-.LCFI1168
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 5
	.align 8
.LEFDE634:
.LSFDE636:
	.long	.LEFDE636-.LASFDE636
.LASFDE636:
	.secrel32	.Lframe0
	.quad	.LFB5702
	.quad	.LFE5702-.LFB5702
	.byte	0x4
	.long	.LCFI1170-.LFB5702
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1171-.LCFI1170
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1172-.LCFI1171
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE636:
.LSFDE638:
	.long	.LEFDE638-.LASFDE638
.LASFDE638:
	.secrel32	.Lframe0
	.quad	.LFB5704
	.quad	.LFE5704-.LFB5704
	.byte	0x4
	.long	.LCFI1173-.LFB5704
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1174-.LCFI1173
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1175-.LCFI1174
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.long	.LCFI1176-.LCFI1175
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI1177-.LCFI1176
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1178-.LCFI1177
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 5
	.align 8
.LEFDE638:
.LSFDE640:
	.long	.LEFDE640-.LASFDE640
.LASFDE640:
	.secrel32	.Lframe0
	.quad	.LFB5705
	.quad	.LFE5705-.LFB5705
	.byte	0x4
	.long	.LCFI1179-.LFB5705
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1180-.LCFI1179
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1181-.LCFI1180
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI1182-.LCFI1181
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI1183-.LCFI1182
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1184-.LCFI1183
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE640:
.LSFDE642:
	.long	.LEFDE642-.LASFDE642
.LASFDE642:
	.secrel32	.Lframe0
	.quad	.LFB5706
	.quad	.LFE5706-.LFB5706
	.byte	0x4
	.long	.LCFI1185-.LFB5706
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1186-.LCFI1185
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1187-.LCFI1186
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE642:
.LSFDE644:
	.long	.LEFDE644-.LASFDE644
.LASFDE644:
	.secrel32	.Lframe0
	.quad	.LFB5707
	.quad	.LFE5707-.LFB5707
	.byte	0x4
	.long	.LCFI1188-.LFB5707
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1189-.LCFI1188
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1190-.LCFI1189
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE644:
.LSFDE646:
	.long	.LEFDE646-.LASFDE646
.LASFDE646:
	.secrel32	.Lframe0
	.quad	.LFB5708
	.quad	.LFE5708-.LFB5708
	.byte	0x4
	.long	.LCFI1191-.LFB5708
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1192-.LCFI1191
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1193-.LCFI1192
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI1194-.LCFI1193
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI1195-.LCFI1194
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1196-.LCFI1195
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE646:
.LSFDE648:
	.long	.LEFDE648-.LASFDE648
.LASFDE648:
	.secrel32	.Lframe0
	.quad	.LFB5709
	.quad	.LFE5709-.LFB5709
	.byte	0x4
	.long	.LCFI1197-.LFB5709
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1198-.LCFI1197
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1199-.LCFI1198
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE648:
.LSFDE650:
	.long	.LEFDE650-.LASFDE650
.LASFDE650:
	.secrel32	.Lframe0
	.quad	.LFB5710
	.quad	.LFE5710-.LFB5710
	.byte	0x4
	.long	.LCFI1200-.LFB5710
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1201-.LCFI1200
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1202-.LCFI1201
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE650:
.LSFDE652:
	.long	.LEFDE652-.LASFDE652
.LASFDE652:
	.secrel32	.Lframe0
	.quad	.LFB5711
	.quad	.LFE5711-.LFB5711
	.byte	0x4
	.long	.LCFI1203-.LFB5711
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1204-.LCFI1203
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1205-.LCFI1204
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE652:
.LSFDE654:
	.long	.LEFDE654-.LASFDE654
.LASFDE654:
	.secrel32	.Lframe0
	.quad	.LFB5712
	.quad	.LFE5712-.LFB5712
	.byte	0x4
	.long	.LCFI1206-.LFB5712
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1207-.LCFI1206
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1208-.LCFI1207
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE654:
.LSFDE656:
	.long	.LEFDE656-.LASFDE656
.LASFDE656:
	.secrel32	.Lframe0
	.quad	.LFB5713
	.quad	.LFE5713-.LFB5713
	.byte	0x4
	.long	.LCFI1209-.LFB5713
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1210-.LCFI1209
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1211-.LCFI1210
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE656:
.LSFDE658:
	.long	.LEFDE658-.LASFDE658
.LASFDE658:
	.secrel32	.Lframe0
	.quad	.LFB5795
	.quad	.LFE5795-.LFB5795
	.byte	0x4
	.long	.LCFI1212-.LFB5795
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1213-.LCFI1212
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1214-.LCFI1213
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE658:
.LSFDE660:
	.long	.LEFDE660-.LASFDE660
.LASFDE660:
	.secrel32	.Lframe0
	.quad	.LFB5796
	.quad	.LFE5796-.LFB5796
	.byte	0x4
	.long	.LCFI1215-.LFB5796
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1216-.LCFI1215
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1217-.LCFI1216
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE660:
.LSFDE662:
	.long	.LEFDE662-.LASFDE662
.LASFDE662:
	.secrel32	.Lframe0
	.quad	.LFB5797
	.quad	.LFE5797-.LFB5797
	.byte	0x4
	.long	.LCFI1218-.LFB5797
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1219-.LCFI1218
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1220-.LCFI1219
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE662:
.LSFDE664:
	.long	.LEFDE664-.LASFDE664
.LASFDE664:
	.secrel32	.Lframe0
	.quad	.LFB5798
	.quad	.LFE5798-.LFB5798
	.byte	0x4
	.long	.LCFI1221-.LFB5798
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1222-.LCFI1221
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1223-.LCFI1222
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE664:
.LSFDE666:
	.long	.LEFDE666-.LASFDE666
.LASFDE666:
	.secrel32	.Lframe0
	.quad	.LFB5799
	.quad	.LFE5799-.LFB5799
	.byte	0x4
	.long	.LCFI1224-.LFB5799
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1225-.LCFI1224
	.byte	0xe
	.uleb128 0x18
	.byte	0x84
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1226-.LCFI1225
	.byte	0xe
	.uleb128 0x20
	.byte	0x83
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI1227-.LCFI1226
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI1228-.LCFI1227
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI1229-.LCFI1228
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1230-.LCFI1229
	.byte	0xc4
	.byte	0x4
	.long	.LCFI1231-.LCFI1230
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 1
	.align 8
.LEFDE666:
.LSFDE668:
	.long	.LEFDE668-.LASFDE668
.LASFDE668:
	.secrel32	.Lframe0
	.quad	.LFB5801
	.quad	.LFE5801-.LFB5801
	.byte	0x4
	.long	.LCFI1232-.LFB5801
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1233-.LCFI1232
	.byte	0xe
	.uleb128 0x18
	.byte	0x85
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1234-.LCFI1233
	.byte	0xe
	.uleb128 0x20
	.byte	0x84
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI1235-.LCFI1234
	.byte	0xe
	.uleb128 0x28
	.byte	0x83
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI1236-.LCFI1235
	.byte	0xe
	.uleb128 0xa0
	.byte	0x4
	.long	.LCFI1237-.LCFI1236
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x30
	.byte	0x4
	.long	.LCFI1238-.LCFI1237
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1239-.LCFI1238
	.byte	0xc4
	.byte	0x4
	.long	.LCFI1240-.LCFI1239
	.byte	0xc5
	.byte	0x4
	.long	.LCFI1241-.LCFI1240
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 11
	.align 8
.LEFDE668:
.LSFDE670:
	.long	.LEFDE670-.LASFDE670
.LASFDE670:
	.secrel32	.Lframe0
	.quad	.LFB5802
	.quad	.LFE5802-.LFB5802
	.byte	0x4
	.long	.LCFI1242-.LFB5802
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1243-.LCFI1242
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1244-.LCFI1243
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1245-.LCFI1244
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1246-.LCFI1245
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x10
	.align 8
.LEFDE670:
.LSFDE672:
	.long	.LEFDE672-.LASFDE672
.LASFDE672:
	.secrel32	.Lframe0
	.quad	.LFB5803
	.quad	.LFE5803-.LFB5803
	.byte	0x4
	.long	.LCFI1247-.LFB5803
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1248-.LCFI1247
	.byte	0xe
	.uleb128 0x18
	.byte	0x85
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1249-.LCFI1248
	.byte	0xe
	.uleb128 0x20
	.byte	0x84
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI1250-.LCFI1249
	.byte	0xe
	.uleb128 0x28
	.byte	0x83
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI1251-.LCFI1250
	.byte	0xe
	.uleb128 0xc0
	.byte	0x4
	.long	.LCFI1252-.LCFI1251
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x30
	.byte	0x4
	.long	.LCFI1253-.LCFI1252
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1254-.LCFI1253
	.byte	0xc4
	.byte	0x4
	.long	.LCFI1255-.LCFI1254
	.byte	0xc5
	.byte	0x4
	.long	.LCFI1256-.LCFI1255
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 15
	.align 8
.LEFDE672:
.LSFDE674:
	.long	.LEFDE674-.LASFDE674
.LASFDE674:
	.secrel32	.Lframe0
	.quad	.LFB5804
	.quad	.LFE5804-.LFB5804
	.byte	0x4
	.long	.LCFI1257-.LFB5804
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1258-.LCFI1257
	.byte	0xe
	.uleb128 0x18
	.byte	0x84
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1259-.LCFI1258
	.byte	0xe
	.uleb128 0x20
	.byte	0x83
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI1260-.LCFI1259
	.byte	0xe
	.uleb128 0x60
	.byte	0x4
	.long	.LCFI1261-.LCFI1260
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI1262-.LCFI1261
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1263-.LCFI1262
	.byte	0xc4
	.byte	0x4
	.long	.LCFI1264-.LCFI1263
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 5
	.align 8
.LEFDE674:
.LSFDE676:
	.long	.LEFDE676-.LASFDE676
.LASFDE676:
	.secrel32	.Lframe0
	.quad	.LFB5805
	.quad	.LFE5805-.LFB5805
	.byte	0x4
	.long	.LCFI1265-.LFB5805
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1266-.LCFI1265
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1267-.LCFI1266
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.long	.LCFI1268-.LCFI1267
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI1269-.LCFI1268
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1270-.LCFI1269
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 5
	.align 8
.LEFDE676:
.LSFDE678:
	.long	.LEFDE678-.LASFDE678
.LASFDE678:
	.secrel32	.Lframe0
	.quad	.LFB5806
	.quad	.LFE5806-.LFB5806
	.byte	0x4
	.long	.LCFI1271-.LFB5806
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1272-.LCFI1271
	.byte	0xe
	.uleb128 0x18
	.byte	0x85
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1273-.LCFI1272
	.byte	0xe
	.uleb128 0x20
	.byte	0x84
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI1274-.LCFI1273
	.byte	0xe
	.uleb128 0x28
	.byte	0x83
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI1275-.LCFI1274
	.byte	0xe
	.uleb128 0xa0
	.byte	0x4
	.long	.LCFI1276-.LCFI1275
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x30
	.byte	0x4
	.long	.LCFI1277-.LCFI1276
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1278-.LCFI1277
	.byte	0xc4
	.byte	0x4
	.long	.LCFI1279-.LCFI1278
	.byte	0xc5
	.byte	0x4
	.long	.LCFI1280-.LCFI1279
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 11
	.align 8
.LEFDE678:
.LSFDE680:
	.long	.LEFDE680-.LASFDE680
.LASFDE680:
	.secrel32	.Lframe0
	.quad	.LFB5808
	.quad	.LFE5808-.LFB5808
	.byte	0x4
	.long	.LCFI1281-.LFB5808
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1282-.LCFI1281
	.byte	0xe
	.uleb128 0x18
	.byte	0x84
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1283-.LCFI1282
	.byte	0xe
	.uleb128 0x20
	.byte	0x83
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI1284-.LCFI1283
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI1285-.LCFI1284
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI1286-.LCFI1285
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1287-.LCFI1286
	.byte	0xc4
	.byte	0x4
	.long	.LCFI1288-.LCFI1287
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 1
	.align 8
.LEFDE680:
.LSFDE682:
	.long	.LEFDE682-.LASFDE682
.LASFDE682:
	.secrel32	.Lframe0
	.quad	.LFB5809
	.quad	.LFE5809-.LFB5809
	.byte	0x4
	.long	.LCFI1289-.LFB5809
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1290-.LCFI1289
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1291-.LCFI1290
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE682:
.LSFDE684:
	.long	.LEFDE684-.LASFDE684
.LASFDE684:
	.secrel32	.Lframe0
	.quad	.LFB5810
	.quad	.LFE5810-.LFB5810
	.byte	0x4
	.long	.LCFI1292-.LFB5810
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1293-.LCFI1292
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1294-.LCFI1293
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE684:
.LSFDE686:
	.long	.LEFDE686-.LASFDE686
.LASFDE686:
	.secrel32	.Lframe0
	.quad	.LFB5811
	.quad	.LFE5811-.LFB5811
	.byte	0x4
	.long	.LCFI1295-.LFB5811
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1296-.LCFI1295
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1297-.LCFI1296
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE686:
.LSFDE688:
	.long	.LEFDE688-.LASFDE688
.LASFDE688:
	.secrel32	.Lframe0
	.quad	.LFB5812
	.quad	.LFE5812-.LFB5812
	.byte	0x4
	.long	.LCFI1298-.LFB5812
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1299-.LCFI1298
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1300-.LCFI1299
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE688:
.LSFDE690:
	.long	.LEFDE690-.LASFDE690
.LASFDE690:
	.secrel32	.Lframe0
	.quad	.LFB5814
	.quad	.LFE5814-.LFB5814
	.byte	0x4
	.long	.LCFI1301-.LFB5814
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1302-.LCFI1301
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1303-.LCFI1302
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE690:
.LSFDE692:
	.long	.LEFDE692-.LASFDE692
.LASFDE692:
	.secrel32	.Lframe0
	.quad	.LFB5813
	.quad	.LFE5813-.LFB5813
	.byte	0x4
	.long	.LCFI1304-.LFB5813
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1305-.LCFI1304
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1306-.LCFI1305
	.byte	0xe
	.uleb128 0xc0
	.byte	0x4
	.long	.LCFI1307-.LCFI1306
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI1308-.LCFI1307
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1309-.LCFI1308
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 19
	.align 8
.LEFDE692:
.LSFDE694:
	.long	.LEFDE694-.LASFDE694
.LASFDE694:
	.secrel32	.Lframe0
	.quad	.LFB5816
	.quad	.LFE5816-.LFB5816
	.byte	0x4
	.long	.LCFI1310-.LFB5816
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1311-.LCFI1310
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1312-.LCFI1311
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE694:
.LSFDE696:
	.long	.LEFDE696-.LASFDE696
.LASFDE696:
	.secrel32	.Lframe0
	.quad	.LFB5817
	.quad	.LFE5817-.LFB5817
	.byte	0x4
	.long	.LCFI1313-.LFB5817
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1314-.LCFI1313
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1315-.LCFI1314
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE696:
.LSFDE698:
	.long	.LEFDE698-.LASFDE698
.LASFDE698:
	.secrel32	.Lframe0
	.quad	.LFB5818
	.quad	.LFE5818-.LFB5818
	.byte	0x4
	.long	.LCFI1316-.LFB5818
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1317-.LCFI1316
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1318-.LCFI1317
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE698:
.LSFDE700:
	.long	.LEFDE700-.LASFDE700
.LASFDE700:
	.secrel32	.Lframe0
	.quad	.LFB5819
	.quad	.LFE5819-.LFB5819
	.byte	0x4
	.long	.LCFI1319-.LFB5819
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1320-.LCFI1319
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1321-.LCFI1320
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI1322-.LCFI1321
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI1323-.LCFI1322
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1324-.LCFI1323
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE700:
.LSFDE702:
	.long	.LEFDE702-.LASFDE702
.LASFDE702:
	.secrel32	.Lframe0
	.quad	.LFB5815
	.quad	.LFE5815-.LFB5815
	.byte	0x4
	.long	.LCFI1325-.LFB5815
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1326-.LCFI1325
	.byte	0xe
	.uleb128 0x18
	.byte	0x8c
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1327-.LCFI1326
	.byte	0xe
	.uleb128 0x20
	.byte	0x85
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI1328-.LCFI1327
	.byte	0xe
	.uleb128 0x28
	.byte	0x84
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI1329-.LCFI1328
	.byte	0xe
	.uleb128 0x30
	.byte	0x83
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1330-.LCFI1329
	.byte	0xe
	.uleb128 0x60
	.byte	0x4
	.long	.LCFI1331-.LCFI1330
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x30
	.byte	0x4
	.long	.LCFI1332-.LCFI1331
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1333-.LCFI1332
	.byte	0xc4
	.byte	0x4
	.long	.LCFI1334-.LCFI1333
	.byte	0xc5
	.byte	0x4
	.long	.LCFI1335-.LCFI1334
	.byte	0xcc
	.byte	0x4
	.long	.LCFI1336-.LCFI1335
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 1
	.align 8
.LEFDE702:
.LSFDE704:
	.long	.LEFDE704-.LASFDE704
.LASFDE704:
	.secrel32	.Lframe0
	.quad	.LFB5820
	.quad	.LFE5820-.LFB5820
	.byte	0x4
	.long	.LCFI1337-.LFB5820
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1338-.LCFI1337
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1339-.LCFI1338
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE704:
.LSFDE706:
	.long	.LEFDE706-.LASFDE706
.LASFDE706:
	.secrel32	.Lframe0
	.quad	.LFB5821
	.quad	.LFE5821-.LFB5821
	.byte	0x4
	.long	.LCFI1340-.LFB5821
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1341-.LCFI1340
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1342-.LCFI1341
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE706:
.LSFDE708:
	.long	.LEFDE708-.LASFDE708
.LASFDE708:
	.secrel32	.Lframe0
	.quad	.LFB5822
	.quad	.LFE5822-.LFB5822
	.byte	0x4
	.long	.LCFI1343-.LFB5822
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1344-.LCFI1343
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1345-.LCFI1344
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE708:
.LSFDE710:
	.long	.LEFDE710-.LASFDE710
.LASFDE710:
	.secrel32	.Lframe0
	.quad	.LFB5823
	.quad	.LFE5823-.LFB5823
	.byte	0x4
	.long	.LCFI1346-.LFB5823
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1347-.LCFI1346
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1348-.LCFI1347
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE710:
.LSFDE712:
	.long	.LEFDE712-.LASFDE712
.LASFDE712:
	.secrel32	.Lframe0
	.quad	.LFB5826
	.quad	.LFE5826-.LFB5826
	.byte	0x4
	.long	.LCFI1349-.LFB5826
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1350-.LCFI1349
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1351-.LCFI1350
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE712:
.LSFDE714:
	.long	.LEFDE714-.LASFDE714
.LASFDE714:
	.secrel32	.Lframe0
	.quad	.LFB5827
	.quad	.LFE5827-.LFB5827
	.byte	0x4
	.long	.LCFI1352-.LFB5827
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1353-.LCFI1352
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1354-.LCFI1353
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE714:
.LSFDE716:
	.long	.LEFDE716-.LASFDE716
.LASFDE716:
	.secrel32	.Lframe0
	.quad	.LFB5825
	.quad	.LFE5825-.LFB5825
	.byte	0x4
	.long	.LCFI1355-.LFB5825
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1356-.LCFI1355
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1357-.LCFI1356
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.long	.LCFI1358-.LCFI1357
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI1359-.LCFI1358
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1360-.LCFI1359
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 5
	.align 8
.LEFDE716:
.LSFDE718:
	.long	.LEFDE718-.LASFDE718
.LASFDE718:
	.secrel32	.Lframe0
	.quad	.LFB5828
	.quad	.LFE5828-.LFB5828
	.byte	0x4
	.long	.LCFI1361-.LFB5828
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1362-.LCFI1361
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1363-.LCFI1362
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE718:
.LSFDE720:
	.long	.LEFDE720-.LASFDE720
.LASFDE720:
	.secrel32	.Lframe0
	.quad	.LFB5829
	.quad	.LFE5829-.LFB5829
	.byte	0x4
	.long	.LCFI1364-.LFB5829
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1365-.LCFI1364
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1366-.LCFI1365
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE720:
.LSFDE722:
	.long	.LEFDE722-.LASFDE722
.LASFDE722:
	.secrel32	.Lframe0
	.quad	.LFB5832
	.quad	.LFE5832-.LFB5832
	.byte	0x4
	.long	.LCFI1367-.LFB5832
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1368-.LCFI1367
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1369-.LCFI1368
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE722:
.LSFDE724:
	.long	.LEFDE724-.LASFDE724
.LASFDE724:
	.secrel32	.Lframe0
	.quad	.LFB5831
	.quad	.LFE5831-.LFB5831
	.byte	0x4
	.long	.LCFI1370-.LFB5831
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1371-.LCFI1370
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1372-.LCFI1371
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE724:
.LSFDE726:
	.long	.LEFDE726-.LASFDE726
.LASFDE726:
	.secrel32	.Lframe0
	.quad	.LFB5830
	.quad	.LFE5830-.LFB5830
	.byte	0x4
	.long	.LCFI1373-.LFB5830
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1374-.LCFI1373
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1375-.LCFI1374
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE726:
.LSFDE728:
	.long	.LEFDE728-.LASFDE728
.LASFDE728:
	.secrel32	.Lframe0
	.quad	.LFB5836
	.quad	.LFE5836-.LFB5836
	.byte	0x4
	.long	.LCFI1376-.LFB5836
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1377-.LCFI1376
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1378-.LCFI1377
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE728:
.LSFDE730:
	.long	.LEFDE730-.LASFDE730
.LASFDE730:
	.secrel32	.Lframe0
	.quad	.LFB5833
	.quad	.LFE5833-.LFB5833
	.byte	0x4
	.long	.LCFI1379-.LFB5833
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1380-.LCFI1379
	.byte	0xe
	.uleb128 0x18
	.byte	0x85
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1381-.LCFI1380
	.byte	0xe
	.uleb128 0x20
	.byte	0x84
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI1382-.LCFI1381
	.byte	0xe
	.uleb128 0x28
	.byte	0x83
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI1383-.LCFI1382
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.long	.LCFI1384-.LCFI1383
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x30
	.byte	0x4
	.long	.LCFI1385-.LCFI1384
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1386-.LCFI1385
	.byte	0xc4
	.byte	0x4
	.long	.LCFI1387-.LCFI1386
	.byte	0xc5
	.byte	0x4
	.long	.LCFI1388-.LCFI1387
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 1
	.align 8
.LEFDE730:
.LSFDE732:
	.long	.LEFDE732-.LASFDE732
.LASFDE732:
	.secrel32	.Lframe0
	.quad	.LFB5837
	.quad	.LFE5837-.LFB5837
	.byte	0x4
	.long	.LCFI1389-.LFB5837
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1390-.LCFI1389
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1391-.LCFI1390
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE732:
.LSFDE734:
	.long	.LEFDE734-.LASFDE734
.LASFDE734:
	.secrel32	.Lframe0
	.quad	.LFB5838
	.quad	.LFE5838-.LFB5838
	.byte	0x4
	.long	.LCFI1392-.LFB5838
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1393-.LCFI1392
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1394-.LCFI1393
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE734:
.LSFDE736:
	.long	.LEFDE736-.LASFDE736
.LASFDE736:
	.secrel32	.Lframe0
	.quad	.LFB5839
	.quad	.LFE5839-.LFB5839
	.byte	0x4
	.long	.LCFI1395-.LFB5839
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1396-.LCFI1395
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1397-.LCFI1396
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE736:
.LSFDE738:
	.long	.LEFDE738-.LASFDE738
.LASFDE738:
	.secrel32	.Lframe0
	.quad	.LFB5840
	.quad	.LFE5840-.LFB5840
	.byte	0x4
	.long	.LCFI1398-.LFB5840
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1399-.LCFI1398
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1400-.LCFI1399
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE738:
.LSFDE740:
	.long	.LEFDE740-.LASFDE740
.LASFDE740:
	.secrel32	.Lframe0
	.quad	.LFB5841
	.quad	.LFE5841-.LFB5841
	.byte	0x4
	.long	.LCFI1401-.LFB5841
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1402-.LCFI1401
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1403-.LCFI1402
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE740:
.LSFDE742:
	.long	.LEFDE742-.LASFDE742
.LASFDE742:
	.secrel32	.Lframe0
	.quad	.LFB5842
	.quad	.LFE5842-.LFB5842
	.byte	0x4
	.long	.LCFI1404-.LFB5842
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1405-.LCFI1404
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1406-.LCFI1405
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE742:
.LSFDE744:
	.long	.LEFDE744-.LASFDE744
.LASFDE744:
	.secrel32	.Lframe0
	.quad	.LFB5843
	.quad	.LFE5843-.LFB5843
	.byte	0x4
	.long	.LCFI1407-.LFB5843
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1408-.LCFI1407
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1409-.LCFI1408
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE744:
.LSFDE746:
	.long	.LEFDE746-.LASFDE746
.LASFDE746:
	.secrel32	.Lframe0
	.quad	.LFB5879
	.quad	.LFE5879-.LFB5879
	.byte	0x4
	.long	.LCFI1410-.LFB5879
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1411-.LCFI1410
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1412-.LCFI1411
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE746:
.LSFDE748:
	.long	.LEFDE748-.LASFDE748
.LASFDE748:
	.secrel32	.Lframe0
	.quad	.LFB5880
	.quad	.LFE5880-.LFB5880
	.byte	0x4
	.long	.LCFI1413-.LFB5880
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1414-.LCFI1413
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1415-.LCFI1414
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE748:
.LSFDE750:
	.long	.LEFDE750-.LASFDE750
.LASFDE750:
	.secrel32	.Lframe0
	.quad	.LFB5881
	.quad	.LFE5881-.LFB5881
	.byte	0x4
	.long	.LCFI1416-.LFB5881
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1417-.LCFI1416
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1418-.LCFI1417
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE750:
.LSFDE752:
	.long	.LEFDE752-.LASFDE752
.LASFDE752:
	.secrel32	.Lframe0
	.quad	.LFB5883
	.quad	.LFE5883-.LFB5883
	.byte	0x4
	.long	.LCFI1419-.LFB5883
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1420-.LCFI1419
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1421-.LCFI1420
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE752:
.LSFDE754:
	.long	.LEFDE754-.LASFDE754
.LASFDE754:
	.secrel32	.Lframe0
	.quad	.LFB5884
	.quad	.LFE5884-.LFB5884
	.byte	0x4
	.long	.LCFI1422-.LFB5884
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1423-.LCFI1422
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1424-.LCFI1423
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE754:
.LSFDE756:
	.long	.LEFDE756-.LASFDE756
.LASFDE756:
	.secrel32	.Lframe0
	.quad	.LFB5885
	.quad	.LFE5885-.LFB5885
	.byte	0x4
	.long	.LCFI1425-.LFB5885
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1426-.LCFI1425
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1427-.LCFI1426
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE756:
.LSFDE758:
	.long	.LEFDE758-.LASFDE758
.LASFDE758:
	.secrel32	.Lframe0
	.quad	.LFB5886
	.quad	.LFE5886-.LFB5886
	.byte	0x4
	.long	.LCFI1428-.LFB5886
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1429-.LCFI1428
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1430-.LCFI1429
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1431-.LCFI1430
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1432-.LCFI1431
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x10
	.align 8
.LEFDE758:
.LSFDE760:
	.long	.LEFDE760-.LASFDE760
.LASFDE760:
	.secrel32	.Lframe0
	.quad	.LFB5887
	.quad	.LFE5887-.LFB5887
	.byte	0x4
	.long	.LCFI1433-.LFB5887
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1434-.LCFI1433
	.byte	0xe
	.uleb128 0x18
	.byte	0x85
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1435-.LCFI1434
	.byte	0xe
	.uleb128 0x20
	.byte	0x84
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI1436-.LCFI1435
	.byte	0xe
	.uleb128 0x28
	.byte	0x83
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI1437-.LCFI1436
	.byte	0xe
	.uleb128 0xc0
	.byte	0x4
	.long	.LCFI1438-.LCFI1437
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x30
	.byte	0x4
	.long	.LCFI1439-.LCFI1438
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1440-.LCFI1439
	.byte	0xc4
	.byte	0x4
	.long	.LCFI1441-.LCFI1440
	.byte	0xc5
	.byte	0x4
	.long	.LCFI1442-.LCFI1441
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 15
	.align 8
.LEFDE760:
.LSFDE762:
	.long	.LEFDE762-.LASFDE762
.LASFDE762:
	.secrel32	.Lframe0
	.quad	.LFB5888
	.quad	.LFE5888-.LFB5888
	.byte	0x4
	.long	.LCFI1443-.LFB5888
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1444-.LCFI1443
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1445-.LCFI1444
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1446-.LCFI1445
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1447-.LCFI1446
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x10
	.align 8
.LEFDE762:
.LSFDE764:
	.long	.LEFDE764-.LASFDE764
.LASFDE764:
	.secrel32	.Lframe0
	.quad	.LFB5889
	.quad	.LFE5889-.LFB5889
	.byte	0x4
	.long	.LCFI1448-.LFB5889
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1449-.LCFI1448
	.byte	0xe
	.uleb128 0x18
	.byte	0x85
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1450-.LCFI1449
	.byte	0xe
	.uleb128 0x20
	.byte	0x84
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI1451-.LCFI1450
	.byte	0xe
	.uleb128 0x28
	.byte	0x83
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI1452-.LCFI1451
	.byte	0xe
	.uleb128 0x80
	.byte	0x4
	.long	.LCFI1453-.LCFI1452
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x30
	.byte	0x4
	.long	.LCFI1454-.LCFI1453
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1455-.LCFI1454
	.byte	0xc4
	.byte	0x4
	.long	.LCFI1456-.LCFI1455
	.byte	0xc5
	.byte	0x4
	.long	.LCFI1457-.LCFI1456
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 7
	.align 8
.LEFDE764:
.LSFDE766:
	.long	.LEFDE766-.LASFDE766
.LASFDE766:
	.secrel32	.Lframe0
	.quad	.LFB5890
	.quad	.LFE5890-.LFB5890
	.byte	0x4
	.long	.LCFI1458-.LFB5890
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1459-.LCFI1458
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1460-.LCFI1459
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1461-.LCFI1460
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1462-.LCFI1461
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x10
	.align 8
.LEFDE766:
.LSFDE768:
	.long	.LEFDE768-.LASFDE768
.LASFDE768:
	.secrel32	.Lframe0
	.quad	.LFB5891
	.quad	.LFE5891-.LFB5891
	.byte	0x4
	.long	.LCFI1463-.LFB5891
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1464-.LCFI1463
	.byte	0xe
	.uleb128 0x18
	.byte	0x84
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1465-.LCFI1464
	.byte	0xe
	.uleb128 0x20
	.byte	0x83
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI1466-.LCFI1465
	.byte	0xe
	.uleb128 0x60
	.byte	0x4
	.long	.LCFI1467-.LCFI1466
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI1468-.LCFI1467
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1469-.LCFI1468
	.byte	0xc4
	.byte	0x4
	.long	.LCFI1470-.LCFI1469
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 5
	.align 8
.LEFDE768:
.LSFDE770:
	.long	.LEFDE770-.LASFDE770
.LASFDE770:
	.secrel32	.Lframe0
	.quad	.LFB5892
	.quad	.LFE5892-.LFB5892
	.byte	0x4
	.long	.LCFI1471-.LFB5892
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1472-.LCFI1471
	.byte	0xe
	.uleb128 0x18
	.byte	0x85
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1473-.LCFI1472
	.byte	0xe
	.uleb128 0x20
	.byte	0x84
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI1474-.LCFI1473
	.byte	0xe
	.uleb128 0x28
	.byte	0x83
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI1475-.LCFI1474
	.byte	0xe
	.uleb128 0xc0
	.byte	0x4
	.long	.LCFI1476-.LCFI1475
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x30
	.byte	0x4
	.long	.LCFI1477-.LCFI1476
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1478-.LCFI1477
	.byte	0xc4
	.byte	0x4
	.long	.LCFI1479-.LCFI1478
	.byte	0xc5
	.byte	0x4
	.long	.LCFI1480-.LCFI1479
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 15
	.align 8
.LEFDE770:
.LSFDE772:
	.long	.LEFDE772-.LASFDE772
.LASFDE772:
	.secrel32	.Lframe0
	.quad	.LFB5894
	.quad	.LFE5894-.LFB5894
	.byte	0x4
	.long	.LCFI1481-.LFB5894
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1482-.LCFI1481
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1483-.LCFI1482
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE772:
.LSFDE774:
	.long	.LEFDE774-.LASFDE774
.LASFDE774:
	.secrel32	.Lframe0
	.quad	.LFB5893
	.quad	.LFE5893-.LFB5893
	.byte	0x4
	.long	.LCFI1484-.LFB5893
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1485-.LCFI1484
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1486-.LCFI1485
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE774:
.LSFDE776:
	.long	.LEFDE776-.LASFDE776
.LASFDE776:
	.secrel32	.Lframe0
	.quad	.LFB5895
	.quad	.LFE5895-.LFB5895
	.byte	0x4
	.long	.LCFI1487-.LFB5895
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1488-.LCFI1487
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1489-.LCFI1488
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE776:
.LSFDE778:
	.long	.LEFDE778-.LASFDE778
.LASFDE778:
	.secrel32	.Lframe0
	.quad	.LFB5896
	.quad	.LFE5896-.LFB5896
	.byte	0x4
	.long	.LCFI1490-.LFB5896
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1491-.LCFI1490
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1492-.LCFI1491
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE778:
.LSFDE780:
	.long	.LEFDE780-.LASFDE780
.LASFDE780:
	.secrel32	.Lframe0
	.quad	.LFB5897
	.quad	.LFE5897-.LFB5897
	.byte	0x4
	.long	.LCFI1493-.LFB5897
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1494-.LCFI1493
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1495-.LCFI1494
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE780:
.LSFDE782:
	.long	.LEFDE782-.LASFDE782
.LASFDE782:
	.secrel32	.Lframe0
	.quad	.LFB5898
	.quad	.LFE5898-.LFB5898
	.byte	0x4
	.long	.LCFI1496-.LFB5898
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1497-.LCFI1496
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1498-.LCFI1497
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE782:
.LSFDE784:
	.long	.LEFDE784-.LASFDE784
.LASFDE784:
	.secrel32	.Lframe0
	.quad	.LFB5899
	.quad	.LFE5899-.LFB5899
	.byte	0x4
	.long	.LCFI1499-.LFB5899
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1500-.LCFI1499
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1501-.LCFI1500
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE784:
.LSFDE786:
	.long	.LEFDE786-.LASFDE786
.LASFDE786:
	.secrel32	.Lframe0
	.quad	.LFB5900
	.quad	.LFE5900-.LFB5900
	.byte	0x4
	.long	.LCFI1502-.LFB5900
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1503-.LCFI1502
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1504-.LCFI1503
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE786:
.LSFDE788:
	.long	.LEFDE788-.LASFDE788
.LASFDE788:
	.secrel32	.Lframe0
	.quad	.LFB5901
	.quad	.LFE5901-.LFB5901
	.byte	0x4
	.long	.LCFI1505-.LFB5901
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1506-.LCFI1505
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1507-.LCFI1506
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE788:
.LSFDE790:
	.long	.LEFDE790-.LASFDE790
.LASFDE790:
	.secrel32	.Lframe0
	.quad	.LFB5902
	.quad	.LFE5902-.LFB5902
	.byte	0x4
	.long	.LCFI1508-.LFB5902
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1509-.LCFI1508
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1510-.LCFI1509
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE790:
.LSFDE792:
	.long	.LEFDE792-.LASFDE792
.LASFDE792:
	.secrel32	.Lframe0
	.quad	.LFB5903
	.quad	.LFE5903-.LFB5903
	.byte	0x4
	.long	.LCFI1511-.LFB5903
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1512-.LCFI1511
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1513-.LCFI1512
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE792:
.LSFDE794:
	.long	.LEFDE794-.LASFDE794
.LASFDE794:
	.secrel32	.Lframe0
	.quad	.LFB5904
	.quad	.LFE5904-.LFB5904
	.byte	0x4
	.long	.LCFI1514-.LFB5904
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1515-.LCFI1514
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1516-.LCFI1515
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.long	.LCFI1517-.LCFI1516
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI1518-.LCFI1517
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1519-.LCFI1518
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 5
	.align 8
.LEFDE794:
.LSFDE796:
	.long	.LEFDE796-.LASFDE796
.LASFDE796:
	.secrel32	.Lframe0
	.quad	.LFB5905
	.quad	.LFE5905-.LFB5905
	.byte	0x4
	.long	.LCFI1520-.LFB5905
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1521-.LCFI1520
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1522-.LCFI1521
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE796:
.LSFDE798:
	.long	.LEFDE798-.LASFDE798
.LASFDE798:
	.secrel32	.Lframe0
	.quad	.LFB5906
	.quad	.LFE5906-.LFB5906
	.byte	0x4
	.long	.LCFI1523-.LFB5906
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1524-.LCFI1523
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1525-.LCFI1524
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI1526-.LCFI1525
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI1527-.LCFI1526
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1528-.LCFI1527
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE798:
.LSFDE800:
	.long	.LEFDE800-.LASFDE800
.LASFDE800:
	.secrel32	.Lframe0
	.quad	.LFB5907
	.quad	.LFE5907-.LFB5907
	.byte	0x4
	.long	.LCFI1529-.LFB5907
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1530-.LCFI1529
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1531-.LCFI1530
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE800:
.LSFDE802:
	.long	.LEFDE802-.LASFDE802
.LASFDE802:
	.secrel32	.Lframe0
	.quad	.LFB5908
	.quad	.LFE5908-.LFB5908
	.byte	0x4
	.long	.LCFI1532-.LFB5908
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1533-.LCFI1532
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1534-.LCFI1533
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE802:
.LSFDE804:
	.long	.LEFDE804-.LASFDE804
.LASFDE804:
	.secrel32	.Lframe0
	.quad	.LFB5909
	.quad	.LFE5909-.LFB5909
	.byte	0x4
	.long	.LCFI1535-.LFB5909
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1536-.LCFI1535
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1537-.LCFI1536
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE804:
.LSFDE806:
	.long	.LEFDE806-.LASFDE806
.LASFDE806:
	.secrel32	.Lframe0
	.quad	.LFB5910
	.quad	.LFE5910-.LFB5910
	.byte	0x4
	.long	.LCFI1538-.LFB5910
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1539-.LCFI1538
	.byte	0xe
	.uleb128 0x18
	.byte	0x84
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1540-.LCFI1539
	.byte	0xe
	.uleb128 0x20
	.byte	0x83
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI1541-.LCFI1540
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI1542-.LCFI1541
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI1543-.LCFI1542
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1544-.LCFI1543
	.byte	0xc4
	.byte	0x4
	.long	.LCFI1545-.LCFI1544
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 1
	.align 8
.LEFDE806:
.LSFDE808:
	.long	.LEFDE808-.LASFDE808
.LASFDE808:
	.secrel32	.Lframe0
	.quad	.LFB5911
	.quad	.LFE5911-.LFB5911
	.byte	0x4
	.long	.LCFI1546-.LFB5911
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1547-.LCFI1546
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1548-.LCFI1547
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE808:
.LSFDE810:
	.long	.LEFDE810-.LASFDE810
.LASFDE810:
	.secrel32	.Lframe0
	.quad	.LFB5913
	.quad	.LFE5913-.LFB5913
	.byte	0x4
	.long	.LCFI1549-.LFB5913
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1550-.LCFI1549
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1551-.LCFI1550
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE810:
.LSFDE812:
	.long	.LEFDE812-.LASFDE812
.LASFDE812:
	.secrel32	.Lframe0
	.quad	.LFB5912
	.quad	.LFE5912-.LFB5912
	.byte	0x4
	.long	.LCFI1552-.LFB5912
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1553-.LCFI1552
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1554-.LCFI1553
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE812:
.LSFDE814:
	.long	.LEFDE814-.LASFDE814
.LASFDE814:
	.secrel32	.Lframe0
	.quad	.LFB5914
	.quad	.LFE5914-.LFB5914
	.byte	0x4
	.long	.LCFI1555-.LFB5914
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1556-.LCFI1555
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1557-.LCFI1556
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE814:
.LSFDE816:
	.long	.LEFDE816-.LASFDE816
.LASFDE816:
	.secrel32	.Lframe0
	.quad	.LFB5916
	.quad	.LFE5916-.LFB5916
	.byte	0x4
	.long	.LCFI1558-.LFB5916
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1559-.LCFI1558
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1560-.LCFI1559
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE816:
.LSFDE818:
	.long	.LEFDE818-.LASFDE818
.LASFDE818:
	.secrel32	.Lframe0
	.quad	.LFB5915
	.quad	.LFE5915-.LFB5915
	.byte	0x4
	.long	.LCFI1561-.LFB5915
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1562-.LCFI1561
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1563-.LCFI1562
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE818:
.LSFDE820:
	.long	.LEFDE820-.LASFDE820
.LASFDE820:
	.secrel32	.Lframe0
	.quad	.LFB5917
	.quad	.LFE5917-.LFB5917
	.byte	0x4
	.long	.LCFI1564-.LFB5917
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1565-.LCFI1564
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1566-.LCFI1565
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI1567-.LCFI1566
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI1568-.LCFI1567
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1569-.LCFI1568
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE820:
.LSFDE822:
	.long	.LEFDE822-.LASFDE822
.LASFDE822:
	.secrel32	.Lframe0
	.quad	.LFB5918
	.quad	.LFE5918-.LFB5918
	.byte	0x4
	.long	.LCFI1570-.LFB5918
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1571-.LCFI1570
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1572-.LCFI1571
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE822:
.LSFDE824:
	.long	.LEFDE824-.LASFDE824
.LASFDE824:
	.secrel32	.Lframe0
	.quad	.LFB5919
	.quad	.LFE5919-.LFB5919
	.byte	0x4
	.long	.LCFI1573-.LFB5919
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1574-.LCFI1573
	.byte	0xe
	.uleb128 0x18
	.byte	0x85
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1575-.LCFI1574
	.byte	0xe
	.uleb128 0x20
	.byte	0x84
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI1576-.LCFI1575
	.byte	0xe
	.uleb128 0x28
	.byte	0x83
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI1577-.LCFI1576
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.long	.LCFI1578-.LCFI1577
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x30
	.byte	0x4
	.long	.LCFI1579-.LCFI1578
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1580-.LCFI1579
	.byte	0xc4
	.byte	0x4
	.long	.LCFI1581-.LCFI1580
	.byte	0xc5
	.byte	0x4
	.long	.LCFI1582-.LCFI1581
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 1
	.align 8
.LEFDE824:
.LSFDE826:
	.long	.LEFDE826-.LASFDE826
.LASFDE826:
	.secrel32	.Lframe0
	.quad	.LFB5920
	.quad	.LFE5920-.LFB5920
	.byte	0x4
	.long	.LCFI1583-.LFB5920
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1584-.LCFI1583
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1585-.LCFI1584
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE826:
.LSFDE828:
	.long	.LEFDE828-.LASFDE828
.LASFDE828:
	.secrel32	.Lframe0
	.quad	.LFB5921
	.quad	.LFE5921-.LFB5921
	.byte	0x4
	.long	.LCFI1586-.LFB5921
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1587-.LCFI1586
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1588-.LCFI1587
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE828:
.LSFDE830:
	.long	.LEFDE830-.LASFDE830
.LASFDE830:
	.secrel32	.Lframe0
	.quad	.LFB5923
	.quad	.LFE5923-.LFB5923
	.byte	0x4
	.long	.LCFI1589-.LFB5923
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1590-.LCFI1589
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1591-.LCFI1590
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE830:
.LSFDE832:
	.long	.LEFDE832-.LASFDE832
.LASFDE832:
	.secrel32	.Lframe0
	.quad	.LFB5922
	.quad	.LFE5922-.LFB5922
	.byte	0x4
	.long	.LCFI1592-.LFB5922
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1593-.LCFI1592
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1594-.LCFI1593
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE832:
.LSFDE834:
	.long	.LEFDE834-.LASFDE834
.LASFDE834:
	.secrel32	.Lframe0
	.quad	.LFB5924
	.quad	.LFE5924-.LFB5924
	.byte	0x4
	.long	.LCFI1595-.LFB5924
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1596-.LCFI1595
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1597-.LCFI1596
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE834:
.LSFDE836:
	.long	.LEFDE836-.LASFDE836
.LASFDE836:
	.secrel32	.Lframe0
	.quad	.LFB5926
	.quad	.LFE5926-.LFB5926
	.byte	0x4
	.long	.LCFI1598-.LFB5926
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1599-.LCFI1598
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1600-.LCFI1599
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE836:
.LSFDE838:
	.long	.LEFDE838-.LASFDE838
.LASFDE838:
	.secrel32	.Lframe0
	.quad	.LFB5928
	.quad	.LFE5928-.LFB5928
	.byte	0x4
	.long	.LCFI1601-.LFB5928
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1602-.LCFI1601
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1603-.LCFI1602
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE838:
.LSFDE840:
	.long	.LEFDE840-.LASFDE840
.LASFDE840:
	.secrel32	.Lframe0
	.quad	.LFB5931
	.quad	.LFE5931-.LFB5931
	.byte	0x4
	.long	.LCFI1604-.LFB5931
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1605-.LCFI1604
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1606-.LCFI1605
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE840:
.LSFDE842:
	.long	.LEFDE842-.LASFDE842
.LASFDE842:
	.secrel32	.Lframe0
	.quad	.LFB5930
	.quad	.LFE5930-.LFB5930
	.byte	0x4
	.long	.LCFI1607-.LFB5930
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1608-.LCFI1607
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1609-.LCFI1608
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE842:
.LSFDE844:
	.long	.LEFDE844-.LASFDE844
.LASFDE844:
	.secrel32	.Lframe0
	.quad	.LFB5929
	.quad	.LFE5929-.LFB5929
	.byte	0x4
	.long	.LCFI1610-.LFB5929
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1611-.LCFI1610
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1612-.LCFI1611
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE844:
.LSFDE846:
	.long	.LEFDE846-.LASFDE846
.LASFDE846:
	.secrel32	.Lframe0
	.quad	.LFB5949
	.quad	.LFE5949-.LFB5949
	.byte	0x4
	.long	.LCFI1613-.LFB5949
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1614-.LCFI1613
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1615-.LCFI1614
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE846:
.LSFDE848:
	.long	.LEFDE848-.LASFDE848
.LASFDE848:
	.secrel32	.Lframe0
	.quad	.LFB5948
	.quad	.LFE5948-.LFB5948
	.byte	0x4
	.long	.LCFI1616-.LFB5948
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1617-.LCFI1616
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1618-.LCFI1617
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE848:
.LSFDE850:
	.long	.LEFDE850-.LASFDE850
.LASFDE850:
	.secrel32	.Lframe0
	.quad	.LFB5950
	.quad	.LFE5950-.LFB5950
	.byte	0x4
	.long	.LCFI1619-.LFB5950
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1620-.LCFI1619
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1621-.LCFI1620
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE850:
.LSFDE852:
	.long	.LEFDE852-.LASFDE852
.LASFDE852:
	.secrel32	.Lframe0
	.quad	.LFB5951
	.quad	.LFE5951-.LFB5951
	.byte	0x4
	.long	.LCFI1622-.LFB5951
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1623-.LCFI1622
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1624-.LCFI1623
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1625-.LCFI1624
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1626-.LCFI1625
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x10
	.align 8
.LEFDE852:
.LSFDE854:
	.long	.LEFDE854-.LASFDE854
.LASFDE854:
	.secrel32	.Lframe0
	.quad	.LFB5952
	.quad	.LFE5952-.LFB5952
	.byte	0x4
	.long	.LCFI1627-.LFB5952
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1628-.LCFI1627
	.byte	0xe
	.uleb128 0x18
	.byte	0x85
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1629-.LCFI1628
	.byte	0xe
	.uleb128 0x20
	.byte	0x84
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI1630-.LCFI1629
	.byte	0xe
	.uleb128 0x28
	.byte	0x83
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI1631-.LCFI1630
	.byte	0xe
	.uleb128 0x80
	.byte	0x4
	.long	.LCFI1632-.LCFI1631
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x30
	.byte	0x4
	.long	.LCFI1633-.LCFI1632
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1634-.LCFI1633
	.byte	0xc4
	.byte	0x4
	.long	.LCFI1635-.LCFI1634
	.byte	0xc5
	.byte	0x4
	.long	.LCFI1636-.LCFI1635
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 7
	.align 8
.LEFDE854:
.LSFDE856:
	.long	.LEFDE856-.LASFDE856
.LASFDE856:
	.secrel32	.Lframe0
	.quad	.LFB5953
	.quad	.LFE5953-.LFB5953
	.byte	0x4
	.long	.LCFI1637-.LFB5953
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1638-.LCFI1637
	.byte	0xe
	.uleb128 0x18
	.byte	0x85
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1639-.LCFI1638
	.byte	0xe
	.uleb128 0x20
	.byte	0x84
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI1640-.LCFI1639
	.byte	0xe
	.uleb128 0x28
	.byte	0x83
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI1641-.LCFI1640
	.byte	0xe
	.uleb128 0x80
	.byte	0x4
	.long	.LCFI1642-.LCFI1641
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x30
	.byte	0x4
	.long	.LCFI1643-.LCFI1642
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1644-.LCFI1643
	.byte	0xc4
	.byte	0x4
	.long	.LCFI1645-.LCFI1644
	.byte	0xc5
	.byte	0x4
	.long	.LCFI1646-.LCFI1645
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 7
	.align 8
.LEFDE856:
.LSFDE858:
	.long	.LEFDE858-.LASFDE858
.LASFDE858:
	.secrel32	.Lframe0
	.quad	.LFB5954
	.quad	.LFE5954-.LFB5954
	.byte	0x4
	.long	.LCFI1647-.LFB5954
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1648-.LCFI1647
	.byte	0xe
	.uleb128 0x18
	.byte	0x85
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1649-.LCFI1648
	.byte	0xe
	.uleb128 0x20
	.byte	0x84
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI1650-.LCFI1649
	.byte	0xe
	.uleb128 0x28
	.byte	0x83
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI1651-.LCFI1650
	.byte	0xe
	.uleb128 0x80
	.byte	0x4
	.long	.LCFI1652-.LCFI1651
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x30
	.byte	0x4
	.long	.LCFI1653-.LCFI1652
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1654-.LCFI1653
	.byte	0xc4
	.byte	0x4
	.long	.LCFI1655-.LCFI1654
	.byte	0xc5
	.byte	0x4
	.long	.LCFI1656-.LCFI1655
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 7
	.align 8
.LEFDE858:
.LSFDE860:
	.long	.LEFDE860-.LASFDE860
.LASFDE860:
	.secrel32	.Lframe0
	.quad	.LFB5955
	.quad	.LFE5955-.LFB5955
	.byte	0x4
	.long	.LCFI1657-.LFB5955
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1658-.LCFI1657
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1659-.LCFI1658
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE860:
.LSFDE862:
	.long	.LEFDE862-.LASFDE862
.LASFDE862:
	.secrel32	.Lframe0
	.quad	.LFB5956
	.quad	.LFE5956-.LFB5956
	.byte	0x4
	.long	.LCFI1660-.LFB5956
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1661-.LCFI1660
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1662-.LCFI1661
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI1663-.LCFI1662
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI1664-.LCFI1663
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1665-.LCFI1664
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE862:
.LSFDE864:
	.long	.LEFDE864-.LASFDE864
.LASFDE864:
	.secrel32	.Lframe0
	.quad	.LFB5957
	.quad	.LFE5957-.LFB5957
	.byte	0x4
	.long	.LCFI1666-.LFB5957
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1667-.LCFI1666
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1668-.LCFI1667
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE864:
.LSFDE866:
	.long	.LEFDE866-.LASFDE866
.LASFDE866:
	.secrel32	.Lframe0
	.quad	.LFB5960
	.quad	.LFE5960-.LFB5960
	.byte	0x4
	.long	.LCFI1669-.LFB5960
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1670-.LCFI1669
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1671-.LCFI1670
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE866:
.LSFDE868:
	.long	.LEFDE868-.LASFDE868
.LASFDE868:
	.secrel32	.Lframe0
	.quad	.LFB5961
	.quad	.LFE5961-.LFB5961
	.byte	0x4
	.long	.LCFI1672-.LFB5961
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1673-.LCFI1672
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1674-.LCFI1673
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE868:
.LSFDE870:
	.long	.LEFDE870-.LASFDE870
.LASFDE870:
	.secrel32	.Lframe0
	.quad	.LFB5962
	.quad	.LFE5962-.LFB5962
	.byte	0x4
	.long	.LCFI1675-.LFB5962
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1676-.LCFI1675
	.byte	0xe
	.uleb128 0x18
	.byte	0x84
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1677-.LCFI1676
	.byte	0xe
	.uleb128 0x20
	.byte	0x83
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI1678-.LCFI1677
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI1679-.LCFI1678
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI1680-.LCFI1679
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1681-.LCFI1680
	.byte	0xc4
	.byte	0x4
	.long	.LCFI1682-.LCFI1681
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 1
	.align 8
.LEFDE870:
.LSFDE872:
	.long	.LEFDE872-.LASFDE872
.LASFDE872:
	.secrel32	.Lframe0
	.quad	.LFB5964
	.quad	.LFE5964-.LFB5964
	.byte	0x4
	.long	.LCFI1683-.LFB5964
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1684-.LCFI1683
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1685-.LCFI1684
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE872:
.LSFDE874:
	.long	.LEFDE874-.LASFDE874
.LASFDE874:
	.secrel32	.Lframe0
	.quad	.LFB5965
	.quad	.LFE5965-.LFB5965
	.byte	0x4
	.long	.LCFI1686-.LFB5965
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1687-.LCFI1686
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1688-.LCFI1687
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE874:
.LSFDE876:
	.long	.LEFDE876-.LASFDE876
.LASFDE876:
	.secrel32	.Lframe0
	.quad	.LFB5966
	.quad	.LFE5966-.LFB5966
	.byte	0x4
	.long	.LCFI1689-.LFB5966
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1690-.LCFI1689
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1691-.LCFI1690
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE876:
.LSFDE878:
	.long	.LEFDE878-.LASFDE878
.LASFDE878:
	.secrel32	.Lframe0
	.quad	.LFB5967
	.quad	.LFE5967-.LFB5967
	.byte	0x4
	.long	.LCFI1692-.LFB5967
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1693-.LCFI1692
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1694-.LCFI1693
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE878:
.LSFDE880:
	.long	.LEFDE880-.LASFDE880
.LASFDE880:
	.secrel32	.Lframe0
	.quad	.LFB5969
	.quad	.LFE5969-.LFB5969
	.byte	0x4
	.long	.LCFI1695-.LFB5969
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1696-.LCFI1695
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1697-.LCFI1696
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.long	.LCFI1698-.LCFI1697
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI1699-.LCFI1698
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1700-.LCFI1699
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 5
	.align 8
.LEFDE880:
.LSFDE882:
	.long	.LEFDE882-.LASFDE882
.LASFDE882:
	.secrel32	.Lframe0
	.quad	.LFB5970
	.quad	.LFE5970-.LFB5970
	.byte	0x4
	.long	.LCFI1701-.LFB5970
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1702-.LCFI1701
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1703-.LCFI1702
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE882:
.LSFDE884:
	.long	.LEFDE884-.LASFDE884
.LASFDE884:
	.secrel32	.Lframe0
	.quad	.LFB5972
	.quad	.LFE5972-.LFB5972
	.byte	0x4
	.long	.LCFI1704-.LFB5972
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1705-.LCFI1704
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1706-.LCFI1705
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE884:
.LSFDE886:
	.long	.LEFDE886-.LASFDE886
.LASFDE886:
	.secrel32	.Lframe0
	.quad	.LFB5971
	.quad	.LFE5971-.LFB5971
	.byte	0x4
	.long	.LCFI1707-.LFB5971
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1708-.LCFI1707
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1709-.LCFI1708
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE886:
.LSFDE888:
	.long	.LEFDE888-.LASFDE888
.LASFDE888:
	.secrel32	.Lframe0
	.quad	.LFB5973
	.quad	.LFE5973-.LFB5973
	.byte	0x4
	.long	.LCFI1710-.LFB5973
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1711-.LCFI1710
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1712-.LCFI1711
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.long	.LCFI1713-.LCFI1712
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI1714-.LCFI1713
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1715-.LCFI1714
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 5
	.align 8
.LEFDE888:
.LSFDE890:
	.long	.LEFDE890-.LASFDE890
.LASFDE890:
	.secrel32	.Lframe0
	.quad	.LFB5974
	.quad	.LFE5974-.LFB5974
	.byte	0x4
	.long	.LCFI1716-.LFB5974
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1717-.LCFI1716
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1718-.LCFI1717
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE890:
.LSFDE892:
	.long	.LEFDE892-.LASFDE892
.LASFDE892:
	.secrel32	.Lframe0
	.quad	.LFB5975
	.quad	.LFE5975-.LFB5975
	.byte	0x4
	.long	.LCFI1719-.LFB5975
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1720-.LCFI1719
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1721-.LCFI1720
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE892:
.LSFDE894:
	.long	.LEFDE894-.LASFDE894
.LASFDE894:
	.secrel32	.Lframe0
	.quad	.LFB5984
	.quad	.LFE5984-.LFB5984
	.byte	0x4
	.long	.LCFI1722-.LFB5984
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1723-.LCFI1722
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1724-.LCFI1723
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE894:
.LSFDE896:
	.long	.LEFDE896-.LASFDE896
.LASFDE896:
	.secrel32	.Lframe0
	.quad	.LFB5985
	.quad	.LFE5985-.LFB5985
	.byte	0x4
	.long	.LCFI1725-.LFB5985
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1726-.LCFI1725
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1727-.LCFI1726
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE896:
.LSFDE898:
	.long	.LEFDE898-.LASFDE898
.LASFDE898:
	.secrel32	.Lframe0
	.quad	.LFB5987
	.quad	.LFE5987-.LFB5987
	.byte	0x4
	.long	.LCFI1728-.LFB5987
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1729-.LCFI1728
	.byte	0xe
	.uleb128 0x18
	.byte	0x85
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1730-.LCFI1729
	.byte	0xe
	.uleb128 0x20
	.byte	0x84
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI1731-.LCFI1730
	.byte	0xe
	.uleb128 0x28
	.byte	0x83
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI1732-.LCFI1731
	.byte	0xe
	.uleb128 0x80
	.byte	0x4
	.long	.LCFI1733-.LCFI1732
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x30
	.byte	0x4
	.long	.LCFI1734-.LCFI1733
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1735-.LCFI1734
	.byte	0xc4
	.byte	0x4
	.long	.LCFI1736-.LCFI1735
	.byte	0xc5
	.byte	0x4
	.long	.LCFI1737-.LCFI1736
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 7
	.align 8
.LEFDE898:
.LSFDE900:
	.long	.LEFDE900-.LASFDE900
.LASFDE900:
	.secrel32	.Lframe0
	.quad	.LFB5988
	.quad	.LFE5988-.LFB5988
	.byte	0x4
	.long	.LCFI1738-.LFB5988
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1739-.LCFI1738
	.byte	0xe
	.uleb128 0x18
	.byte	0x85
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1740-.LCFI1739
	.byte	0xe
	.uleb128 0x20
	.byte	0x84
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI1741-.LCFI1740
	.byte	0xe
	.uleb128 0x28
	.byte	0x83
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI1742-.LCFI1741
	.byte	0xe
	.uleb128 0x80
	.byte	0x4
	.long	.LCFI1743-.LCFI1742
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x30
	.byte	0x4
	.long	.LCFI1744-.LCFI1743
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1745-.LCFI1744
	.byte	0xc4
	.byte	0x4
	.long	.LCFI1746-.LCFI1745
	.byte	0xc5
	.byte	0x4
	.long	.LCFI1747-.LCFI1746
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 7
	.align 8
.LEFDE900:
.LSFDE902:
	.long	.LEFDE902-.LASFDE902
.LASFDE902:
	.secrel32	.Lframe0
	.quad	.LFB5989
	.quad	.LFE5989-.LFB5989
	.byte	0x4
	.long	.LCFI1748-.LFB5989
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1749-.LCFI1748
	.byte	0xe
	.uleb128 0x18
	.byte	0x85
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1750-.LCFI1749
	.byte	0xe
	.uleb128 0x20
	.byte	0x84
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI1751-.LCFI1750
	.byte	0xe
	.uleb128 0x28
	.byte	0x83
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI1752-.LCFI1751
	.byte	0xe
	.uleb128 0x80
	.byte	0x4
	.long	.LCFI1753-.LCFI1752
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x30
	.byte	0x4
	.long	.LCFI1754-.LCFI1753
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1755-.LCFI1754
	.byte	0xc4
	.byte	0x4
	.long	.LCFI1756-.LCFI1755
	.byte	0xc5
	.byte	0x4
	.long	.LCFI1757-.LCFI1756
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 7
	.align 8
.LEFDE902:
.LSFDE904:
	.long	.LEFDE904-.LASFDE904
.LASFDE904:
	.secrel32	.Lframe0
	.quad	.LFB5990
	.quad	.LFE5990-.LFB5990
	.byte	0x4
	.long	.LCFI1758-.LFB5990
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1759-.LCFI1758
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1760-.LCFI1759
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE904:
.LSFDE906:
	.long	.LEFDE906-.LASFDE906
.LASFDE906:
	.secrel32	.Lframe0
	.quad	.LFB5991
	.quad	.LFE5991-.LFB5991
	.byte	0x4
	.long	.LCFI1761-.LFB5991
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1762-.LCFI1761
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1763-.LCFI1762
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE906:
.LSFDE908:
	.long	.LEFDE908-.LASFDE908
.LASFDE908:
	.secrel32	.Lframe0
	.quad	.LFB5992
	.quad	.LFE5992-.LFB5992
	.byte	0x4
	.long	.LCFI1764-.LFB5992
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1765-.LCFI1764
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1766-.LCFI1765
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE908:
.LSFDE910:
	.long	.LEFDE910-.LASFDE910
.LASFDE910:
	.secrel32	.Lframe0
	.quad	.LFB5993
	.quad	.LFE5993-.LFB5993
	.byte	0x4
	.long	.LCFI1767-.LFB5993
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1768-.LCFI1767
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1769-.LCFI1768
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE910:
.LSFDE912:
	.long	.LEFDE912-.LASFDE912
.LASFDE912:
	.secrel32	.Lframe0
	.quad	.LFB5994
	.quad	.LFE5994-.LFB5994
	.byte	0x4
	.long	.LCFI1770-.LFB5994
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1771-.LCFI1770
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1772-.LCFI1771
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE912:
.LSFDE914:
	.long	.LEFDE914-.LASFDE914
.LASFDE914:
	.secrel32	.Lframe0
	.quad	.LFB5995
	.quad	.LFE5995-.LFB5995
	.byte	0x4
	.long	.LCFI1773-.LFB5995
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1774-.LCFI1773
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1775-.LCFI1774
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE914:
.LSFDE916:
	.long	.LEFDE916-.LASFDE916
.LASFDE916:
	.secrel32	.Lframe0
	.quad	.LFB5996
	.quad	.LFE5996-.LFB5996
	.byte	0x4
	.long	.LCFI1776-.LFB5996
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1777-.LCFI1776
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1778-.LCFI1777
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE916:
.LSFDE918:
	.long	.LEFDE918-.LASFDE918
.LASFDE918:
	.secrel32	.Lframe0
	.quad	.LFB5998
	.quad	.LFE5998-.LFB5998
	.byte	0x4
	.long	.LCFI1779-.LFB5998
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1780-.LCFI1779
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1781-.LCFI1780
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE918:
.LSFDE920:
	.long	.LEFDE920-.LASFDE920
.LASFDE920:
	.secrel32	.Lframe0
	.quad	.LFB5999
	.quad	.LFE5999-.LFB5999
	.byte	0x4
	.long	.LCFI1782-.LFB5999
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1783-.LCFI1782
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1784-.LCFI1783
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE920:
.LSFDE922:
	.long	.LEFDE922-.LASFDE922
.LASFDE922:
	.secrel32	.Lframe0
	.quad	.LFB6000
	.quad	.LFE6000-.LFB6000
	.byte	0x4
	.long	.LCFI1785-.LFB6000
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1786-.LCFI1785
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1787-.LCFI1786
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI1788-.LCFI1787
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI1789-.LCFI1788
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1790-.LCFI1789
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE922:
.LSFDE924:
	.long	.LEFDE924-.LASFDE924
.LASFDE924:
	.secrel32	.Lframe0
	.quad	.LFB5997
	.quad	.LFE5997-.LFB5997
	.byte	0x4
	.long	.LCFI1791-.LFB5997
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1792-.LCFI1791
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1793-.LCFI1792
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE924:
.LSFDE926:
	.long	.LEFDE926-.LASFDE926
.LASFDE926:
	.secrel32	.Lframe0
	.quad	.LFB6001
	.quad	.LFE6001-.LFB6001
	.byte	0x4
	.long	.LCFI1794-.LFB6001
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1795-.LCFI1794
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1796-.LCFI1795
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE926:
.LSFDE928:
	.long	.LEFDE928-.LASFDE928
.LASFDE928:
	.secrel32	.Lframe0
	.quad	.LFB6002
	.quad	.LFE6002-.LFB6002
	.byte	0x4
	.long	.LCFI1797-.LFB6002
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1798-.LCFI1797
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1799-.LCFI1798
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE928:
.LSFDE930:
	.long	.LEFDE930-.LASFDE930
.LASFDE930:
	.secrel32	.Lframe0
	.quad	.LFB6003
	.quad	.LFE6003-.LFB6003
	.byte	0x4
	.long	.LCFI1800-.LFB6003
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1801-.LCFI1800
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1802-.LCFI1801
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE930:
.LSFDE932:
	.long	.LEFDE932-.LASFDE932
.LASFDE932:
	.secrel32	.Lframe0
	.quad	.LFB6007
	.quad	.LFE6007-.LFB6007
	.byte	0x4
	.long	.LCFI1803-.LFB6007
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1804-.LCFI1803
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1805-.LCFI1804
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE932:
.LSFDE934:
	.long	.LEFDE934-.LASFDE934
.LASFDE934:
	.secrel32	.Lframe0
	.quad	.LFB6004
	.quad	.LFE6004-.LFB6004
	.byte	0x4
	.long	.LCFI1806-.LFB6004
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1807-.LCFI1806
	.byte	0xe
	.uleb128 0x18
	.byte	0x85
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1808-.LCFI1807
	.byte	0xe
	.uleb128 0x20
	.byte	0x84
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI1809-.LCFI1808
	.byte	0xe
	.uleb128 0x28
	.byte	0x83
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI1810-.LCFI1809
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.long	.LCFI1811-.LCFI1810
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x30
	.byte	0x4
	.long	.LCFI1812-.LCFI1811
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1813-.LCFI1812
	.byte	0xc4
	.byte	0x4
	.long	.LCFI1814-.LCFI1813
	.byte	0xc5
	.byte	0x4
	.long	.LCFI1815-.LCFI1814
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 1
	.align 8
.LEFDE934:
.LSFDE936:
	.long	.LEFDE936-.LASFDE936
.LASFDE936:
	.secrel32	.Lframe0
	.quad	.LFB6008
	.quad	.LFE6008-.LFB6008
	.byte	0x4
	.long	.LCFI1816-.LFB6008
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1817-.LCFI1816
	.byte	0xe
	.uleb128 0x18
	.byte	0x85
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1818-.LCFI1817
	.byte	0xe
	.uleb128 0x20
	.byte	0x84
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI1819-.LCFI1818
	.byte	0xe
	.uleb128 0x28
	.byte	0x83
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI1820-.LCFI1819
	.byte	0xe
	.uleb128 0x70
	.byte	0x4
	.long	.LCFI1821-.LCFI1820
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x30
	.byte	0x4
	.long	.LCFI1822-.LCFI1821
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1823-.LCFI1822
	.byte	0xc4
	.byte	0x4
	.long	.LCFI1824-.LCFI1823
	.byte	0xc5
	.byte	0x4
	.long	.LCFI1825-.LCFI1824
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 5
	.align 8
.LEFDE936:
.LSFDE938:
	.long	.LEFDE938-.LASFDE938
.LASFDE938:
	.secrel32	.Lframe0
	.quad	.LFB6009
	.quad	.LFE6009-.LFB6009
	.byte	0x4
	.long	.LCFI1826-.LFB6009
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1827-.LCFI1826
	.byte	0xe
	.uleb128 0x18
	.byte	0x85
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1828-.LCFI1827
	.byte	0xe
	.uleb128 0x20
	.byte	0x84
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI1829-.LCFI1828
	.byte	0xe
	.uleb128 0x28
	.byte	0x83
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI1830-.LCFI1829
	.byte	0xe
	.uleb128 0x80
	.byte	0x4
	.long	.LCFI1831-.LCFI1830
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x30
	.byte	0x4
	.long	.LCFI1832-.LCFI1831
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1833-.LCFI1832
	.byte	0xc4
	.byte	0x4
	.long	.LCFI1834-.LCFI1833
	.byte	0xc5
	.byte	0x4
	.long	.LCFI1835-.LCFI1834
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 7
	.align 8
.LEFDE938:
.LSFDE940:
	.long	.LEFDE940-.LASFDE940
.LASFDE940:
	.secrel32	.Lframe0
	.quad	.LFB6010
	.quad	.LFE6010-.LFB6010
	.byte	0x4
	.long	.LCFI1836-.LFB6010
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1837-.LCFI1836
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1838-.LCFI1837
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE940:
.LSFDE942:
	.long	.LEFDE942-.LASFDE942
.LASFDE942:
	.secrel32	.Lframe0
	.quad	.LFB6011
	.quad	.LFE6011-.LFB6011
	.byte	0x4
	.long	.LCFI1839-.LFB6011
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1840-.LCFI1839
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1841-.LCFI1840
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE942:
.LSFDE944:
	.long	.LEFDE944-.LASFDE944
.LASFDE944:
	.secrel32	.Lframe0
	.quad	.LFB6012
	.quad	.LFE6012-.LFB6012
	.byte	0x4
	.long	.LCFI1842-.LFB6012
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1843-.LCFI1842
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1844-.LCFI1843
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE944:
.LSFDE946:
	.long	.LEFDE946-.LASFDE946
.LASFDE946:
	.secrel32	.Lframe0
	.quad	.LFB6013
	.quad	.LFE6013-.LFB6013
	.byte	0x4
	.long	.LCFI1845-.LFB6013
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1846-.LCFI1845
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1847-.LCFI1846
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE946:
.LSFDE948:
	.long	.LEFDE948-.LASFDE948
.LASFDE948:
	.secrel32	.Lframe0
	.quad	.LFB6014
	.quad	.LFE6014-.LFB6014
	.byte	0x4
	.long	.LCFI1848-.LFB6014
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1849-.LCFI1848
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1850-.LCFI1849
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE948:
.LSFDE950:
	.long	.LEFDE950-.LASFDE950
.LASFDE950:
	.secrel32	.Lframe0
	.quad	.LFB6015
	.quad	.LFE6015-.LFB6015
	.byte	0x4
	.long	.LCFI1851-.LFB6015
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1852-.LCFI1851
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1853-.LCFI1852
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE950:
.LSFDE952:
	.long	.LEFDE952-.LASFDE952
.LASFDE952:
	.secrel32	.Lframe0
	.quad	.LFB6016
	.quad	.LFE6016-.LFB6016
	.byte	0x4
	.long	.LCFI1854-.LFB6016
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1855-.LCFI1854
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1856-.LCFI1855
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE952:
.LSFDE954:
	.long	.LEFDE954-.LASFDE954
.LASFDE954:
	.secrel32	.Lframe0
	.quad	.LFB6017
	.quad	.LFE6017-.LFB6017
	.byte	0x4
	.long	.LCFI1857-.LFB6017
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1858-.LCFI1857
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1859-.LCFI1858
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE954:
.LSFDE956:
	.long	.LEFDE956-.LASFDE956
.LASFDE956:
	.secrel32	.Lframe0
	.quad	.LFB6018
	.quad	.LFE6018-.LFB6018
	.byte	0x4
	.long	.LCFI1860-.LFB6018
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1861-.LCFI1860
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1862-.LCFI1861
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE956:
.LSFDE958:
	.long	.LEFDE958-.LASFDE958
.LASFDE958:
	.secrel32	.Lframe0
	.quad	.LFB6019
	.quad	.LFE6019-.LFB6019
	.byte	0x4
	.long	.LCFI1863-.LFB6019
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1864-.LCFI1863
	.byte	0xe
	.uleb128 0x18
	.byte	0x83
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1865-.LCFI1864
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI1866-.LCFI1865
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI1867-.LCFI1866
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1868-.LCFI1867
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 3
	.align 8
.LEFDE958:
.LSFDE960:
	.long	.LEFDE960-.LASFDE960
.LASFDE960:
	.secrel32	.Lframe0
	.quad	.LFB6020
	.quad	.LFE6020-.LFB6020
	.byte	0x4
	.long	.LCFI1869-.LFB6020
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1870-.LCFI1869
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1871-.LCFI1870
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE960:
.LSFDE962:
	.long	.LEFDE962-.LASFDE962
.LASFDE962:
	.secrel32	.Lframe0
	.quad	.LFB6021
	.quad	.LFE6021-.LFB6021
	.byte	0x4
	.long	.LCFI1872-.LFB6021
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1873-.LCFI1872
	.byte	0xe
	.uleb128 0x18
	.byte	0x84
	.uleb128 0x3
	.byte	0x4
	.long	.LCFI1874-.LCFI1873
	.byte	0xe
	.uleb128 0x20
	.byte	0x83
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI1875-.LCFI1874
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.long	.LCFI1876-.LCFI1875
	.byte	0xc
	.uleb128 0x6
	.uleb128 0x20
	.byte	0x4
	.long	.LCFI1877-.LCFI1876
	.byte	0xc3
	.byte	0x4
	.long	.LCFI1878-.LCFI1877
	.byte	0xc4
	.byte	0x4
	.long	.LCFI1879-.LCFI1878
	.byte	0xc6
	.byte	0x12
	.uleb128 0x7
	.sleb128 1
	.align 8
.LEFDE962:
.LSFDE964:
	.long	.LEFDE964-.LASFDE964
.LASFDE964:
	.secrel32	.Lframe0
	.quad	.LFB6023
	.quad	.LFE6023-.LFB6023
	.byte	0x4
	.long	.LCFI1880-.LFB6023
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1881-.LCFI1880
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1882-.LCFI1881
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE964:
.LSFDE966:
	.long	.LEFDE966-.LASFDE966
.LASFDE966:
	.secrel32	.Lframe0
	.quad	.LFB6022
	.quad	.LFE6022-.LFB6022
	.byte	0x4
	.long	.LCFI1883-.LFB6022
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1884-.LCFI1883
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1885-.LCFI1884
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE966:
.LSFDE968:
	.long	.LEFDE968-.LASFDE968
.LASFDE968:
	.secrel32	.Lframe0
	.quad	.LFB6026
	.quad	.LFE6026-.LFB6026
	.byte	0x4
	.long	.LCFI1886-.LFB6026
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1887-.LCFI1886
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1888-.LCFI1887
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE968:
.LSFDE970:
	.long	.LEFDE970-.LASFDE970
.LASFDE970:
	.secrel32	.Lframe0
	.quad	.LFB6027
	.quad	.LFE6027-.LFB6027
	.byte	0x4
	.long	.LCFI1889-.LFB6027
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1890-.LCFI1889
	.byte	0xd
	.uleb128 0x6
	.byte	0x4
	.long	.LCFI1891-.LCFI1890
	.byte	0xc6
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.align 8
.LEFDE970:
	.text
.Letext0:
	.file 25 "c:/users/pluto/scoop/apps/gcc/current/x86_64-w64-mingw32/include/stdarg.h"
	.file 26 "c:/users/pluto/scoop/apps/gcc/current/include/c++/11.2.0/cmath"
	.file 27 "c:/users/pluto/scoop/apps/gcc/current/include/c++/11.2.0/x86_64-w64-mingw32/bits/c++config.h"
	.file 28 "c:/users/pluto/scoop/apps/gcc/current/include/c++/11.2.0/concepts"
	.file 29 "c:/users/pluto/scoop/apps/gcc/current/include/c++/11.2.0/bits/iterator_concepts.h"
	.file 30 "c:/users/pluto/scoop/apps/gcc/current/include/c++/11.2.0/compare"
	.file 31 "c:/users/pluto/scoop/apps/gcc/current/include/c++/11.2.0/debug/debug.h"
	.file 32 "c:/users/pluto/scoop/apps/gcc/current/include/c++/11.2.0/bits/std_abs.h"
	.file 33 "c:/users/pluto/scoop/apps/gcc/current/include/c++/11.2.0/cstdint"
	.file 34 "c:/users/pluto/scoop/apps/gcc/current/include/c++/11.2.0/cstdlib"
	.file 35 "c:/users/pluto/scoop/apps/gcc/current/include/c++/11.2.0/cstdio"
	.file 36 "c:/users/pluto/scoop/apps/gcc/current/include/c++/11.2.0/initializer_list"
	.file 37 "c:/users/pluto/scoop/apps/gcc/current/include/c++/11.2.0/cwchar"
	.file 38 "c:/users/pluto/scoop/apps/gcc/current/include/c++/11.2.0/clocale"
	.file 39 "c:/users/pluto/scoop/apps/gcc/current/include/c++/11.2.0/numbers"
	.file 40 "c:/users/pluto/scoop/apps/gcc/current/include/c++/11.2.0/bits/exception_ptr.h"
	.file 41 "c:/users/pluto/scoop/apps/gcc/current/include/c++/11.2.0/bits/algorithmfwd.h"
	.file 42 "c:/users/pluto/scoop/apps/gcc/current/include/c++/11.2.0/functional"
	.file 43 "c:/users/pluto/scoop/apps/gcc/current/include/c++/11.2.0/bits/functexcept.h"
	.file 44 "c:/users/pluto/scoop/apps/gcc/current/x86_64-w64-mingw32/include/corecrt.h"
	.file 45 "c:/users/pluto/scoop/apps/gcc/current/x86_64-w64-mingw32/include/locale.h"
	.file 46 "c:/users/pluto/scoop/apps/gcc/current/x86_64-w64-mingw32/include/math.h"
	.file 47 "c:/users/pluto/scoop/apps/gcc/current/x86_64-w64-mingw32/include/stdlib.h"
	.file 48 "c:/users/pluto/scoop/apps/gcc/current/include/c++/11.2.0/bits/ptr_traits.h"
	.file 49 "c:/users/pluto/scoop/apps/gcc/current/include/c++/11.2.0/math.h"
	.file 50 "c:/users/pluto/scoop/apps/gcc/current/x86_64-w64-mingw32/include/stdint.h"
	.file 51 "c:/users/pluto/scoop/apps/gcc/current/x86_64-w64-mingw32/include/wchar.h"
	.file 52 "c:/users/pluto/scoop/apps/gcc/current/x86_64-w64-mingw32/include/swprintf.inl"
	.file 53 "c:/users/pluto/scoop/apps/gcc/current/include/c++/11.2.0/pstl/execution_defs.h"
	.file 54 "c:/users/pluto/scoop/apps/gcc/current/include/c++/11.2.0/bits/ranges_cmp.h"
	.section	.debug_info,"dr"
.Ldebug_info0:
	.long	0x26bbf
	.word	0x5
	.byte	0x1
	.byte	0x8
	.secrel32	.Ldebug_abbrev0
	.uleb128 0x99
	.ascii "GNU C++20 11.2.0 -mtune=generic -march=x86-64 -g -O0 -std=c++20 -ffast-math\0"
	.byte	0x21
	.secrel32	.LASF0
	.secrel32	.LASF1
	.secrel32	.LLRL5
	.quad	0
	.secrel32	.Ldebug_line0
	.uleb128 0x22
	.ascii "__gnuc_va_list\0"
	.byte	0x19
	.byte	0x2d
	.byte	0x1b
	.long	0x8a
	.uleb128 0x9a
	.byte	0x8
	.ascii "__builtin_va_list\0"
	.long	0xa3
	.uleb128 0x33
	.byte	0x1
	.byte	0x6
	.ascii "char\0"
	.uleb128 0xa
	.long	0xa3
	.uleb128 0x22
	.ascii "va_list\0"
	.byte	0x19
	.byte	0x6b
	.byte	0x18
	.long	0x73
	.uleb128 0x7f
	.ascii "std\0"
	.word	0x116
	.long	0x14cb6
	.uleb128 0x28
	.byte	0x1a
	.word	0x429
	.byte	0xb
	.long	0x1953a
	.uleb128 0x28
	.byte	0x1a
	.word	0x42a
	.byte	0xb
	.long	0x19529
	.uleb128 0x26
	.ascii "integral_constant<bool, false>\0"
	.byte	0x1
	.byte	0x1
	.byte	0x39
	.byte	0xc
	.long	0x1d9
	.uleb128 0x1c
	.secrel32	.LASF2
	.byte	0x1
	.byte	0x3c
	.byte	0x2d
	.long	0x14cc6
	.uleb128 0x35
	.ascii "operator std::integral_constant<bool, false>::value_type\0"
	.byte	0x1
	.byte	0x3e
	.byte	0x11
	.ascii "_ZNKSt17integral_constantIbLb0EEcvbEv\0"
	.long	0x105
	.long	0x180
	.long	0x186
	.uleb128 0x2
	.long	0x1961b
	.byte	0
	.uleb128 0x3e
	.secrel32	.LASF3
	.byte	0x1
	.byte	0x43
	.byte	0x1c
	.ascii "_ZNKSt17integral_constantIbLb0EEclEv\0"
	.long	0x105
	.long	0x1bf
	.long	0x1c5
	.uleb128 0x2
	.long	0x1961b
	.byte	0
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x14cc6
	.uleb128 0x76
	.ascii "__v\0"
	.long	0x14cc6
	.byte	0
	.byte	0
	.uleb128 0xa
	.long	0xdd
	.uleb128 0x26
	.ascii "integral_constant<bool, true>\0"
	.byte	0x1
	.byte	0x1
	.byte	0x39
	.byte	0xc
	.long	0x2d8
	.uleb128 0x1c
	.secrel32	.LASF2
	.byte	0x1
	.byte	0x3c
	.byte	0x2d
	.long	0x14cc6
	.uleb128 0x35
	.ascii "operator std::integral_constant<bool, true>::value_type\0"
	.byte	0x1
	.byte	0x3e
	.byte	0x11
	.ascii "_ZNKSt17integral_constantIbLb1EEcvbEv\0"
	.long	0x205
	.long	0x27f
	.long	0x285
	.uleb128 0x2
	.long	0x19620
	.byte	0
	.uleb128 0x3e
	.secrel32	.LASF3
	.byte	0x1
	.byte	0x43
	.byte	0x1c
	.ascii "_ZNKSt17integral_constantIbLb1EEclEv\0"
	.long	0x205
	.long	0x2be
	.long	0x2c4
	.uleb128 0x2
	.long	0x19620
	.byte	0
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x14cc6
	.uleb128 0x76
	.ascii "__v\0"
	.long	0x14cc6
	.byte	0x1
	.byte	0
	.uleb128 0xa
	.long	0x1de
	.uleb128 0x22
	.ascii "false_type\0"
	.byte	0x1
	.byte	0x4e
	.byte	0x2d
	.long	0xdd
	.uleb128 0x46
	.ascii "size_t\0"
	.byte	0x1b
	.word	0x118
	.byte	0x1a
	.long	0x191a1
	.uleb128 0xa
	.long	0x2f0
	.uleb128 0x63
	.ascii "__swappable_details\0"
	.byte	0x1
	.word	0xa40
	.byte	0xd
	.uleb128 0x63
	.ascii "__swappable_with_details\0"
	.byte	0x1
	.word	0xa94
	.byte	0xd
	.uleb128 0x64
	.ascii "ranges\0"
	.byte	0x1c
	.byte	0xa5
	.byte	0xd
	.long	0x3a7
	.uleb128 0x5f
	.ascii "__cust_swap\0"
	.byte	0x1c
	.byte	0xa7
	.byte	0xf
	.uleb128 0x9b
	.ascii "__cust\0"
	.byte	0x1c
	.byte	0xe3
	.byte	0x16
	.uleb128 0x5f
	.ascii "__cust_imove\0"
	.byte	0x1d
	.byte	0x50
	.byte	0xf
	.uleb128 0x63
	.ascii "__cust_iswap\0"
	.byte	0x1d
	.word	0x31e
	.byte	0xd
	.uleb128 0x63
	.ascii "__cust_access\0"
	.byte	0x1d
	.word	0x3a1
	.byte	0x15
	.uleb128 0x9c
	.secrel32	.LASF4
	.byte	0x36
	.byte	0x40
	.byte	0xd
	.byte	0
	.uleb128 0x5f
	.ascii "__cmp_cat\0"
	.byte	0x1e
	.byte	0x31
	.byte	0xd
	.uleb128 0x9d
	.secrel32	.LASF4
	.byte	0x1c
	.byte	0x36
	.byte	0xd
	.long	0x3db
	.uleb128 0x1c
	.secrel32	.LASF5
	.byte	0x1d
	.byte	0xce
	.byte	0xd
	.long	0x3af7
	.uleb128 0x1c
	.secrel32	.LASF5
	.byte	0x1d
	.byte	0xce
	.byte	0xd
	.long	0x4170
	.byte	0
	.uleb128 0x63
	.ascii "__cmp_cust\0"
	.byte	0x1e
	.word	0x20e
	.byte	0xd
	.uleb128 0x77
	.ascii "__cmp_alg\0"
	.byte	0x1e
	.word	0x356
	.byte	0x14
	.uleb128 0x9e
	.ascii "input_iterator_tag\0"
	.byte	0x1
	.byte	0x18
	.byte	0x5d
	.byte	0xa
	.uleb128 0x26
	.ascii "forward_iterator_tag\0"
	.byte	0x1
	.byte	0x18
	.byte	0x63
	.byte	0xa
	.long	0x437
	.uleb128 0x39
	.long	0x3fa
	.byte	0
	.uleb128 0x26
	.ascii "bidirectional_iterator_tag\0"
	.byte	0x1
	.byte	0x18
	.byte	0x67
	.byte	0xa
	.long	0x461
	.uleb128 0x39
	.long	0x413
	.byte	0
	.uleb128 0x26
	.ascii "random_access_iterator_tag\0"
	.byte	0x1
	.byte	0x18
	.byte	0x6b
	.byte	0xa
	.long	0x48b
	.uleb128 0x39
	.long	0x437
	.byte	0
	.uleb128 0x9f
	.ascii "align_val_t\0"
	.byte	0x7
	.byte	0x8
	.long	0x191a1
	.byte	0x2
	.byte	0x59
	.byte	0xe
	.uleb128 0x5f
	.ascii "__debug\0"
	.byte	0x1f
	.byte	0x32
	.byte	0xd
	.uleb128 0x2f
	.ascii "__copy_move<false, false, std::random_access_iterator_tag>\0"
	.byte	0x1
	.byte	0x3
	.word	0x177
	.byte	0xc
	.long	0xa14
	.uleb128 0x8
	.ascii "__copy_m<int const*, int*>\0"
	.byte	0x3
	.word	0x17c
	.byte	0x2
	.ascii "_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKiPiEET0_T_S7_S6_\0"
	.long	0x19287
	.long	0x594
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x1c5e9
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x19287
	.uleb128 0x1
	.long	0x1c5e9
	.uleb128 0x1
	.long	0x1c5e9
	.uleb128 0x1
	.long	0x19287
	.byte	0
	.uleb128 0x8
	.ascii "__copy_m<int*, int*>\0"
	.byte	0x3
	.word	0x17c
	.byte	0x2
	.ascii "_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPiS3_EET0_T_S5_S4_\0"
	.long	0x19287
	.long	0x62f
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x19287
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x19287
	.uleb128 0x1
	.long	0x19287
	.uleb128 0x1
	.long	0x19287
	.uleb128 0x1
	.long	0x19287
	.byte	0
	.uleb128 0x8
	.ascii "__copy_m<std::_Bit_iterator, std::_Bit_iterator>\0"
	.byte	0x3
	.word	0x17c
	.byte	0x2
	.ascii "_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt13_Bit_iteratorS3_EET0_T_S5_S4_\0"
	.long	0x3290
	.long	0x6f5
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x3290
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x3290
	.uleb128 0x1
	.long	0x3290
	.uleb128 0x1
	.long	0x3290
	.uleb128 0x1
	.long	0x3290
	.byte	0
	.uleb128 0x8
	.ascii "__copy_m<std::_Bit_const_iterator, std::_Bit_iterator>\0"
	.byte	0x3
	.word	0x17c
	.byte	0x2
	.ascii "_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_\0"
	.long	0x3290
	.long	0x7d5
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x3524
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x3290
	.uleb128 0x1
	.long	0x3524
	.uleb128 0x1
	.long	0x3524
	.uleb128 0x1
	.long	0x3290
	.byte	0
	.uleb128 0x8
	.ascii "__copy_m<long unsigned int*, long unsigned int*>\0"
	.byte	0x3
	.word	0x17c
	.byte	0x2
	.ascii "_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPmS3_EET0_T_S5_S4_\0"
	.long	0x1bd4d
	.long	0x88c
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x1bd4d
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x1bd4d
	.uleb128 0x1
	.long	0x1bd4d
	.uleb128 0x1
	.long	0x1bd4d
	.uleb128 0x1
	.long	0x1bd4d
	.byte	0
	.uleb128 0x8
	.ascii "__copy_m<const DDT::Node*, DDT::Node*>\0"
	.byte	0x3
	.word	0x17c
	.byte	0x2
	.ascii "_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKN3DDT4NodeEPS4_EET0_T_S9_S8_\0"
	.long	0x1c4db
	.long	0x945
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x1c50d
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c50d
	.uleb128 0x1
	.long	0x1c50d
	.uleb128 0x1
	.long	0x1c4db
	.byte	0
	.uleb128 0x8
	.ascii "__copy_m<DDT::Node*, DDT::Node*>\0"
	.byte	0x3
	.word	0x17c
	.byte	0x2
	.ascii "_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPN3DDT4NodeES5_EET0_T_S7_S6_\0"
	.long	0x1c4db
	.long	0x9f6
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x1c4db
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c4db
	.byte	0
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x16
	.secrel32	.LASF7
	.long	0x14cc6
	.byte	0
	.uleb128 0x4
	.secrel32	.LASF8
	.long	0x461
	.byte	0
	.uleb128 0x2f
	.ascii "__copy_move<true, false, std::random_access_iterator_tag>\0"
	.byte	0x1
	.byte	0x3
	.word	0x18b
	.byte	0xc
	.long	0xb1a
	.uleb128 0x8
	.ascii "__copy_m<Blorb*, Blorb*>\0"
	.byte	0x3
	.word	0x190
	.byte	0x2
	.ascii "_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIP5BlorbS4_EET0_T_S6_S5_\0"
	.long	0x1c92b
	.long	0xafc
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x1c92b
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x1c92b
	.uleb128 0x1
	.long	0x1c92b
	.uleb128 0x1
	.long	0x1c92b
	.uleb128 0x1
	.long	0x1c92b
	.byte	0
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0x1
	.uleb128 0x16
	.secrel32	.LASF7
	.long	0x14cc6
	.byte	0
	.uleb128 0x4
	.secrel32	.LASF8
	.long	0x461
	.byte	0
	.uleb128 0x2f
	.ascii "__copy_move_backward<false, false, std::random_access_iterator_tag>\0"
	.byte	0x1
	.byte	0x3
	.word	0x2b4
	.byte	0xc
	.long	0xc60
	.uleb128 0x8
	.ascii "__copy_move_b<std::_Bit_iterator, std::_Bit_iterator>\0"
	.byte	0x3
	.word	0x2b9
	.byte	0x2
	.ascii "_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bISt13_Bit_iteratorS3_EET0_T_S5_S4_\0"
	.long	0x3290
	.long	0xc42
	.uleb128 0x4
	.secrel32	.LASF9
	.long	0x3290
	.uleb128 0x4
	.secrel32	.LASF10
	.long	0x3290
	.uleb128 0x1
	.long	0x3290
	.uleb128 0x1
	.long	0x3290
	.uleb128 0x1
	.long	0x3290
	.byte	0
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x16
	.secrel32	.LASF7
	.long	0x14cc6
	.byte	0
	.uleb128 0x4
	.secrel32	.LASF8
	.long	0x461
	.byte	0
	.uleb128 0x1e
	.ascii "abs\0"
	.byte	0x20
	.byte	0x4f
	.byte	0x3
	.ascii "_ZSt3abse\0"
	.long	0x19205
	.long	0xc80
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x1e
	.ascii "abs\0"
	.byte	0x20
	.byte	0x4b
	.byte	0x3
	.ascii "_ZSt3absf\0"
	.long	0x1921e
	.long	0xca0
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x1e
	.ascii "abs\0"
	.byte	0x20
	.byte	0x47
	.byte	0x3
	.ascii "_ZSt3absd\0"
	.long	0x19214
	.long	0xcc0
	.uleb128 0x1
	.long	0x19214
	.byte	0
	.uleb128 0x1e
	.ascii "abs\0"
	.byte	0x20
	.byte	0x3d
	.byte	0x3
	.ascii "_ZSt3absx\0"
	.long	0x191f4
	.long	0xce0
	.uleb128 0x1
	.long	0x191f4
	.byte	0
	.uleb128 0x1e
	.ascii "abs\0"
	.byte	0x20
	.byte	0x38
	.byte	0x3
	.ascii "_ZSt3absl\0"
	.long	0x191e8
	.long	0xd00
	.uleb128 0x1
	.long	0x191e8
	.byte	0
	.uleb128 0x1e
	.ascii "acos\0"
	.byte	0x1a
	.byte	0x5b
	.byte	0x3
	.ascii "_ZSt4acose\0"
	.long	0x19205
	.long	0xd22
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x1e
	.ascii "acos\0"
	.byte	0x1a
	.byte	0x57
	.byte	0x3
	.ascii "_ZSt4acosf\0"
	.long	0x1921e
	.long	0xd44
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x1e
	.ascii "asin\0"
	.byte	0x1a
	.byte	0x6e
	.byte	0x3
	.ascii "_ZSt4asine\0"
	.long	0x19205
	.long	0xd66
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x1e
	.ascii "asin\0"
	.byte	0x1a
	.byte	0x6a
	.byte	0x3
	.ascii "_ZSt4asinf\0"
	.long	0x1921e
	.long	0xd88
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x1e
	.ascii "atan\0"
	.byte	0x1a
	.byte	0x81
	.byte	0x3
	.ascii "_ZSt4atane\0"
	.long	0x19205
	.long	0xdaa
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x1e
	.ascii "atan\0"
	.byte	0x1a
	.byte	0x7d
	.byte	0x3
	.ascii "_ZSt4atanf\0"
	.long	0x1921e
	.long	0xdcc
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x1e
	.ascii "atan2\0"
	.byte	0x1a
	.byte	0x94
	.byte	0x3
	.ascii "_ZSt5atan2ee\0"
	.long	0x19205
	.long	0xdf6
	.uleb128 0x1
	.long	0x19205
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x1e
	.ascii "atan2\0"
	.byte	0x1a
	.byte	0x90
	.byte	0x3
	.ascii "_ZSt5atan2ff\0"
	.long	0x1921e
	.long	0xe20
	.uleb128 0x1
	.long	0x1921e
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x1e
	.ascii "cos\0"
	.byte	0x1a
	.byte	0xbc
	.byte	0x3
	.ascii "_ZSt3cose\0"
	.long	0x19205
	.long	0xe40
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x1e
	.ascii "cos\0"
	.byte	0x1a
	.byte	0xb8
	.byte	0x3
	.ascii "_ZSt3cosf\0"
	.long	0x1921e
	.long	0xe60
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x8
	.ascii "sin\0"
	.byte	0x1a
	.word	0x1ad
	.byte	0x3
	.ascii "_ZSt3sine\0"
	.long	0x19205
	.long	0xe81
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x8
	.ascii "sin\0"
	.byte	0x1a
	.word	0x1a9
	.byte	0x3
	.ascii "_ZSt3sinf\0"
	.long	0x1921e
	.long	0xea2
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x8
	.ascii "tan\0"
	.byte	0x1a
	.word	0x1e6
	.byte	0x3
	.ascii "_ZSt3tane\0"
	.long	0x19205
	.long	0xec3
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x8
	.ascii "tan\0"
	.byte	0x1a
	.word	0x1e2
	.byte	0x3
	.ascii "_ZSt3tanf\0"
	.long	0x1921e
	.long	0xee4
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x1e
	.ascii "cosh\0"
	.byte	0x1a
	.byte	0xcf
	.byte	0x3
	.ascii "_ZSt4coshe\0"
	.long	0x19205
	.long	0xf06
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x1e
	.ascii "cosh\0"
	.byte	0x1a
	.byte	0xcb
	.byte	0x3
	.ascii "_ZSt4coshf\0"
	.long	0x1921e
	.long	0xf28
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x8
	.ascii "sinh\0"
	.byte	0x1a
	.word	0x1c0
	.byte	0x3
	.ascii "_ZSt4sinhe\0"
	.long	0x19205
	.long	0xf4b
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x8
	.ascii "sinh\0"
	.byte	0x1a
	.word	0x1bc
	.byte	0x3
	.ascii "_ZSt4sinhf\0"
	.long	0x1921e
	.long	0xf6e
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x8
	.ascii "tanh\0"
	.byte	0x1a
	.word	0x1f9
	.byte	0x3
	.ascii "_ZSt4tanhe\0"
	.long	0x19205
	.long	0xf91
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x8
	.ascii "tanh\0"
	.byte	0x1a
	.word	0x1f5
	.byte	0x3
	.ascii "_ZSt4tanhf\0"
	.long	0x1921e
	.long	0xfb4
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x1e
	.ascii "exp\0"
	.byte	0x1a
	.byte	0xe2
	.byte	0x3
	.ascii "_ZSt3expe\0"
	.long	0x19205
	.long	0xfd4
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x1e
	.ascii "exp\0"
	.byte	0x1a
	.byte	0xde
	.byte	0x3
	.ascii "_ZSt3expf\0"
	.long	0x1921e
	.long	0xff4
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x8
	.ascii "frexp\0"
	.byte	0x1a
	.word	0x130
	.byte	0x3
	.ascii "_ZSt5frexpePi\0"
	.long	0x19205
	.long	0x1020
	.uleb128 0x1
	.long	0x19205
	.uleb128 0x1
	.long	0x19287
	.byte	0
	.uleb128 0x8
	.ascii "frexp\0"
	.byte	0x1a
	.word	0x12c
	.byte	0x3
	.ascii "_ZSt5frexpfPi\0"
	.long	0x1921e
	.long	0x104c
	.uleb128 0x1
	.long	0x1921e
	.uleb128 0x1
	.long	0x19287
	.byte	0
	.uleb128 0x8
	.ascii "ldexp\0"
	.byte	0x1a
	.word	0x143
	.byte	0x3
	.ascii "_ZSt5ldexpei\0"
	.long	0x19205
	.long	0x1077
	.uleb128 0x1
	.long	0x19205
	.uleb128 0x1
	.long	0x191dc
	.byte	0
	.uleb128 0x8
	.ascii "ldexp\0"
	.byte	0x1a
	.word	0x13f
	.byte	0x3
	.ascii "_ZSt5ldexpfi\0"
	.long	0x1921e
	.long	0x10a2
	.uleb128 0x1
	.long	0x1921e
	.uleb128 0x1
	.long	0x191dc
	.byte	0
	.uleb128 0x8
	.ascii "log\0"
	.byte	0x1a
	.word	0x156
	.byte	0x3
	.ascii "_ZSt3loge\0"
	.long	0x19205
	.long	0x10c3
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x8
	.ascii "log\0"
	.byte	0x1a
	.word	0x152
	.byte	0x3
	.ascii "_ZSt3logf\0"
	.long	0x1921e
	.long	0x10e4
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x8
	.ascii "log10\0"
	.byte	0x1a
	.word	0x169
	.byte	0x3
	.ascii "_ZSt5log10e\0"
	.long	0x19205
	.long	0x1109
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x8
	.ascii "log10\0"
	.byte	0x1a
	.word	0x165
	.byte	0x3
	.ascii "_ZSt5log10f\0"
	.long	0x1921e
	.long	0x112e
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x8
	.ascii "modf\0"
	.byte	0x1a
	.word	0x17c
	.byte	0x3
	.ascii "_ZSt4modfePe\0"
	.long	0x19205
	.long	0x1158
	.uleb128 0x1
	.long	0x19205
	.uleb128 0x1
	.long	0x1979f
	.byte	0
	.uleb128 0x8
	.ascii "modf\0"
	.byte	0x1a
	.word	0x178
	.byte	0x3
	.ascii "_ZSt4modffPf\0"
	.long	0x1921e
	.long	0x1182
	.uleb128 0x1
	.long	0x1921e
	.uleb128 0x1
	.long	0x197ac
	.byte	0
	.uleb128 0x8
	.ascii "pow\0"
	.byte	0x1a
	.word	0x188
	.byte	0x3
	.ascii "_ZSt3powee\0"
	.long	0x19205
	.long	0x11a9
	.uleb128 0x1
	.long	0x19205
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x8
	.ascii "pow\0"
	.byte	0x1a
	.word	0x184
	.byte	0x3
	.ascii "_ZSt3powff\0"
	.long	0x1921e
	.long	0x11d0
	.uleb128 0x1
	.long	0x1921e
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x8
	.ascii "sqrt\0"
	.byte	0x1a
	.word	0x1d3
	.byte	0x3
	.ascii "_ZSt4sqrte\0"
	.long	0x19205
	.long	0x11f3
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x8
	.ascii "sqrt\0"
	.byte	0x1a
	.word	0x1cf
	.byte	0x3
	.ascii "_ZSt4sqrtf\0"
	.long	0x1921e
	.long	0x1216
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x1e
	.ascii "ceil\0"
	.byte	0x1a
	.byte	0xa9
	.byte	0x3
	.ascii "_ZSt4ceile\0"
	.long	0x19205
	.long	0x1238
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x1e
	.ascii "ceil\0"
	.byte	0x1a
	.byte	0xa5
	.byte	0x3
	.ascii "_ZSt4ceilf\0"
	.long	0x1921e
	.long	0x125a
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x1e
	.ascii "fabs\0"
	.byte	0x1a
	.byte	0xf5
	.byte	0x3
	.ascii "_ZSt4fabse\0"
	.long	0x19205
	.long	0x127c
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x1e
	.ascii "fabs\0"
	.byte	0x1a
	.byte	0xf1
	.byte	0x3
	.ascii "_ZSt4fabsf\0"
	.long	0x1921e
	.long	0x129e
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x8
	.ascii "floor\0"
	.byte	0x1a
	.word	0x108
	.byte	0x3
	.ascii "_ZSt5floore\0"
	.long	0x19205
	.long	0x12c3
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x8
	.ascii "floor\0"
	.byte	0x1a
	.word	0x104
	.byte	0x3
	.ascii "_ZSt5floorf\0"
	.long	0x1921e
	.long	0x12e8
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x8
	.ascii "fmod\0"
	.byte	0x1a
	.word	0x11b
	.byte	0x3
	.ascii "_ZSt4fmodee\0"
	.long	0x19205
	.long	0x1311
	.uleb128 0x1
	.long	0x19205
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x8
	.ascii "fmod\0"
	.byte	0x1a
	.word	0x117
	.byte	0x3
	.ascii "_ZSt4fmodff\0"
	.long	0x1921e
	.long	0x133a
	.uleb128 0x1
	.long	0x1921e
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF11
	.byte	0x1a
	.word	0x223
	.byte	0x3
	.ascii "_ZSt10fpclassifye\0"
	.long	0x191dc
	.long	0x1363
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF11
	.byte	0x1a
	.word	0x21e
	.byte	0x3
	.ascii "_ZSt10fpclassifyd\0"
	.long	0x191dc
	.long	0x138c
	.uleb128 0x1
	.long	0x19214
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF11
	.byte	0x1a
	.word	0x219
	.byte	0x3
	.ascii "_ZSt10fpclassifyf\0"
	.long	0x191dc
	.long	0x13b5
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF12
	.byte	0x1a
	.word	0x23a
	.byte	0x3
	.ascii "_ZSt8isfinitee\0"
	.long	0x14cc6
	.long	0x13db
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF12
	.byte	0x1a
	.word	0x236
	.byte	0x3
	.ascii "_ZSt8isfinited\0"
	.long	0x14cc6
	.long	0x1401
	.uleb128 0x1
	.long	0x19214
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF12
	.byte	0x1a
	.word	0x232
	.byte	0x3
	.ascii "_ZSt8isfinitef\0"
	.long	0x14cc6
	.long	0x1427
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x8
	.ascii "isinf\0"
	.byte	0x1a
	.word	0x255
	.byte	0x3
	.ascii "_ZSt5isinfe\0"
	.long	0x14cc6
	.long	0x144c
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x8
	.ascii "isinf\0"
	.byte	0x1a
	.word	0x250
	.byte	0x3
	.ascii "_ZSt5isinfd\0"
	.long	0x14cc6
	.long	0x1471
	.uleb128 0x1
	.long	0x19214
	.byte	0
	.uleb128 0x8
	.ascii "isinf\0"
	.byte	0x1a
	.word	0x248
	.byte	0x3
	.ascii "_ZSt5isinff\0"
	.long	0x14cc6
	.long	0x1496
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x8
	.ascii "isnan\0"
	.byte	0x1a
	.word	0x270
	.byte	0x3
	.ascii "_ZSt5isnane\0"
	.long	0x14cc6
	.long	0x14bb
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x8
	.ascii "isnan\0"
	.byte	0x1a
	.word	0x26b
	.byte	0x3
	.ascii "_ZSt5isnand\0"
	.long	0x14cc6
	.long	0x14e0
	.uleb128 0x1
	.long	0x19214
	.byte	0
	.uleb128 0x8
	.ascii "isnan\0"
	.byte	0x1a
	.word	0x263
	.byte	0x3
	.ascii "_ZSt5isnanf\0"
	.long	0x14cc6
	.long	0x1505
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF13
	.byte	0x1a
	.word	0x286
	.byte	0x3
	.ascii "_ZSt8isnormale\0"
	.long	0x14cc6
	.long	0x152b
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF13
	.byte	0x1a
	.word	0x282
	.byte	0x3
	.ascii "_ZSt8isnormald\0"
	.long	0x14cc6
	.long	0x1551
	.uleb128 0x1
	.long	0x19214
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF13
	.byte	0x1a
	.word	0x27e
	.byte	0x3
	.ascii "_ZSt8isnormalf\0"
	.long	0x14cc6
	.long	0x1577
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF14
	.byte	0x1a
	.word	0x29d
	.byte	0x3
	.ascii "_ZSt7signbite\0"
	.long	0x14cc6
	.long	0x159c
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF14
	.byte	0x1a
	.word	0x299
	.byte	0x3
	.ascii "_ZSt7signbitd\0"
	.long	0x14cc6
	.long	0x15c1
	.uleb128 0x1
	.long	0x19214
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF14
	.byte	0x1a
	.word	0x295
	.byte	0x3
	.ascii "_ZSt7signbitf\0"
	.long	0x14cc6
	.long	0x15e6
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF15
	.byte	0x1a
	.word	0x2b3
	.byte	0x3
	.ascii "_ZSt9isgreateree\0"
	.long	0x14cc6
	.long	0x1613
	.uleb128 0x1
	.long	0x19205
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF15
	.byte	0x1a
	.word	0x2af
	.byte	0x3
	.ascii "_ZSt9isgreaterdd\0"
	.long	0x14cc6
	.long	0x1640
	.uleb128 0x1
	.long	0x19214
	.uleb128 0x1
	.long	0x19214
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF15
	.byte	0x1a
	.word	0x2ab
	.byte	0x3
	.ascii "_ZSt9isgreaterff\0"
	.long	0x14cc6
	.long	0x166d
	.uleb128 0x1
	.long	0x1921e
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF16
	.byte	0x1a
	.word	0x2cd
	.byte	0x3
	.ascii "_ZSt14isgreaterequalee\0"
	.long	0x14cc6
	.long	0x16a0
	.uleb128 0x1
	.long	0x19205
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF16
	.byte	0x1a
	.word	0x2c9
	.byte	0x3
	.ascii "_ZSt14isgreaterequaldd\0"
	.long	0x14cc6
	.long	0x16d3
	.uleb128 0x1
	.long	0x19214
	.uleb128 0x1
	.long	0x19214
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF16
	.byte	0x1a
	.word	0x2c5
	.byte	0x3
	.ascii "_ZSt14isgreaterequalff\0"
	.long	0x14cc6
	.long	0x1706
	.uleb128 0x1
	.long	0x1921e
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF17
	.byte	0x1a
	.word	0x2e7
	.byte	0x3
	.ascii "_ZSt6islessee\0"
	.long	0x14cc6
	.long	0x1730
	.uleb128 0x1
	.long	0x19205
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF17
	.byte	0x1a
	.word	0x2e3
	.byte	0x3
	.ascii "_ZSt6islessdd\0"
	.long	0x14cc6
	.long	0x175a
	.uleb128 0x1
	.long	0x19214
	.uleb128 0x1
	.long	0x19214
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF17
	.byte	0x1a
	.word	0x2df
	.byte	0x3
	.ascii "_ZSt6islessff\0"
	.long	0x14cc6
	.long	0x1784
	.uleb128 0x1
	.long	0x1921e
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF18
	.byte	0x1a
	.word	0x301
	.byte	0x3
	.ascii "_ZSt11islessequalee\0"
	.long	0x14cc6
	.long	0x17b4
	.uleb128 0x1
	.long	0x19205
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF18
	.byte	0x1a
	.word	0x2fd
	.byte	0x3
	.ascii "_ZSt11islessequaldd\0"
	.long	0x14cc6
	.long	0x17e4
	.uleb128 0x1
	.long	0x19214
	.uleb128 0x1
	.long	0x19214
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF18
	.byte	0x1a
	.word	0x2f9
	.byte	0x3
	.ascii "_ZSt11islessequalff\0"
	.long	0x14cc6
	.long	0x1814
	.uleb128 0x1
	.long	0x1921e
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF19
	.byte	0x1a
	.word	0x31b
	.byte	0x3
	.ascii "_ZSt13islessgreateree\0"
	.long	0x14cc6
	.long	0x1846
	.uleb128 0x1
	.long	0x19205
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF19
	.byte	0x1a
	.word	0x317
	.byte	0x3
	.ascii "_ZSt13islessgreaterdd\0"
	.long	0x14cc6
	.long	0x1878
	.uleb128 0x1
	.long	0x19214
	.uleb128 0x1
	.long	0x19214
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF19
	.byte	0x1a
	.word	0x313
	.byte	0x3
	.ascii "_ZSt13islessgreaterff\0"
	.long	0x14cc6
	.long	0x18aa
	.uleb128 0x1
	.long	0x1921e
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF20
	.byte	0x1a
	.word	0x335
	.byte	0x3
	.ascii "_ZSt11isunorderedee\0"
	.long	0x14cc6
	.long	0x18da
	.uleb128 0x1
	.long	0x19205
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF20
	.byte	0x1a
	.word	0x331
	.byte	0x3
	.ascii "_ZSt11isunordereddd\0"
	.long	0x14cc6
	.long	0x190a
	.uleb128 0x1
	.long	0x19214
	.uleb128 0x1
	.long	0x19214
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF20
	.byte	0x1a
	.word	0x32d
	.byte	0x3
	.ascii "_ZSt11isunorderedff\0"
	.long	0x14cc6
	.long	0x193a
	.uleb128 0x1
	.long	0x1921e
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x8
	.ascii "acosh\0"
	.byte	0x1a
	.word	0x4c2
	.byte	0x3
	.ascii "_ZSt5acoshe\0"
	.long	0x19205
	.long	0x195f
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x8
	.ascii "acosh\0"
	.byte	0x1a
	.word	0x4be
	.byte	0x3
	.ascii "_ZSt5acoshf\0"
	.long	0x1921e
	.long	0x1984
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x8
	.ascii "asinh\0"
	.byte	0x1a
	.word	0x4d4
	.byte	0x3
	.ascii "_ZSt5asinhe\0"
	.long	0x19205
	.long	0x19a9
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x8
	.ascii "asinh\0"
	.byte	0x1a
	.word	0x4d0
	.byte	0x3
	.ascii "_ZSt5asinhf\0"
	.long	0x1921e
	.long	0x19ce
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x8
	.ascii "atanh\0"
	.byte	0x1a
	.word	0x4e6
	.byte	0x3
	.ascii "_ZSt5atanhe\0"
	.long	0x19205
	.long	0x19f3
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x8
	.ascii "atanh\0"
	.byte	0x1a
	.word	0x4e2
	.byte	0x3
	.ascii "_ZSt5atanhf\0"
	.long	0x1921e
	.long	0x1a18
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x8
	.ascii "cbrt\0"
	.byte	0x1a
	.word	0x4f8
	.byte	0x3
	.ascii "_ZSt4cbrte\0"
	.long	0x19205
	.long	0x1a3b
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x8
	.ascii "cbrt\0"
	.byte	0x1a
	.word	0x4f4
	.byte	0x3
	.ascii "_ZSt4cbrtf\0"
	.long	0x1921e
	.long	0x1a5e
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF21
	.byte	0x1a
	.word	0x50a
	.byte	0x3
	.ascii "_ZSt8copysignee\0"
	.long	0x19205
	.long	0x1a8a
	.uleb128 0x1
	.long	0x19205
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF21
	.byte	0x1a
	.word	0x506
	.byte	0x3
	.ascii "_ZSt8copysignff\0"
	.long	0x1921e
	.long	0x1ab6
	.uleb128 0x1
	.long	0x1921e
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x8
	.ascii "erf\0"
	.byte	0x1a
	.word	0x51e
	.byte	0x3
	.ascii "_ZSt3erfe\0"
	.long	0x19205
	.long	0x1ad7
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x8
	.ascii "erf\0"
	.byte	0x1a
	.word	0x51a
	.byte	0x3
	.ascii "_ZSt3erff\0"
	.long	0x1921e
	.long	0x1af8
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x8
	.ascii "erfc\0"
	.byte	0x1a
	.word	0x530
	.byte	0x3
	.ascii "_ZSt4erfce\0"
	.long	0x19205
	.long	0x1b1b
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x8
	.ascii "erfc\0"
	.byte	0x1a
	.word	0x52c
	.byte	0x3
	.ascii "_ZSt4erfcf\0"
	.long	0x1921e
	.long	0x1b3e
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x8
	.ascii "exp2\0"
	.byte	0x1a
	.word	0x542
	.byte	0x3
	.ascii "_ZSt4exp2e\0"
	.long	0x19205
	.long	0x1b61
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x8
	.ascii "exp2\0"
	.byte	0x1a
	.word	0x53e
	.byte	0x3
	.ascii "_ZSt4exp2f\0"
	.long	0x1921e
	.long	0x1b84
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x8
	.ascii "expm1\0"
	.byte	0x1a
	.word	0x554
	.byte	0x3
	.ascii "_ZSt5expm1e\0"
	.long	0x19205
	.long	0x1ba9
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x8
	.ascii "expm1\0"
	.byte	0x1a
	.word	0x550
	.byte	0x3
	.ascii "_ZSt5expm1f\0"
	.long	0x1921e
	.long	0x1bce
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x8
	.ascii "fdim\0"
	.byte	0x1a
	.word	0x566
	.byte	0x3
	.ascii "_ZSt4fdimee\0"
	.long	0x19205
	.long	0x1bf7
	.uleb128 0x1
	.long	0x19205
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x8
	.ascii "fdim\0"
	.byte	0x1a
	.word	0x562
	.byte	0x3
	.ascii "_ZSt4fdimff\0"
	.long	0x1921e
	.long	0x1c20
	.uleb128 0x1
	.long	0x1921e
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x8
	.ascii "fma\0"
	.byte	0x1a
	.word	0x57a
	.byte	0x3
	.ascii "_ZSt3fmaeee\0"
	.long	0x19205
	.long	0x1c4d
	.uleb128 0x1
	.long	0x19205
	.uleb128 0x1
	.long	0x19205
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x8
	.ascii "fma\0"
	.byte	0x1a
	.word	0x576
	.byte	0x3
	.ascii "_ZSt3fmafff\0"
	.long	0x1921e
	.long	0x1c7a
	.uleb128 0x1
	.long	0x1921e
	.uleb128 0x1
	.long	0x1921e
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x8
	.ascii "fmax\0"
	.byte	0x1a
	.word	0x58e
	.byte	0x3
	.ascii "_ZSt4fmaxee\0"
	.long	0x19205
	.long	0x1ca3
	.uleb128 0x1
	.long	0x19205
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x8
	.ascii "fmax\0"
	.byte	0x1a
	.word	0x58a
	.byte	0x3
	.ascii "_ZSt4fmaxff\0"
	.long	0x1921e
	.long	0x1ccc
	.uleb128 0x1
	.long	0x1921e
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x8
	.ascii "fmin\0"
	.byte	0x1a
	.word	0x5a2
	.byte	0x3
	.ascii "_ZSt4fminee\0"
	.long	0x19205
	.long	0x1cf5
	.uleb128 0x1
	.long	0x19205
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x8
	.ascii "fmin\0"
	.byte	0x1a
	.word	0x59e
	.byte	0x3
	.ascii "_ZSt4fminff\0"
	.long	0x1921e
	.long	0x1d1e
	.uleb128 0x1
	.long	0x1921e
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF22
	.byte	0x1a
	.word	0x754
	.byte	0x3
	.ascii "_ZSt5hypoteee\0"
	.long	0x19205
	.long	0x1d4d
	.uleb128 0x1
	.long	0x19205
	.uleb128 0x1
	.long	0x19205
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF22
	.byte	0x1a
	.word	0x750
	.byte	0x3
	.ascii "_ZSt5hypotddd\0"
	.long	0x19214
	.long	0x1d7c
	.uleb128 0x1
	.long	0x19214
	.uleb128 0x1
	.long	0x19214
	.uleb128 0x1
	.long	0x19214
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF22
	.byte	0x1a
	.word	0x74c
	.byte	0x3
	.ascii "_ZSt5hypotfff\0"
	.long	0x1921e
	.long	0x1dab
	.uleb128 0x1
	.long	0x1921e
	.uleb128 0x1
	.long	0x1921e
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF22
	.byte	0x1a
	.word	0x5b6
	.byte	0x3
	.ascii "_ZSt5hypotee\0"
	.long	0x19205
	.long	0x1dd4
	.uleb128 0x1
	.long	0x19205
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF22
	.byte	0x1a
	.word	0x5b2
	.byte	0x3
	.ascii "_ZSt5hypotff\0"
	.long	0x1921e
	.long	0x1dfd
	.uleb128 0x1
	.long	0x1921e
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x8
	.ascii "ilogb\0"
	.byte	0x1a
	.word	0x5ca
	.byte	0x3
	.ascii "_ZSt5ilogbe\0"
	.long	0x191dc
	.long	0x1e22
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x8
	.ascii "ilogb\0"
	.byte	0x1a
	.word	0x5c6
	.byte	0x3
	.ascii "_ZSt5ilogbf\0"
	.long	0x191dc
	.long	0x1e47
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x8
	.ascii "lgamma\0"
	.byte	0x1a
	.word	0x5dd
	.byte	0x3
	.ascii "_ZSt6lgammae\0"
	.long	0x19205
	.long	0x1e6e
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x8
	.ascii "lgamma\0"
	.byte	0x1a
	.word	0x5d9
	.byte	0x3
	.ascii "_ZSt6lgammaf\0"
	.long	0x1921e
	.long	0x1e95
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x8
	.ascii "llrint\0"
	.byte	0x1a
	.word	0x5ef
	.byte	0x3
	.ascii "_ZSt6llrinte\0"
	.long	0x191f4
	.long	0x1ebc
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x8
	.ascii "llrint\0"
	.byte	0x1a
	.word	0x5eb
	.byte	0x3
	.ascii "_ZSt6llrintf\0"
	.long	0x191f4
	.long	0x1ee3
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x8
	.ascii "llround\0"
	.byte	0x1a
	.word	0x601
	.byte	0x3
	.ascii "_ZSt7llrounde\0"
	.long	0x191f4
	.long	0x1f0c
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x8
	.ascii "llround\0"
	.byte	0x1a
	.word	0x5fd
	.byte	0x3
	.ascii "_ZSt7llroundf\0"
	.long	0x191f4
	.long	0x1f35
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x8
	.ascii "log1p\0"
	.byte	0x1a
	.word	0x613
	.byte	0x3
	.ascii "_ZSt5log1pe\0"
	.long	0x19205
	.long	0x1f5a
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x8
	.ascii "log1p\0"
	.byte	0x1a
	.word	0x60f
	.byte	0x3
	.ascii "_ZSt5log1pf\0"
	.long	0x1921e
	.long	0x1f7f
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x8
	.ascii "log2\0"
	.byte	0x1a
	.word	0x626
	.byte	0x3
	.ascii "_ZSt4log2e\0"
	.long	0x19205
	.long	0x1fa2
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x8
	.ascii "log2\0"
	.byte	0x1a
	.word	0x622
	.byte	0x3
	.ascii "_ZSt4log2f\0"
	.long	0x1921e
	.long	0x1fc5
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x8
	.ascii "logb\0"
	.byte	0x1a
	.word	0x638
	.byte	0x3
	.ascii "_ZSt4logbe\0"
	.long	0x19205
	.long	0x1fe8
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x8
	.ascii "logb\0"
	.byte	0x1a
	.word	0x634
	.byte	0x3
	.ascii "_ZSt4logbf\0"
	.long	0x1921e
	.long	0x200b
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x8
	.ascii "lrint\0"
	.byte	0x1a
	.word	0x64a
	.byte	0x3
	.ascii "_ZSt5lrinte\0"
	.long	0x191e8
	.long	0x2030
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x8
	.ascii "lrint\0"
	.byte	0x1a
	.word	0x646
	.byte	0x3
	.ascii "_ZSt5lrintf\0"
	.long	0x191e8
	.long	0x2055
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x8
	.ascii "lround\0"
	.byte	0x1a
	.word	0x65c
	.byte	0x3
	.ascii "_ZSt6lrounde\0"
	.long	0x191e8
	.long	0x207c
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x8
	.ascii "lround\0"
	.byte	0x1a
	.word	0x658
	.byte	0x3
	.ascii "_ZSt6lroundf\0"
	.long	0x191e8
	.long	0x20a3
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF23
	.byte	0x1a
	.word	0x66e
	.byte	0x3
	.ascii "_ZSt9nearbyinte\0"
	.long	0x19205
	.long	0x20ca
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF23
	.byte	0x1a
	.word	0x66a
	.byte	0x3
	.ascii "_ZSt9nearbyintf\0"
	.long	0x1921e
	.long	0x20f1
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF24
	.byte	0x1a
	.word	0x680
	.byte	0x3
	.ascii "_ZSt9nextafteree\0"
	.long	0x19205
	.long	0x211e
	.uleb128 0x1
	.long	0x19205
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF24
	.byte	0x1a
	.word	0x67c
	.byte	0x3
	.ascii "_ZSt9nextafterff\0"
	.long	0x1921e
	.long	0x214b
	.uleb128 0x1
	.long	0x1921e
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF25
	.byte	0x1a
	.word	0x694
	.byte	0x3
	.ascii "_ZSt10nexttowardee\0"
	.long	0x19205
	.long	0x217a
	.uleb128 0x1
	.long	0x19205
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF25
	.byte	0x1a
	.word	0x690
	.byte	0x3
	.ascii "_ZSt10nexttowardfe\0"
	.long	0x1921e
	.long	0x21a9
	.uleb128 0x1
	.long	0x1921e
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF26
	.byte	0x1a
	.word	0x6a6
	.byte	0x3
	.ascii "_ZSt9remainderee\0"
	.long	0x19205
	.long	0x21d6
	.uleb128 0x1
	.long	0x19205
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF26
	.byte	0x1a
	.word	0x6a2
	.byte	0x3
	.ascii "_ZSt9remainderff\0"
	.long	0x1921e
	.long	0x2203
	.uleb128 0x1
	.long	0x1921e
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x8
	.ascii "remquo\0"
	.byte	0x1a
	.word	0x6ba
	.byte	0x3
	.ascii "_ZSt6remquoeePi\0"
	.long	0x19205
	.long	0x2237
	.uleb128 0x1
	.long	0x19205
	.uleb128 0x1
	.long	0x19205
	.uleb128 0x1
	.long	0x19287
	.byte	0
	.uleb128 0x8
	.ascii "remquo\0"
	.byte	0x1a
	.word	0x6b6
	.byte	0x3
	.ascii "_ZSt6remquoffPi\0"
	.long	0x1921e
	.long	0x226b
	.uleb128 0x1
	.long	0x1921e
	.uleb128 0x1
	.long	0x1921e
	.uleb128 0x1
	.long	0x19287
	.byte	0
	.uleb128 0x8
	.ascii "rint\0"
	.byte	0x1a
	.word	0x6ce
	.byte	0x3
	.ascii "_ZSt4rinte\0"
	.long	0x19205
	.long	0x228e
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x8
	.ascii "rint\0"
	.byte	0x1a
	.word	0x6ca
	.byte	0x3
	.ascii "_ZSt4rintf\0"
	.long	0x1921e
	.long	0x22b1
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x8
	.ascii "round\0"
	.byte	0x1a
	.word	0x6e0
	.byte	0x3
	.ascii "_ZSt5rounde\0"
	.long	0x19205
	.long	0x22d6
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x8
	.ascii "round\0"
	.byte	0x1a
	.word	0x6dc
	.byte	0x3
	.ascii "_ZSt5roundf\0"
	.long	0x1921e
	.long	0x22fb
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x8
	.ascii "scalbln\0"
	.byte	0x1a
	.word	0x6f2
	.byte	0x3
	.ascii "_ZSt7scalblnel\0"
	.long	0x19205
	.long	0x232a
	.uleb128 0x1
	.long	0x19205
	.uleb128 0x1
	.long	0x191e8
	.byte	0
	.uleb128 0x8
	.ascii "scalbln\0"
	.byte	0x1a
	.word	0x6ee
	.byte	0x3
	.ascii "_ZSt7scalblnfl\0"
	.long	0x1921e
	.long	0x2359
	.uleb128 0x1
	.long	0x1921e
	.uleb128 0x1
	.long	0x191e8
	.byte	0
	.uleb128 0x8
	.ascii "scalbn\0"
	.byte	0x1a
	.word	0x704
	.byte	0x3
	.ascii "_ZSt6scalbnei\0"
	.long	0x19205
	.long	0x2386
	.uleb128 0x1
	.long	0x19205
	.uleb128 0x1
	.long	0x191dc
	.byte	0
	.uleb128 0x8
	.ascii "scalbn\0"
	.byte	0x1a
	.word	0x700
	.byte	0x3
	.ascii "_ZSt6scalbnfi\0"
	.long	0x1921e
	.long	0x23b3
	.uleb128 0x1
	.long	0x1921e
	.uleb128 0x1
	.long	0x191dc
	.byte	0
	.uleb128 0x8
	.ascii "tgamma\0"
	.byte	0x1a
	.word	0x716
	.byte	0x3
	.ascii "_ZSt6tgammae\0"
	.long	0x19205
	.long	0x23da
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x8
	.ascii "tgamma\0"
	.byte	0x1a
	.word	0x712
	.byte	0x3
	.ascii "_ZSt6tgammaf\0"
	.long	0x1921e
	.long	0x2401
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x8
	.ascii "trunc\0"
	.byte	0x1a
	.word	0x728
	.byte	0x3
	.ascii "_ZSt5trunce\0"
	.long	0x19205
	.long	0x2426
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x8
	.ascii "trunc\0"
	.byte	0x1a
	.word	0x724
	.byte	0x3
	.ascii "_ZSt5truncf\0"
	.long	0x1921e
	.long	0x244b
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x8
	.ascii "lerp\0"
	.byte	0x1a
	.word	0x77f
	.byte	0x3
	.ascii "_ZSt4lerpeee\0"
	.long	0x19205
	.long	0x247a
	.uleb128 0x1
	.long	0x19205
	.uleb128 0x1
	.long	0x19205
	.uleb128 0x1
	.long	0x19205
	.byte	0
	.uleb128 0x8
	.ascii "lerp\0"
	.byte	0x1a
	.word	0x77b
	.byte	0x3
	.ascii "_ZSt4lerpddd\0"
	.long	0x19214
	.long	0x24a9
	.uleb128 0x1
	.long	0x19214
	.uleb128 0x1
	.long	0x19214
	.uleb128 0x1
	.long	0x19214
	.byte	0
	.uleb128 0x8
	.ascii "lerp\0"
	.byte	0x1a
	.word	0x777
	.byte	0x3
	.ascii "_ZSt4lerpfff\0"
	.long	0x1921e
	.long	0x24d8
	.uleb128 0x1
	.long	0x1921e
	.uleb128 0x1
	.long	0x1921e
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x3
	.byte	0x21
	.byte	0x2f
	.byte	0xb
	.long	0x1a2c0
	.uleb128 0x3
	.byte	0x21
	.byte	0x30
	.byte	0xb
	.long	0x1a2df
	.uleb128 0x3
	.byte	0x21
	.byte	0x31
	.byte	0xb
	.long	0x1a300
	.uleb128 0x3
	.byte	0x21
	.byte	0x32
	.byte	0xb
	.long	0x1a321
	.uleb128 0x3
	.byte	0x21
	.byte	0x34
	.byte	0xb
	.long	0x1a3f4
	.uleb128 0x3
	.byte	0x21
	.byte	0x35
	.byte	0xb
	.long	0x1a41d
	.uleb128 0x3
	.byte	0x21
	.byte	0x36
	.byte	0xb
	.long	0x1a448
	.uleb128 0x3
	.byte	0x21
	.byte	0x37
	.byte	0xb
	.long	0x1a473
	.uleb128 0x3
	.byte	0x21
	.byte	0x39
	.byte	0xb
	.long	0x1a342
	.uleb128 0x3
	.byte	0x21
	.byte	0x3a
	.byte	0xb
	.long	0x1a36d
	.uleb128 0x3
	.byte	0x21
	.byte	0x3b
	.byte	0xb
	.long	0x1a39a
	.uleb128 0x3
	.byte	0x21
	.byte	0x3c
	.byte	0xb
	.long	0x1a3c7
	.uleb128 0x3
	.byte	0x21
	.byte	0x3e
	.byte	0xb
	.long	0x1a49e
	.uleb128 0x3
	.byte	0x21
	.byte	0x3f
	.byte	0xb
	.long	0x1923b
	.uleb128 0x3
	.byte	0x21
	.byte	0x41
	.byte	0xb
	.long	0x1a2cf
	.uleb128 0x3
	.byte	0x21
	.byte	0x42
	.byte	0xb
	.long	0x1a2ef
	.uleb128 0x3
	.byte	0x21
	.byte	0x43
	.byte	0xb
	.long	0x1a310
	.uleb128 0x3
	.byte	0x21
	.byte	0x44
	.byte	0xb
	.long	0x1a331
	.uleb128 0x3
	.byte	0x21
	.byte	0x46
	.byte	0xb
	.long	0x1a408
	.uleb128 0x3
	.byte	0x21
	.byte	0x47
	.byte	0xb
	.long	0x1a432
	.uleb128 0x3
	.byte	0x21
	.byte	0x48
	.byte	0xb
	.long	0x1a45d
	.uleb128 0x3
	.byte	0x21
	.byte	0x49
	.byte	0xb
	.long	0x1a488
	.uleb128 0x3
	.byte	0x21
	.byte	0x4b
	.byte	0xb
	.long	0x1a357
	.uleb128 0x3
	.byte	0x21
	.byte	0x4c
	.byte	0xb
	.long	0x1a383
	.uleb128 0x3
	.byte	0x21
	.byte	0x4d
	.byte	0xb
	.long	0x1a3b0
	.uleb128 0x3
	.byte	0x21
	.byte	0x4e
	.byte	0xb
	.long	0x1a3dd
	.uleb128 0x3
	.byte	0x21
	.byte	0x50
	.byte	0xb
	.long	0x1a4af
	.uleb128 0x3
	.byte	0x21
	.byte	0x51
	.byte	0xb
	.long	0x1924c
	.uleb128 0x3
	.byte	0x22
	.byte	0x7f
	.byte	0xb
	.long	0x19578
	.uleb128 0x3
	.byte	0x22
	.byte	0x80
	.byte	0xb
	.long	0x195b3
	.uleb128 0x3
	.byte	0x22
	.byte	0x86
	.byte	0xb
	.long	0x1a4c1
	.uleb128 0x3
	.byte	0x22
	.byte	0x8c
	.byte	0xb
	.long	0x1a4db
	.uleb128 0x3
	.byte	0x22
	.byte	0x8d
	.byte	0xb
	.long	0x1a4f2
	.uleb128 0x3
	.byte	0x22
	.byte	0x8e
	.byte	0xb
	.long	0x1a50a
	.uleb128 0x3
	.byte	0x22
	.byte	0x8f
	.byte	0xb
	.long	0x1a522
	.uleb128 0x3
	.byte	0x22
	.byte	0x91
	.byte	0xb
	.long	0x1a572
	.uleb128 0x3
	.byte	0x22
	.byte	0x94
	.byte	0xb
	.long	0x1a58e
	.uleb128 0x3
	.byte	0x22
	.byte	0x96
	.byte	0xb
	.long	0x1a5a8
	.uleb128 0x3
	.byte	0x22
	.byte	0x99
	.byte	0xb
	.long	0x1a5c5
	.uleb128 0x3
	.byte	0x22
	.byte	0x9a
	.byte	0xb
	.long	0x1a5e3
	.uleb128 0x3
	.byte	0x22
	.byte	0x9b
	.byte	0xb
	.long	0x1a609
	.uleb128 0x3
	.byte	0x22
	.byte	0x9d
	.byte	0xb
	.long	0x1a62d
	.uleb128 0x3
	.byte	0x22
	.byte	0xa3
	.byte	0xb
	.long	0x1a651
	.uleb128 0x3
	.byte	0x22
	.byte	0xa5
	.byte	0xb
	.long	0x1a65f
	.uleb128 0x3
	.byte	0x22
	.byte	0xa6
	.byte	0xb
	.long	0x1a674
	.uleb128 0x3
	.byte	0x22
	.byte	0xa7
	.byte	0xb
	.long	0x1a693
	.uleb128 0x3
	.byte	0x22
	.byte	0xa8
	.byte	0xb
	.long	0x1a6b7
	.uleb128 0x3
	.byte	0x22
	.byte	0xa9
	.byte	0xb
	.long	0x1a6dc
	.uleb128 0x3
	.byte	0x22
	.byte	0xab
	.byte	0xb
	.long	0x1a6f6
	.uleb128 0x3
	.byte	0x22
	.byte	0xac
	.byte	0xb
	.long	0x1a71c
	.uleb128 0x3
	.byte	0x22
	.byte	0xf0
	.byte	0x16
	.long	0x1960a
	.uleb128 0x3
	.byte	0x22
	.byte	0xf5
	.byte	0x16
	.long	0x14f2e
	.uleb128 0x3
	.byte	0x22
	.byte	0xf6
	.byte	0x16
	.long	0x1a73b
	.uleb128 0x3
	.byte	0x22
	.byte	0xf8
	.byte	0x16
	.long	0x1a759
	.uleb128 0x3
	.byte	0x22
	.byte	0xf9
	.byte	0x16
	.long	0x1a7bd
	.uleb128 0x3
	.byte	0x22
	.byte	0xfa
	.byte	0x16
	.long	0x1a772
	.uleb128 0x3
	.byte	0x22
	.byte	0xfb
	.byte	0x16
	.long	0x1a797
	.uleb128 0x3
	.byte	0x22
	.byte	0xfc
	.byte	0x16
	.long	0x1a7dc
	.uleb128 0x3
	.byte	0x23
	.byte	0x62
	.byte	0xb
	.long	0x1a88c
	.uleb128 0x3
	.byte	0x23
	.byte	0x63
	.byte	0xb
	.long	0x1a899
	.uleb128 0x3
	.byte	0x23
	.byte	0x65
	.byte	0xb
	.long	0x1a8ad
	.uleb128 0x3
	.byte	0x23
	.byte	0x66
	.byte	0xb
	.long	0x1a8ca
	.uleb128 0x3
	.byte	0x23
	.byte	0x67
	.byte	0xb
	.long	0x1a8e4
	.uleb128 0x3
	.byte	0x23
	.byte	0x68
	.byte	0xb
	.long	0x1a8fc
	.uleb128 0x3
	.byte	0x23
	.byte	0x69
	.byte	0xb
	.long	0x1a916
	.uleb128 0x3
	.byte	0x23
	.byte	0x6a
	.byte	0xb
	.long	0x1a930
	.uleb128 0x3
	.byte	0x23
	.byte	0x6b
	.byte	0xb
	.long	0x1a949
	.uleb128 0x3
	.byte	0x23
	.byte	0x6c
	.byte	0xb
	.long	0x1a96e
	.uleb128 0x3
	.byte	0x23
	.byte	0x6d
	.byte	0xb
	.long	0x1a991
	.uleb128 0x3
	.byte	0x23
	.byte	0x6e
	.byte	0xb
	.long	0x1a9af
	.uleb128 0x3
	.byte	0x23
	.byte	0x71
	.byte	0xb
	.long	0x1a9e7
	.uleb128 0x3
	.byte	0x23
	.byte	0x72
	.byte	0xb
	.long	0x1aa0f
	.uleb128 0x3
	.byte	0x23
	.byte	0x73
	.byte	0xb
	.long	0x1aa34
	.uleb128 0x3
	.byte	0x23
	.byte	0x74
	.byte	0xb
	.long	0x1aa6a
	.uleb128 0x3
	.byte	0x23
	.byte	0x75
	.byte	0xb
	.long	0x1aa8d
	.uleb128 0x3
	.byte	0x23
	.byte	0x76
	.byte	0xb
	.long	0x1aab2
	.uleb128 0x3
	.byte	0x23
	.byte	0x78
	.byte	0xb
	.long	0x1aacb
	.uleb128 0x3
	.byte	0x23
	.byte	0x79
	.byte	0xb
	.long	0x1aae3
	.uleb128 0x3
	.byte	0x23
	.byte	0x7e
	.byte	0xb
	.long	0x1aaf4
	.uleb128 0x3
	.byte	0x23
	.byte	0x7f
	.byte	0xb
	.long	0x1ab0a
	.uleb128 0x3
	.byte	0x23
	.byte	0x83
	.byte	0xb
	.long	0x1ab92
	.uleb128 0x3
	.byte	0x23
	.byte	0x84
	.byte	0xb
	.long	0x1abac
	.uleb128 0x3
	.byte	0x23
	.byte	0x85
	.byte	0xb
	.long	0x1abcb
	.uleb128 0x3
	.byte	0x23
	.byte	0x86
	.byte	0xb
	.long	0x1abe1
	.uleb128 0x3
	.byte	0x23
	.byte	0x87
	.byte	0xb
	.long	0x1ac08
	.uleb128 0x3
	.byte	0x23
	.byte	0x88
	.byte	0xb
	.long	0x1ac23
	.uleb128 0x3
	.byte	0x23
	.byte	0x89
	.byte	0xb
	.long	0x1ac4d
	.uleb128 0x3
	.byte	0x23
	.byte	0x8a
	.byte	0xb
	.long	0x1ac7f
	.uleb128 0x3
	.byte	0x23
	.byte	0x8b
	.byte	0xb
	.long	0x1acb0
	.uleb128 0x3
	.byte	0x23
	.byte	0x8d
	.byte	0xb
	.long	0x1acc1
	.uleb128 0x3
	.byte	0x23
	.byte	0x8f
	.byte	0xb
	.long	0x1acdb
	.uleb128 0x3
	.byte	0x23
	.byte	0x90
	.byte	0xb
	.long	0x1acfa
	.uleb128 0x3
	.byte	0x23
	.byte	0x91
	.byte	0xb
	.long	0x1ad39
	.uleb128 0x3
	.byte	0x23
	.byte	0x92
	.byte	0xb
	.long	0x1ad69
	.uleb128 0x3
	.byte	0x23
	.byte	0xb9
	.byte	0x16
	.long	0x1ada2
	.uleb128 0x3
	.byte	0x23
	.byte	0xba
	.byte	0x16
	.long	0x1addc
	.uleb128 0x3
	.byte	0x23
	.byte	0xbb
	.byte	0x16
	.long	0x1ae19
	.uleb128 0x3
	.byte	0x23
	.byte	0xbc
	.byte	0x16
	.long	0x1ae47
	.uleb128 0x3
	.byte	0x23
	.byte	0xbd
	.byte	0x16
	.long	0x1ae88
	.uleb128 0x26
	.ascii "_Destroy_aux<true>\0"
	.byte	0x1
	.byte	0x15
	.byte	0x9d
	.byte	0xc
	.long	0x28d9
	.uleb128 0x50
	.secrel32	.LASF28
	.byte	0x15
	.byte	0xa1
	.byte	0x9
	.ascii "_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEEvT_S9_\0"
	.long	0x288d
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x16e6c
	.uleb128 0x1
	.long	0x16e6c
	.uleb128 0x1
	.long	0x16e6c
	.byte	0
	.uleb128 0x80
	.secrel32	.LASF29
	.byte	0xa1
	.byte	0x9
	.ascii "_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_\0"
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x19287
	.uleb128 0x1
	.long	0x19287
	.uleb128 0x1
	.long	0x19287
	.byte	0
	.byte	0
	.uleb128 0x26
	.ascii "_Destroy_aux<false>\0"
	.byte	0x1
	.byte	0x15
	.byte	0x91
	.byte	0xc
	.long	0x2b66
	.uleb128 0x50
	.secrel32	.LASF28
	.byte	0x15
	.byte	0x95
	.byte	0x2
	.ascii "_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEEvT_S9_\0"
	.long	0x2977
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x16e6c
	.uleb128 0x1
	.long	0x16e6c
	.uleb128 0x1
	.long	0x16e6c
	.byte	0
	.uleb128 0x3b
	.ascii "__destroy<Blorb*>\0"
	.byte	0x95
	.byte	0x2
	.ascii "_ZNSt12_Destroy_auxILb0EE9__destroyIP5BlorbEEvT_S4_\0"
	.long	0x29d8
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x1c92b
	.uleb128 0x1
	.long	0x1c92b
	.uleb128 0x1
	.long	0x1c92b
	.byte	0
	.uleb128 0x3b
	.ascii "__destroy<__gnu_cxx::__normal_iterator<DDT::Node*, std::vector<DDT::Node> > >\0"
	.byte	0x95
	.byte	0x2
	.ascii "_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS5_SaIS5_EEEEEEvT_SB_\0"
	.long	0x2ab0
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x15d4e
	.uleb128 0x1
	.long	0x15d4e
	.uleb128 0x1
	.long	0x15d4e
	.byte	0
	.uleb128 0x3b
	.ascii "__destroy<DDT::Node*>\0"
	.byte	0x95
	.byte	0x2
	.ascii "_ZNSt12_Destroy_auxILb0EE9__destroyIPN3DDT4NodeEEEvT_S5_\0"
	.long	0x2b1a
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c4db
	.byte	0
	.uleb128 0x80
	.secrel32	.LASF29
	.byte	0x95
	.byte	0x2
	.ascii "_ZNSt12_Destroy_auxILb0EE9__destroyIPiEEvT_S3_\0"
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x19287
	.uleb128 0x1
	.long	0x19287
	.uleb128 0x1
	.long	0x19287
	.byte	0
	.byte	0
	.uleb128 0x46
	.ascii "ptrdiff_t\0"
	.byte	0x1b
	.word	0x119
	.byte	0x1c
	.long	0x191f4
	.uleb128 0xa
	.long	0x2b66
	.uleb128 0x22
	.ascii "true_type\0"
	.byte	0x1
	.byte	0x4b
	.byte	0x2d
	.long	0x1de
	.uleb128 0x26
	.ascii "__uninitialized_copy<true>\0"
	.byte	0x1
	.byte	0x13
	.byte	0x68
	.byte	0xc
	.long	0x2d56
	.uleb128 0x1e
	.ascii "__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>\0"
	.byte	0x13
	.byte	0x6c
	.byte	0x9
	.ascii "_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiEET0_T_SC_SB_\0"
	.long	0x19287
	.long	0x2cbf
	.uleb128 0x4
	.secrel32	.LASF30
	.long	0x173e1
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x19287
	.uleb128 0x1
	.long	0x173e1
	.uleb128 0x1
	.long	0x173e1
	.uleb128 0x1
	.long	0x19287
	.byte	0
	.uleb128 0x1e
	.ascii "__uninit_copy<int*, int*>\0"
	.byte	0x13
	.byte	0x6c
	.byte	0x9
	.ascii "_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPiS2_EET0_T_S4_S3_\0"
	.long	0x19287
	.long	0x2d4b
	.uleb128 0x4
	.secrel32	.LASF30
	.long	0x19287
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x19287
	.uleb128 0x1
	.long	0x19287
	.uleb128 0x1
	.long	0x19287
	.uleb128 0x1
	.long	0x19287
	.byte	0
	.uleb128 0x16
	.secrel32	.LASF31
	.long	0x14cc6
	.byte	0x1
	.byte	0
	.uleb128 0x2f
	.ascii "__uninitialized_default_n_1<true>\0"
	.byte	0x1
	.byte	0x13
	.word	0x24f
	.byte	0xc
	.long	0x2e41
	.uleb128 0x8
	.ascii "__uninit_default_n<int*, long long unsigned int>\0"
	.byte	0x13
	.word	0x253
	.byte	0x9
	.ascii "_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPiyEET_S3_T0_\0"
	.long	0x19287
	.long	0x2e28
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x19287
	.uleb128 0x4
	.secrel32	.LASF32
	.long	0x191a1
	.uleb128 0x1
	.long	0x19287
	.uleb128 0x1
	.long	0x191a1
	.byte	0
	.uleb128 0x76
	.ascii "_TrivialValueType\0"
	.long	0x14cc6
	.byte	0x1
	.byte	0
	.uleb128 0x46
	.ascii "nullptr_t\0"
	.byte	0x1b
	.word	0x11c
	.byte	0x1d
	.long	0x1a2ac
	.uleb128 0xa0
	.byte	0x7
	.byte	0x4
	.long	0x14cb6
	.byte	0x8
	.byte	0x46
	.byte	0x8
	.long	0x2e72
	.uleb128 0x45
	.ascii "_S_word_bit\0"
	.byte	0x20
	.byte	0
	.uleb128 0x4b
	.secrel32	.LASF33
	.byte	0x10
	.byte	0x8
	.byte	0x48
	.byte	0xa
	.long	0x309f
	.uleb128 0x19
	.ascii "_M_p\0"
	.byte	0x8
	.byte	0x4a
	.byte	0x11
	.long	0x1aec0
	.byte	0
	.uleb128 0x19
	.ascii "_M_mask\0"
	.byte	0x8
	.byte	0x4b
	.byte	0xf
	.long	0x30a4
	.byte	0x8
	.uleb128 0x2a
	.secrel32	.LASF33
	.byte	0x8
	.byte	0x4d
	.byte	0x5
	.ascii "_ZNSt14_Bit_referenceC4EPmm\0"
	.long	0x2eca
	.long	0x2eda
	.uleb128 0x2
	.long	0x1aec5
	.uleb128 0x1
	.long	0x1aec0
	.uleb128 0x1
	.long	0x30a4
	.byte	0
	.uleb128 0x2a
	.secrel32	.LASF33
	.byte	0x8
	.byte	0x50
	.byte	0x5
	.ascii "_ZNSt14_Bit_referenceC4Ev\0"
	.long	0x2f04
	.long	0x2f0a
	.uleb128 0x2
	.long	0x1aec5
	.byte	0
	.uleb128 0xa1
	.secrel32	.LASF33
	.byte	0x8
	.byte	0x53
	.byte	0x5
	.ascii "_ZNSt14_Bit_referenceC4ERKS_\0"
	.byte	0x1
	.long	0x2f39
	.long	0x2f44
	.uleb128 0x2
	.long	0x1aec5
	.uleb128 0x1
	.long	0x1aecf
	.byte	0
	.uleb128 0x3e
	.secrel32	.LASF34
	.byte	0x8
	.byte	0x56
	.byte	0x5
	.ascii "_ZNKSt14_Bit_referencecvbEv\0"
	.long	0x14cc6
	.long	0x2f74
	.long	0x2f7a
	.uleb128 0x2
	.long	0x1aed4
	.byte	0
	.uleb128 0x3e
	.secrel32	.LASF35
	.byte	0x8
	.byte	0x5a
	.byte	0x5
	.ascii "_ZNSt14_Bit_referenceaSEb\0"
	.long	0x1aede
	.long	0x2fa8
	.long	0x2fb3
	.uleb128 0x2
	.long	0x1aec5
	.uleb128 0x1
	.long	0x14cc6
	.byte	0
	.uleb128 0x3e
	.secrel32	.LASF35
	.byte	0x8
	.byte	0x64
	.byte	0x5
	.ascii "_ZNSt14_Bit_referenceaSERKS_\0"
	.long	0x1aede
	.long	0x2fe4
	.long	0x2fef
	.uleb128 0x2
	.long	0x1aec5
	.uleb128 0x1
	.long	0x1aecf
	.byte	0
	.uleb128 0x3e
	.secrel32	.LASF36
	.byte	0x8
	.byte	0x68
	.byte	0x5
	.ascii "_ZNKSt14_Bit_referenceeqERKS_\0"
	.long	0x14cc6
	.long	0x3021
	.long	0x302c
	.uleb128 0x2
	.long	0x1aed4
	.uleb128 0x1
	.long	0x1aecf
	.byte	0
	.uleb128 0x35
	.ascii "operator<\0"
	.byte	0x8
	.byte	0x6c
	.byte	0x5
	.ascii "_ZNKSt14_Bit_referenceltERKS_\0"
	.long	0x14cc6
	.long	0x3064
	.long	0x306f
	.uleb128 0x2
	.long	0x1aed4
	.uleb128 0x1
	.long	0x1aecf
	.byte	0
	.uleb128 0x81
	.ascii "flip\0"
	.byte	0x70
	.ascii "_ZNSt14_Bit_reference4flipEv\0"
	.long	0x3098
	.uleb128 0x2
	.long	0x1aec5
	.byte	0
	.byte	0
	.uleb128 0xa
	.long	0x2e72
	.uleb128 0x22
	.ascii "_Bit_type\0"
	.byte	0x8
	.byte	0x45
	.byte	0x19
	.long	0x19187
	.uleb128 0xa
	.long	0x30a4
	.uleb128 0x26
	.ascii "iterator<std::random_access_iterator_tag, bool, long long int, bool*, bool&>\0"
	.byte	0x1
	.byte	0x18
	.byte	0x7f
	.byte	0xc
	.long	0x314b
	.uleb128 0x1c
	.secrel32	.LASF37
	.byte	0x18
	.byte	0x86
	.byte	0x1a
	.long	0x191f4
	.uleb128 0x4
	.secrel32	.LASF8
	.long	0x461
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x14cc6
	.uleb128 0x4c
	.secrel32	.LASF38
	.long	0x191f4
	.uleb128 0x4c
	.secrel32	.LASF39
	.long	0x1aee3
	.uleb128 0x4c
	.secrel32	.LASF40
	.long	0x1aee8
	.byte	0
	.uleb128 0x4b
	.secrel32	.LASF41
	.byte	0x10
	.byte	0x8
	.byte	0x8e
	.byte	0xa
	.long	0x328b
	.uleb128 0x39
	.long	0x30bb
	.uleb128 0x19
	.ascii "_M_p\0"
	.byte	0x8
	.byte	0x91
	.byte	0x11
	.long	0x1aec0
	.byte	0
	.uleb128 0x19
	.ascii "_M_offset\0"
	.byte	0x8
	.byte	0x92
	.byte	0x12
	.long	0x14cb6
	.byte	0x8
	.uleb128 0x2a
	.secrel32	.LASF41
	.byte	0x8
	.byte	0x94
	.byte	0x5
	.ascii "_ZNSt18_Bit_iterator_baseC4EPmj\0"
	.long	0x31ae
	.long	0x31be
	.uleb128 0x2
	.long	0x1aeed
	.uleb128 0x1
	.long	0x1aec0
	.uleb128 0x1
	.long	0x14cb6
	.byte	0
	.uleb128 0x42
	.ascii "_M_bump_up\0"
	.byte	0x8
	.byte	0x98
	.byte	0x5
	.ascii "_ZNSt18_Bit_iterator_base10_M_bump_upEv\0"
	.long	0x31fd
	.long	0x3203
	.uleb128 0x2
	.long	0x1aeed
	.byte	0
	.uleb128 0x42
	.ascii "_M_bump_down\0"
	.byte	0x8
	.byte	0xa2
	.byte	0x5
	.ascii "_ZNSt18_Bit_iterator_base12_M_bump_downEv\0"
	.long	0x3246
	.long	0x324c
	.uleb128 0x2
	.long	0x1aeed
	.byte	0
	.uleb128 0x81
	.ascii "_M_incr\0"
	.byte	0xac
	.ascii "_ZNSt18_Bit_iterator_base7_M_incrEx\0"
	.long	0x327f
	.uleb128 0x2
	.long	0x1aeed
	.uleb128 0x1
	.long	0x2b66
	.byte	0
	.byte	0
	.uleb128 0xa
	.long	0x314b
	.uleb128 0x4b
	.secrel32	.LASF42
	.byte	0x10
	.byte	0x8
	.byte	0xe7
	.byte	0xa
	.long	0x351f
	.uleb128 0x39
	.long	0x314b
	.uleb128 0x2a
	.secrel32	.LASF42
	.byte	0x8
	.byte	0xf1
	.byte	0x5
	.ascii "_ZNSt13_Bit_iteratorC4Ev\0"
	.long	0x32cb
	.long	0x32d1
	.uleb128 0x2
	.long	0x1aef7
	.byte	0
	.uleb128 0x2a
	.secrel32	.LASF42
	.byte	0x8
	.byte	0xf3
	.byte	0x5
	.ascii "_ZNSt13_Bit_iteratorC4EPmj\0"
	.long	0x32fc
	.long	0x330c
	.uleb128 0x2
	.long	0x1aef7
	.uleb128 0x1
	.long	0x1aec0
	.uleb128 0x1
	.long	0x14cb6
	.byte	0
	.uleb128 0x1c
	.secrel32	.LASF43
	.byte	0x8
	.byte	0xef
	.byte	0x1d
	.long	0x3290
	.uleb128 0xa
	.long	0x330c
	.uleb128 0x3e
	.secrel32	.LASF44
	.byte	0x8
	.byte	0xf7
	.byte	0x5
	.ascii "_ZNKSt13_Bit_iterator13_M_const_castEv\0"
	.long	0x330c
	.long	0x3358
	.long	0x335e
	.uleb128 0x2
	.long	0x1af01
	.byte	0
	.uleb128 0x1c
	.secrel32	.LASF45
	.byte	0x8
	.byte	0xe9
	.byte	0x1d
	.long	0x2e72
	.uleb128 0x3e
	.secrel32	.LASF46
	.byte	0x8
	.byte	0xfb
	.byte	0x5
	.ascii "_ZNKSt13_Bit_iteratordeEv\0"
	.long	0x335e
	.long	0x3398
	.long	0x339e
	.uleb128 0x2
	.long	0x1af01
	.byte	0
	.uleb128 0x3e
	.secrel32	.LASF47
	.byte	0x8
	.byte	0xff
	.byte	0x5
	.ascii "_ZNSt13_Bit_iteratorppEv\0"
	.long	0x1af0b
	.long	0x33cb
	.long	0x33d1
	.uleb128 0x2
	.long	0x1aef7
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF47
	.byte	0x8
	.word	0x106
	.byte	0x5
	.ascii "_ZNSt13_Bit_iteratorppEi\0"
	.long	0x330c
	.long	0x33ff
	.long	0x340a
	.uleb128 0x2
	.long	0x1aef7
	.uleb128 0x1
	.long	0x191dc
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF48
	.byte	0x8
	.word	0x10e
	.byte	0x5
	.ascii "_ZNSt13_Bit_iteratormmEv\0"
	.long	0x1af0b
	.long	0x3438
	.long	0x343e
	.uleb128 0x2
	.long	0x1aef7
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF48
	.byte	0x8
	.word	0x115
	.byte	0x5
	.ascii "_ZNSt13_Bit_iteratormmEi\0"
	.long	0x330c
	.long	0x346c
	.long	0x3477
	.uleb128 0x2
	.long	0x1aef7
	.uleb128 0x1
	.long	0x191dc
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF49
	.byte	0x8
	.word	0x11d
	.byte	0x5
	.ascii "_ZNSt13_Bit_iteratorpLEx\0"
	.long	0x1af0b
	.long	0x34a5
	.long	0x34b0
	.uleb128 0x2
	.long	0x1aef7
	.uleb128 0x1
	.long	0x3111
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF50
	.byte	0x8
	.word	0x124
	.byte	0x5
	.ascii "_ZNSt13_Bit_iteratormIEx\0"
	.long	0x1af0b
	.long	0x34de
	.long	0x34e9
	.uleb128 0x2
	.long	0x1aef7
	.uleb128 0x1
	.long	0x3111
	.byte	0
	.uleb128 0x82
	.secrel32	.LASF51
	.word	0x12b
	.ascii "_ZNKSt13_Bit_iteratorixEx\0"
	.long	0x335e
	.long	0x3513
	.uleb128 0x2
	.long	0x1af01
	.uleb128 0x1
	.long	0x3111
	.byte	0
	.byte	0
	.uleb128 0xa
	.long	0x3290
	.uleb128 0x6a
	.secrel32	.LASF52
	.byte	0x10
	.byte	0x8
	.word	0x143
	.byte	0xa
	.long	0x384a
	.uleb128 0x39
	.long	0x314b
	.uleb128 0x20
	.secrel32	.LASF52
	.byte	0x8
	.word	0x14e
	.byte	0x5
	.ascii "_ZNSt19_Bit_const_iteratorC4Ev\0"
	.long	0x3567
	.long	0x356d
	.uleb128 0x2
	.long	0x1af10
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF52
	.byte	0x8
	.word	0x150
	.byte	0x5
	.ascii "_ZNSt19_Bit_const_iteratorC4EPmj\0"
	.long	0x359f
	.long	0x35af
	.uleb128 0x2
	.long	0x1af10
	.uleb128 0x1
	.long	0x1aec0
	.uleb128 0x1
	.long	0x14cb6
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF52
	.byte	0x8
	.word	0x153
	.byte	0x5
	.ascii "_ZNSt19_Bit_const_iteratorC4ERKSt13_Bit_iterator\0"
	.long	0x35f1
	.long	0x35fc
	.uleb128 0x2
	.long	0x1af10
	.uleb128 0x1
	.long	0x1af1a
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF44
	.byte	0x8
	.word	0x157
	.byte	0x5
	.ascii "_ZNKSt19_Bit_const_iterator13_M_const_castEv\0"
	.long	0x3290
	.long	0x363e
	.long	0x3644
	.uleb128 0x2
	.long	0x1af1f
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF53
	.byte	0x8
	.word	0x146
	.byte	0x22
	.long	0x14cc6
	.uleb128 0x2b
	.secrel32	.LASF46
	.byte	0x8
	.word	0x15b
	.byte	0x5
	.ascii "_ZNKSt19_Bit_const_iteratordeEv\0"
	.long	0x3644
	.long	0x3686
	.long	0x368c
	.uleb128 0x2
	.long	0x1af1f
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF54
	.byte	0x8
	.word	0x14c
	.byte	0x22
	.long	0x3524
	.uleb128 0xa
	.long	0x368c
	.uleb128 0x2b
	.secrel32	.LASF47
	.byte	0x8
	.word	0x15f
	.byte	0x5
	.ascii "_ZNSt19_Bit_const_iteratorppEv\0"
	.long	0x1af29
	.long	0x36d2
	.long	0x36d8
	.uleb128 0x2
	.long	0x1af10
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF47
	.byte	0x8
	.word	0x166
	.byte	0x5
	.ascii "_ZNSt19_Bit_const_iteratorppEi\0"
	.long	0x368c
	.long	0x370c
	.long	0x3717
	.uleb128 0x2
	.long	0x1af10
	.uleb128 0x1
	.long	0x191dc
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF48
	.byte	0x8
	.word	0x16e
	.byte	0x5
	.ascii "_ZNSt19_Bit_const_iteratormmEv\0"
	.long	0x1af29
	.long	0x374b
	.long	0x3751
	.uleb128 0x2
	.long	0x1af10
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF48
	.byte	0x8
	.word	0x175
	.byte	0x5
	.ascii "_ZNSt19_Bit_const_iteratormmEi\0"
	.long	0x368c
	.long	0x3785
	.long	0x3790
	.uleb128 0x2
	.long	0x1af10
	.uleb128 0x1
	.long	0x191dc
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF49
	.byte	0x8
	.word	0x17d
	.byte	0x5
	.ascii "_ZNSt19_Bit_const_iteratorpLEx\0"
	.long	0x1af29
	.long	0x37c4
	.long	0x37cf
	.uleb128 0x2
	.long	0x1af10
	.uleb128 0x1
	.long	0x3111
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF50
	.byte	0x8
	.word	0x184
	.byte	0x5
	.ascii "_ZNSt19_Bit_const_iteratormIEx\0"
	.long	0x1af29
	.long	0x3803
	.long	0x380e
	.uleb128 0x2
	.long	0x1af10
	.uleb128 0x1
	.long	0x3111
	.byte	0
	.uleb128 0x82
	.secrel32	.LASF51
	.word	0x18b
	.ascii "_ZNKSt19_Bit_const_iteratorixEx\0"
	.long	0x3644
	.long	0x383e
	.uleb128 0x2
	.long	0x1af1f
	.uleb128 0x1
	.long	0x3111
	.byte	0
	.byte	0
	.uleb128 0xa
	.long	0x3524
	.uleb128 0x3a
	.ascii "initializer_list<bool>\0"
	.byte	0x10
	.byte	0x24
	.byte	0x2f
	.byte	0xb
	.long	0x39e5
	.uleb128 0x36
	.secrel32	.LASF43
	.byte	0x24
	.byte	0x36
	.byte	0x1a
	.long	0x1af2e
	.uleb128 0x3f
	.secrel32	.LASF55
	.byte	0x24
	.byte	0x3a
	.byte	0x12
	.long	0x386f
	.byte	0
	.uleb128 0x36
	.secrel32	.LASF56
	.byte	0x24
	.byte	0x35
	.byte	0x18
	.long	0x2f0
	.uleb128 0x3f
	.secrel32	.LASF57
	.byte	0x24
	.byte	0x3b
	.byte	0x13
	.long	0x3888
	.byte	0x8
	.uleb128 0x2a
	.secrel32	.LASF58
	.byte	0x24
	.byte	0x3e
	.byte	0x11
	.ascii "_ZNSt16initializer_listIbEC4EPKby\0"
	.long	0x38d3
	.long	0x38e3
	.uleb128 0x2
	.long	0x1af33
	.uleb128 0x1
	.long	0x38e3
	.uleb128 0x1
	.long	0x3888
	.byte	0
	.uleb128 0x36
	.secrel32	.LASF54
	.byte	0x24
	.byte	0x37
	.byte	0x1a
	.long	0x1af2e
	.uleb128 0x24
	.secrel32	.LASF58
	.byte	0x24
	.byte	0x42
	.byte	0x11
	.ascii "_ZNSt16initializer_listIbEC4Ev\0"
	.long	0x391e
	.long	0x3924
	.uleb128 0x2
	.long	0x1af33
	.byte	0
	.uleb128 0x29
	.secrel32	.LASF59
	.byte	0x24
	.byte	0x47
	.byte	0x7
	.ascii "_ZNKSt16initializer_listIbE4sizeEv\0"
	.long	0x3888
	.byte	0x1
	.long	0x395c
	.long	0x3962
	.uleb128 0x2
	.long	0x1af38
	.byte	0
	.uleb128 0x29
	.secrel32	.LASF60
	.byte	0x24
	.byte	0x4b
	.byte	0x7
	.ascii "_ZNKSt16initializer_listIbE5beginEv\0"
	.long	0x38e3
	.byte	0x1
	.long	0x399b
	.long	0x39a1
	.uleb128 0x2
	.long	0x1af38
	.byte	0
	.uleb128 0x65
	.ascii "end\0"
	.byte	0x24
	.byte	0x4f
	.ascii "_ZNKSt16initializer_listIbE3endEv\0"
	.long	0x38e3
	.long	0x39d6
	.long	0x39dc
	.uleb128 0x2
	.long	0x1af38
	.byte	0
	.uleb128 0x5
	.ascii "_E\0"
	.long	0x14cc6
	.byte	0
	.uleb128 0xa
	.long	0x384f
	.uleb128 0x2f
	.ascii "__iterator_traits<std::_Bit_iterator, void>\0"
	.byte	0x1
	.byte	0x1d
	.word	0x16e
	.byte	0xc
	.long	0x3a37
	.uleb128 0x1a
	.secrel32	.LASF37
	.byte	0x1d
	.word	0x17c
	.byte	0xd
	.long	0x3111
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x3290
	.byte	0
	.uleb128 0x26
	.ascii "iterator<std::random_access_iterator_tag, bool, long long int, void, std::_Bit_reference>\0"
	.byte	0x1
	.byte	0x18
	.byte	0x7f
	.byte	0xc
	.long	0x3ac5
	.uleb128 0x4
	.secrel32	.LASF8
	.long	0x461
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x14cc6
	.uleb128 0x4
	.secrel32	.LASF38
	.long	0x191f4
	.uleb128 0x83
	.secrel32	.LASF39
	.uleb128 0x4
	.secrel32	.LASF40
	.long	0x2e72
	.byte	0
	.uleb128 0x26
	.ascii "incrementable_traits<std::_Bit_iterator>\0"
	.byte	0x1
	.byte	0x1d
	.byte	0xa0
	.byte	0xc
	.long	0x3b04
	.uleb128 0x1c
	.secrel32	.LASF37
	.byte	0x1d
	.byte	0xa1
	.byte	0xd
	.long	0x3111
	.byte	0
	.uleb128 0x3a
	.ascii "reverse_iterator<std::_Bit_iterator>\0"
	.byte	0x10
	.byte	0xf
	.byte	0x7f
	.byte	0xb
	.long	0x4049
	.uleb128 0x48
	.long	0x3a37
	.byte	0x1
	.uleb128 0x84
	.secrel32	.LASF70
	.byte	0x92
	.long	0x3290
	.uleb128 0x24
	.secrel32	.LASF62
	.byte	0xf
	.byte	0xb1
	.byte	0x7
	.ascii "_ZNSt16reverse_iteratorISt13_Bit_iteratorEC4Ev\0"
	.long	0x3b82
	.long	0x3b88
	.uleb128 0x2
	.long	0x1af42
	.byte	0
	.uleb128 0x85
	.secrel32	.LASF62
	.byte	0xb7
	.ascii "_ZNSt16reverse_iteratorISt13_Bit_iteratorEC4ES0_\0"
	.long	0x3bc8
	.long	0x3bd3
	.uleb128 0x2
	.long	0x1af42
	.uleb128 0x1
	.long	0x3bd3
	.byte	0
	.uleb128 0x36
	.secrel32	.LASF63
	.byte	0xf
	.byte	0x97
	.byte	0x1d
	.long	0x3290
	.uleb128 0x24
	.secrel32	.LASF62
	.byte	0xf
	.byte	0xbd
	.byte	0x7
	.ascii "_ZNSt16reverse_iteratorISt13_Bit_iteratorEC4ERKS1_\0"
	.long	0x3c22
	.long	0x3c2d
	.uleb128 0x2
	.long	0x1af42
	.uleb128 0x1
	.long	0x1af47
	.byte	0
	.uleb128 0x5a
	.secrel32	.LASF35
	.byte	0xf
	.byte	0xc1
	.byte	0x19
	.ascii "_ZNSt16reverse_iteratorISt13_Bit_iteratorEaSERKS1_\0"
	.long	0x1af4c
	.long	0x3c74
	.long	0x3c7f
	.uleb128 0x2
	.long	0x1af42
	.uleb128 0x1
	.long	0x1af47
	.byte	0
	.uleb128 0x29
	.secrel32	.LASF64
	.byte	0xf
	.byte	0xe3
	.byte	0x7
	.ascii "_ZNKSt16reverse_iteratorISt13_Bit_iteratorE4baseEv\0"
	.long	0x3bd3
	.byte	0x1
	.long	0x3cc7
	.long	0x3ccd
	.uleb128 0x2
	.long	0x1af51
	.byte	0
	.uleb128 0x36
	.secrel32	.LASF45
	.byte	0xf
	.byte	0xa6
	.byte	0xd
	.long	0x404e
	.uleb128 0x29
	.secrel32	.LASF46
	.byte	0xf
	.byte	0xf1
	.byte	0x7
	.ascii "_ZNKSt16reverse_iteratorISt13_Bit_iteratorEdeEv\0"
	.long	0x3ccd
	.byte	0x1
	.long	0x3d1e
	.long	0x3d24
	.uleb128 0x2
	.long	0x1af51
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF65
	.byte	0xf
	.byte	0xfd
	.byte	0x7
	.ascii "_ZNKSt16reverse_iteratorISt13_Bit_iteratorEptEv\0"
	.long	0x3d64
	.long	0x3d6a
	.uleb128 0x2
	.long	0x1af51
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF47
	.byte	0xf
	.word	0x110
	.byte	0x7
	.ascii "_ZNSt16reverse_iteratorISt13_Bit_iteratorEppEv\0"
	.long	0x1af4c
	.byte	0x1
	.long	0x3daf
	.long	0x3db5
	.uleb128 0x2
	.long	0x1af42
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF47
	.byte	0xf
	.word	0x11c
	.byte	0x7
	.ascii "_ZNSt16reverse_iteratorISt13_Bit_iteratorEppEi\0"
	.long	0x3b04
	.byte	0x1
	.long	0x3dfa
	.long	0x3e05
	.uleb128 0x2
	.long	0x1af42
	.uleb128 0x1
	.long	0x191dc
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF48
	.byte	0xf
	.word	0x129
	.byte	0x7
	.ascii "_ZNSt16reverse_iteratorISt13_Bit_iteratorEmmEv\0"
	.long	0x1af4c
	.byte	0x1
	.long	0x3e4a
	.long	0x3e50
	.uleb128 0x2
	.long	0x1af42
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF48
	.byte	0xf
	.word	0x135
	.byte	0x7
	.ascii "_ZNSt16reverse_iteratorISt13_Bit_iteratorEmmEi\0"
	.long	0x3b04
	.byte	0x1
	.long	0x3e95
	.long	0x3ea0
	.uleb128 0x2
	.long	0x1af42
	.uleb128 0x1
	.long	0x191dc
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF66
	.byte	0xf
	.word	0x142
	.byte	0x7
	.ascii "_ZNKSt16reverse_iteratorISt13_Bit_iteratorEplEx\0"
	.long	0x3b04
	.byte	0x1
	.long	0x3ee6
	.long	0x3ef1
	.uleb128 0x2
	.long	0x1af51
	.uleb128 0x1
	.long	0x3ef1
	.byte	0
	.uleb128 0x36
	.secrel32	.LASF37
	.byte	0xf
	.byte	0xa5
	.byte	0xd
	.long	0x405a
	.uleb128 0x7
	.secrel32	.LASF49
	.byte	0xf
	.word	0x14c
	.byte	0x7
	.ascii "_ZNSt16reverse_iteratorISt13_Bit_iteratorEpLEx\0"
	.long	0x1af4c
	.byte	0x1
	.long	0x3f42
	.long	0x3f4d
	.uleb128 0x2
	.long	0x1af42
	.uleb128 0x1
	.long	0x3ef1
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF67
	.byte	0xf
	.word	0x158
	.byte	0x7
	.ascii "_ZNKSt16reverse_iteratorISt13_Bit_iteratorEmiEx\0"
	.long	0x3b04
	.byte	0x1
	.long	0x3f93
	.long	0x3f9e
	.uleb128 0x2
	.long	0x1af51
	.uleb128 0x1
	.long	0x3ef1
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF50
	.byte	0xf
	.word	0x162
	.byte	0x7
	.ascii "_ZNSt16reverse_iteratorISt13_Bit_iteratorEmIEx\0"
	.long	0x1af4c
	.byte	0x1
	.long	0x3fe3
	.long	0x3fee
	.uleb128 0x2
	.long	0x1af42
	.uleb128 0x1
	.long	0x3ef1
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF51
	.byte	0xf
	.word	0x16e
	.byte	0x7
	.ascii "_ZNKSt16reverse_iteratorISt13_Bit_iteratorEixEx\0"
	.long	0x3ccd
	.byte	0x1
	.long	0x4034
	.long	0x403f
	.uleb128 0x2
	.long	0x1af51
	.uleb128 0x1
	.long	0x3ef1
	.byte	0
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x3290
	.byte	0
	.uleb128 0xa
	.long	0x3b04
	.uleb128 0x1c
	.secrel32	.LASF68
	.byte	0x1d
	.byte	0x4c
	.byte	0xb
	.long	0x335e
	.uleb128 0x1c
	.secrel32	.LASF69
	.byte	0x1d
	.byte	0xd3
	.byte	0xb
	.long	0x3c2
	.uleb128 0x2f
	.ascii "__iterator_traits<std::_Bit_const_iterator, void>\0"
	.byte	0x1
	.byte	0x1d
	.word	0x16e
	.byte	0xc
	.long	0x40b9
	.uleb128 0x1a
	.secrel32	.LASF37
	.byte	0x1d
	.word	0x17c
	.byte	0xd
	.long	0x3111
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x3524
	.byte	0
	.uleb128 0x26
	.ascii "iterator<std::random_access_iterator_tag, bool, long long int, void, bool>\0"
	.byte	0x1
	.byte	0x18
	.byte	0x7f
	.byte	0xc
	.long	0x4138
	.uleb128 0x4
	.secrel32	.LASF8
	.long	0x461
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x14cc6
	.uleb128 0x4
	.secrel32	.LASF38
	.long	0x191f4
	.uleb128 0x83
	.secrel32	.LASF39
	.uleb128 0x4
	.secrel32	.LASF40
	.long	0x14cc6
	.byte	0
	.uleb128 0x26
	.ascii "incrementable_traits<std::_Bit_const_iterator>\0"
	.byte	0x1
	.byte	0x1d
	.byte	0xa0
	.byte	0xc
	.long	0x417d
	.uleb128 0x1c
	.secrel32	.LASF37
	.byte	0x1d
	.byte	0xa1
	.byte	0xd
	.long	0x3111
	.byte	0
	.uleb128 0x3a
	.ascii "reverse_iterator<std::_Bit_const_iterator>\0"
	.byte	0x10
	.byte	0xf
	.byte	0x7f
	.byte	0xb
	.long	0x4728
	.uleb128 0x48
	.long	0x40b9
	.byte	0x1
	.uleb128 0x84
	.secrel32	.LASF70
	.byte	0x92
	.long	0x3524
	.uleb128 0x24
	.secrel32	.LASF62
	.byte	0xf
	.byte	0xb1
	.byte	0x7
	.ascii "_ZNSt16reverse_iteratorISt19_Bit_const_iteratorEC4Ev\0"
	.long	0x4207
	.long	0x420d
	.uleb128 0x2
	.long	0x1af56
	.byte	0
	.uleb128 0x85
	.secrel32	.LASF62
	.byte	0xb7
	.ascii "_ZNSt16reverse_iteratorISt19_Bit_const_iteratorEC4ES0_\0"
	.long	0x4253
	.long	0x425e
	.uleb128 0x2
	.long	0x1af56
	.uleb128 0x1
	.long	0x425e
	.byte	0
	.uleb128 0x36
	.secrel32	.LASF63
	.byte	0xf
	.byte	0x97
	.byte	0x1d
	.long	0x3524
	.uleb128 0x24
	.secrel32	.LASF62
	.byte	0xf
	.byte	0xbd
	.byte	0x7
	.ascii "_ZNSt16reverse_iteratorISt19_Bit_const_iteratorEC4ERKS1_\0"
	.long	0x42b3
	.long	0x42be
	.uleb128 0x2
	.long	0x1af56
	.uleb128 0x1
	.long	0x1af5b
	.byte	0
	.uleb128 0x5a
	.secrel32	.LASF35
	.byte	0xf
	.byte	0xc1
	.byte	0x19
	.ascii "_ZNSt16reverse_iteratorISt19_Bit_const_iteratorEaSERKS1_\0"
	.long	0x1af60
	.long	0x430b
	.long	0x4316
	.uleb128 0x2
	.long	0x1af56
	.uleb128 0x1
	.long	0x1af5b
	.byte	0
	.uleb128 0x29
	.secrel32	.LASF64
	.byte	0xf
	.byte	0xe3
	.byte	0x7
	.ascii "_ZNKSt16reverse_iteratorISt19_Bit_const_iteratorE4baseEv\0"
	.long	0x425e
	.byte	0x1
	.long	0x4364
	.long	0x436a
	.uleb128 0x2
	.long	0x1af65
	.byte	0
	.uleb128 0x36
	.secrel32	.LASF45
	.byte	0xf
	.byte	0xa6
	.byte	0xd
	.long	0x472d
	.uleb128 0x29
	.secrel32	.LASF46
	.byte	0xf
	.byte	0xf1
	.byte	0x7
	.ascii "_ZNKSt16reverse_iteratorISt19_Bit_const_iteratorEdeEv\0"
	.long	0x436a
	.byte	0x1
	.long	0x43c1
	.long	0x43c7
	.uleb128 0x2
	.long	0x1af65
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF65
	.byte	0xf
	.byte	0xfd
	.byte	0x7
	.ascii "_ZNKSt16reverse_iteratorISt19_Bit_const_iteratorEptEv\0"
	.long	0x440d
	.long	0x4413
	.uleb128 0x2
	.long	0x1af65
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF47
	.byte	0xf
	.word	0x110
	.byte	0x7
	.ascii "_ZNSt16reverse_iteratorISt19_Bit_const_iteratorEppEv\0"
	.long	0x1af60
	.byte	0x1
	.long	0x445e
	.long	0x4464
	.uleb128 0x2
	.long	0x1af56
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF47
	.byte	0xf
	.word	0x11c
	.byte	0x7
	.ascii "_ZNSt16reverse_iteratorISt19_Bit_const_iteratorEppEi\0"
	.long	0x417d
	.byte	0x1
	.long	0x44af
	.long	0x44ba
	.uleb128 0x2
	.long	0x1af56
	.uleb128 0x1
	.long	0x191dc
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF48
	.byte	0xf
	.word	0x129
	.byte	0x7
	.ascii "_ZNSt16reverse_iteratorISt19_Bit_const_iteratorEmmEv\0"
	.long	0x1af60
	.byte	0x1
	.long	0x4505
	.long	0x450b
	.uleb128 0x2
	.long	0x1af56
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF48
	.byte	0xf
	.word	0x135
	.byte	0x7
	.ascii "_ZNSt16reverse_iteratorISt19_Bit_const_iteratorEmmEi\0"
	.long	0x417d
	.byte	0x1
	.long	0x4556
	.long	0x4561
	.uleb128 0x2
	.long	0x1af56
	.uleb128 0x1
	.long	0x191dc
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF66
	.byte	0xf
	.word	0x142
	.byte	0x7
	.ascii "_ZNKSt16reverse_iteratorISt19_Bit_const_iteratorEplEx\0"
	.long	0x417d
	.byte	0x1
	.long	0x45ad
	.long	0x45b8
	.uleb128 0x2
	.long	0x1af65
	.uleb128 0x1
	.long	0x45b8
	.byte	0
	.uleb128 0x36
	.secrel32	.LASF37
	.byte	0xf
	.byte	0xa5
	.byte	0xd
	.long	0x4739
	.uleb128 0x7
	.secrel32	.LASF49
	.byte	0xf
	.word	0x14c
	.byte	0x7
	.ascii "_ZNSt16reverse_iteratorISt19_Bit_const_iteratorEpLEx\0"
	.long	0x1af60
	.byte	0x1
	.long	0x460f
	.long	0x461a
	.uleb128 0x2
	.long	0x1af56
	.uleb128 0x1
	.long	0x45b8
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF67
	.byte	0xf
	.word	0x158
	.byte	0x7
	.ascii "_ZNKSt16reverse_iteratorISt19_Bit_const_iteratorEmiEx\0"
	.long	0x417d
	.byte	0x1
	.long	0x4666
	.long	0x4671
	.uleb128 0x2
	.long	0x1af65
	.uleb128 0x1
	.long	0x45b8
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF50
	.byte	0xf
	.word	0x162
	.byte	0x7
	.ascii "_ZNSt16reverse_iteratorISt19_Bit_const_iteratorEmIEx\0"
	.long	0x1af60
	.byte	0x1
	.long	0x46bc
	.long	0x46c7
	.uleb128 0x2
	.long	0x1af56
	.uleb128 0x1
	.long	0x45b8
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF51
	.byte	0xf
	.word	0x16e
	.byte	0x7
	.ascii "_ZNKSt16reverse_iteratorISt19_Bit_const_iteratorEixEx\0"
	.long	0x436a
	.byte	0x1
	.long	0x4713
	.long	0x471e
	.uleb128 0x2
	.long	0x1af65
	.uleb128 0x1
	.long	0x45b8
	.byte	0
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x3524
	.byte	0
	.uleb128 0xa
	.long	0x417d
	.uleb128 0x1c
	.secrel32	.LASF68
	.byte	0x1d
	.byte	0x4c
	.byte	0xb
	.long	0x3644
	.uleb128 0x1c
	.secrel32	.LASF69
	.byte	0x1d
	.byte	0xd3
	.byte	0xb
	.long	0x3ce
	.uleb128 0x3
	.byte	0x25
	.byte	0x40
	.byte	0xb
	.long	0x1b01d
	.uleb128 0x3
	.byte	0x25
	.byte	0x8d
	.byte	0xb
	.long	0x1925e
	.uleb128 0x3
	.byte	0x25
	.byte	0x8f
	.byte	0xb
	.long	0x1b035
	.uleb128 0x3
	.byte	0x25
	.byte	0x90
	.byte	0xb
	.long	0x1b04e
	.uleb128 0x3
	.byte	0x25
	.byte	0x91
	.byte	0xb
	.long	0x1b068
	.uleb128 0x3
	.byte	0x25
	.byte	0x92
	.byte	0xb
	.long	0x1b08c
	.uleb128 0x3
	.byte	0x25
	.byte	0x93
	.byte	0xb
	.long	0x1b0ab
	.uleb128 0x3
	.byte	0x25
	.byte	0x94
	.byte	0xb
	.long	0x1b0ca
	.uleb128 0x3
	.byte	0x25
	.byte	0x95
	.byte	0xb
	.long	0x1b0e8
	.uleb128 0x3
	.byte	0x25
	.byte	0x96
	.byte	0xb
	.long	0x1b10a
	.uleb128 0x3
	.byte	0x25
	.byte	0x97
	.byte	0xb
	.long	0x1b12b
	.uleb128 0x3
	.byte	0x25
	.byte	0x98
	.byte	0xb
	.long	0x1b144
	.uleb128 0x3
	.byte	0x25
	.byte	0x99
	.byte	0xb
	.long	0x1b156
	.uleb128 0x3
	.byte	0x25
	.byte	0x9a
	.byte	0xb
	.long	0x1b17f
	.uleb128 0x3
	.byte	0x25
	.byte	0x9b
	.byte	0xb
	.long	0x1b1a9
	.uleb128 0x3
	.byte	0x25
	.byte	0x9c
	.byte	0xb
	.long	0x1b1c9
	.uleb128 0x3
	.byte	0x25
	.byte	0x9d
	.byte	0xb
	.long	0x1b1fa
	.uleb128 0x3
	.byte	0x25
	.byte	0x9e
	.byte	0xb
	.long	0x1b218
	.uleb128 0x3
	.byte	0x25
	.byte	0xa0
	.byte	0xb
	.long	0x1b234
	.uleb128 0x3
	.byte	0x25
	.byte	0xa0
	.byte	0xb
	.long	0x1b24e
	.uleb128 0x3
	.byte	0x25
	.byte	0xa2
	.byte	0xb
	.long	0x1b26d
	.uleb128 0x3
	.byte	0x25
	.byte	0xa3
	.byte	0xb
	.long	0x1b28e
	.uleb128 0x3
	.byte	0x25
	.byte	0xa4
	.byte	0xb
	.long	0x1b2ae
	.uleb128 0x3
	.byte	0x25
	.byte	0xa6
	.byte	0xb
	.long	0x1b2d5
	.uleb128 0x3
	.byte	0x25
	.byte	0xa9
	.byte	0xb
	.long	0x1b2fb
	.uleb128 0x3
	.byte	0x25
	.byte	0xa9
	.byte	0xb
	.long	0x1b319
	.uleb128 0x3
	.byte	0x25
	.byte	0xac
	.byte	0xb
	.long	0x1b33c
	.uleb128 0x3
	.byte	0x25
	.byte	0xae
	.byte	0xb
	.long	0x1b362
	.uleb128 0x3
	.byte	0x25
	.byte	0xb0
	.byte	0xb
	.long	0x1b383
	.uleb128 0x3
	.byte	0x25
	.byte	0xb2
	.byte	0xb
	.long	0x1b3a3
	.uleb128 0x3
	.byte	0x25
	.byte	0xb3
	.byte	0xb
	.long	0x1b3c8
	.uleb128 0x3
	.byte	0x25
	.byte	0xb4
	.byte	0xb
	.long	0x1b3e7
	.uleb128 0x3
	.byte	0x25
	.byte	0xb5
	.byte	0xb
	.long	0x1b406
	.uleb128 0x3
	.byte	0x25
	.byte	0xb6
	.byte	0xb
	.long	0x1b426
	.uleb128 0x3
	.byte	0x25
	.byte	0xb7
	.byte	0xb
	.long	0x1b445
	.uleb128 0x3
	.byte	0x25
	.byte	0xb8
	.byte	0xb
	.long	0x1b465
	.uleb128 0x3
	.byte	0x25
	.byte	0xb9
	.byte	0xb
	.long	0x1b495
	.uleb128 0x3
	.byte	0x25
	.byte	0xba
	.byte	0xb
	.long	0x1b4af
	.uleb128 0x3
	.byte	0x25
	.byte	0xbb
	.byte	0xb
	.long	0x1b4d4
	.uleb128 0x3
	.byte	0x25
	.byte	0xbc
	.byte	0xb
	.long	0x1b4f9
	.uleb128 0x3
	.byte	0x25
	.byte	0xbd
	.byte	0xb
	.long	0x1b51e
	.uleb128 0x3
	.byte	0x25
	.byte	0xbe
	.byte	0xb
	.long	0x1b54f
	.uleb128 0x3
	.byte	0x25
	.byte	0xbf
	.byte	0xb
	.long	0x1b56e
	.uleb128 0x3
	.byte	0x25
	.byte	0xc1
	.byte	0xb
	.long	0x1b58d
	.uleb128 0x3
	.byte	0x25
	.byte	0xc3
	.byte	0xb
	.long	0x1b5ac
	.uleb128 0x3
	.byte	0x25
	.byte	0xc4
	.byte	0xb
	.long	0x1b5cb
	.uleb128 0x3
	.byte	0x25
	.byte	0xc5
	.byte	0xb
	.long	0x1b5ef
	.uleb128 0x3
	.byte	0x25
	.byte	0xc6
	.byte	0xb
	.long	0x1b614
	.uleb128 0x3
	.byte	0x25
	.byte	0xc7
	.byte	0xb
	.long	0x1b639
	.uleb128 0x3
	.byte	0x25
	.byte	0xc8
	.byte	0xb
	.long	0x1b652
	.uleb128 0x3
	.byte	0x25
	.byte	0xc9
	.byte	0xb
	.long	0x1b677
	.uleb128 0x3
	.byte	0x25
	.byte	0xca
	.byte	0xb
	.long	0x1b69c
	.uleb128 0x3
	.byte	0x25
	.byte	0xcb
	.byte	0xb
	.long	0x1b6c2
	.uleb128 0x3
	.byte	0x25
	.byte	0xcc
	.byte	0xb
	.long	0x1b6e7
	.uleb128 0x3
	.byte	0x25
	.byte	0xcd
	.byte	0xb
	.long	0x1b703
	.uleb128 0x3
	.byte	0x25
	.byte	0xce
	.byte	0xb
	.long	0x1b71e
	.uleb128 0x3
	.byte	0x25
	.byte	0xcf
	.byte	0xb
	.long	0x1b73d
	.uleb128 0x3
	.byte	0x25
	.byte	0xd0
	.byte	0xb
	.long	0x1b75d
	.uleb128 0x3
	.byte	0x25
	.byte	0xd1
	.byte	0xb
	.long	0x1b77d
	.uleb128 0x3
	.byte	0x25
	.byte	0xd2
	.byte	0xb
	.long	0x1b79c
	.uleb128 0x28
	.byte	0x25
	.word	0x10b
	.byte	0x16
	.long	0x1b7c1
	.uleb128 0x28
	.byte	0x25
	.word	0x10c
	.byte	0x16
	.long	0x1b7e1
	.uleb128 0x28
	.byte	0x25
	.word	0x10d
	.byte	0x16
	.long	0x1b806
	.uleb128 0x28
	.byte	0x25
	.word	0x11b
	.byte	0xe
	.long	0x1b58d
	.uleb128 0x28
	.byte	0x25
	.word	0x11e
	.byte	0xe
	.long	0x1b2d5
	.uleb128 0x28
	.byte	0x25
	.word	0x121
	.byte	0xe
	.long	0x1b33c
	.uleb128 0x28
	.byte	0x25
	.word	0x124
	.byte	0xe
	.long	0x1b383
	.uleb128 0x28
	.byte	0x25
	.word	0x128
	.byte	0xe
	.long	0x1b7c1
	.uleb128 0x28
	.byte	0x25
	.word	0x129
	.byte	0xe
	.long	0x1b7e1
	.uleb128 0x28
	.byte	0x25
	.word	0x12a
	.byte	0xe
	.long	0x1b806
	.uleb128 0x3
	.byte	0x26
	.byte	0x35
	.byte	0xb
	.long	0x19291
	.uleb128 0x3
	.byte	0x26
	.byte	0x36
	.byte	0xb
	.long	0x1b82c
	.uleb128 0x3
	.byte	0x26
	.byte	0x37
	.byte	0xb
	.long	0x1b84d
	.uleb128 0x5f
	.ascii "numbers\0"
	.byte	0x27
	.byte	0x30
	.byte	0xb
	.uleb128 0x2f
	.ascii "remove_cv<int>\0"
	.byte	0x1
	.byte	0x1
	.word	0x5cf
	.byte	0xc
	.long	0x49ca
	.uleb128 0x1a
	.secrel32	.LASF71
	.byte	0x1
	.word	0x5d0
	.byte	0xd
	.long	0x191dc
	.byte	0
	.uleb128 0x77
	.ascii "__cxx11\0"
	.byte	0x1b
	.word	0x12e
	.byte	0x41
	.uleb128 0x64
	.ascii "__exception_ptr\0"
	.byte	0x28
	.byte	0x3b
	.byte	0xd
	.long	0x4e5b
	.uleb128 0xa2
	.secrel32	.LASF72
	.byte	0x8
	.byte	0x28
	.byte	0x56
	.byte	0xb
	.long	0x4e4d
	.uleb128 0x19
	.ascii "_M_exception_object\0"
	.byte	0x28
	.byte	0x58
	.byte	0xd
	.long	0x1a185
	.byte	0
	.uleb128 0xa3
	.secrel32	.LASF72
	.byte	0x28
	.byte	0x5a
	.byte	0x10
	.ascii "_ZNSt15__exception_ptr13exception_ptrC4EPv\0"
	.long	0x4a56
	.long	0x4a61
	.uleb128 0x2
	.long	0x1b861
	.uleb128 0x1
	.long	0x1a185
	.byte	0
	.uleb128 0x42
	.ascii "_M_addref\0"
	.byte	0x28
	.byte	0x5c
	.byte	0xc
	.ascii "_ZNSt15__exception_ptr13exception_ptr9_M_addrefEv\0"
	.long	0x4aa9
	.long	0x4aaf
	.uleb128 0x2
	.long	0x1b861
	.byte	0
	.uleb128 0x42
	.ascii "_M_release\0"
	.byte	0x28
	.byte	0x5d
	.byte	0xc
	.ascii "_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv\0"
	.long	0x4afa
	.long	0x4b00
	.uleb128 0x2
	.long	0x1b861
	.byte	0
	.uleb128 0x35
	.ascii "_M_get\0"
	.byte	0x28
	.byte	0x5f
	.byte	0xd
	.ascii "_ZNKSt15__exception_ptr13exception_ptr6_M_getEv\0"
	.long	0x1a185
	.long	0x4b47
	.long	0x4b4d
	.uleb128 0x2
	.long	0x1b866
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF72
	.byte	0x28
	.byte	0x67
	.byte	0x7
	.ascii "_ZNSt15__exception_ptr13exception_ptrC4Ev\0"
	.long	0x4b87
	.long	0x4b8d
	.uleb128 0x2
	.long	0x1b861
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF72
	.byte	0x28
	.byte	0x69
	.byte	0x7
	.ascii "_ZNSt15__exception_ptr13exception_ptrC4ERKS0_\0"
	.long	0x4bcb
	.long	0x4bd6
	.uleb128 0x2
	.long	0x1b861
	.uleb128 0x1
	.long	0x1b86b
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF72
	.byte	0x28
	.byte	0x6c
	.byte	0x7
	.ascii "_ZNSt15__exception_ptr13exception_ptrC4EDn\0"
	.long	0x4c11
	.long	0x4c1c
	.uleb128 0x2
	.long	0x1b861
	.uleb128 0x1
	.long	0x2e41
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF72
	.byte	0x28
	.byte	0x70
	.byte	0x7
	.ascii "_ZNSt15__exception_ptr13exception_ptrC4EOS0_\0"
	.long	0x4c59
	.long	0x4c64
	.uleb128 0x2
	.long	0x1b861
	.uleb128 0x1
	.long	0x1b870
	.byte	0
	.uleb128 0x29
	.secrel32	.LASF35
	.byte	0x28
	.byte	0x7d
	.byte	0x7
	.ascii "_ZNSt15__exception_ptr13exception_ptraSERKS0_\0"
	.long	0x1b875
	.byte	0x1
	.long	0x4ca7
	.long	0x4cb2
	.uleb128 0x2
	.long	0x1b861
	.uleb128 0x1
	.long	0x1b86b
	.byte	0
	.uleb128 0x29
	.secrel32	.LASF35
	.byte	0x28
	.byte	0x81
	.byte	0x7
	.ascii "_ZNSt15__exception_ptr13exception_ptraSEOS0_\0"
	.long	0x1b875
	.byte	0x1
	.long	0x4cf4
	.long	0x4cff
	.uleb128 0x2
	.long	0x1b861
	.uleb128 0x1
	.long	0x1b870
	.byte	0
	.uleb128 0xa4
	.ascii "~exception_ptr\0"
	.byte	0x28
	.byte	0x88
	.byte	0x7
	.ascii "_ZNSt15__exception_ptr13exception_ptrD4Ev\0"
	.byte	0x1
	.long	0x4d46
	.long	0x4d51
	.uleb128 0x2
	.long	0x1b861
	.uleb128 0x2
	.long	0x191dc
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF73
	.byte	0x28
	.byte	0x8b
	.byte	0x7
	.ascii "_ZNSt15__exception_ptr13exception_ptr4swapERS0_\0"
	.long	0x4d91
	.long	0x4d9c
	.uleb128 0x2
	.long	0x1b861
	.uleb128 0x1
	.long	0x1b875
	.byte	0
	.uleb128 0xa5
	.secrel32	.LASF34
	.byte	0x28
	.byte	0x97
	.byte	0x10
	.ascii "_ZNKSt15__exception_ptr13exception_ptrcvbEv\0"
	.long	0x14cc6
	.byte	0x1
	.long	0x4dde
	.long	0x4de4
	.uleb128 0x2
	.long	0x1b866
	.byte	0
	.uleb128 0xa6
	.ascii "__cxa_exception_type\0"
	.byte	0x28
	.byte	0xac
	.byte	0x7
	.ascii "_ZNKSt15__exception_ptr13exception_ptr20__cxa_exception_typeEv\0"
	.long	0x1b87a
	.byte	0x1
	.long	0x4e46
	.uleb128 0x2
	.long	0x1b866
	.byte	0
	.byte	0
	.uleb128 0xa
	.long	0x49ef
	.uleb128 0x3
	.byte	0x28
	.byte	0x50
	.byte	0x10
	.long	0x4e63
	.byte	0
	.uleb128 0x3
	.byte	0x28
	.byte	0x40
	.byte	0x1a
	.long	0x49ef
	.uleb128 0x86
	.ascii "rethrow_exception\0"
	.byte	0x28
	.byte	0x4c
	.byte	0x8
	.ascii "_ZSt17rethrow_exceptionNSt15__exception_ptr13exception_ptrE\0"
	.long	0x4ec0
	.uleb128 0x1
	.long	0x49ef
	.byte	0
	.uleb128 0x53
	.ascii "type_info\0"
	.uleb128 0xa
	.long	0x4ec0
	.uleb128 0x77
	.ascii "_V2\0"
	.byte	0x29
	.word	0x25c
	.byte	0x14
	.uleb128 0x5f
	.ascii "placeholders\0"
	.byte	0x2a
	.byte	0xdb
	.byte	0xd
	.uleb128 0x3a
	.ascii "allocator<bool>\0"
	.byte	0x1
	.byte	0xc
	.byte	0x8a
	.byte	0xb
	.long	0x5015
	.uleb128 0x48
	.long	0x14fa0
	.byte	0x1
	.uleb128 0x24
	.secrel32	.LASF74
	.byte	0xc
	.byte	0xa8
	.byte	0x7
	.ascii "_ZNSaIbEC4Ev\0"
	.long	0x4f26
	.long	0x4f2c
	.uleb128 0x2
	.long	0x1bd25
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF74
	.byte	0xc
	.byte	0xab
	.byte	0x7
	.ascii "_ZNSaIbEC4ERKS_\0"
	.long	0x4f4c
	.long	0x4f57
	.uleb128 0x2
	.long	0x1bd25
	.uleb128 0x1
	.long	0x1bd2a
	.byte	0
	.uleb128 0x5a
	.secrel32	.LASF35
	.byte	0xc
	.byte	0xb0
	.byte	0x12
	.ascii "_ZNSaIbEaSERKS_\0"
	.long	0x1bd2f
	.long	0x4f7b
	.long	0x4f86
	.uleb128 0x2
	.long	0x1bd25
	.uleb128 0x1
	.long	0x1bd2a
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF75
	.byte	0xc
	.byte	0xba
	.byte	0x7
	.ascii "_ZNSaIbED4Ev\0"
	.long	0x4fa3
	.long	0x4fae
	.uleb128 0x2
	.long	0x1bd25
	.uleb128 0x2
	.long	0x191dc
	.byte	0
	.uleb128 0x29
	.secrel32	.LASF76
	.byte	0xc
	.byte	0xbf
	.byte	0x7
	.ascii "_ZNSaIbE8allocateEy\0"
	.long	0x1aee3
	.byte	0x1
	.long	0x4fd7
	.long	0x4fe2
	.uleb128 0x2
	.long	0x1bd25
	.uleb128 0x1
	.long	0x2f0
	.byte	0
	.uleb128 0x66
	.secrel32	.LASF77
	.ascii "_ZNSaIbE10deallocateEPby\0"
	.long	0x5004
	.uleb128 0x2
	.long	0x1bd25
	.uleb128 0x1
	.long	0x1aee3
	.uleb128 0x1
	.long	0x2f0
	.byte	0
	.byte	0
	.uleb128 0xa
	.long	0x4eea
	.uleb128 0x2f
	.ascii "allocator_traits<std::allocator<bool> >\0"
	.byte	0x1
	.byte	0x10
	.word	0x197
	.byte	0xc
	.long	0x5223
	.uleb128 0x1a
	.secrel32	.LASF78
	.byte	0x10
	.word	0x1a0
	.byte	0xd
	.long	0x1aee3
	.uleb128 0x14
	.secrel32	.LASF76
	.byte	0x10
	.word	0x1cb
	.byte	0x7
	.ascii "_ZNSt16allocator_traitsISaIbEE8allocateERS0_y\0"
	.long	0x504c
	.long	0x50a3
	.uleb128 0x1
	.long	0x1bd34
	.uleb128 0x1
	.long	0x50b5
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF79
	.byte	0x10
	.word	0x19a
	.byte	0xd
	.long	0x4eea
	.uleb128 0xa
	.long	0x50a3
	.uleb128 0x1a
	.secrel32	.LASF56
	.byte	0x10
	.word	0x1af
	.byte	0xd
	.long	0x2f0
	.uleb128 0x14
	.secrel32	.LASF76
	.byte	0x10
	.word	0x1d9
	.byte	0x7
	.ascii "_ZNSt16allocator_traitsISaIbEE8allocateERS0_yPKv\0"
	.long	0x504c
	.long	0x5114
	.uleb128 0x1
	.long	0x1bd34
	.uleb128 0x1
	.long	0x50b5
	.uleb128 0x1
	.long	0x5114
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF80
	.byte	0x10
	.word	0x1a9
	.byte	0xd
	.long	0x1a551
	.uleb128 0x67
	.secrel32	.LASF77
	.ascii "_ZNSt16allocator_traitsISaIbEE10deallocateERS0_Pby\0"
	.long	0x516d
	.uleb128 0x1
	.long	0x1bd34
	.uleb128 0x1
	.long	0x504c
	.uleb128 0x1
	.long	0x50b5
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF81
	.byte	0x10
	.word	0x21f
	.byte	0x7
	.ascii "_ZNSt16allocator_traitsISaIbEE8max_sizeERKS0_\0"
	.long	0x50b5
	.long	0x51b2
	.uleb128 0x1
	.long	0x1bd39
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF82
	.byte	0x10
	.word	0x22e
	.byte	0x7
	.ascii "_ZNSt16allocator_traitsISaIbEE37select_on_container_copy_constructionERKS0_\0"
	.long	0x50a3
	.long	0x5215
	.uleb128 0x1
	.long	0x1bd39
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF83
	.byte	0x10
	.word	0x1be
	.byte	0x8
	.long	0x5223
	.byte	0
	.uleb128 0x3a
	.ascii "allocator<long unsigned int>\0"
	.byte	0x1
	.byte	0xc
	.byte	0x8a
	.byte	0xb
	.long	0x535b
	.uleb128 0x48
	.long	0x153f0
	.byte	0x1
	.uleb128 0x24
	.secrel32	.LASF74
	.byte	0xc
	.byte	0xa8
	.byte	0x7
	.ascii "_ZNSaImEC4Ev\0"
	.long	0x526c
	.long	0x5272
	.uleb128 0x2
	.long	0x1bd61
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF74
	.byte	0xc
	.byte	0xab
	.byte	0x7
	.ascii "_ZNSaImEC4ERKS_\0"
	.long	0x5292
	.long	0x529d
	.uleb128 0x2
	.long	0x1bd61
	.uleb128 0x1
	.long	0x1bd6b
	.byte	0
	.uleb128 0x5a
	.secrel32	.LASF35
	.byte	0xc
	.byte	0xb0
	.byte	0x12
	.ascii "_ZNSaImEaSERKS_\0"
	.long	0x1bd70
	.long	0x52c1
	.long	0x52cc
	.uleb128 0x2
	.long	0x1bd61
	.uleb128 0x1
	.long	0x1bd6b
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF75
	.byte	0xc
	.byte	0xba
	.byte	0x7
	.ascii "_ZNSaImED4Ev\0"
	.long	0x52e9
	.long	0x52f4
	.uleb128 0x2
	.long	0x1bd61
	.uleb128 0x2
	.long	0x191dc
	.byte	0
	.uleb128 0x29
	.secrel32	.LASF76
	.byte	0xc
	.byte	0xbf
	.byte	0x7
	.ascii "_ZNSaImE8allocateEy\0"
	.long	0x1bd4d
	.byte	0x1
	.long	0x531d
	.long	0x5328
	.uleb128 0x2
	.long	0x1bd61
	.uleb128 0x1
	.long	0x2f0
	.byte	0
	.uleb128 0x66
	.secrel32	.LASF77
	.ascii "_ZNSaImE10deallocateEPmy\0"
	.long	0x534a
	.uleb128 0x2
	.long	0x1bd61
	.uleb128 0x1
	.long	0x1bd4d
	.uleb128 0x1
	.long	0x2f0
	.byte	0
	.byte	0
	.uleb128 0xa
	.long	0x5223
	.uleb128 0x2f
	.ascii "allocator_traits<std::allocator<long unsigned int> >\0"
	.byte	0x1
	.byte	0x10
	.word	0x197
	.byte	0xc
	.long	0x5566
	.uleb128 0x1a
	.secrel32	.LASF78
	.byte	0x10
	.word	0x1a0
	.byte	0xd
	.long	0x1bd4d
	.uleb128 0x14
	.secrel32	.LASF76
	.byte	0x10
	.word	0x1cb
	.byte	0x7
	.ascii "_ZNSt16allocator_traitsISaImEE8allocateERS0_y\0"
	.long	0x539f
	.long	0x53f6
	.uleb128 0x1
	.long	0x1bd75
	.uleb128 0x1
	.long	0x5408
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF79
	.byte	0x10
	.word	0x19a
	.byte	0xd
	.long	0x5223
	.uleb128 0xa
	.long	0x53f6
	.uleb128 0x1a
	.secrel32	.LASF56
	.byte	0x10
	.word	0x1af
	.byte	0xd
	.long	0x2f0
	.uleb128 0x14
	.secrel32	.LASF76
	.byte	0x10
	.word	0x1d9
	.byte	0x7
	.ascii "_ZNSt16allocator_traitsISaImEE8allocateERS0_yPKv\0"
	.long	0x539f
	.long	0x5467
	.uleb128 0x1
	.long	0x1bd75
	.uleb128 0x1
	.long	0x5408
	.uleb128 0x1
	.long	0x5467
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF80
	.byte	0x10
	.word	0x1a9
	.byte	0xd
	.long	0x1a551
	.uleb128 0x67
	.secrel32	.LASF77
	.ascii "_ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmy\0"
	.long	0x54c0
	.uleb128 0x1
	.long	0x1bd75
	.uleb128 0x1
	.long	0x539f
	.uleb128 0x1
	.long	0x5408
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF81
	.byte	0x10
	.word	0x21f
	.byte	0x7
	.ascii "_ZNSt16allocator_traitsISaImEE8max_sizeERKS0_\0"
	.long	0x5408
	.long	0x5505
	.uleb128 0x1
	.long	0x1bd7a
	.byte	0
	.uleb128 0xa7
	.secrel32	.LASF82
	.byte	0x10
	.word	0x22e
	.byte	0x7
	.ascii "_ZNSt16allocator_traitsISaImEE37select_on_container_copy_constructionERKS0_\0"
	.long	0x53f6
	.uleb128 0x1
	.long	0x1bd7a
	.byte	0
	.byte	0
	.uleb128 0x2f
	.ascii "_Bvector_base<std::allocator<bool> >\0"
	.byte	0x28
	.byte	0x8
	.word	0x1a4
	.byte	0xc
	.long	0x5ddd
	.uleb128 0x6a
	.secrel32	.LASF84
	.byte	0x28
	.byte	0x8
	.word	0x1ac
	.byte	0xe
	.long	0x582c
	.uleb128 0x5b
	.secrel32	.LASF85
	.byte	0x8
	.word	0x1af
	.byte	0x10
	.long	0x3290
	.byte	0
	.uleb128 0x5b
	.secrel32	.LASF86
	.byte	0x8
	.word	0x1b8
	.byte	0x10
	.long	0x3290
	.byte	0x10
	.uleb128 0x5b
	.secrel32	.LASF87
	.byte	0x8
	.word	0x1b9
	.byte	0xf
	.long	0x5831
	.byte	0x20
	.uleb128 0x20
	.secrel32	.LASF84
	.byte	0x8
	.word	0x1bb
	.byte	0x2
	.ascii "_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC4Ev\0"
	.long	0x5612
	.long	0x5618
	.uleb128 0x2
	.long	0x1bd84
	.byte	0
	.uleb128 0x51
	.secrel32	.LASF84
	.byte	0x8
	.word	0x1c0
	.byte	0x2
	.ascii "_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC4ERKS2_\0"
	.long	0x5661
	.long	0x566c
	.uleb128 0x2
	.long	0x1bd84
	.uleb128 0x1
	.long	0x1bd8e
	.byte	0
	.uleb128 0xa8
	.secrel32	.LASF35
	.byte	0x8
	.word	0x1c2
	.byte	0x2
	.ascii "_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataaSERKS2_\0"
	.long	0x1bd93
	.byte	0x1
	.long	0x56bb
	.long	0x56c6
	.uleb128 0x2
	.long	0x1bd84
	.uleb128 0x1
	.long	0x1bd8e
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF84
	.byte	0x8
	.word	0x1c4
	.byte	0x2
	.ascii "_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC4EOS2_\0"
	.long	0x570e
	.long	0x5719
	.uleb128 0x2
	.long	0x1bd84
	.uleb128 0x1
	.long	0x1bd98
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF88
	.byte	0x8
	.word	0x1c9
	.byte	0x2
	.ascii "_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_data12_M_move_dataEOS2_\0"
	.long	0x576d
	.long	0x5778
	.uleb128 0x2
	.long	0x1bd84
	.uleb128 0x1
	.long	0x1bd98
	.byte	0
	.uleb128 0x87
	.ascii "_M_reset\0"
	.word	0x1d1
	.byte	0x2
	.ascii "_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_data8_M_resetEv\0"
	.long	0x57c9
	.long	0x57cf
	.uleb128 0x2
	.long	0x1bd84
	.byte	0
	.uleb128 0xa9
	.secrel32	.LASF89
	.byte	0x8
	.word	0x1d5
	.byte	0x2
	.ascii "_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_data12_M_swap_dataERS2_\0"
	.long	0x5820
	.uleb128 0x2
	.long	0x1bd84
	.uleb128 0x1
	.long	0x1bd93
	.byte	0
	.byte	0
	.uleb128 0xa
	.long	0x5595
	.uleb128 0x1a
	.secrel32	.LASF90
	.byte	0x8
	.word	0x1aa
	.byte	0x33
	.long	0x15824
	.uleb128 0x6a
	.secrel32	.LASF91
	.byte	0x28
	.byte	0x8
	.word	0x1dd
	.byte	0xe
	.long	0x5a41
	.uleb128 0x39
	.long	0x5223
	.uleb128 0x39
	.long	0x5595
	.uleb128 0x20
	.secrel32	.LASF91
	.byte	0x8
	.word	0x1e0
	.byte	0x2
	.ascii "_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC4Ev\0"
	.long	0x5896
	.long	0x589c
	.uleb128 0x2
	.long	0x1bd9d
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF91
	.byte	0x8
	.word	0x1e5
	.byte	0x2
	.ascii "_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC4ERKSaImE\0"
	.long	0x58e2
	.long	0x58ed
	.uleb128 0x2
	.long	0x1bd9d
	.uleb128 0x1
	.long	0x1bda7
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF91
	.byte	0x8
	.word	0x1ec
	.byte	0x2
	.ascii "_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC4EOS2_\0"
	.long	0x5930
	.long	0x593b
	.uleb128 0x2
	.long	0x1bd9d
	.uleb128 0x1
	.long	0x1bdac
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF91
	.byte	0x8
	.word	0x1f0
	.byte	0x2
	.ascii "_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC4EOSaImEOS2_\0"
	.long	0x5984
	.long	0x5994
	.uleb128 0x2
	.long	0x1bd9d
	.uleb128 0x1
	.long	0x1bdb1
	.uleb128 0x1
	.long	0x1bdac
	.byte	0
	.uleb128 0x68
	.ascii "_M_end_addr\0"
	.byte	0x8
	.word	0x1f6
	.byte	0x2
	.ascii "_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv\0"
	.long	0x1aec0
	.long	0x59ec
	.long	0x59f2
	.uleb128 0x2
	.long	0x1bdb6
	.byte	0
	.uleb128 0x6b
	.ascii "~_Bvector_impl\0"
	.ascii "_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD4Ev\0"
	.long	0x5a35
	.uleb128 0x2
	.long	0x1bd9d
	.uleb128 0x2
	.long	0x191dc
	.byte	0
	.byte	0
	.uleb128 0xa
	.long	0x583e
	.uleb128 0x46
	.ascii "_Bit_alloc_type\0"
	.byte	0x8
	.word	0x1a7
	.byte	0x22
	.long	0x153d0
	.uleb128 0xa
	.long	0x5a46
	.uleb128 0x2b
	.secrel32	.LASF92
	.byte	0x8
	.word	0x202
	.byte	0x7
	.ascii "_ZNSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv\0"
	.long	0x1bdc0
	.long	0x5aad
	.long	0x5ab3
	.uleb128 0x2
	.long	0x1bdc5
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF92
	.byte	0x8
	.word	0x206
	.byte	0x7
	.ascii "_ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv\0"
	.long	0x1bda7
	.long	0x5afd
	.long	0x5b03
	.uleb128 0x2
	.long	0x1bdcf
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF79
	.byte	0x8
	.word	0x1ff
	.byte	0x16
	.long	0x4eea
	.uleb128 0xa
	.long	0x5b03
	.uleb128 0x2b
	.secrel32	.LASF93
	.byte	0x8
	.word	0x20a
	.byte	0x7
	.ascii "_ZNKSt13_Bvector_baseISaIbEE13get_allocatorEv\0"
	.long	0x5b03
	.long	0x5b58
	.long	0x5b5e
	.uleb128 0x2
	.long	0x1bdcf
	.byte	0
	.uleb128 0x51
	.secrel32	.LASF94
	.byte	0x8
	.word	0x20e
	.byte	0x7
	.ascii "_ZNSt13_Bvector_baseISaIbEEC4Ev\0"
	.long	0x5b8f
	.long	0x5b95
	.uleb128 0x2
	.long	0x1bdc5
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF94
	.byte	0x8
	.word	0x213
	.byte	0x7
	.ascii "_ZNSt13_Bvector_baseISaIbEEC4ERKS0_\0"
	.long	0x5bca
	.long	0x5bd5
	.uleb128 0x2
	.long	0x1bdc5
	.uleb128 0x1
	.long	0x1bdd9
	.byte	0
	.uleb128 0x51
	.secrel32	.LASF94
	.byte	0x8
	.word	0x217
	.byte	0x7
	.ascii "_ZNSt13_Bvector_baseISaIbEEC4EOS1_\0"
	.long	0x5c09
	.long	0x5c14
	.uleb128 0x2
	.long	0x1bdc5
	.uleb128 0x1
	.long	0x1bdde
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF94
	.byte	0x8
	.word	0x219
	.byte	0x7
	.ascii "_ZNSt13_Bvector_baseISaIbEEC4EOS1_RKS0_\0"
	.long	0x5c4d
	.long	0x5c5d
	.uleb128 0x2
	.long	0x1bdc5
	.uleb128 0x1
	.long	0x1bdde
	.uleb128 0x1
	.long	0x1bdd9
	.byte	0
	.uleb128 0x87
	.ascii "~_Bvector_base\0"
	.word	0x21e
	.byte	0x7
	.ascii "_ZNSt13_Bvector_baseISaIbEED4Ev\0"
	.long	0x5c99
	.long	0x5ca4
	.uleb128 0x2
	.long	0x1bdc5
	.uleb128 0x2
	.long	0x191dc
	.byte	0
	.uleb128 0x5c
	.secrel32	.LASF95
	.byte	0x8
	.word	0x222
	.byte	0x15
	.long	0x583e
	.uleb128 0x7
	.secrel32	.LASF96
	.byte	0x8
	.word	0x225
	.byte	0x7
	.ascii "_ZNSt13_Bvector_baseISaIbEE11_M_allocateEy\0"
	.long	0x5831
	.byte	0x2
	.long	0x5cf2
	.long	0x5cfd
	.uleb128 0x2
	.long	0x1bdc5
	.uleb128 0x1
	.long	0x2f0
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF97
	.byte	0x8
	.word	0x229
	.byte	0x7
	.ascii "_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv\0"
	.byte	0x2
	.long	0x5d3c
	.long	0x5d42
	.uleb128 0x2
	.long	0x1bdc5
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF88
	.byte	0x8
	.word	0x237
	.byte	0x7
	.ascii "_ZNSt13_Bvector_baseISaIbEE12_M_move_dataEOS1_\0"
	.byte	0x2
	.long	0x5d83
	.long	0x5d8e
	.uleb128 0x2
	.long	0x1bdc5
	.uleb128 0x1
	.long	0x1bdde
	.byte	0
	.uleb128 0xaa
	.ascii "_S_nword\0"
	.byte	0x8
	.word	0x23c
	.byte	0x7
	.ascii "_ZNSt13_Bvector_baseISaIbEE8_S_nwordEy\0"
	.long	0x2f0
	.byte	0x2
	.long	0x5dd3
	.uleb128 0x1
	.long	0x2f0
	.byte	0
	.uleb128 0x4
	.secrel32	.LASF98
	.long	0x4eea
	.byte	0
	.uleb128 0xa
	.long	0x5566
	.uleb128 0x4d
	.ascii "vector<bool, std::allocator<bool> >\0"
	.byte	0x28
	.byte	0x8
	.word	0x254
	.long	0x71bf
	.uleb128 0x28
	.byte	0x8
	.word	0x254
	.byte	0xb
	.long	0x5cb1
	.uleb128 0x28
	.byte	0x8
	.word	0x254
	.byte	0xb
	.long	0x5cfd
	.uleb128 0x28
	.byte	0x8
	.word	0x254
	.byte	0xb
	.long	0x5d8e
	.uleb128 0x28
	.byte	0x8
	.word	0x254
	.byte	0xb
	.long	0x5ab3
	.uleb128 0x28
	.byte	0x8
	.word	0x254
	.byte	0xb
	.long	0x5a64
	.uleb128 0x48
	.long	0x5566
	.byte	0x2
	.uleb128 0x1b
	.secrel32	.LASF79
	.byte	0x8
	.word	0x26a
	.byte	0x1a
	.long	0x4eea
	.uleb128 0xa
	.long	0x5e42
	.uleb128 0x7
	.secrel32	.LASF93
	.byte	0x8
	.word	0x26d
	.byte	0x7
	.ascii "_ZNKSt6vectorIbSaIbEE13get_allocatorEv\0"
	.long	0x5e42
	.byte	0x1
	.long	0x5e91
	.long	0x5e97
	.uleb128 0x2
	.long	0x1bde3
	.byte	0
	.uleb128 0x54
	.secrel32	.LASF99
	.byte	0x8
	.word	0x278
	.ascii "_ZNSt6vectorIbSaIbEEC4Ev\0"
	.long	0x5ec0
	.long	0x5ec6
	.uleb128 0x2
	.long	0x1bded
	.byte	0
	.uleb128 0x43
	.secrel32	.LASF99
	.byte	0x8
	.word	0x27e
	.ascii "_ZNSt6vectorIbSaIbEEC4ERKS0_\0"
	.long	0x5ef3
	.long	0x5efe
	.uleb128 0x2
	.long	0x1bded
	.uleb128 0x1
	.long	0x1bdf7
	.byte	0
	.uleb128 0x43
	.secrel32	.LASF99
	.byte	0x8
	.word	0x283
	.ascii "_ZNSt6vectorIbSaIbEEC4EyRKS0_\0"
	.long	0x5f2c
	.long	0x5f3c
	.uleb128 0x2
	.long	0x1bded
	.uleb128 0x1
	.long	0x5f3c
	.uleb128 0x1
	.long	0x1bdf7
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF56
	.byte	0x8
	.word	0x260
	.byte	0x1a
	.long	0x2f0
	.uleb128 0xa
	.long	0x5f3c
	.uleb128 0x12
	.secrel32	.LASF99
	.byte	0x8
	.word	0x287
	.byte	0x7
	.ascii "_ZNSt6vectorIbSaIbEEC4EyRKbRKS0_\0"
	.byte	0x1
	.long	0x5f81
	.long	0x5f96
	.uleb128 0x2
	.long	0x1bded
	.uleb128 0x1
	.long	0x5f3c
	.uleb128 0x1
	.long	0x1af3d
	.uleb128 0x1
	.long	0x1bdf7
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF99
	.byte	0x8
	.word	0x294
	.byte	0x7
	.ascii "_ZNSt6vectorIbSaIbEEC4ERKS1_\0"
	.byte	0x1
	.long	0x5fc5
	.long	0x5fd0
	.uleb128 0x2
	.long	0x1bded
	.uleb128 0x1
	.long	0x1bdfc
	.byte	0
	.uleb128 0x54
	.secrel32	.LASF99
	.byte	0x8
	.word	0x29c
	.ascii "_ZNSt6vectorIbSaIbEEC4EOS1_\0"
	.long	0x5ffc
	.long	0x6007
	.uleb128 0x2
	.long	0x1bded
	.uleb128 0x1
	.long	0x1be01
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF99
	.byte	0x8
	.word	0x29f
	.byte	0x7
	.ascii "_ZNSt6vectorIbSaIbEEC4EOS1_RKS0_St17integral_constantIbLb1EE\0"
	.long	0x6055
	.long	0x606a
	.uleb128 0x2
	.long	0x1bded
	.uleb128 0x1
	.long	0x1be01
	.uleb128 0x1
	.long	0x1bdf7
	.uleb128 0x1
	.long	0x2b7e
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF99
	.byte	0x8
	.word	0x2a3
	.byte	0x7
	.ascii "_ZNSt6vectorIbSaIbEEC4EOS1_RKS0_St17integral_constantIbLb0EE\0"
	.long	0x60b8
	.long	0x60cd
	.uleb128 0x2
	.long	0x1bded
	.uleb128 0x1
	.long	0x1be01
	.uleb128 0x1
	.long	0x1bdf7
	.uleb128 0x1
	.long	0x2dd
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF99
	.byte	0x8
	.word	0x2b1
	.byte	0x7
	.ascii "_ZNSt6vectorIbSaIbEEC4EOS1_RKS0_\0"
	.byte	0x1
	.long	0x6100
	.long	0x6110
	.uleb128 0x2
	.long	0x1bded
	.uleb128 0x1
	.long	0x1be01
	.uleb128 0x1
	.long	0x1bdf7
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF99
	.byte	0x8
	.word	0x2b7
	.byte	0x7
	.ascii "_ZNSt6vectorIbSaIbEEC4ERKS1_RKS0_\0"
	.byte	0x1
	.long	0x6144
	.long	0x6154
	.uleb128 0x2
	.long	0x1bded
	.uleb128 0x1
	.long	0x1bdfc
	.uleb128 0x1
	.long	0x1bdf7
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF99
	.byte	0x8
	.word	0x2be
	.byte	0x7
	.ascii "_ZNSt6vectorIbSaIbEEC4ESt16initializer_listIbERKS0_\0"
	.byte	0x1
	.long	0x619a
	.long	0x61aa
	.uleb128 0x2
	.long	0x1bded
	.uleb128 0x1
	.long	0x384f
	.uleb128 0x1
	.long	0x1bdf7
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF100
	.byte	0x8
	.word	0x2dd
	.byte	0x7
	.ascii "_ZNSt6vectorIbSaIbEED4Ev\0"
	.byte	0x1
	.long	0x61d5
	.long	0x61e0
	.uleb128 0x2
	.long	0x1bded
	.uleb128 0x2
	.long	0x191dc
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF35
	.byte	0x8
	.word	0x2e0
	.byte	0x7
	.ascii "_ZNSt6vectorIbSaIbEEaSERKS1_\0"
	.long	0x1be06
	.byte	0x1
	.long	0x6213
	.long	0x621e
	.uleb128 0x2
	.long	0x1bded
	.uleb128 0x1
	.long	0x1bdfc
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF35
	.byte	0x8
	.word	0x2ff
	.byte	0x7
	.ascii "_ZNSt6vectorIbSaIbEEaSEOS1_\0"
	.long	0x1be06
	.byte	0x1
	.long	0x6250
	.long	0x625b
	.uleb128 0x2
	.long	0x1bded
	.uleb128 0x1
	.long	0x1be01
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF35
	.byte	0x8
	.word	0x318
	.byte	0x7
	.ascii "_ZNSt6vectorIbSaIbEEaSESt16initializer_listIbE\0"
	.long	0x1be06
	.byte	0x1
	.long	0x62a0
	.long	0x62ab
	.uleb128 0x2
	.long	0x1bded
	.uleb128 0x1
	.long	0x384f
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF101
	.byte	0x8
	.word	0x324
	.byte	0x7
	.ascii "_ZNSt6vectorIbSaIbEE6assignEyRKb\0"
	.byte	0x1
	.long	0x62de
	.long	0x62ee
	.uleb128 0x2
	.long	0x1bded
	.uleb128 0x1
	.long	0x5f3c
	.uleb128 0x1
	.long	0x1af3d
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF101
	.byte	0x8
	.word	0x33a
	.byte	0x7
	.ascii "_ZNSt6vectorIbSaIbEE6assignESt16initializer_listIbE\0"
	.byte	0x1
	.long	0x6334
	.long	0x633f
	.uleb128 0x2
	.long	0x1bded
	.uleb128 0x1
	.long	0x384f
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF43
	.byte	0x8
	.word	0x266
	.byte	0x20
	.long	0x3290
	.uleb128 0x7
	.secrel32	.LASF60
	.byte	0x8
	.word	0x33f
	.byte	0x7
	.ascii "_ZNSt6vectorIbSaIbEE5beginEv\0"
	.long	0x633f
	.byte	0x1
	.long	0x637f
	.long	0x6385
	.uleb128 0x2
	.long	0x1bded
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF54
	.byte	0x8
	.word	0x267
	.byte	0x25
	.long	0x3524
	.uleb128 0x7
	.secrel32	.LASF60
	.byte	0x8
	.word	0x343
	.byte	0x7
	.ascii "_ZNKSt6vectorIbSaIbEE5beginEv\0"
	.long	0x6385
	.byte	0x1
	.long	0x63c6
	.long	0x63cc
	.uleb128 0x2
	.long	0x1bde3
	.byte	0
	.uleb128 0x30
	.ascii "end\0"
	.byte	0x8
	.word	0x347
	.byte	0x7
	.ascii "_ZNSt6vectorIbSaIbEE3endEv\0"
	.long	0x633f
	.byte	0x1
	.long	0x63fd
	.long	0x6403
	.uleb128 0x2
	.long	0x1bded
	.byte	0
	.uleb128 0x30
	.ascii "end\0"
	.byte	0x8
	.word	0x34b
	.byte	0x7
	.ascii "_ZNKSt6vectorIbSaIbEE3endEv\0"
	.long	0x6385
	.byte	0x1
	.long	0x6435
	.long	0x643b
	.uleb128 0x2
	.long	0x1bde3
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF62
	.byte	0x8
	.word	0x269
	.byte	0x30
	.long	0x3b04
	.uleb128 0x7
	.secrel32	.LASF102
	.byte	0x8
	.word	0x34f
	.byte	0x7
	.ascii "_ZNSt6vectorIbSaIbEE6rbeginEv\0"
	.long	0x643b
	.byte	0x1
	.long	0x647c
	.long	0x6482
	.uleb128 0x2
	.long	0x1bded
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF103
	.byte	0x8
	.word	0x268
	.byte	0x35
	.long	0x417d
	.uleb128 0x7
	.secrel32	.LASF102
	.byte	0x8
	.word	0x353
	.byte	0x7
	.ascii "_ZNKSt6vectorIbSaIbEE6rbeginEv\0"
	.long	0x6482
	.byte	0x1
	.long	0x64c4
	.long	0x64ca
	.uleb128 0x2
	.long	0x1bde3
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF104
	.byte	0x8
	.word	0x357
	.byte	0x7
	.ascii "_ZNSt6vectorIbSaIbEE4rendEv\0"
	.long	0x643b
	.byte	0x1
	.long	0x64fc
	.long	0x6502
	.uleb128 0x2
	.long	0x1bded
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF104
	.byte	0x8
	.word	0x35b
	.byte	0x7
	.ascii "_ZNKSt6vectorIbSaIbEE4rendEv\0"
	.long	0x6482
	.byte	0x1
	.long	0x6535
	.long	0x653b
	.uleb128 0x2
	.long	0x1bde3
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF105
	.byte	0x8
	.word	0x360
	.byte	0x7
	.ascii "_ZNKSt6vectorIbSaIbEE6cbeginEv\0"
	.long	0x6385
	.byte	0x1
	.long	0x6570
	.long	0x6576
	.uleb128 0x2
	.long	0x1bde3
	.byte	0
	.uleb128 0x30
	.ascii "cend\0"
	.byte	0x8
	.word	0x364
	.byte	0x7
	.ascii "_ZNKSt6vectorIbSaIbEE4cendEv\0"
	.long	0x6385
	.byte	0x1
	.long	0x65aa
	.long	0x65b0
	.uleb128 0x2
	.long	0x1bde3
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF106
	.byte	0x8
	.word	0x368
	.byte	0x7
	.ascii "_ZNKSt6vectorIbSaIbEE7crbeginEv\0"
	.long	0x6482
	.byte	0x1
	.long	0x65e6
	.long	0x65ec
	.uleb128 0x2
	.long	0x1bde3
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF107
	.byte	0x8
	.word	0x36c
	.byte	0x7
	.ascii "_ZNKSt6vectorIbSaIbEE5crendEv\0"
	.long	0x6482
	.byte	0x1
	.long	0x6620
	.long	0x6626
	.uleb128 0x2
	.long	0x1bde3
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF59
	.byte	0x8
	.word	0x371
	.byte	0x7
	.ascii "_ZNKSt6vectorIbSaIbEE4sizeEv\0"
	.long	0x5f3c
	.byte	0x1
	.long	0x6659
	.long	0x665f
	.uleb128 0x2
	.long	0x1bde3
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF81
	.byte	0x8
	.word	0x375
	.byte	0x7
	.ascii "_ZNKSt6vectorIbSaIbEE8max_sizeEv\0"
	.long	0x5f3c
	.byte	0x1
	.long	0x6696
	.long	0x669c
	.uleb128 0x2
	.long	0x1bde3
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF108
	.byte	0x8
	.word	0x381
	.byte	0x7
	.ascii "_ZNKSt6vectorIbSaIbEE8capacityEv\0"
	.long	0x5f3c
	.byte	0x1
	.long	0x66d3
	.long	0x66d9
	.uleb128 0x2
	.long	0x1bde3
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF109
	.byte	0x8
	.word	0x386
	.byte	0x7
	.ascii "_ZNKSt6vectorIbSaIbEE5emptyEv\0"
	.long	0x14cc6
	.byte	0x1
	.long	0x670d
	.long	0x6713
	.uleb128 0x2
	.long	0x1bde3
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF45
	.byte	0x8
	.word	0x262
	.byte	0x21
	.long	0x2e72
	.uleb128 0x7
	.secrel32	.LASF51
	.byte	0x8
	.word	0x38a
	.byte	0x7
	.ascii "_ZNSt6vectorIbSaIbEEixEy\0"
	.long	0x6713
	.byte	0x1
	.long	0x674f
	.long	0x675a
	.uleb128 0x2
	.long	0x1bded
	.uleb128 0x1
	.long	0x5f3c
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF53
	.byte	0x8
	.word	0x263
	.byte	0x18
	.long	0x14cc6
	.uleb128 0x7
	.secrel32	.LASF51
	.byte	0x8
	.word	0x38e
	.byte	0x7
	.ascii "_ZNKSt6vectorIbSaIbEEixEy\0"
	.long	0x675a
	.byte	0x1
	.long	0x6797
	.long	0x67a2
	.uleb128 0x2
	.long	0x1bde3
	.uleb128 0x1
	.long	0x5f3c
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF110
	.byte	0x8
	.word	0x393
	.byte	0x7
	.ascii "_ZNKSt6vectorIbSaIbEE14_M_range_checkEy\0"
	.byte	0x2
	.long	0x67dc
	.long	0x67e7
	.uleb128 0x2
	.long	0x1bde3
	.uleb128 0x1
	.long	0x5f3c
	.byte	0
	.uleb128 0x30
	.ascii "at\0"
	.byte	0x8
	.word	0x39e
	.byte	0x7
	.ascii "_ZNSt6vectorIbSaIbEE2atEy\0"
	.long	0x6713
	.byte	0x1
	.long	0x6816
	.long	0x6821
	.uleb128 0x2
	.long	0x1bded
	.uleb128 0x1
	.long	0x5f3c
	.byte	0
	.uleb128 0x30
	.ascii "at\0"
	.byte	0x8
	.word	0x3a2
	.byte	0x7
	.ascii "_ZNKSt6vectorIbSaIbEE2atEy\0"
	.long	0x675a
	.byte	0x1
	.long	0x6851
	.long	0x685c
	.uleb128 0x2
	.long	0x1bde3
	.uleb128 0x1
	.long	0x5f3c
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF111
	.byte	0x8
	.word	0x3a6
	.byte	0x7
	.ascii "_ZNSt6vectorIbSaIbEE7reserveEy\0"
	.byte	0x1
	.long	0x688d
	.long	0x6898
	.uleb128 0x2
	.long	0x1bded
	.uleb128 0x1
	.long	0x5f3c
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF112
	.byte	0x8
	.word	0x3af
	.byte	0x7
	.ascii "_ZNSt6vectorIbSaIbEE5frontEv\0"
	.long	0x6713
	.byte	0x1
	.long	0x68cb
	.long	0x68d1
	.uleb128 0x2
	.long	0x1bded
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF112
	.byte	0x8
	.word	0x3b3
	.byte	0x7
	.ascii "_ZNKSt6vectorIbSaIbEE5frontEv\0"
	.long	0x675a
	.byte	0x1
	.long	0x6905
	.long	0x690b
	.uleb128 0x2
	.long	0x1bde3
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF113
	.byte	0x8
	.word	0x3b7
	.byte	0x7
	.ascii "_ZNSt6vectorIbSaIbEE4backEv\0"
	.long	0x6713
	.byte	0x1
	.long	0x693d
	.long	0x6943
	.uleb128 0x2
	.long	0x1bded
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF113
	.byte	0x8
	.word	0x3bb
	.byte	0x7
	.ascii "_ZNKSt6vectorIbSaIbEE4backEv\0"
	.long	0x675a
	.byte	0x1
	.long	0x6976
	.long	0x697c
	.uleb128 0x2
	.long	0x1bde3
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF114
	.byte	0x8
	.word	0x3c4
	.byte	0x7
	.ascii "_ZNSt6vectorIbSaIbEE4dataEv\0"
	.byte	0x1
	.long	0x69aa
	.long	0x69b0
	.uleb128 0x2
	.long	0x1bded
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF115
	.byte	0x8
	.word	0x3c7
	.byte	0x7
	.ascii "_ZNSt6vectorIbSaIbEE9push_backEb\0"
	.byte	0x1
	.long	0x69e3
	.long	0x69ee
	.uleb128 0x2
	.long	0x1bded
	.uleb128 0x1
	.long	0x14cc6
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF73
	.byte	0x8
	.word	0x3d0
	.byte	0x7
	.ascii "_ZNSt6vectorIbSaIbEE4swapERS1_\0"
	.byte	0x1
	.long	0x6a1f
	.long	0x6a2a
	.uleb128 0x2
	.long	0x1bded
	.uleb128 0x1
	.long	0x1be06
	.byte	0
	.uleb128 0xab
	.secrel32	.LASF73
	.byte	0x8
	.word	0x3dd
	.byte	0x7
	.ascii "_ZNSt6vectorIbSaIbEE4swapESt14_Bit_referenceS2_\0"
	.byte	0x1
	.long	0x6a74
	.uleb128 0x1
	.long	0x6713
	.uleb128 0x1
	.long	0x6713
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF116
	.byte	0x8
	.word	0x3e6
	.byte	0x7
	.ascii "_ZNSt6vectorIbSaIbEE6insertESt19_Bit_const_iteratorRKb\0"
	.long	0x633f
	.byte	0x1
	.long	0x6ac1
	.long	0x6ad1
	.uleb128 0x2
	.long	0x1bded
	.uleb128 0x1
	.long	0x6385
	.uleb128 0x1
	.long	0x1af3d
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF116
	.byte	0x8
	.word	0x40f
	.byte	0x7
	.ascii "_ZNSt6vectorIbSaIbEE6insertESt19_Bit_const_iteratoryRKb\0"
	.long	0x633f
	.byte	0x1
	.long	0x6b1f
	.long	0x6b34
	.uleb128 0x2
	.long	0x1bded
	.uleb128 0x1
	.long	0x6385
	.uleb128 0x1
	.long	0x5f3c
	.uleb128 0x1
	.long	0x1af3d
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF116
	.byte	0x8
	.word	0x41d
	.byte	0x7
	.ascii "_ZNSt6vectorIbSaIbEE6insertESt19_Bit_const_iteratorSt16initializer_listIbE\0"
	.long	0x633f
	.byte	0x1
	.long	0x6b95
	.long	0x6ba5
	.uleb128 0x2
	.long	0x1bded
	.uleb128 0x1
	.long	0x6385
	.uleb128 0x1
	.long	0x384f
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF117
	.byte	0x8
	.word	0x422
	.byte	0x7
	.ascii "_ZNSt6vectorIbSaIbEE8pop_backEv\0"
	.byte	0x1
	.long	0x6bd7
	.long	0x6bdd
	.uleb128 0x2
	.long	0x1bded
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF118
	.byte	0x8
	.word	0x427
	.byte	0x7
	.ascii "_ZNSt6vectorIbSaIbEE5eraseESt19_Bit_const_iterator\0"
	.long	0x633f
	.byte	0x1
	.long	0x6c26
	.long	0x6c31
	.uleb128 0x2
	.long	0x1bded
	.uleb128 0x1
	.long	0x6385
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF118
	.byte	0x8
	.word	0x42f
	.byte	0x7
	.ascii "_ZNSt6vectorIbSaIbEE5eraseESt19_Bit_const_iteratorS2_\0"
	.long	0x633f
	.byte	0x1
	.long	0x6c7d
	.long	0x6c8d
	.uleb128 0x2
	.long	0x1bded
	.uleb128 0x1
	.long	0x6385
	.uleb128 0x1
	.long	0x6385
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF119
	.byte	0x8
	.word	0x436
	.byte	0x7
	.ascii "_ZNSt6vectorIbSaIbEE6resizeEyb\0"
	.byte	0x1
	.long	0x6cbe
	.long	0x6cce
	.uleb128 0x2
	.long	0x1bded
	.uleb128 0x1
	.long	0x5f3c
	.uleb128 0x1
	.long	0x14cc6
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF120
	.byte	0x8
	.word	0x440
	.byte	0x7
	.ascii "_ZNSt6vectorIbSaIbEE13shrink_to_fitEv\0"
	.byte	0x1
	.long	0x6d06
	.long	0x6d0c
	.uleb128 0x2
	.long	0x1bded
	.byte	0
	.uleb128 0x55
	.ascii "flip\0"
	.byte	0x8
	.word	0x445
	.byte	0x7
	.ascii "_ZNSt6vectorIbSaIbEE4flipEv\0"
	.byte	0x1
	.long	0x6d3b
	.long	0x6d41
	.uleb128 0x2
	.long	0x1bded
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF121
	.byte	0x8
	.word	0x44d
	.byte	0x7
	.ascii "_ZNSt6vectorIbSaIbEE5clearEv\0"
	.byte	0x1
	.long	0x6d70
	.long	0x6d76
	.uleb128 0x2
	.long	0x1bded
	.byte	0
	.uleb128 0x30
	.ascii "_M_copy_aligned\0"
	.byte	0x8
	.word	0x468
	.byte	0x7
	.ascii "_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator\0"
	.long	0x633f
	.byte	0x2
	.long	0x6dea
	.long	0x6dff
	.uleb128 0x2
	.long	0x1bded
	.uleb128 0x1
	.long	0x6385
	.uleb128 0x1
	.long	0x6385
	.uleb128 0x1
	.long	0x633f
	.byte	0
	.uleb128 0x55
	.ascii "_M_initialize\0"
	.byte	0x8
	.word	0x471
	.byte	0x7
	.ascii "_ZNSt6vectorIbSaIbEE13_M_initializeEy\0"
	.byte	0x2
	.long	0x6e41
	.long	0x6e4c
	.uleb128 0x2
	.long	0x1bded
	.uleb128 0x1
	.long	0x5f3c
	.byte	0
	.uleb128 0x55
	.ascii "_M_initialize_value\0"
	.byte	0x8
	.word	0x47e
	.byte	0x7
	.ascii "_ZNSt6vectorIbSaIbEE19_M_initialize_valueEb\0"
	.byte	0x2
	.long	0x6e9a
	.long	0x6ea5
	.uleb128 0x2
	.long	0x1bded
	.uleb128 0x1
	.long	0x14cc6
	.byte	0
	.uleb128 0x55
	.ascii "_M_reallocate\0"
	.byte	0xe
	.word	0x32a
	.byte	0x5
	.ascii "_ZNSt6vectorIbSaIbEE13_M_reallocateEy\0"
	.byte	0x2
	.long	0x6ee7
	.long	0x6ef2
	.uleb128 0x2
	.long	0x1bded
	.uleb128 0x1
	.long	0x5f3c
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF122
	.byte	0xe
	.word	0x3ac
	.byte	0x5
	.ascii "_ZNSt6vectorIbSaIbEE16_M_shrink_to_fitEv\0"
	.long	0x14cc6
	.byte	0x2
	.long	0x6f31
	.long	0x6f37
	.uleb128 0x2
	.long	0x1bded
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF123
	.byte	0x8
	.word	0x4c4
	.byte	0x7
	.ascii "_ZNSt6vectorIbSaIbEE14_M_fill_assignEyb\0"
	.byte	0x2
	.long	0x6f71
	.long	0x6f81
	.uleb128 0x2
	.long	0x1bded
	.uleb128 0x1
	.long	0x2f0
	.uleb128 0x1
	.long	0x14cc6
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF124
	.byte	0xe
	.word	0x338
	.byte	0x5
	.ascii "_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratoryb\0"
	.byte	0x2
	.long	0x6fcc
	.long	0x6fe1
	.uleb128 0x2
	.long	0x1bded
	.uleb128 0x1
	.long	0x633f
	.uleb128 0x1
	.long	0x5f3c
	.uleb128 0x1
	.long	0x14cc6
	.byte	0
	.uleb128 0x55
	.ascii "_M_insert_aux\0"
	.byte	0xe
	.word	0x37a
	.byte	0x5
	.ascii "_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb\0"
	.byte	0x2
	.long	0x7034
	.long	0x7044
	.uleb128 0x2
	.long	0x1bded
	.uleb128 0x1
	.long	0x633f
	.uleb128 0x1
	.long	0x14cc6
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF125
	.byte	0x8
	.word	0x51b
	.byte	0x7
	.ascii "_ZNKSt6vectorIbSaIbEE12_M_check_lenEyPKc\0"
	.long	0x5f3c
	.byte	0x2
	.long	0x7083
	.long	0x7093
	.uleb128 0x2
	.long	0x1bde3
	.uleb128 0x1
	.long	0x5f3c
	.uleb128 0x1
	.long	0x19524
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF126
	.byte	0x8
	.word	0x525
	.byte	0x7
	.ascii "_ZNSt6vectorIbSaIbEE15_M_erase_at_endESt13_Bit_iterator\0"
	.byte	0x2
	.long	0x70dd
	.long	0x70e8
	.uleb128 0x2
	.long	0x1bded
	.uleb128 0x1
	.long	0x633f
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF127
	.byte	0xe
	.word	0x396
	.byte	0x5
	.ascii "_ZNSt6vectorIbSaIbEE8_M_eraseESt13_Bit_iterator\0"
	.long	0x633f
	.byte	0x2
	.long	0x712e
	.long	0x7139
	.uleb128 0x2
	.long	0x1bded
	.uleb128 0x1
	.long	0x633f
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF127
	.byte	0xe
	.word	0x3a1
	.byte	0x5
	.ascii "_ZNSt6vectorIbSaIbEE8_M_eraseESt13_Bit_iteratorS2_\0"
	.long	0x633f
	.byte	0x2
	.long	0x7182
	.long	0x7192
	.uleb128 0x2
	.long	0x1bded
	.uleb128 0x1
	.long	0x633f
	.uleb128 0x1
	.long	0x633f
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF90
	.byte	0x8
	.word	0x257
	.byte	0x2d
	.long	0x5831
	.uleb128 0x1b
	.secrel32	.LASF37
	.byte	0x8
	.word	0x261
	.byte	0x1d
	.long	0x2b66
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x14cc6
	.uleb128 0x4c
	.secrel32	.LASF98
	.long	0x4eea
	.byte	0
	.uleb128 0xa
	.long	0x5de2
	.uleb128 0x3a
	.ascii "allocator<DDT::Node>\0"
	.byte	0x1
	.byte	0xc
	.byte	0x8a
	.byte	0xb
	.long	0x7334
	.uleb128 0x48
	.long	0x1583a
	.byte	0x1
	.uleb128 0x24
	.secrel32	.LASF74
	.byte	0xc
	.byte	0xa8
	.byte	0x7
	.ascii "_ZNSaIN3DDT4NodeEEC4Ev\0"
	.long	0x720f
	.long	0x7215
	.uleb128 0x2
	.long	0x1c4ef
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF74
	.byte	0xc
	.byte	0xab
	.byte	0x7
	.ascii "_ZNSaIN3DDT4NodeEEC4ERKS1_\0"
	.long	0x7240
	.long	0x724b
	.uleb128 0x2
	.long	0x1c4ef
	.uleb128 0x1
	.long	0x1c4f9
	.byte	0
	.uleb128 0x5a
	.secrel32	.LASF35
	.byte	0xc
	.byte	0xb0
	.byte	0x12
	.ascii "_ZNSaIN3DDT4NodeEEaSERKS1_\0"
	.long	0x1c4fe
	.long	0x727a
	.long	0x7285
	.uleb128 0x2
	.long	0x1c4ef
	.uleb128 0x1
	.long	0x1c4f9
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF75
	.byte	0xc
	.byte	0xba
	.byte	0x7
	.ascii "_ZNSaIN3DDT4NodeEED4Ev\0"
	.long	0x72ac
	.long	0x72b7
	.uleb128 0x2
	.long	0x1c4ef
	.uleb128 0x2
	.long	0x191dc
	.byte	0
	.uleb128 0x29
	.secrel32	.LASF76
	.byte	0xc
	.byte	0xbf
	.byte	0x7
	.ascii "_ZNSaIN3DDT4NodeEE8allocateEy\0"
	.long	0x1c4db
	.byte	0x1
	.long	0x72ea
	.long	0x72f5
	.uleb128 0x2
	.long	0x1c4ef
	.uleb128 0x1
	.long	0x2f0
	.byte	0
	.uleb128 0x66
	.secrel32	.LASF77
	.ascii "_ZNSaIN3DDT4NodeEE10deallocateEPS0_y\0"
	.long	0x7323
	.uleb128 0x2
	.long	0x1c4ef
	.uleb128 0x1
	.long	0x1c4db
	.uleb128 0x1
	.long	0x2f0
	.byte	0
	.byte	0
	.uleb128 0xa
	.long	0x71c4
	.uleb128 0x2f
	.ascii "allocator_traits<std::allocator<DDT::Node> >\0"
	.byte	0x1
	.byte	0x10
	.word	0x197
	.byte	0xc
	.long	0x768d
	.uleb128 0x1a
	.secrel32	.LASF78
	.byte	0x10
	.word	0x1a0
	.byte	0xd
	.long	0x1c4db
	.uleb128 0x14
	.secrel32	.LASF76
	.byte	0x10
	.word	0x1cb
	.byte	0x7
	.ascii "_ZNSt16allocator_traitsISaIN3DDT4NodeEEE8allocateERS2_y\0"
	.long	0x7370
	.long	0x73d1
	.uleb128 0x1
	.long	0x1c503
	.uleb128 0x1
	.long	0x73e3
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF79
	.byte	0x10
	.word	0x19a
	.byte	0xd
	.long	0x71c4
	.uleb128 0xa
	.long	0x73d1
	.uleb128 0x1a
	.secrel32	.LASF56
	.byte	0x10
	.word	0x1af
	.byte	0xd
	.long	0x2f0
	.uleb128 0x14
	.secrel32	.LASF76
	.byte	0x10
	.word	0x1d9
	.byte	0x7
	.ascii "_ZNSt16allocator_traitsISaIN3DDT4NodeEEE8allocateERS2_yPKv\0"
	.long	0x7370
	.long	0x744c
	.uleb128 0x1
	.long	0x1c503
	.uleb128 0x1
	.long	0x73e3
	.uleb128 0x1
	.long	0x744c
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF80
	.byte	0x10
	.word	0x1a9
	.byte	0xd
	.long	0x1a551
	.uleb128 0x67
	.secrel32	.LASF77
	.ascii "_ZNSt16allocator_traitsISaIN3DDT4NodeEEE10deallocateERS2_PS1_y\0"
	.long	0x74b1
	.uleb128 0x1
	.long	0x1c503
	.uleb128 0x1
	.long	0x7370
	.uleb128 0x1
	.long	0x73e3
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF81
	.byte	0x10
	.word	0x21f
	.byte	0x7
	.ascii "_ZNSt16allocator_traitsISaIN3DDT4NodeEEE8max_sizeERKS2_\0"
	.long	0x73e3
	.long	0x7500
	.uleb128 0x1
	.long	0x1c508
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF82
	.byte	0x10
	.word	0x22e
	.byte	0x7
	.ascii "_ZNSt16allocator_traitsISaIN3DDT4NodeEEE37select_on_container_copy_constructionERKS2_\0"
	.long	0x73d1
	.long	0x756d
	.uleb128 0x1
	.long	0x1c508
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF2
	.byte	0x10
	.word	0x19d
	.byte	0xd
	.long	0x1c0ec
	.uleb128 0x1a
	.secrel32	.LASF83
	.byte	0x10
	.word	0x1be
	.byte	0x8
	.long	0x71c4
	.uleb128 0x40
	.ascii "destroy<DDT::Node>\0"
	.byte	0x10
	.word	0x20f
	.byte	0x2
	.ascii "_ZNSt16allocator_traitsISaIN3DDT4NodeEEE7destroyIS1_EEvRS2_PT_\0"
	.long	0x75f6
	.uleb128 0x5
	.ascii "_Up\0"
	.long	0x1c0ec
	.uleb128 0x1
	.long	0x1c503
	.uleb128 0x1
	.long	0x1c4db
	.byte	0
	.uleb128 0x88
	.ascii "construct<DDT::Node, DDT::Node>\0"
	.ascii "_ZNSt16allocator_traitsISaIN3DDT4NodeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_\0"
	.uleb128 0x5
	.ascii "_Up\0"
	.long	0x1c0ec
	.uleb128 0x31
	.secrel32	.LASF148
	.long	0x767c
	.uleb128 0x32
	.long	0x1c0ec
	.byte	0
	.uleb128 0x1
	.long	0x1c503
	.uleb128 0x1
	.long	0x1c4db
	.uleb128 0x1
	.long	0x21f2e
	.byte	0
	.byte	0
	.uleb128 0x26
	.ascii "_Vector_base<DDT::Node, std::allocator<DDT::Node> >\0"
	.byte	0x18
	.byte	0xb
	.byte	0x54
	.byte	0xc
	.long	0x7fbc
	.uleb128 0x4b
	.secrel32	.LASF128
	.byte	0x18
	.byte	0xb
	.byte	0x5b
	.byte	0xe
	.long	0x787d
	.uleb128 0x3f
	.secrel32	.LASF85
	.byte	0xb
	.byte	0x5d
	.byte	0xa
	.long	0x7882
	.byte	0
	.uleb128 0x3f
	.secrel32	.LASF86
	.byte	0xb
	.byte	0x5e
	.byte	0xa
	.long	0x7882
	.byte	0x8
	.uleb128 0x3f
	.secrel32	.LASF87
	.byte	0xb
	.byte	0x5f
	.byte	0xa
	.long	0x7882
	.byte	0x10
	.uleb128 0x2a
	.secrel32	.LASF128
	.byte	0xb
	.byte	0x61
	.byte	0x2
	.ascii "_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE17_Vector_impl_dataC4Ev\0"
	.long	0x774d
	.long	0x7753
	.uleb128 0x2
	.long	0x1c521
	.byte	0
	.uleb128 0x2a
	.secrel32	.LASF128
	.byte	0xb
	.byte	0x66
	.byte	0x2
	.ascii "_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE17_Vector_impl_dataC4EOS4_\0"
	.long	0x77a5
	.long	0x77b0
	.uleb128 0x2
	.long	0x1c521
	.uleb128 0x1
	.long	0x1c52b
	.byte	0
	.uleb128 0x2a
	.secrel32	.LASF129
	.byte	0xb
	.byte	0x6d
	.byte	0x2
	.ascii "_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_\0"
	.long	0x780f
	.long	0x781a
	.uleb128 0x2
	.long	0x1c521
	.uleb128 0x1
	.long	0x1c530
	.byte	0
	.uleb128 0x78
	.secrel32	.LASF89
	.ascii "_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_\0"
	.long	0x7871
	.uleb128 0x2
	.long	0x1c521
	.uleb128 0x1
	.long	0x1c535
	.byte	0
	.byte	0
	.uleb128 0xa
	.long	0x76ca
	.uleb128 0x1c
	.secrel32	.LASF78
	.byte	0xb
	.byte	0x59
	.byte	0x9
	.long	0x15cef
	.uleb128 0x4b
	.secrel32	.LASF130
	.byte	0x18
	.byte	0xb
	.byte	0x80
	.byte	0xe
	.long	0x7aae
	.uleb128 0x39
	.long	0x71c4
	.uleb128 0x39
	.long	0x76ca
	.uleb128 0x2a
	.secrel32	.LASF130
	.byte	0xb
	.byte	0x83
	.byte	0x2
	.ascii "_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE12_Vector_implC4Ev\0"
	.long	0x78ef
	.long	0x78f5
	.uleb128 0x2
	.long	0x1c53a
	.byte	0
	.uleb128 0x2a
	.secrel32	.LASF130
	.byte	0xb
	.byte	0x88
	.byte	0x2
	.ascii "_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE12_Vector_implC4ERKS2_\0"
	.long	0x7943
	.long	0x794e
	.uleb128 0x2
	.long	0x1c53a
	.uleb128 0x1
	.long	0x1c544
	.byte	0
	.uleb128 0x2a
	.secrel32	.LASF130
	.byte	0xb
	.byte	0x8f
	.byte	0x2
	.ascii "_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE12_Vector_implC4EOS4_\0"
	.long	0x799b
	.long	0x79a6
	.uleb128 0x2
	.long	0x1c53a
	.uleb128 0x1
	.long	0x1c549
	.byte	0
	.uleb128 0x2a
	.secrel32	.LASF130
	.byte	0xb
	.byte	0x93
	.byte	0x2
	.ascii "_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE12_Vector_implC4EOS2_\0"
	.long	0x79f3
	.long	0x79fe
	.uleb128 0x2
	.long	0x1c53a
	.uleb128 0x1
	.long	0x1c54e
	.byte	0
	.uleb128 0x2a
	.secrel32	.LASF130
	.byte	0xb
	.byte	0x97
	.byte	0x2
	.ascii "_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE12_Vector_implC4EOS2_OS4_\0"
	.long	0x7a4f
	.long	0x7a5f
	.uleb128 0x2
	.long	0x1c53a
	.uleb128 0x1
	.long	0x1c54e
	.uleb128 0x1
	.long	0x1c549
	.byte	0
	.uleb128 0x79
	.secrel32	.LASF131
	.ascii "_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE12_Vector_implD4Ev\0"
	.long	0x7aa2
	.uleb128 0x2
	.long	0x1c53a
	.uleb128 0x2
	.long	0x191dc
	.byte	0
	.byte	0
	.uleb128 0x1c
	.secrel32	.LASF132
	.byte	0xb
	.byte	0x57
	.byte	0x15
	.long	0x15d2e
	.uleb128 0xa
	.long	0x7aae
	.uleb128 0x2b
	.secrel32	.LASF133
	.byte	0xb
	.word	0x114
	.byte	0x7
	.ascii "_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE19_M_get_Tp_allocatorEv\0"
	.long	0x1c553
	.long	0x7b13
	.long	0x7b19
	.uleb128 0x2
	.long	0x1c558
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF133
	.byte	0xb
	.word	0x118
	.byte	0x7
	.ascii "_ZNKSt12_Vector_baseIN3DDT4NodeESaIS1_EE19_M_get_Tp_allocatorEv\0"
	.long	0x1c544
	.long	0x7b6e
	.long	0x7b74
	.uleb128 0x2
	.long	0x1c562
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF79
	.byte	0xb
	.word	0x111
	.byte	0x16
	.long	0x71c4
	.uleb128 0xa
	.long	0x7b74
	.uleb128 0x2b
	.secrel32	.LASF93
	.byte	0xb
	.word	0x11c
	.byte	0x7
	.ascii "_ZNKSt12_Vector_baseIN3DDT4NodeESaIS1_EE13get_allocatorEv\0"
	.long	0x7b74
	.long	0x7bd5
	.long	0x7bdb
	.uleb128 0x2
	.long	0x1c562
	.byte	0
	.uleb128 0x51
	.secrel32	.LASF134
	.byte	0xb
	.word	0x120
	.byte	0x7
	.ascii "_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EEC4Ev\0"
	.long	0x7c18
	.long	0x7c1e
	.uleb128 0x2
	.long	0x1c558
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF134
	.byte	0xb
	.word	0x125
	.byte	0x7
	.ascii "_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EEC4ERKS2_\0"
	.long	0x7c5f
	.long	0x7c6a
	.uleb128 0x2
	.long	0x1c558
	.uleb128 0x1
	.long	0x1c56c
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF134
	.byte	0xb
	.word	0x12a
	.byte	0x7
	.ascii "_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EEC4Ey\0"
	.long	0x7ca7
	.long	0x7cb2
	.uleb128 0x2
	.long	0x1c558
	.uleb128 0x1
	.long	0x2f0
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF134
	.byte	0xb
	.word	0x12f
	.byte	0x7
	.ascii "_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EEC4EyRKS2_\0"
	.long	0x7cf4
	.long	0x7d04
	.uleb128 0x2
	.long	0x1c558
	.uleb128 0x1
	.long	0x2f0
	.uleb128 0x1
	.long	0x1c56c
	.byte	0
	.uleb128 0x51
	.secrel32	.LASF134
	.byte	0xb
	.word	0x134
	.byte	0x7
	.ascii "_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EEC4EOS3_\0"
	.long	0x7d44
	.long	0x7d4f
	.uleb128 0x2
	.long	0x1c558
	.uleb128 0x1
	.long	0x1c571
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF134
	.byte	0xb
	.word	0x138
	.byte	0x7
	.ascii "_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EEC4EOS2_\0"
	.long	0x7d8f
	.long	0x7d9a
	.uleb128 0x2
	.long	0x1c558
	.uleb128 0x1
	.long	0x1c54e
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF134
	.byte	0xb
	.word	0x13b
	.byte	0x7
	.ascii "_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EEC4EOS3_RKS2_\0"
	.long	0x7ddf
	.long	0x7def
	.uleb128 0x2
	.long	0x1c558
	.uleb128 0x1
	.long	0x1c571
	.uleb128 0x1
	.long	0x1c56c
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF134
	.byte	0xb
	.word	0x148
	.byte	0x7
	.ascii "_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EEC4ERKS2_OS3_\0"
	.long	0x7e34
	.long	0x7e44
	.uleb128 0x2
	.long	0x1c558
	.uleb128 0x1
	.long	0x1c56c
	.uleb128 0x1
	.long	0x1c571
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF135
	.byte	0xb
	.word	0x14d
	.byte	0x7
	.ascii "_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EED4Ev\0"
	.long	0x7e81
	.long	0x7e8c
	.uleb128 0x2
	.long	0x1c558
	.uleb128 0x2
	.long	0x191dc
	.byte	0
	.uleb128 0x5b
	.secrel32	.LASF95
	.byte	0xb
	.word	0x154
	.byte	0x14
	.long	0x788e
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF96
	.byte	0xb
	.word	0x157
	.byte	0x7
	.ascii "_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE11_M_allocateEy\0"
	.long	0x7882
	.long	0x7ee6
	.long	0x7ef1
	.uleb128 0x2
	.long	0x1c558
	.uleb128 0x1
	.long	0x2f0
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF97
	.byte	0xb
	.word	0x15e
	.byte	0x7
	.ascii "_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE13_M_deallocateEPS1_y\0"
	.long	0x7f3f
	.long	0x7f4f
	.uleb128 0x2
	.long	0x1c558
	.uleb128 0x1
	.long	0x7882
	.uleb128 0x1
	.long	0x2f0
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF136
	.byte	0xb
	.word	0x167
	.byte	0x7
	.ascii "_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE17_M_create_storageEy\0"
	.byte	0x2
	.long	0x7f9e
	.long	0x7fa9
	.uleb128 0x2
	.long	0x1c558
	.uleb128 0x1
	.long	0x2f0
	.byte	0
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1c0ec
	.uleb128 0x4
	.secrel32	.LASF98
	.long	0x71c4
	.byte	0
	.uleb128 0xa
	.long	0x768d
	.uleb128 0x4d
	.ascii "vector<DDT::Node, std::allocator<DDT::Node> >\0"
	.byte	0x18
	.byte	0xb
	.word	0x185
	.long	0x9e5b
	.uleb128 0x28
	.byte	0xb
	.word	0x185
	.byte	0xb
	.long	0x7e9a
	.uleb128 0x28
	.byte	0xb
	.word	0x185
	.byte	0xb
	.long	0x7ef1
	.uleb128 0x28
	.byte	0xb
	.word	0x185
	.byte	0xb
	.long	0x7e8c
	.uleb128 0x28
	.byte	0xb
	.word	0x185
	.byte	0xb
	.long	0x7b19
	.uleb128 0x28
	.byte	0xb
	.word	0x185
	.byte	0xb
	.long	0x7abf
	.uleb128 0x28
	.byte	0xb
	.word	0x185
	.byte	0xb
	.long	0x7b86
	.uleb128 0x48
	.long	0x768d
	.byte	0x2
	.uleb128 0x14
	.secrel32	.LASF137
	.byte	0xb
	.word	0x1af
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE19_S_nothrow_relocateESt17integral_constantIbLb1EE\0"
	.long	0x14cc6
	.long	0x809e
	.uleb128 0x1
	.long	0x2b7e
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF137
	.byte	0xb
	.word	0x1b8
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE19_S_nothrow_relocateESt17integral_constantIbLb0EE\0"
	.long	0x14cc6
	.long	0x8108
	.uleb128 0x1
	.long	0x2dd
	.byte	0
	.uleb128 0x7a
	.secrel32	.LASF149
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE15_S_use_relocateEv\0"
	.long	0x14cc6
	.uleb128 0x1b
	.secrel32	.LASF78
	.byte	0xb
	.word	0x19f
	.byte	0x29
	.long	0x7882
	.uleb128 0x14
	.secrel32	.LASF138
	.byte	0xb
	.word	0x1c5
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE\0"
	.long	0x8145
	.long	0x81d9
	.uleb128 0x1
	.long	0x8145
	.uleb128 0x1
	.long	0x8145
	.uleb128 0x1
	.long	0x8145
	.uleb128 0x1
	.long	0x1c576
	.uleb128 0x1
	.long	0x2b7e
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF132
	.byte	0xb
	.word	0x19a
	.byte	0x2f
	.long	0x7aae
	.uleb128 0xa
	.long	0x81d9
	.uleb128 0x14
	.secrel32	.LASF138
	.byte	0xb
	.word	0x1cc
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb0EE\0"
	.long	0x8145
	.long	0x8272
	.uleb128 0x1
	.long	0x8145
	.uleb128 0x1
	.long	0x8145
	.uleb128 0x1
	.long	0x8145
	.uleb128 0x1
	.long	0x1c576
	.uleb128 0x1
	.long	0x2dd
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF139
	.byte	0xb
	.word	0x1d1
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_\0"
	.long	0x8145
	.long	0x82d5
	.uleb128 0x1
	.long	0x8145
	.uleb128 0x1
	.long	0x8145
	.uleb128 0x1
	.long	0x8145
	.uleb128 0x1
	.long	0x1c576
	.byte	0
	.uleb128 0x54
	.secrel32	.LASF99
	.byte	0xb
	.word	0x1e7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EEC4Ev\0"
	.long	0x830a
	.long	0x8310
	.uleb128 0x2
	.long	0x1c57b
	.byte	0
	.uleb128 0x43
	.secrel32	.LASF99
	.byte	0xb
	.word	0x1f1
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EEC4ERKS2_\0"
	.long	0x8349
	.long	0x8354
	.uleb128 0x2
	.long	0x1c57b
	.uleb128 0x1
	.long	0x1c585
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF79
	.byte	0xb
	.word	0x1aa
	.byte	0x1a
	.long	0x71c4
	.uleb128 0xa
	.long	0x8354
	.uleb128 0x43
	.secrel32	.LASF99
	.byte	0xb
	.word	0x1fe
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EEC4EyRKS2_\0"
	.long	0x83a0
	.long	0x83b0
	.uleb128 0x2
	.long	0x1c57b
	.uleb128 0x1
	.long	0x83b0
	.uleb128 0x1
	.long	0x1c585
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF56
	.byte	0xb
	.word	0x1a8
	.byte	0x1a
	.long	0x2f0
	.uleb128 0xa
	.long	0x83b0
	.uleb128 0x12
	.secrel32	.LASF99
	.byte	0xb
	.word	0x20a
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EEC4EyRKS1_RKS2_\0"
	.byte	0x1
	.long	0x8403
	.long	0x8418
	.uleb128 0x2
	.long	0x1c57b
	.uleb128 0x1
	.long	0x83b0
	.uleb128 0x1
	.long	0x1c58a
	.uleb128 0x1
	.long	0x1c585
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF2
	.byte	0xb
	.word	0x19e
	.byte	0x17
	.long	0x1c0ec
	.uleb128 0xa
	.long	0x8418
	.uleb128 0x12
	.secrel32	.LASF99
	.byte	0xb
	.word	0x229
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EEC4ERKS3_\0"
	.byte	0x1
	.long	0x8465
	.long	0x8470
	.uleb128 0x2
	.long	0x1c57b
	.uleb128 0x1
	.long	0x1c58f
	.byte	0
	.uleb128 0x54
	.secrel32	.LASF99
	.byte	0xb
	.word	0x23c
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EEC4EOS3_\0"
	.long	0x84a8
	.long	0x84b3
	.uleb128 0x2
	.long	0x1c57b
	.uleb128 0x1
	.long	0x1c594
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF99
	.byte	0xb
	.word	0x23f
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EEC4ERKS3_RKS2_\0"
	.byte	0x1
	.long	0x84f3
	.long	0x8503
	.uleb128 0x2
	.long	0x1c57b
	.uleb128 0x1
	.long	0x1c58f
	.uleb128 0x1
	.long	0x1c585
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF99
	.byte	0xb
	.word	0x249
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EEC4EOS3_RKS2_St17integral_constantIbLb1EE\0"
	.long	0x855d
	.long	0x8572
	.uleb128 0x2
	.long	0x1c57b
	.uleb128 0x1
	.long	0x1c594
	.uleb128 0x1
	.long	0x1c585
	.uleb128 0x1
	.long	0x2b7e
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF99
	.byte	0xb
	.word	0x24d
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EEC4EOS3_RKS2_St17integral_constantIbLb0EE\0"
	.long	0x85cc
	.long	0x85e1
	.uleb128 0x2
	.long	0x1c57b
	.uleb128 0x1
	.long	0x1c594
	.uleb128 0x1
	.long	0x1c585
	.uleb128 0x1
	.long	0x2dd
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF99
	.byte	0xb
	.word	0x25f
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EEC4EOS3_RKS2_\0"
	.byte	0x1
	.long	0x8620
	.long	0x8630
	.uleb128 0x2
	.long	0x1c57b
	.uleb128 0x1
	.long	0x1c594
	.uleb128 0x1
	.long	0x1c585
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF99
	.byte	0xb
	.word	0x271
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EEC4ESt16initializer_listIS1_ERKS2_\0"
	.byte	0x1
	.long	0x8684
	.long	0x8694
	.uleb128 0x2
	.long	0x1c57b
	.uleb128 0x1
	.long	0x9e60
	.uleb128 0x1
	.long	0x1c585
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF100
	.byte	0xb
	.word	0x2a6
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EED4Ev\0"
	.byte	0x1
	.long	0x86cb
	.long	0x86d6
	.uleb128 0x2
	.long	0x1c57b
	.uleb128 0x2
	.long	0x191dc
	.byte	0
	.uleb128 0x29
	.secrel32	.LASF35
	.byte	0xe
	.byte	0xc6
	.byte	0x5
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EEaSERKS3_\0"
	.long	0x1c599
	.byte	0x1
	.long	0x8714
	.long	0x871f
	.uleb128 0x2
	.long	0x1c57b
	.uleb128 0x1
	.long	0x1c58f
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF35
	.byte	0xb
	.word	0x2c5
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EEaSEOS3_\0"
	.long	0x1c599
	.byte	0x1
	.long	0x875d
	.long	0x8768
	.uleb128 0x2
	.long	0x1c57b
	.uleb128 0x1
	.long	0x1c594
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF35
	.byte	0xb
	.word	0x2da
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EEaSESt16initializer_listIS1_E\0"
	.long	0x1c599
	.byte	0x1
	.long	0x87bb
	.long	0x87c6
	.uleb128 0x2
	.long	0x1c57b
	.uleb128 0x1
	.long	0x9e60
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF101
	.byte	0xb
	.word	0x2ed
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE6assignEyRKS1_\0"
	.byte	0x1
	.long	0x8807
	.long	0x8817
	.uleb128 0x2
	.long	0x1c57b
	.uleb128 0x1
	.long	0x83b0
	.uleb128 0x1
	.long	0x1c58a
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF101
	.byte	0xb
	.word	0x31a
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE6assignESt16initializer_listIS1_E\0"
	.byte	0x1
	.long	0x886b
	.long	0x8876
	.uleb128 0x2
	.long	0x1c57b
	.uleb128 0x1
	.long	0x9e60
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF43
	.byte	0xb
	.word	0x1a3
	.byte	0x3d
	.long	0x15d4e
	.uleb128 0x7
	.secrel32	.LASF60
	.byte	0xb
	.word	0x32b
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE5beginEv\0"
	.long	0x8876
	.byte	0x1
	.long	0x88c2
	.long	0x88c8
	.uleb128 0x2
	.long	0x1c57b
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF54
	.byte	0xb
	.word	0x1a5
	.byte	0x7
	.long	0x16399
	.uleb128 0x7
	.secrel32	.LASF60
	.byte	0xb
	.word	0x334
	.byte	0x7
	.ascii "_ZNKSt6vectorIN3DDT4NodeESaIS1_EE5beginEv\0"
	.long	0x88c8
	.byte	0x1
	.long	0x8915
	.long	0x891b
	.uleb128 0x2
	.long	0x1c59e
	.byte	0
	.uleb128 0x30
	.ascii "end\0"
	.byte	0xb
	.word	0x33d
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE3endEv\0"
	.long	0x8876
	.byte	0x1
	.long	0x8958
	.long	0x895e
	.uleb128 0x2
	.long	0x1c57b
	.byte	0
	.uleb128 0x30
	.ascii "end\0"
	.byte	0xb
	.word	0x346
	.byte	0x7
	.ascii "_ZNKSt6vectorIN3DDT4NodeESaIS1_EE3endEv\0"
	.long	0x88c8
	.byte	0x1
	.long	0x899c
	.long	0x89a2
	.uleb128 0x2
	.long	0x1c59e
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF62
	.byte	0xb
	.word	0x1a7
	.byte	0x30
	.long	0xa034
	.uleb128 0x7
	.secrel32	.LASF102
	.byte	0xb
	.word	0x34f
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE6rbeginEv\0"
	.long	0x89a2
	.byte	0x1
	.long	0x89ef
	.long	0x89f5
	.uleb128 0x2
	.long	0x1c57b
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF103
	.byte	0xb
	.word	0x1a6
	.byte	0x35
	.long	0xa0a6
	.uleb128 0x7
	.secrel32	.LASF102
	.byte	0xb
	.word	0x358
	.byte	0x7
	.ascii "_ZNKSt6vectorIN3DDT4NodeESaIS1_EE6rbeginEv\0"
	.long	0x89f5
	.byte	0x1
	.long	0x8a43
	.long	0x8a49
	.uleb128 0x2
	.long	0x1c59e
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF104
	.byte	0xb
	.word	0x361
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE4rendEv\0"
	.long	0x89a2
	.byte	0x1
	.long	0x8a87
	.long	0x8a8d
	.uleb128 0x2
	.long	0x1c57b
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF104
	.byte	0xb
	.word	0x36a
	.byte	0x7
	.ascii "_ZNKSt6vectorIN3DDT4NodeESaIS1_EE4rendEv\0"
	.long	0x89f5
	.byte	0x1
	.long	0x8acc
	.long	0x8ad2
	.uleb128 0x2
	.long	0x1c59e
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF105
	.byte	0xb
	.word	0x374
	.byte	0x7
	.ascii "_ZNKSt6vectorIN3DDT4NodeESaIS1_EE6cbeginEv\0"
	.long	0x88c8
	.byte	0x1
	.long	0x8b13
	.long	0x8b19
	.uleb128 0x2
	.long	0x1c59e
	.byte	0
	.uleb128 0x30
	.ascii "cend\0"
	.byte	0xb
	.word	0x37d
	.byte	0x7
	.ascii "_ZNKSt6vectorIN3DDT4NodeESaIS1_EE4cendEv\0"
	.long	0x88c8
	.byte	0x1
	.long	0x8b59
	.long	0x8b5f
	.uleb128 0x2
	.long	0x1c59e
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF106
	.byte	0xb
	.word	0x386
	.byte	0x7
	.ascii "_ZNKSt6vectorIN3DDT4NodeESaIS1_EE7crbeginEv\0"
	.long	0x89f5
	.byte	0x1
	.long	0x8ba1
	.long	0x8ba7
	.uleb128 0x2
	.long	0x1c59e
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF107
	.byte	0xb
	.word	0x38f
	.byte	0x7
	.ascii "_ZNKSt6vectorIN3DDT4NodeESaIS1_EE5crendEv\0"
	.long	0x89f5
	.byte	0x1
	.long	0x8be7
	.long	0x8bed
	.uleb128 0x2
	.long	0x1c59e
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF59
	.byte	0xb
	.word	0x396
	.byte	0x7
	.ascii "_ZNKSt6vectorIN3DDT4NodeESaIS1_EE4sizeEv\0"
	.long	0x83b0
	.byte	0x1
	.long	0x8c2c
	.long	0x8c32
	.uleb128 0x2
	.long	0x1c59e
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF81
	.byte	0xb
	.word	0x39b
	.byte	0x7
	.ascii "_ZNKSt6vectorIN3DDT4NodeESaIS1_EE8max_sizeEv\0"
	.long	0x83b0
	.byte	0x1
	.long	0x8c75
	.long	0x8c7b
	.uleb128 0x2
	.long	0x1c59e
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF119
	.byte	0xb
	.word	0x3a9
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE6resizeEy\0"
	.byte	0x1
	.long	0x8cb7
	.long	0x8cc2
	.uleb128 0x2
	.long	0x1c57b
	.uleb128 0x1
	.long	0x83b0
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF119
	.byte	0xb
	.word	0x3bd
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE6resizeEyRKS1_\0"
	.byte	0x1
	.long	0x8d03
	.long	0x8d13
	.uleb128 0x2
	.long	0x1c57b
	.uleb128 0x1
	.long	0x83b0
	.uleb128 0x1
	.long	0x1c58a
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF120
	.byte	0xb
	.word	0x3dd
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE13shrink_to_fitEv\0"
	.byte	0x1
	.long	0x8d57
	.long	0x8d5d
	.uleb128 0x2
	.long	0x1c57b
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF108
	.byte	0xb
	.word	0x3e6
	.byte	0x7
	.ascii "_ZNKSt6vectorIN3DDT4NodeESaIS1_EE8capacityEv\0"
	.long	0x83b0
	.byte	0x1
	.long	0x8da0
	.long	0x8da6
	.uleb128 0x2
	.long	0x1c59e
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF109
	.byte	0xb
	.word	0x3ef
	.byte	0x7
	.ascii "_ZNKSt6vectorIN3DDT4NodeESaIS1_EE5emptyEv\0"
	.long	0x14cc6
	.byte	0x1
	.long	0x8de6
	.long	0x8dec
	.uleb128 0x2
	.long	0x1c59e
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF111
	.byte	0xe
	.byte	0x42
	.byte	0x5
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE7reserveEy\0"
	.long	0x8e27
	.long	0x8e32
	.uleb128 0x2
	.long	0x1c57b
	.uleb128 0x1
	.long	0x83b0
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF45
	.byte	0xb
	.word	0x1a1
	.byte	0x32
	.long	0x15cfb
	.uleb128 0x7
	.secrel32	.LASF51
	.byte	0xb
	.word	0x413
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EEixEy\0"
	.long	0x8e32
	.byte	0x1
	.long	0x8e7a
	.long	0x8e85
	.uleb128 0x2
	.long	0x1c57b
	.uleb128 0x1
	.long	0x83b0
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF53
	.byte	0xb
	.word	0x1a2
	.byte	0x37
	.long	0x15d07
	.uleb128 0x7
	.secrel32	.LASF51
	.byte	0xb
	.word	0x425
	.byte	0x7
	.ascii "_ZNKSt6vectorIN3DDT4NodeESaIS1_EEixEy\0"
	.long	0x8e85
	.byte	0x1
	.long	0x8ece
	.long	0x8ed9
	.uleb128 0x2
	.long	0x1c59e
	.uleb128 0x1
	.long	0x83b0
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF110
	.byte	0xb
	.word	0x42e
	.byte	0x7
	.ascii "_ZNKSt6vectorIN3DDT4NodeESaIS1_EE14_M_range_checkEy\0"
	.byte	0x2
	.long	0x8f1f
	.long	0x8f2a
	.uleb128 0x2
	.long	0x1c59e
	.uleb128 0x1
	.long	0x83b0
	.byte	0
	.uleb128 0x30
	.ascii "at\0"
	.byte	0xb
	.word	0x444
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE2atEy\0"
	.long	0x8e32
	.byte	0x1
	.long	0x8f65
	.long	0x8f70
	.uleb128 0x2
	.long	0x1c57b
	.uleb128 0x1
	.long	0x83b0
	.byte	0
	.uleb128 0x30
	.ascii "at\0"
	.byte	0xb
	.word	0x456
	.byte	0x7
	.ascii "_ZNKSt6vectorIN3DDT4NodeESaIS1_EE2atEy\0"
	.long	0x8e85
	.byte	0x1
	.long	0x8fac
	.long	0x8fb7
	.uleb128 0x2
	.long	0x1c59e
	.uleb128 0x1
	.long	0x83b0
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF112
	.byte	0xb
	.word	0x461
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE5frontEv\0"
	.long	0x8e32
	.byte	0x1
	.long	0x8ff6
	.long	0x8ffc
	.uleb128 0x2
	.long	0x1c57b
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF112
	.byte	0xb
	.word	0x46c
	.byte	0x7
	.ascii "_ZNKSt6vectorIN3DDT4NodeESaIS1_EE5frontEv\0"
	.long	0x8e85
	.byte	0x1
	.long	0x903c
	.long	0x9042
	.uleb128 0x2
	.long	0x1c59e
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF113
	.byte	0xb
	.word	0x477
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE4backEv\0"
	.long	0x8e32
	.byte	0x1
	.long	0x9080
	.long	0x9086
	.uleb128 0x2
	.long	0x1c57b
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF113
	.byte	0xb
	.word	0x482
	.byte	0x7
	.ascii "_ZNKSt6vectorIN3DDT4NodeESaIS1_EE4backEv\0"
	.long	0x8e85
	.byte	0x1
	.long	0x90c5
	.long	0x90cb
	.uleb128 0x2
	.long	0x1c59e
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF114
	.byte	0xb
	.word	0x490
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE4dataEv\0"
	.long	0x1c4db
	.byte	0x1
	.long	0x9109
	.long	0x910f
	.uleb128 0x2
	.long	0x1c57b
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF114
	.byte	0xb
	.word	0x494
	.byte	0x7
	.ascii "_ZNKSt6vectorIN3DDT4NodeESaIS1_EE4dataEv\0"
	.long	0x1c50d
	.byte	0x1
	.long	0x914e
	.long	0x9154
	.uleb128 0x2
	.long	0x1c59e
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF115
	.byte	0xb
	.word	0x4a3
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE9push_backERKS1_\0"
	.byte	0x1
	.long	0x9197
	.long	0x91a2
	.uleb128 0x2
	.long	0x1c57b
	.uleb128 0x1
	.long	0x1c58a
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF115
	.byte	0xb
	.word	0x4b3
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE9push_backEOS1_\0"
	.byte	0x1
	.long	0x91e4
	.long	0x91ef
	.uleb128 0x2
	.long	0x1c57b
	.uleb128 0x1
	.long	0x1c5a8
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF117
	.byte	0xb
	.word	0x4c9
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE8pop_backEv\0"
	.byte	0x1
	.long	0x922d
	.long	0x9233
	.uleb128 0x2
	.long	0x1c57b
	.byte	0
	.uleb128 0x29
	.secrel32	.LASF116
	.byte	0xe
	.byte	0x82
	.byte	0x5
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EERS6_\0"
	.long	0x8876
	.byte	0x1
	.long	0x929e
	.long	0x92ae
	.uleb128 0x2
	.long	0x1c57b
	.uleb128 0x1
	.long	0x88c8
	.uleb128 0x1
	.long	0x1c58a
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF116
	.byte	0xb
	.word	0x50d
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEOS1_\0"
	.long	0x8876
	.byte	0x1
	.long	0x931a
	.long	0x932a
	.uleb128 0x2
	.long	0x1c57b
	.uleb128 0x1
	.long	0x88c8
	.uleb128 0x1
	.long	0x1c5a8
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF116
	.byte	0xb
	.word	0x51e
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EESt16initializer_listIS1_E\0"
	.long	0x8876
	.byte	0x1
	.long	0x93ab
	.long	0x93bb
	.uleb128 0x2
	.long	0x1c57b
	.uleb128 0x1
	.long	0x88c8
	.uleb128 0x1
	.long	0x9e60
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF116
	.byte	0xb
	.word	0x537
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEyRS6_\0"
	.long	0x8876
	.byte	0x1
	.long	0x9428
	.long	0x943d
	.uleb128 0x2
	.long	0x1c57b
	.uleb128 0x1
	.long	0x88c8
	.uleb128 0x1
	.long	0x83b0
	.uleb128 0x1
	.long	0x1c58a
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF118
	.byte	0xb
	.word	0x596
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE\0"
	.long	0x8876
	.byte	0x1
	.long	0x94a4
	.long	0x94af
	.uleb128 0x2
	.long	0x1c57b
	.uleb128 0x1
	.long	0x88c8
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF118
	.byte	0xb
	.word	0x5b1
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EES8_\0"
	.long	0x8876
	.byte	0x1
	.long	0x9519
	.long	0x9529
	.uleb128 0x2
	.long	0x1c57b
	.uleb128 0x1
	.long	0x88c8
	.uleb128 0x1
	.long	0x88c8
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF73
	.byte	0xb
	.word	0x5c8
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE4swapERS3_\0"
	.byte	0x1
	.long	0x9566
	.long	0x9571
	.uleb128 0x2
	.long	0x1c57b
	.uleb128 0x1
	.long	0x1c599
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF121
	.byte	0xb
	.word	0x5da
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE5clearEv\0"
	.byte	0x1
	.long	0x95ac
	.long	0x95b2
	.uleb128 0x2
	.long	0x1c57b
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF140
	.byte	0xb
	.word	0x639
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE18_M_fill_initializeEyRKS1_\0"
	.byte	0x2
	.long	0x9600
	.long	0x9610
	.uleb128 0x2
	.long	0x1c57b
	.uleb128 0x1
	.long	0x83b0
	.uleb128 0x1
	.long	0x1c58a
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF141
	.byte	0xb
	.word	0x643
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE21_M_default_initializeEy\0"
	.byte	0x2
	.long	0x965c
	.long	0x9667
	.uleb128 0x2
	.long	0x1c57b
	.uleb128 0x1
	.long	0x83b0
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF123
	.byte	0xe
	.word	0x101
	.byte	0x5
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE14_M_fill_assignEyRKS1_\0"
	.byte	0x2
	.long	0x96b1
	.long	0x96c1
	.uleb128 0x2
	.long	0x1c57b
	.uleb128 0x1
	.long	0x2f0
	.uleb128 0x1
	.long	0x1c58a
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF124
	.byte	0xe
	.word	0x1fd
	.byte	0x5
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEyRKS1_\0"
	.byte	0x2
	.long	0x9733
	.long	0x9748
	.uleb128 0x2
	.long	0x1c57b
	.uleb128 0x1
	.long	0x8876
	.uleb128 0x1
	.long	0x83b0
	.uleb128 0x1
	.long	0x1c58a
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF142
	.byte	0xe
	.word	0x263
	.byte	0x5
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE17_M_default_appendEy\0"
	.byte	0x2
	.long	0x9790
	.long	0x979b
	.uleb128 0x2
	.long	0x1c57b
	.uleb128 0x1
	.long	0x83b0
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF122
	.byte	0xe
	.word	0x2af
	.byte	0x5
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE16_M_shrink_to_fitEv\0"
	.long	0x14cc6
	.byte	0x2
	.long	0x97e6
	.long	0x97ec
	.uleb128 0x2
	.long	0x1c57b
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF143
	.byte	0xe
	.word	0x154
	.byte	0x5
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEOS1_\0"
	.long	0x8876
	.byte	0x2
	.long	0x9861
	.long	0x9871
	.uleb128 0x2
	.long	0x1c57b
	.uleb128 0x1
	.long	0x88c8
	.uleb128 0x1
	.long	0x1c5a8
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF144
	.byte	0xb
	.word	0x6d6
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE14_M_emplace_auxEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEOS1_\0"
	.long	0x8876
	.byte	0x2
	.long	0x98e6
	.long	0x98f6
	.uleb128 0x2
	.long	0x1c57b
	.uleb128 0x1
	.long	0x88c8
	.uleb128 0x1
	.long	0x1c5a8
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF125
	.byte	0xb
	.word	0x6dc
	.byte	0x7
	.ascii "_ZNKSt6vectorIN3DDT4NodeESaIS1_EE12_M_check_lenEyPKc\0"
	.long	0x83b0
	.byte	0x2
	.long	0x9941
	.long	0x9951
	.uleb128 0x2
	.long	0x1c59e
	.uleb128 0x1
	.long	0x83b0
	.uleb128 0x1
	.long	0x19524
	.byte	0
	.uleb128 0x60
	.secrel32	.LASF145
	.word	0x6e7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE17_S_check_init_lenEyRKS2_\0"
	.long	0x83b0
	.long	0x99a6
	.uleb128 0x1
	.long	0x83b0
	.uleb128 0x1
	.long	0x1c585
	.byte	0
	.uleb128 0x60
	.secrel32	.LASF146
	.word	0x6f0
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE11_S_max_sizeERKS2_\0"
	.long	0x83b0
	.long	0x99ef
	.uleb128 0x1
	.long	0x1c5ad
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF126
	.byte	0xb
	.word	0x700
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE15_M_erase_at_endEPS1_\0"
	.byte	0x2
	.long	0x9a38
	.long	0x9a43
	.uleb128 0x2
	.long	0x1c57b
	.uleb128 0x1
	.long	0x8145
	.byte	0
	.uleb128 0x29
	.secrel32	.LASF127
	.byte	0xe
	.byte	0xab
	.byte	0x5
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE\0"
	.long	0x8876
	.byte	0x2
	.long	0x9aab
	.long	0x9ab6
	.uleb128 0x2
	.long	0x1c57b
	.uleb128 0x1
	.long	0x8876
	.byte	0
	.uleb128 0x29
	.secrel32	.LASF127
	.byte	0xe
	.byte	0xb8
	.byte	0x5
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EES7_\0"
	.long	0x8876
	.byte	0x2
	.long	0x9b21
	.long	0x9b31
	.uleb128 0x2
	.long	0x1c57b
	.uleb128 0x1
	.long	0x8876
	.uleb128 0x1
	.long	0x8876
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF147
	.byte	0xb
	.word	0x717
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE\0"
	.long	0x9b94
	.long	0x9ba4
	.uleb128 0x2
	.long	0x1c57b
	.uleb128 0x1
	.long	0x1c594
	.uleb128 0x1
	.long	0x2b7e
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF147
	.byte	0xb
	.word	0x722
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb0EE\0"
	.long	0x9c07
	.long	0x9c17
	.uleb128 0x2
	.long	0x1c57b
	.uleb128 0x1
	.long	0x1c594
	.uleb128 0x1
	.long	0x2dd
	.byte	0
	.uleb128 0x55
	.ascii "_M_realloc_insert<DDT::Node>\0"
	.byte	0xe
	.word	0x1aa
	.byte	0x7
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_\0"
	.byte	0x2
	.long	0x9cbb
	.long	0x9ccb
	.uleb128 0x31
	.secrel32	.LASF148
	.long	0x9cbb
	.uleb128 0x32
	.long	0x1c0ec
	.byte	0
	.uleb128 0x2
	.long	0x1c57b
	.uleb128 0x1
	.long	0x8876
	.uleb128 0x1
	.long	0x21f2e
	.byte	0
	.uleb128 0x30
	.ascii "_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const DDT::Node*, std::vector<DDT::Node> > >\0"
	.byte	0xb
	.word	0x5e4
	.byte	0x2
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_yT_SB_\0"
	.long	0x8145
	.byte	0x2
	.long	0x9db2
	.long	0x9dc7
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x16399
	.uleb128 0x2
	.long	0x1c57b
	.uleb128 0x1
	.long	0x83b0
	.uleb128 0x1
	.long	0x16399
	.uleb128 0x1
	.long	0x16399
	.byte	0
	.uleb128 0x65
	.ascii "emplace_back<DDT::Node>\0"
	.byte	0xe
	.byte	0x6d
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EE12emplace_backIJS1_EEERS1_DpOT_\0"
	.long	0x8e32
	.long	0x9e3d
	.long	0x9e48
	.uleb128 0x31
	.secrel32	.LASF148
	.long	0x9e3d
	.uleb128 0x32
	.long	0x1c0ec
	.byte	0
	.uleb128 0x2
	.long	0x1c57b
	.uleb128 0x1
	.long	0x21f2e
	.byte	0
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1c0ec
	.uleb128 0x4c
	.secrel32	.LASF98
	.long	0x71c4
	.byte	0
	.uleb128 0xa
	.long	0x7fc1
	.uleb128 0x3a
	.ascii "initializer_list<DDT::Node>\0"
	.byte	0x10
	.byte	0x24
	.byte	0x2f
	.byte	0xb
	.long	0xa02f
	.uleb128 0x36
	.secrel32	.LASF43
	.byte	0x24
	.byte	0x36
	.byte	0x1a
	.long	0x1c50d
	.uleb128 0x3f
	.secrel32	.LASF55
	.byte	0x24
	.byte	0x3a
	.byte	0x12
	.long	0x9e85
	.byte	0
	.uleb128 0x36
	.secrel32	.LASF56
	.byte	0x24
	.byte	0x35
	.byte	0x18
	.long	0x2f0
	.uleb128 0x3f
	.secrel32	.LASF57
	.byte	0x24
	.byte	0x3b
	.byte	0x13
	.long	0x9e9e
	.byte	0x8
	.uleb128 0x2a
	.secrel32	.LASF58
	.byte	0x24
	.byte	0x3e
	.byte	0x11
	.ascii "_ZNSt16initializer_listIN3DDT4NodeEEC4EPKS1_y\0"
	.long	0x9ef5
	.long	0x9f05
	.uleb128 0x2
	.long	0x1c8f7
	.uleb128 0x1
	.long	0x9f05
	.uleb128 0x1
	.long	0x9e9e
	.byte	0
	.uleb128 0x36
	.secrel32	.LASF54
	.byte	0x24
	.byte	0x37
	.byte	0x1a
	.long	0x1c50d
	.uleb128 0x24
	.secrel32	.LASF58
	.byte	0x24
	.byte	0x42
	.byte	0x11
	.ascii "_ZNSt16initializer_listIN3DDT4NodeEEC4Ev\0"
	.long	0x9f4a
	.long	0x9f50
	.uleb128 0x2
	.long	0x1c8f7
	.byte	0
	.uleb128 0x29
	.secrel32	.LASF59
	.byte	0x24
	.byte	0x47
	.byte	0x7
	.ascii "_ZNKSt16initializer_listIN3DDT4NodeEE4sizeEv\0"
	.long	0x9e9e
	.byte	0x1
	.long	0x9f92
	.long	0x9f98
	.uleb128 0x2
	.long	0x1c8fc
	.byte	0
	.uleb128 0x29
	.secrel32	.LASF60
	.byte	0x24
	.byte	0x4b
	.byte	0x7
	.ascii "_ZNKSt16initializer_listIN3DDT4NodeEE5beginEv\0"
	.long	0x9f05
	.byte	0x1
	.long	0x9fdb
	.long	0x9fe1
	.uleb128 0x2
	.long	0x1c8fc
	.byte	0
	.uleb128 0x65
	.ascii "end\0"
	.byte	0x24
	.byte	0x4f
	.ascii "_ZNKSt16initializer_listIN3DDT4NodeEE3endEv\0"
	.long	0x9f05
	.long	0xa020
	.long	0xa026
	.uleb128 0x2
	.long	0x1c8fc
	.byte	0
	.uleb128 0x5
	.ascii "_E\0"
	.long	0x1c0ec
	.byte	0
	.uleb128 0xa
	.long	0x9e60
	.uleb128 0x53
	.ascii "reverse_iterator<__gnu_cxx::__normal_iterator<DDT::Node*, std::vector<DDT::Node, std::allocator<DDT::Node> > > >\0"
	.uleb128 0x53
	.ascii "reverse_iterator<__gnu_cxx::__normal_iterator<const DDT::Node*, std::vector<DDT::Node, std::allocator<DDT::Node> > > >\0"
	.uleb128 0x3a
	.ascii "allocator<int>\0"
	.byte	0x1
	.byte	0xc
	.byte	0x8a
	.byte	0xb
	.long	0xa248
	.uleb128 0x48
	.long	0x169f8
	.byte	0x1
	.uleb128 0x24
	.secrel32	.LASF74
	.byte	0xc
	.byte	0xa8
	.byte	0x7
	.ascii "_ZNSaIiEC4Ev\0"
	.long	0xa159
	.long	0xa15f
	.uleb128 0x2
	.long	0x1c5cb
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF74
	.byte	0xc
	.byte	0xab
	.byte	0x7
	.ascii "_ZNSaIiEC4ERKS_\0"
	.long	0xa17f
	.long	0xa18a
	.uleb128 0x2
	.long	0x1c5cb
	.uleb128 0x1
	.long	0x1c5d5
	.byte	0
	.uleb128 0x5a
	.secrel32	.LASF35
	.byte	0xc
	.byte	0xb0
	.byte	0x12
	.ascii "_ZNSaIiEaSERKS_\0"
	.long	0x1c5da
	.long	0xa1ae
	.long	0xa1b9
	.uleb128 0x2
	.long	0x1c5cb
	.uleb128 0x1
	.long	0x1c5d5
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF75
	.byte	0xc
	.byte	0xba
	.byte	0x7
	.ascii "_ZNSaIiED4Ev\0"
	.long	0xa1d6
	.long	0xa1e1
	.uleb128 0x2
	.long	0x1c5cb
	.uleb128 0x2
	.long	0x191dc
	.byte	0
	.uleb128 0x29
	.secrel32	.LASF76
	.byte	0xc
	.byte	0xbf
	.byte	0x7
	.ascii "_ZNSaIiE8allocateEy\0"
	.long	0x19287
	.byte	0x1
	.long	0xa20a
	.long	0xa215
	.uleb128 0x2
	.long	0x1c5cb
	.uleb128 0x1
	.long	0x2f0
	.byte	0
	.uleb128 0x66
	.secrel32	.LASF77
	.ascii "_ZNSaIiE10deallocateEPiy\0"
	.long	0xa237
	.uleb128 0x2
	.long	0x1c5cb
	.uleb128 0x1
	.long	0x19287
	.uleb128 0x1
	.long	0x2f0
	.byte	0
	.byte	0
	.uleb128 0xa
	.long	0xa11e
	.uleb128 0x2f
	.ascii "allocator_traits<std::allocator<int> >\0"
	.byte	0x1
	.byte	0x10
	.word	0x197
	.byte	0xc
	.long	0xa462
	.uleb128 0x1a
	.secrel32	.LASF78
	.byte	0x10
	.word	0x1a0
	.byte	0xd
	.long	0x19287
	.uleb128 0x14
	.secrel32	.LASF76
	.byte	0x10
	.word	0x1cb
	.byte	0x7
	.ascii "_ZNSt16allocator_traitsISaIiEE8allocateERS0_y\0"
	.long	0xa27e
	.long	0xa2d5
	.uleb128 0x1
	.long	0x1c5df
	.uleb128 0x1
	.long	0xa2e7
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF79
	.byte	0x10
	.word	0x19a
	.byte	0xd
	.long	0xa11e
	.uleb128 0xa
	.long	0xa2d5
	.uleb128 0x1a
	.secrel32	.LASF56
	.byte	0x10
	.word	0x1af
	.byte	0xd
	.long	0x2f0
	.uleb128 0x14
	.secrel32	.LASF76
	.byte	0x10
	.word	0x1d9
	.byte	0x7
	.ascii "_ZNSt16allocator_traitsISaIiEE8allocateERS0_yPKv\0"
	.long	0xa27e
	.long	0xa346
	.uleb128 0x1
	.long	0x1c5df
	.uleb128 0x1
	.long	0xa2e7
	.uleb128 0x1
	.long	0xa346
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF80
	.byte	0x10
	.word	0x1a9
	.byte	0xd
	.long	0x1a551
	.uleb128 0x67
	.secrel32	.LASF77
	.ascii "_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Piy\0"
	.long	0xa39f
	.uleb128 0x1
	.long	0x1c5df
	.uleb128 0x1
	.long	0xa27e
	.uleb128 0x1
	.long	0xa2e7
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF81
	.byte	0x10
	.word	0x21f
	.byte	0x7
	.ascii "_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_\0"
	.long	0xa2e7
	.long	0xa3e4
	.uleb128 0x1
	.long	0x1c5e4
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF82
	.byte	0x10
	.word	0x22e
	.byte	0x7
	.ascii "_ZNSt16allocator_traitsISaIiEE37select_on_container_copy_constructionERKS0_\0"
	.long	0xa2d5
	.long	0xa447
	.uleb128 0x1
	.long	0x1c5e4
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF2
	.byte	0x10
	.word	0x19d
	.byte	0xd
	.long	0x191dc
	.uleb128 0x1a
	.secrel32	.LASF83
	.byte	0x10
	.word	0x1be
	.byte	0x8
	.long	0xa11e
	.byte	0
	.uleb128 0x26
	.ascii "_Vector_base<int, std::allocator<int> >\0"
	.byte	0x18
	.byte	0xb
	.byte	0x54
	.byte	0xc
	.long	0xac57
	.uleb128 0x4b
	.secrel32	.LASF128
	.byte	0x18
	.byte	0xb
	.byte	0x5b
	.byte	0xe
	.long	0xa616
	.uleb128 0x3f
	.secrel32	.LASF85
	.byte	0xb
	.byte	0x5d
	.byte	0xa
	.long	0xa61b
	.byte	0
	.uleb128 0x3f
	.secrel32	.LASF86
	.byte	0xb
	.byte	0x5e
	.byte	0xa
	.long	0xa61b
	.byte	0x8
	.uleb128 0x3f
	.secrel32	.LASF87
	.byte	0xb
	.byte	0x5f
	.byte	0xa
	.long	0xa61b
	.byte	0x10
	.uleb128 0x2a
	.secrel32	.LASF128
	.byte	0xb
	.byte	0x61
	.byte	0x2
	.ascii "_ZNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataC4Ev\0"
	.long	0xa50a
	.long	0xa510
	.uleb128 0x2
	.long	0x1c5fd
	.byte	0
	.uleb128 0x2a
	.secrel32	.LASF128
	.byte	0xb
	.byte	0x66
	.byte	0x2
	.ascii "_ZNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataC4EOS2_\0"
	.long	0xa556
	.long	0xa561
	.uleb128 0x2
	.long	0x1c5fd
	.uleb128 0x1
	.long	0x1c607
	.byte	0
	.uleb128 0x2a
	.secrel32	.LASF129
	.byte	0xb
	.byte	0x6d
	.byte	0x2
	.ascii "_ZNSt12_Vector_baseIiSaIiEE17_Vector_impl_data12_M_copy_dataERKS2_\0"
	.long	0xa5b4
	.long	0xa5bf
	.uleb128 0x2
	.long	0x1c5fd
	.uleb128 0x1
	.long	0x1c60c
	.byte	0
	.uleb128 0x78
	.secrel32	.LASF89
	.ascii "_ZNSt12_Vector_baseIiSaIiEE17_Vector_impl_data12_M_swap_dataERS2_\0"
	.long	0xa60a
	.uleb128 0x2
	.long	0x1c5fd
	.uleb128 0x1
	.long	0x1c611
	.byte	0
	.byte	0
	.uleb128 0xa
	.long	0xa493
	.uleb128 0x1c
	.secrel32	.LASF78
	.byte	0xb
	.byte	0x59
	.byte	0x9
	.long	0x16e13
	.uleb128 0x4b
	.secrel32	.LASF130
	.byte	0x18
	.byte	0xb
	.byte	0x80
	.byte	0xe
	.long	0xa7ff
	.uleb128 0x39
	.long	0xa11e
	.uleb128 0x39
	.long	0xa493
	.uleb128 0x2a
	.secrel32	.LASF130
	.byte	0xb
	.byte	0x83
	.byte	0x2
	.ascii "_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC4Ev\0"
	.long	0xa67c
	.long	0xa682
	.uleb128 0x2
	.long	0x1c616
	.byte	0
	.uleb128 0x2a
	.secrel32	.LASF130
	.byte	0xb
	.byte	0x88
	.byte	0x2
	.ascii "_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC4ERKS0_\0"
	.long	0xa6c4
	.long	0xa6cf
	.uleb128 0x2
	.long	0x1c616
	.uleb128 0x1
	.long	0x1c620
	.byte	0
	.uleb128 0x2a
	.secrel32	.LASF130
	.byte	0xb
	.byte	0x8f
	.byte	0x2
	.ascii "_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC4EOS2_\0"
	.long	0xa710
	.long	0xa71b
	.uleb128 0x2
	.long	0x1c616
	.uleb128 0x1
	.long	0x1c625
	.byte	0
	.uleb128 0x2a
	.secrel32	.LASF130
	.byte	0xb
	.byte	0x93
	.byte	0x2
	.ascii "_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC4EOS0_\0"
	.long	0xa75c
	.long	0xa767
	.uleb128 0x2
	.long	0x1c616
	.uleb128 0x1
	.long	0x1c62a
	.byte	0
	.uleb128 0x2a
	.secrel32	.LASF130
	.byte	0xb
	.byte	0x97
	.byte	0x2
	.ascii "_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC4EOS0_OS2_\0"
	.long	0xa7ac
	.long	0xa7bc
	.uleb128 0x2
	.long	0x1c616
	.uleb128 0x1
	.long	0x1c62a
	.uleb128 0x1
	.long	0x1c625
	.byte	0
	.uleb128 0x79
	.secrel32	.LASF131
	.ascii "_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD4Ev\0"
	.long	0xa7f3
	.uleb128 0x2
	.long	0x1c616
	.uleb128 0x2
	.long	0x191dc
	.byte	0
	.byte	0
	.uleb128 0x1c
	.secrel32	.LASF132
	.byte	0xb
	.byte	0x57
	.byte	0x15
	.long	0x16e4c
	.uleb128 0xa
	.long	0xa7ff
	.uleb128 0x2b
	.secrel32	.LASF133
	.byte	0xb
	.word	0x114
	.byte	0x7
	.ascii "_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv\0"
	.long	0x1c62f
	.long	0xa858
	.long	0xa85e
	.uleb128 0x2
	.long	0x1c634
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF133
	.byte	0xb
	.word	0x118
	.byte	0x7
	.ascii "_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv\0"
	.long	0x1c620
	.long	0xa8a7
	.long	0xa8ad
	.uleb128 0x2
	.long	0x1c63e
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF79
	.byte	0xb
	.word	0x111
	.byte	0x16
	.long	0xa11e
	.uleb128 0xa
	.long	0xa8ad
	.uleb128 0x2b
	.secrel32	.LASF93
	.byte	0xb
	.word	0x11c
	.byte	0x7
	.ascii "_ZNKSt12_Vector_baseIiSaIiEE13get_allocatorEv\0"
	.long	0xa8ad
	.long	0xa902
	.long	0xa908
	.uleb128 0x2
	.long	0x1c63e
	.byte	0
	.uleb128 0x51
	.secrel32	.LASF134
	.byte	0xb
	.word	0x120
	.byte	0x7
	.ascii "_ZNSt12_Vector_baseIiSaIiEEC4Ev\0"
	.long	0xa939
	.long	0xa93f
	.uleb128 0x2
	.long	0x1c634
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF134
	.byte	0xb
	.word	0x125
	.byte	0x7
	.ascii "_ZNSt12_Vector_baseIiSaIiEEC4ERKS0_\0"
	.long	0xa974
	.long	0xa97f
	.uleb128 0x2
	.long	0x1c634
	.uleb128 0x1
	.long	0x1c648
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF134
	.byte	0xb
	.word	0x12a
	.byte	0x7
	.ascii "_ZNSt12_Vector_baseIiSaIiEEC4Ey\0"
	.long	0xa9b0
	.long	0xa9bb
	.uleb128 0x2
	.long	0x1c634
	.uleb128 0x1
	.long	0x2f0
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF134
	.byte	0xb
	.word	0x12f
	.byte	0x7
	.ascii "_ZNSt12_Vector_baseIiSaIiEEC4EyRKS0_\0"
	.long	0xa9f1
	.long	0xaa01
	.uleb128 0x2
	.long	0x1c634
	.uleb128 0x1
	.long	0x2f0
	.uleb128 0x1
	.long	0x1c648
	.byte	0
	.uleb128 0x51
	.secrel32	.LASF134
	.byte	0xb
	.word	0x134
	.byte	0x7
	.ascii "_ZNSt12_Vector_baseIiSaIiEEC4EOS1_\0"
	.long	0xaa35
	.long	0xaa40
	.uleb128 0x2
	.long	0x1c634
	.uleb128 0x1
	.long	0x1c64d
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF134
	.byte	0xb
	.word	0x138
	.byte	0x7
	.ascii "_ZNSt12_Vector_baseIiSaIiEEC4EOS0_\0"
	.long	0xaa74
	.long	0xaa7f
	.uleb128 0x2
	.long	0x1c634
	.uleb128 0x1
	.long	0x1c62a
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF134
	.byte	0xb
	.word	0x13b
	.byte	0x7
	.ascii "_ZNSt12_Vector_baseIiSaIiEEC4EOS1_RKS0_\0"
	.long	0xaab8
	.long	0xaac8
	.uleb128 0x2
	.long	0x1c634
	.uleb128 0x1
	.long	0x1c64d
	.uleb128 0x1
	.long	0x1c648
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF134
	.byte	0xb
	.word	0x148
	.byte	0x7
	.ascii "_ZNSt12_Vector_baseIiSaIiEEC4ERKS0_OS1_\0"
	.long	0xab01
	.long	0xab11
	.uleb128 0x2
	.long	0x1c634
	.uleb128 0x1
	.long	0x1c648
	.uleb128 0x1
	.long	0x1c64d
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF135
	.byte	0xb
	.word	0x14d
	.byte	0x7
	.ascii "_ZNSt12_Vector_baseIiSaIiEED4Ev\0"
	.long	0xab42
	.long	0xab4d
	.uleb128 0x2
	.long	0x1c634
	.uleb128 0x2
	.long	0x191dc
	.byte	0
	.uleb128 0x5b
	.secrel32	.LASF95
	.byte	0xb
	.word	0x154
	.byte	0x14
	.long	0xa627
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF96
	.byte	0xb
	.word	0x157
	.byte	0x7
	.ascii "_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEy\0"
	.long	0xa61b
	.long	0xab9b
	.long	0xaba6
	.uleb128 0x2
	.long	0x1c634
	.uleb128 0x1
	.long	0x2f0
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF97
	.byte	0xb
	.word	0x15e
	.byte	0x7
	.ascii "_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPiy\0"
	.long	0xabe6
	.long	0xabf6
	.uleb128 0x2
	.long	0x1c634
	.uleb128 0x1
	.long	0xa61b
	.uleb128 0x1
	.long	0x2f0
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF136
	.byte	0xb
	.word	0x167
	.byte	0x7
	.ascii "_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEy\0"
	.byte	0x2
	.long	0xac39
	.long	0xac44
	.uleb128 0x2
	.long	0x1c634
	.uleb128 0x1
	.long	0x2f0
	.byte	0
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x191dc
	.uleb128 0x4
	.secrel32	.LASF98
	.long	0xa11e
	.byte	0
	.uleb128 0xa
	.long	0xa462
	.uleb128 0x4d
	.ascii "vector<int, std::allocator<int> >\0"
	.byte	0x18
	.byte	0xb
	.word	0x185
	.long	0xc5a7
	.uleb128 0x28
	.byte	0xb
	.word	0x185
	.byte	0xb
	.long	0xab5b
	.uleb128 0x28
	.byte	0xb
	.word	0x185
	.byte	0xb
	.long	0xaba6
	.uleb128 0x28
	.byte	0xb
	.word	0x185
	.byte	0xb
	.long	0xab4d
	.uleb128 0x28
	.byte	0xb
	.word	0x185
	.byte	0xb
	.long	0xa85e
	.uleb128 0x28
	.byte	0xb
	.word	0x185
	.byte	0xb
	.long	0xa810
	.uleb128 0x28
	.byte	0xb
	.word	0x185
	.byte	0xb
	.long	0xa8bf
	.uleb128 0x48
	.long	0xa462
	.byte	0x2
	.uleb128 0x14
	.secrel32	.LASF137
	.byte	0xb
	.word	0x1af
	.byte	0x7
	.ascii "_ZNSt6vectorIiSaIiEE19_S_nothrow_relocateESt17integral_constantIbLb1EE\0"
	.long	0x14cc6
	.long	0xad21
	.uleb128 0x1
	.long	0x2b7e
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF137
	.byte	0xb
	.word	0x1b8
	.byte	0x7
	.ascii "_ZNSt6vectorIiSaIiEE19_S_nothrow_relocateESt17integral_constantIbLb0EE\0"
	.long	0x14cc6
	.long	0xad7f
	.uleb128 0x1
	.long	0x2dd
	.byte	0
	.uleb128 0x7a
	.secrel32	.LASF149
	.ascii "_ZNSt6vectorIiSaIiEE15_S_use_relocateEv\0"
	.long	0x14cc6
	.uleb128 0x1b
	.secrel32	.LASF78
	.byte	0xb
	.word	0x19f
	.byte	0x29
	.long	0xa61b
	.uleb128 0x14
	.secrel32	.LASF138
	.byte	0xb
	.word	0x1c5
	.byte	0x7
	.ascii "_ZNSt6vectorIiSaIiEE14_S_do_relocateEPiS2_S2_RS0_St17integral_constantIbLb1EE\0"
	.long	0xadb0
	.long	0xae36
	.uleb128 0x1
	.long	0xadb0
	.uleb128 0x1
	.long	0xadb0
	.uleb128 0x1
	.long	0xadb0
	.uleb128 0x1
	.long	0x1c652
	.uleb128 0x1
	.long	0x2b7e
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF132
	.byte	0xb
	.word	0x19a
	.byte	0x2f
	.long	0xa7ff
	.uleb128 0xa
	.long	0xae36
	.uleb128 0x14
	.secrel32	.LASF138
	.byte	0xb
	.word	0x1cc
	.byte	0x7
	.ascii "_ZNSt6vectorIiSaIiEE14_S_do_relocateEPiS2_S2_RS0_St17integral_constantIbLb0EE\0"
	.long	0xadb0
	.long	0xaec1
	.uleb128 0x1
	.long	0xadb0
	.uleb128 0x1
	.long	0xadb0
	.uleb128 0x1
	.long	0xadb0
	.uleb128 0x1
	.long	0x1c652
	.uleb128 0x1
	.long	0x2dd
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF139
	.byte	0xb
	.word	0x1d1
	.byte	0x7
	.ascii "_ZNSt6vectorIiSaIiEE11_S_relocateEPiS2_S2_RS0_\0"
	.long	0xadb0
	.long	0xaf16
	.uleb128 0x1
	.long	0xadb0
	.uleb128 0x1
	.long	0xadb0
	.uleb128 0x1
	.long	0xadb0
	.uleb128 0x1
	.long	0x1c652
	.byte	0
	.uleb128 0x54
	.secrel32	.LASF99
	.byte	0xb
	.word	0x1e7
	.ascii "_ZNSt6vectorIiSaIiEEC4Ev\0"
	.long	0xaf3f
	.long	0xaf45
	.uleb128 0x2
	.long	0x1c657
	.byte	0
	.uleb128 0x43
	.secrel32	.LASF99
	.byte	0xb
	.word	0x1f1
	.ascii "_ZNSt6vectorIiSaIiEEC4ERKS0_\0"
	.long	0xaf72
	.long	0xaf7d
	.uleb128 0x2
	.long	0x1c657
	.uleb128 0x1
	.long	0x1c661
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF79
	.byte	0xb
	.word	0x1aa
	.byte	0x1a
	.long	0xa11e
	.uleb128 0xa
	.long	0xaf7d
	.uleb128 0x43
	.secrel32	.LASF99
	.byte	0xb
	.word	0x1fe
	.ascii "_ZNSt6vectorIiSaIiEEC4EyRKS0_\0"
	.long	0xafbd
	.long	0xafcd
	.uleb128 0x2
	.long	0x1c657
	.uleb128 0x1
	.long	0xafcd
	.uleb128 0x1
	.long	0x1c661
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF56
	.byte	0xb
	.word	0x1a8
	.byte	0x1a
	.long	0x2f0
	.uleb128 0xa
	.long	0xafcd
	.uleb128 0x12
	.secrel32	.LASF99
	.byte	0xb
	.word	0x20a
	.byte	0x7
	.ascii "_ZNSt6vectorIiSaIiEEC4EyRKiRKS0_\0"
	.byte	0x1
	.long	0xb012
	.long	0xb027
	.uleb128 0x2
	.long	0x1c657
	.uleb128 0x1
	.long	0xafcd
	.uleb128 0x1
	.long	0x1c666
	.uleb128 0x1
	.long	0x1c661
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF2
	.byte	0xb
	.word	0x19e
	.byte	0x17
	.long	0x191dc
	.uleb128 0xa
	.long	0xb027
	.uleb128 0x12
	.secrel32	.LASF99
	.byte	0xb
	.word	0x229
	.byte	0x7
	.ascii "_ZNSt6vectorIiSaIiEEC4ERKS1_\0"
	.byte	0x1
	.long	0xb068
	.long	0xb073
	.uleb128 0x2
	.long	0x1c657
	.uleb128 0x1
	.long	0x1c66b
	.byte	0
	.uleb128 0x54
	.secrel32	.LASF99
	.byte	0xb
	.word	0x23c
	.ascii "_ZNSt6vectorIiSaIiEEC4EOS1_\0"
	.long	0xb09f
	.long	0xb0aa
	.uleb128 0x2
	.long	0x1c657
	.uleb128 0x1
	.long	0x1c670
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF99
	.byte	0xb
	.word	0x23f
	.byte	0x7
	.ascii "_ZNSt6vectorIiSaIiEEC4ERKS1_RKS0_\0"
	.byte	0x1
	.long	0xb0de
	.long	0xb0ee
	.uleb128 0x2
	.long	0x1c657
	.uleb128 0x1
	.long	0x1c66b
	.uleb128 0x1
	.long	0x1c661
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF99
	.byte	0xb
	.word	0x249
	.byte	0x7
	.ascii "_ZNSt6vectorIiSaIiEEC4EOS1_RKS0_St17integral_constantIbLb1EE\0"
	.long	0xb13c
	.long	0xb151
	.uleb128 0x2
	.long	0x1c657
	.uleb128 0x1
	.long	0x1c670
	.uleb128 0x1
	.long	0x1c661
	.uleb128 0x1
	.long	0x2b7e
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF99
	.byte	0xb
	.word	0x24d
	.byte	0x7
	.ascii "_ZNSt6vectorIiSaIiEEC4EOS1_RKS0_St17integral_constantIbLb0EE\0"
	.long	0xb19f
	.long	0xb1b4
	.uleb128 0x2
	.long	0x1c657
	.uleb128 0x1
	.long	0x1c670
	.uleb128 0x1
	.long	0x1c661
	.uleb128 0x1
	.long	0x2dd
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF99
	.byte	0xb
	.word	0x25f
	.byte	0x7
	.ascii "_ZNSt6vectorIiSaIiEEC4EOS1_RKS0_\0"
	.byte	0x1
	.long	0xb1e7
	.long	0xb1f7
	.uleb128 0x2
	.long	0x1c657
	.uleb128 0x1
	.long	0x1c670
	.uleb128 0x1
	.long	0x1c661
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF99
	.byte	0xb
	.word	0x271
	.byte	0x7
	.ascii "_ZNSt6vectorIiSaIiEEC4ESt16initializer_listIiERKS0_\0"
	.byte	0x1
	.long	0xb23d
	.long	0xb24d
	.uleb128 0x2
	.long	0x1c657
	.uleb128 0x1
	.long	0xc5ac
	.uleb128 0x1
	.long	0x1c661
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF100
	.byte	0xb
	.word	0x2a6
	.byte	0x7
	.ascii "_ZNSt6vectorIiSaIiEED4Ev\0"
	.byte	0x1
	.long	0xb278
	.long	0xb283
	.uleb128 0x2
	.long	0x1c657
	.uleb128 0x2
	.long	0x191dc
	.byte	0
	.uleb128 0x29
	.secrel32	.LASF35
	.byte	0xe
	.byte	0xc6
	.byte	0x5
	.ascii "_ZNSt6vectorIiSaIiEEaSERKS1_\0"
	.long	0x1c675
	.byte	0x1
	.long	0xb2b5
	.long	0xb2c0
	.uleb128 0x2
	.long	0x1c657
	.uleb128 0x1
	.long	0x1c66b
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF35
	.byte	0xb
	.word	0x2c5
	.byte	0x7
	.ascii "_ZNSt6vectorIiSaIiEEaSEOS1_\0"
	.long	0x1c675
	.byte	0x1
	.long	0xb2f2
	.long	0xb2fd
	.uleb128 0x2
	.long	0x1c657
	.uleb128 0x1
	.long	0x1c670
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF35
	.byte	0xb
	.word	0x2da
	.byte	0x7
	.ascii "_ZNSt6vectorIiSaIiEEaSESt16initializer_listIiE\0"
	.long	0x1c675
	.byte	0x1
	.long	0xb342
	.long	0xb34d
	.uleb128 0x2
	.long	0x1c657
	.uleb128 0x1
	.long	0xc5ac
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF101
	.byte	0xb
	.word	0x2ed
	.byte	0x7
	.ascii "_ZNSt6vectorIiSaIiEE6assignEyRKi\0"
	.byte	0x1
	.long	0xb380
	.long	0xb390
	.uleb128 0x2
	.long	0x1c657
	.uleb128 0x1
	.long	0xafcd
	.uleb128 0x1
	.long	0x1c666
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF101
	.byte	0xb
	.word	0x31a
	.byte	0x7
	.ascii "_ZNSt6vectorIiSaIiEE6assignESt16initializer_listIiE\0"
	.byte	0x1
	.long	0xb3d6
	.long	0xb3e1
	.uleb128 0x2
	.long	0x1c657
	.uleb128 0x1
	.long	0xc5ac
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF43
	.byte	0xb
	.word	0x1a3
	.byte	0x3d
	.long	0x16e6c
	.uleb128 0x7
	.secrel32	.LASF60
	.byte	0xb
	.word	0x32b
	.byte	0x7
	.ascii "_ZNSt6vectorIiSaIiEE5beginEv\0"
	.long	0xb3e1
	.byte	0x1
	.long	0xb421
	.long	0xb427
	.uleb128 0x2
	.long	0x1c657
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF54
	.byte	0xb
	.word	0x1a5
	.byte	0x7
	.long	0x173e1
	.uleb128 0x7
	.secrel32	.LASF60
	.byte	0xb
	.word	0x334
	.byte	0x7
	.ascii "_ZNKSt6vectorIiSaIiEE5beginEv\0"
	.long	0xb427
	.byte	0x1
	.long	0xb468
	.long	0xb46e
	.uleb128 0x2
	.long	0x1c67a
	.byte	0
	.uleb128 0x30
	.ascii "end\0"
	.byte	0xb
	.word	0x33d
	.byte	0x7
	.ascii "_ZNSt6vectorIiSaIiEE3endEv\0"
	.long	0xb3e1
	.byte	0x1
	.long	0xb49f
	.long	0xb4a5
	.uleb128 0x2
	.long	0x1c657
	.byte	0
	.uleb128 0x30
	.ascii "end\0"
	.byte	0xb
	.word	0x346
	.byte	0x7
	.ascii "_ZNKSt6vectorIiSaIiEE3endEv\0"
	.long	0xb427
	.byte	0x1
	.long	0xb4d7
	.long	0xb4dd
	.uleb128 0x2
	.long	0x1c67a
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF62
	.byte	0xb
	.word	0x1a7
	.byte	0x30
	.long	0xc746
	.uleb128 0x7
	.secrel32	.LASF102
	.byte	0xb
	.word	0x34f
	.byte	0x7
	.ascii "_ZNSt6vectorIiSaIiEE6rbeginEv\0"
	.long	0xb4dd
	.byte	0x1
	.long	0xb51e
	.long	0xb524
	.uleb128 0x2
	.long	0x1c657
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF103
	.byte	0xb
	.word	0x1a6
	.byte	0x35
	.long	0xc7a6
	.uleb128 0x7
	.secrel32	.LASF102
	.byte	0xb
	.word	0x358
	.byte	0x7
	.ascii "_ZNKSt6vectorIiSaIiEE6rbeginEv\0"
	.long	0xb524
	.byte	0x1
	.long	0xb566
	.long	0xb56c
	.uleb128 0x2
	.long	0x1c67a
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF104
	.byte	0xb
	.word	0x361
	.byte	0x7
	.ascii "_ZNSt6vectorIiSaIiEE4rendEv\0"
	.long	0xb4dd
	.byte	0x1
	.long	0xb59e
	.long	0xb5a4
	.uleb128 0x2
	.long	0x1c657
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF104
	.byte	0xb
	.word	0x36a
	.byte	0x7
	.ascii "_ZNKSt6vectorIiSaIiEE4rendEv\0"
	.long	0xb524
	.byte	0x1
	.long	0xb5d7
	.long	0xb5dd
	.uleb128 0x2
	.long	0x1c67a
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF105
	.byte	0xb
	.word	0x374
	.byte	0x7
	.ascii "_ZNKSt6vectorIiSaIiEE6cbeginEv\0"
	.long	0xb427
	.byte	0x1
	.long	0xb612
	.long	0xb618
	.uleb128 0x2
	.long	0x1c67a
	.byte	0
	.uleb128 0x30
	.ascii "cend\0"
	.byte	0xb
	.word	0x37d
	.byte	0x7
	.ascii "_ZNKSt6vectorIiSaIiEE4cendEv\0"
	.long	0xb427
	.byte	0x1
	.long	0xb64c
	.long	0xb652
	.uleb128 0x2
	.long	0x1c67a
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF106
	.byte	0xb
	.word	0x386
	.byte	0x7
	.ascii "_ZNKSt6vectorIiSaIiEE7crbeginEv\0"
	.long	0xb524
	.byte	0x1
	.long	0xb688
	.long	0xb68e
	.uleb128 0x2
	.long	0x1c67a
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF107
	.byte	0xb
	.word	0x38f
	.byte	0x7
	.ascii "_ZNKSt6vectorIiSaIiEE5crendEv\0"
	.long	0xb524
	.byte	0x1
	.long	0xb6c2
	.long	0xb6c8
	.uleb128 0x2
	.long	0x1c67a
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF59
	.byte	0xb
	.word	0x396
	.byte	0x7
	.ascii "_ZNKSt6vectorIiSaIiEE4sizeEv\0"
	.long	0xafcd
	.byte	0x1
	.long	0xb6fb
	.long	0xb701
	.uleb128 0x2
	.long	0x1c67a
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF81
	.byte	0xb
	.word	0x39b
	.byte	0x7
	.ascii "_ZNKSt6vectorIiSaIiEE8max_sizeEv\0"
	.long	0xafcd
	.byte	0x1
	.long	0xb738
	.long	0xb73e
	.uleb128 0x2
	.long	0x1c67a
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF119
	.byte	0xb
	.word	0x3a9
	.byte	0x7
	.ascii "_ZNSt6vectorIiSaIiEE6resizeEy\0"
	.byte	0x1
	.long	0xb76e
	.long	0xb779
	.uleb128 0x2
	.long	0x1c657
	.uleb128 0x1
	.long	0xafcd
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF119
	.byte	0xb
	.word	0x3bd
	.byte	0x7
	.ascii "_ZNSt6vectorIiSaIiEE6resizeEyRKi\0"
	.byte	0x1
	.long	0xb7ac
	.long	0xb7bc
	.uleb128 0x2
	.long	0x1c657
	.uleb128 0x1
	.long	0xafcd
	.uleb128 0x1
	.long	0x1c666
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF120
	.byte	0xb
	.word	0x3dd
	.byte	0x7
	.ascii "_ZNSt6vectorIiSaIiEE13shrink_to_fitEv\0"
	.byte	0x1
	.long	0xb7f4
	.long	0xb7fa
	.uleb128 0x2
	.long	0x1c657
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF108
	.byte	0xb
	.word	0x3e6
	.byte	0x7
	.ascii "_ZNKSt6vectorIiSaIiEE8capacityEv\0"
	.long	0xafcd
	.byte	0x1
	.long	0xb831
	.long	0xb837
	.uleb128 0x2
	.long	0x1c67a
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF109
	.byte	0xb
	.word	0x3ef
	.byte	0x7
	.ascii "_ZNKSt6vectorIiSaIiEE5emptyEv\0"
	.long	0x14cc6
	.byte	0x1
	.long	0xb86b
	.long	0xb871
	.uleb128 0x2
	.long	0x1c67a
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF111
	.byte	0xe
	.byte	0x42
	.byte	0x5
	.ascii "_ZNSt6vectorIiSaIiEE7reserveEy\0"
	.long	0xb8a0
	.long	0xb8ab
	.uleb128 0x2
	.long	0x1c657
	.uleb128 0x1
	.long	0xafcd
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF45
	.byte	0xb
	.word	0x1a1
	.byte	0x32
	.long	0x16e1f
	.uleb128 0x7
	.secrel32	.LASF51
	.byte	0xb
	.word	0x413
	.byte	0x7
	.ascii "_ZNSt6vectorIiSaIiEEixEy\0"
	.long	0xb8ab
	.byte	0x1
	.long	0xb8e7
	.long	0xb8f2
	.uleb128 0x2
	.long	0x1c657
	.uleb128 0x1
	.long	0xafcd
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF53
	.byte	0xb
	.word	0x1a2
	.byte	0x37
	.long	0x16e2b
	.uleb128 0x7
	.secrel32	.LASF51
	.byte	0xb
	.word	0x425
	.byte	0x7
	.ascii "_ZNKSt6vectorIiSaIiEEixEy\0"
	.long	0xb8f2
	.byte	0x1
	.long	0xb92f
	.long	0xb93a
	.uleb128 0x2
	.long	0x1c67a
	.uleb128 0x1
	.long	0xafcd
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF110
	.byte	0xb
	.word	0x42e
	.byte	0x7
	.ascii "_ZNKSt6vectorIiSaIiEE14_M_range_checkEy\0"
	.byte	0x2
	.long	0xb974
	.long	0xb97f
	.uleb128 0x2
	.long	0x1c67a
	.uleb128 0x1
	.long	0xafcd
	.byte	0
	.uleb128 0x30
	.ascii "at\0"
	.byte	0xb
	.word	0x444
	.byte	0x7
	.ascii "_ZNSt6vectorIiSaIiEE2atEy\0"
	.long	0xb8ab
	.byte	0x1
	.long	0xb9ae
	.long	0xb9b9
	.uleb128 0x2
	.long	0x1c657
	.uleb128 0x1
	.long	0xafcd
	.byte	0
	.uleb128 0x30
	.ascii "at\0"
	.byte	0xb
	.word	0x456
	.byte	0x7
	.ascii "_ZNKSt6vectorIiSaIiEE2atEy\0"
	.long	0xb8f2
	.byte	0x1
	.long	0xb9e9
	.long	0xb9f4
	.uleb128 0x2
	.long	0x1c67a
	.uleb128 0x1
	.long	0xafcd
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF112
	.byte	0xb
	.word	0x461
	.byte	0x7
	.ascii "_ZNSt6vectorIiSaIiEE5frontEv\0"
	.long	0xb8ab
	.byte	0x1
	.long	0xba27
	.long	0xba2d
	.uleb128 0x2
	.long	0x1c657
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF112
	.byte	0xb
	.word	0x46c
	.byte	0x7
	.ascii "_ZNKSt6vectorIiSaIiEE5frontEv\0"
	.long	0xb8f2
	.byte	0x1
	.long	0xba61
	.long	0xba67
	.uleb128 0x2
	.long	0x1c67a
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF113
	.byte	0xb
	.word	0x477
	.byte	0x7
	.ascii "_ZNSt6vectorIiSaIiEE4backEv\0"
	.long	0xb8ab
	.byte	0x1
	.long	0xba99
	.long	0xba9f
	.uleb128 0x2
	.long	0x1c657
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF113
	.byte	0xb
	.word	0x482
	.byte	0x7
	.ascii "_ZNKSt6vectorIiSaIiEE4backEv\0"
	.long	0xb8f2
	.byte	0x1
	.long	0xbad2
	.long	0xbad8
	.uleb128 0x2
	.long	0x1c67a
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF114
	.byte	0xb
	.word	0x490
	.byte	0x7
	.ascii "_ZNSt6vectorIiSaIiEE4dataEv\0"
	.long	0x19287
	.byte	0x1
	.long	0xbb0a
	.long	0xbb10
	.uleb128 0x2
	.long	0x1c657
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF114
	.byte	0xb
	.word	0x494
	.byte	0x7
	.ascii "_ZNKSt6vectorIiSaIiEE4dataEv\0"
	.long	0x1c5e9
	.byte	0x1
	.long	0xbb43
	.long	0xbb49
	.uleb128 0x2
	.long	0x1c67a
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF115
	.byte	0xb
	.word	0x4a3
	.byte	0x7
	.ascii "_ZNSt6vectorIiSaIiEE9push_backERKi\0"
	.byte	0x1
	.long	0xbb7e
	.long	0xbb89
	.uleb128 0x2
	.long	0x1c657
	.uleb128 0x1
	.long	0x1c666
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF115
	.byte	0xb
	.word	0x4b3
	.byte	0x7
	.ascii "_ZNSt6vectorIiSaIiEE9push_backEOi\0"
	.byte	0x1
	.long	0xbbbd
	.long	0xbbc8
	.uleb128 0x2
	.long	0x1c657
	.uleb128 0x1
	.long	0x1c684
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF117
	.byte	0xb
	.word	0x4c9
	.byte	0x7
	.ascii "_ZNSt6vectorIiSaIiEE8pop_backEv\0"
	.byte	0x1
	.long	0xbbfa
	.long	0xbc00
	.uleb128 0x2
	.long	0x1c657
	.byte	0
	.uleb128 0x29
	.secrel32	.LASF116
	.byte	0xe
	.byte	0x82
	.byte	0x5
	.ascii "_ZNSt6vectorIiSaIiEE6insertEN9__gnu_cxx17__normal_iteratorIPKiS1_EERS4_\0"
	.long	0xb3e1
	.byte	0x1
	.long	0xbc5d
	.long	0xbc6d
	.uleb128 0x2
	.long	0x1c657
	.uleb128 0x1
	.long	0xb427
	.uleb128 0x1
	.long	0x1c666
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF116
	.byte	0xb
	.word	0x50d
	.byte	0x7
	.ascii "_ZNSt6vectorIiSaIiEE6insertEN9__gnu_cxx17__normal_iteratorIPKiS1_EEOi\0"
	.long	0xb3e1
	.byte	0x1
	.long	0xbcc9
	.long	0xbcd9
	.uleb128 0x2
	.long	0x1c657
	.uleb128 0x1
	.long	0xb427
	.uleb128 0x1
	.long	0x1c684
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF116
	.byte	0xb
	.word	0x51e
	.byte	0x7
	.ascii "_ZNSt6vectorIiSaIiEE6insertEN9__gnu_cxx17__normal_iteratorIPKiS1_EESt16initializer_listIiE\0"
	.long	0xb3e1
	.byte	0x1
	.long	0xbd4a
	.long	0xbd5a
	.uleb128 0x2
	.long	0x1c657
	.uleb128 0x1
	.long	0xb427
	.uleb128 0x1
	.long	0xc5ac
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF116
	.byte	0xb
	.word	0x537
	.byte	0x7
	.ascii "_ZNSt6vectorIiSaIiEE6insertEN9__gnu_cxx17__normal_iteratorIPKiS1_EEyRS4_\0"
	.long	0xb3e1
	.byte	0x1
	.long	0xbdb9
	.long	0xbdce
	.uleb128 0x2
	.long	0x1c657
	.uleb128 0x1
	.long	0xb427
	.uleb128 0x1
	.long	0xafcd
	.uleb128 0x1
	.long	0x1c666
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF118
	.byte	0xb
	.word	0x596
	.byte	0x7
	.ascii "_ZNSt6vectorIiSaIiEE5eraseEN9__gnu_cxx17__normal_iteratorIPKiS1_EE\0"
	.long	0xb3e1
	.byte	0x1
	.long	0xbe27
	.long	0xbe32
	.uleb128 0x2
	.long	0x1c657
	.uleb128 0x1
	.long	0xb427
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF118
	.byte	0xb
	.word	0x5b1
	.byte	0x7
	.ascii "_ZNSt6vectorIiSaIiEE5eraseEN9__gnu_cxx17__normal_iteratorIPKiS1_EES6_\0"
	.long	0xb3e1
	.byte	0x1
	.long	0xbe8e
	.long	0xbe9e
	.uleb128 0x2
	.long	0x1c657
	.uleb128 0x1
	.long	0xb427
	.uleb128 0x1
	.long	0xb427
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF73
	.byte	0xb
	.word	0x5c8
	.byte	0x7
	.ascii "_ZNSt6vectorIiSaIiEE4swapERS1_\0"
	.byte	0x1
	.long	0xbecf
	.long	0xbeda
	.uleb128 0x2
	.long	0x1c657
	.uleb128 0x1
	.long	0x1c675
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF121
	.byte	0xb
	.word	0x5da
	.byte	0x7
	.ascii "_ZNSt6vectorIiSaIiEE5clearEv\0"
	.byte	0x1
	.long	0xbf09
	.long	0xbf0f
	.uleb128 0x2
	.long	0x1c657
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF140
	.byte	0xb
	.word	0x639
	.byte	0x7
	.ascii "_ZNSt6vectorIiSaIiEE18_M_fill_initializeEyRKi\0"
	.byte	0x2
	.long	0xbf4f
	.long	0xbf5f
	.uleb128 0x2
	.long	0x1c657
	.uleb128 0x1
	.long	0xafcd
	.uleb128 0x1
	.long	0x1c666
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF141
	.byte	0xb
	.word	0x643
	.byte	0x7
	.ascii "_ZNSt6vectorIiSaIiEE21_M_default_initializeEy\0"
	.byte	0x2
	.long	0xbf9f
	.long	0xbfaa
	.uleb128 0x2
	.long	0x1c657
	.uleb128 0x1
	.long	0xafcd
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF123
	.byte	0xe
	.word	0x101
	.byte	0x5
	.ascii "_ZNSt6vectorIiSaIiEE14_M_fill_assignEyRKi\0"
	.byte	0x2
	.long	0xbfe6
	.long	0xbff6
	.uleb128 0x2
	.long	0x1c657
	.uleb128 0x1
	.long	0x2f0
	.uleb128 0x1
	.long	0x1c666
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF124
	.byte	0xe
	.word	0x1fd
	.byte	0x5
	.ascii "_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEyRKi\0"
	.byte	0x2
	.long	0xc058
	.long	0xc06d
	.uleb128 0x2
	.long	0x1c657
	.uleb128 0x1
	.long	0xb3e1
	.uleb128 0x1
	.long	0xafcd
	.uleb128 0x1
	.long	0x1c666
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF142
	.byte	0xe
	.word	0x263
	.byte	0x5
	.ascii "_ZNSt6vectorIiSaIiEE17_M_default_appendEy\0"
	.byte	0x2
	.long	0xc0a9
	.long	0xc0b4
	.uleb128 0x2
	.long	0x1c657
	.uleb128 0x1
	.long	0xafcd
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF122
	.byte	0xe
	.word	0x2af
	.byte	0x5
	.ascii "_ZNSt6vectorIiSaIiEE16_M_shrink_to_fitEv\0"
	.long	0x14cc6
	.byte	0x2
	.long	0xc0f3
	.long	0xc0f9
	.uleb128 0x2
	.long	0x1c657
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF143
	.byte	0xe
	.word	0x154
	.byte	0x5
	.ascii "_ZNSt6vectorIiSaIiEE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKiS1_EEOi\0"
	.long	0xb3e1
	.byte	0x2
	.long	0xc15e
	.long	0xc16e
	.uleb128 0x2
	.long	0x1c657
	.uleb128 0x1
	.long	0xb427
	.uleb128 0x1
	.long	0x1c684
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF144
	.byte	0xb
	.word	0x6d6
	.byte	0x7
	.ascii "_ZNSt6vectorIiSaIiEE14_M_emplace_auxEN9__gnu_cxx17__normal_iteratorIPKiS1_EEOi\0"
	.long	0xb3e1
	.byte	0x2
	.long	0xc1d3
	.long	0xc1e3
	.uleb128 0x2
	.long	0x1c657
	.uleb128 0x1
	.long	0xb427
	.uleb128 0x1
	.long	0x1c684
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF125
	.byte	0xb
	.word	0x6dc
	.byte	0x7
	.ascii "_ZNKSt6vectorIiSaIiEE12_M_check_lenEyPKc\0"
	.long	0xafcd
	.byte	0x2
	.long	0xc222
	.long	0xc232
	.uleb128 0x2
	.long	0x1c67a
	.uleb128 0x1
	.long	0xafcd
	.uleb128 0x1
	.long	0x19524
	.byte	0
	.uleb128 0x60
	.secrel32	.LASF145
	.word	0x6e7
	.ascii "_ZNSt6vectorIiSaIiEE17_S_check_init_lenEyRKS0_\0"
	.long	0xafcd
	.long	0xc27b
	.uleb128 0x1
	.long	0xafcd
	.uleb128 0x1
	.long	0x1c661
	.byte	0
	.uleb128 0x60
	.secrel32	.LASF146
	.word	0x6f0
	.ascii "_ZNSt6vectorIiSaIiEE11_S_max_sizeERKS0_\0"
	.long	0xafcd
	.long	0xc2b8
	.uleb128 0x1
	.long	0x1c689
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF126
	.byte	0xb
	.word	0x700
	.byte	0x7
	.ascii "_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi\0"
	.byte	0x2
	.long	0xc2f3
	.long	0xc2fe
	.uleb128 0x2
	.long	0x1c657
	.uleb128 0x1
	.long	0xadb0
	.byte	0
	.uleb128 0x29
	.secrel32	.LASF127
	.byte	0xe
	.byte	0xab
	.byte	0x5
	.ascii "_ZNSt6vectorIiSaIiEE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPiS1_EE\0"
	.long	0xb3e1
	.byte	0x2
	.long	0xc358
	.long	0xc363
	.uleb128 0x2
	.long	0x1c657
	.uleb128 0x1
	.long	0xb3e1
	.byte	0
	.uleb128 0x29
	.secrel32	.LASF127
	.byte	0xe
	.byte	0xb8
	.byte	0x5
	.ascii "_ZNSt6vectorIiSaIiEE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPiS1_EES5_\0"
	.long	0xb3e1
	.byte	0x2
	.long	0xc3c0
	.long	0xc3d0
	.uleb128 0x2
	.long	0x1c657
	.uleb128 0x1
	.long	0xb3e1
	.uleb128 0x1
	.long	0xb3e1
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF147
	.byte	0xb
	.word	0x717
	.byte	0x7
	.ascii "_ZNSt6vectorIiSaIiEE14_M_move_assignEOS1_St17integral_constantIbLb1EE\0"
	.long	0xc427
	.long	0xc437
	.uleb128 0x2
	.long	0x1c657
	.uleb128 0x1
	.long	0x1c670
	.uleb128 0x1
	.long	0x2b7e
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF147
	.byte	0xb
	.word	0x722
	.byte	0x7
	.ascii "_ZNSt6vectorIiSaIiEE14_M_move_assignEOS1_St17integral_constantIbLb0EE\0"
	.long	0xc48e
	.long	0xc49e
	.uleb128 0x2
	.long	0x1c657
	.uleb128 0x1
	.long	0x1c670
	.uleb128 0x1
	.long	0x2dd
	.byte	0
	.uleb128 0x30
	.ascii "_M_allocate_and_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >\0"
	.byte	0xb
	.word	0x5e4
	.byte	0x2
	.ascii "_ZNSt6vectorIiSaIiEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKiS1_EEEEPiyT_S9_\0"
	.long	0xadb0
	.byte	0x2
	.long	0xc57f
	.long	0xc594
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x173e1
	.uleb128 0x2
	.long	0x1c657
	.uleb128 0x1
	.long	0xafcd
	.uleb128 0x1
	.long	0x173e1
	.uleb128 0x1
	.long	0x173e1
	.byte	0
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x191dc
	.uleb128 0x4
	.secrel32	.LASF98
	.long	0xa11e
	.byte	0
	.uleb128 0xa
	.long	0xac5c
	.uleb128 0x3a
	.ascii "initializer_list<int>\0"
	.byte	0x10
	.byte	0x24
	.byte	0x2f
	.byte	0xb
	.long	0xc741
	.uleb128 0x36
	.secrel32	.LASF43
	.byte	0x24
	.byte	0x36
	.byte	0x1a
	.long	0x1c5e9
	.uleb128 0x3f
	.secrel32	.LASF55
	.byte	0x24
	.byte	0x3a
	.byte	0x12
	.long	0xc5cb
	.byte	0
	.uleb128 0x36
	.secrel32	.LASF56
	.byte	0x24
	.byte	0x35
	.byte	0x18
	.long	0x2f0
	.uleb128 0x3f
	.secrel32	.LASF57
	.byte	0x24
	.byte	0x3b
	.byte	0x13
	.long	0xc5e4
	.byte	0x8
	.uleb128 0x2a
	.secrel32	.LASF58
	.byte	0x24
	.byte	0x3e
	.byte	0x11
	.ascii "_ZNSt16initializer_listIiEC4EPKiy\0"
	.long	0xc62f
	.long	0xc63f
	.uleb128 0x2
	.long	0x1cae3
	.uleb128 0x1
	.long	0xc63f
	.uleb128 0x1
	.long	0xc5e4
	.byte	0
	.uleb128 0x36
	.secrel32	.LASF54
	.byte	0x24
	.byte	0x37
	.byte	0x1a
	.long	0x1c5e9
	.uleb128 0x24
	.secrel32	.LASF58
	.byte	0x24
	.byte	0x42
	.byte	0x11
	.ascii "_ZNSt16initializer_listIiEC4Ev\0"
	.long	0xc67a
	.long	0xc680
	.uleb128 0x2
	.long	0x1cae3
	.byte	0
	.uleb128 0x29
	.secrel32	.LASF59
	.byte	0x24
	.byte	0x47
	.byte	0x7
	.ascii "_ZNKSt16initializer_listIiE4sizeEv\0"
	.long	0xc5e4
	.byte	0x1
	.long	0xc6b8
	.long	0xc6be
	.uleb128 0x2
	.long	0x1cae8
	.byte	0
	.uleb128 0x29
	.secrel32	.LASF60
	.byte	0x24
	.byte	0x4b
	.byte	0x7
	.ascii "_ZNKSt16initializer_listIiE5beginEv\0"
	.long	0xc63f
	.byte	0x1
	.long	0xc6f7
	.long	0xc6fd
	.uleb128 0x2
	.long	0x1cae8
	.byte	0
	.uleb128 0x65
	.ascii "end\0"
	.byte	0x24
	.byte	0x4f
	.ascii "_ZNKSt16initializer_listIiE3endEv\0"
	.long	0xc63f
	.long	0xc732
	.long	0xc738
	.uleb128 0x2
	.long	0x1cae8
	.byte	0
	.uleb128 0x5
	.ascii "_E\0"
	.long	0x191dc
	.byte	0
	.uleb128 0xa
	.long	0xc5ac
	.uleb128 0x53
	.ascii "reverse_iterator<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >\0"
	.uleb128 0x53
	.ascii "reverse_iterator<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >\0"
	.uleb128 0x26
	.ascii "iterator_traits<DDT::Node*>\0"
	.byte	0x1
	.byte	0x18
	.byte	0xc6
	.byte	0xc
	.long	0xc856
	.uleb128 0x1c
	.secrel32	.LASF37
	.byte	0x18
	.byte	0xcb
	.byte	0xd
	.long	0x2b66
	.uleb128 0x1c
	.secrel32	.LASF78
	.byte	0x18
	.byte	0xcc
	.byte	0xd
	.long	0x1c4db
	.uleb128 0x1c
	.secrel32	.LASF45
	.byte	0x18
	.byte	0xcd
	.byte	0xd
	.long	0x1c8d4
	.byte	0
	.uleb128 0x3a
	.ascii "allocator<Blorb>\0"
	.byte	0x1
	.byte	0xc
	.byte	0x8a
	.byte	0xb
	.long	0xc9a3
	.uleb128 0x48
	.long	0x1796a
	.byte	0x1
	.uleb128 0x24
	.secrel32	.LASF74
	.byte	0xc
	.byte	0xa8
	.byte	0x7
	.ascii "_ZNSaI5BlorbEC4Ev\0"
	.long	0xc898
	.long	0xc89e
	.uleb128 0x2
	.long	0x1c94e
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF74
	.byte	0xc
	.byte	0xab
	.byte	0x7
	.ascii "_ZNSaI5BlorbEC4ERKS0_\0"
	.long	0xc8c4
	.long	0xc8cf
	.uleb128 0x2
	.long	0x1c94e
	.uleb128 0x1
	.long	0x1c958
	.byte	0
	.uleb128 0x5a
	.secrel32	.LASF35
	.byte	0xc
	.byte	0xb0
	.byte	0x12
	.ascii "_ZNSaI5BlorbEaSERKS0_\0"
	.long	0x1c95d
	.long	0xc8f9
	.long	0xc904
	.uleb128 0x2
	.long	0x1c94e
	.uleb128 0x1
	.long	0x1c958
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF75
	.byte	0xc
	.byte	0xba
	.byte	0x7
	.ascii "_ZNSaI5BlorbED4Ev\0"
	.long	0xc926
	.long	0xc931
	.uleb128 0x2
	.long	0x1c94e
	.uleb128 0x2
	.long	0x191dc
	.byte	0
	.uleb128 0x29
	.secrel32	.LASF76
	.byte	0xc
	.byte	0xbf
	.byte	0x7
	.ascii "_ZNSaI5BlorbE8allocateEy\0"
	.long	0x1c92b
	.byte	0x1
	.long	0xc95f
	.long	0xc96a
	.uleb128 0x2
	.long	0x1c94e
	.uleb128 0x1
	.long	0x2f0
	.byte	0
	.uleb128 0x66
	.secrel32	.LASF77
	.ascii "_ZNSaI5BlorbE10deallocateEPS_y\0"
	.long	0xc992
	.uleb128 0x2
	.long	0x1c94e
	.uleb128 0x1
	.long	0x1c92b
	.uleb128 0x1
	.long	0x2f0
	.byte	0
	.byte	0
	.uleb128 0xa
	.long	0xc856
	.uleb128 0x2f
	.ascii "allocator_traits<std::allocator<Blorb> >\0"
	.byte	0x1
	.byte	0x10
	.word	0x197
	.byte	0xc
	.long	0xccc9
	.uleb128 0x1a
	.secrel32	.LASF78
	.byte	0x10
	.word	0x1a0
	.byte	0xd
	.long	0x1c92b
	.uleb128 0x14
	.secrel32	.LASF76
	.byte	0x10
	.word	0x1cb
	.byte	0x7
	.ascii "_ZNSt16allocator_traitsISaI5BlorbEE8allocateERS1_y\0"
	.long	0xc9db
	.long	0xca37
	.uleb128 0x1
	.long	0x1c962
	.uleb128 0x1
	.long	0xca49
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF79
	.byte	0x10
	.word	0x19a
	.byte	0xd
	.long	0xc856
	.uleb128 0xa
	.long	0xca37
	.uleb128 0x1a
	.secrel32	.LASF56
	.byte	0x10
	.word	0x1af
	.byte	0xd
	.long	0x2f0
	.uleb128 0x14
	.secrel32	.LASF76
	.byte	0x10
	.word	0x1d9
	.byte	0x7
	.ascii "_ZNSt16allocator_traitsISaI5BlorbEE8allocateERS1_yPKv\0"
	.long	0xc9db
	.long	0xcaad
	.uleb128 0x1
	.long	0x1c962
	.uleb128 0x1
	.long	0xca49
	.uleb128 0x1
	.long	0xcaad
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF80
	.byte	0x10
	.word	0x1a9
	.byte	0xd
	.long	0x1a551
	.uleb128 0x67
	.secrel32	.LASF77
	.ascii "_ZNSt16allocator_traitsISaI5BlorbEE10deallocateERS1_PS0_y\0"
	.long	0xcb0d
	.uleb128 0x1
	.long	0x1c962
	.uleb128 0x1
	.long	0xc9db
	.uleb128 0x1
	.long	0xca49
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF81
	.byte	0x10
	.word	0x21f
	.byte	0x7
	.ascii "_ZNSt16allocator_traitsISaI5BlorbEE8max_sizeERKS1_\0"
	.long	0xca49
	.long	0xcb57
	.uleb128 0x1
	.long	0x1c967
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF82
	.byte	0x10
	.word	0x22e
	.byte	0x7
	.ascii "_ZNSt16allocator_traitsISaI5BlorbEE37select_on_container_copy_constructionERKS1_\0"
	.long	0xca37
	.long	0xcbbf
	.uleb128 0x1
	.long	0x1c967
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF2
	.byte	0x10
	.word	0x19d
	.byte	0xd
	.long	0x1beba
	.uleb128 0x1a
	.secrel32	.LASF83
	.byte	0x10
	.word	0x1be
	.byte	0x8
	.long	0xc856
	.uleb128 0x40
	.ascii "destroy<Blorb>\0"
	.byte	0x10
	.word	0x20f
	.byte	0x2
	.ascii "_ZNSt16allocator_traitsISaI5BlorbEE7destroyIS0_EEvRS1_PT_\0"
	.long	0xcc3f
	.uleb128 0x5
	.ascii "_Up\0"
	.long	0x1beba
	.uleb128 0x1
	.long	0x1c962
	.uleb128 0x1
	.long	0x1c92b
	.byte	0
	.uleb128 0x88
	.ascii "construct<Blorb, Blorb>\0"
	.ascii "_ZNSt16allocator_traitsISaI5BlorbEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_\0"
	.uleb128 0x5
	.ascii "_Up\0"
	.long	0x1beba
	.uleb128 0x31
	.secrel32	.LASF148
	.long	0xccb8
	.uleb128 0x32
	.long	0x1beba
	.byte	0
	.uleb128 0x1
	.long	0x1c962
	.uleb128 0x1
	.long	0x1c92b
	.uleb128 0x1
	.long	0x1e580
	.byte	0
	.byte	0
	.uleb128 0x26
	.ascii "_Vector_base<Blorb, std::allocator<Blorb> >\0"
	.byte	0x18
	.byte	0xb
	.byte	0x54
	.byte	0xc
	.long	0xd573
	.uleb128 0x4b
	.secrel32	.LASF128
	.byte	0x18
	.byte	0xb
	.byte	0x5b
	.byte	0xe
	.long	0xce9d
	.uleb128 0x3f
	.secrel32	.LASF85
	.byte	0xb
	.byte	0x5d
	.byte	0xa
	.long	0xcea2
	.byte	0
	.uleb128 0x3f
	.secrel32	.LASF86
	.byte	0xb
	.byte	0x5e
	.byte	0xa
	.long	0xcea2
	.byte	0x8
	.uleb128 0x3f
	.secrel32	.LASF87
	.byte	0xb
	.byte	0x5f
	.byte	0xa
	.long	0xcea2
	.byte	0x10
	.uleb128 0x2a
	.secrel32	.LASF128
	.byte	0xb
	.byte	0x61
	.byte	0x2
	.ascii "_ZNSt12_Vector_baseI5BlorbSaIS0_EE17_Vector_impl_dataC4Ev\0"
	.long	0xcd7c
	.long	0xcd82
	.uleb128 0x2
	.long	0x1c980
	.byte	0
	.uleb128 0x2a
	.secrel32	.LASF128
	.byte	0xb
	.byte	0x66
	.byte	0x2
	.ascii "_ZNSt12_Vector_baseI5BlorbSaIS0_EE17_Vector_impl_dataC4EOS3_\0"
	.long	0xcdcf
	.long	0xcdda
	.uleb128 0x2
	.long	0x1c980
	.uleb128 0x1
	.long	0x1c98a
	.byte	0
	.uleb128 0x2a
	.secrel32	.LASF129
	.byte	0xb
	.byte	0x6d
	.byte	0x2
	.ascii "_ZNSt12_Vector_baseI5BlorbSaIS0_EE17_Vector_impl_data12_M_copy_dataERKS3_\0"
	.long	0xce34
	.long	0xce3f
	.uleb128 0x2
	.long	0x1c980
	.uleb128 0x1
	.long	0x1c98f
	.byte	0
	.uleb128 0x78
	.secrel32	.LASF89
	.ascii "_ZNSt12_Vector_baseI5BlorbSaIS0_EE17_Vector_impl_data12_M_swap_dataERS3_\0"
	.long	0xce91
	.uleb128 0x2
	.long	0x1c980
	.uleb128 0x1
	.long	0x1c994
	.byte	0
	.byte	0
	.uleb128 0xa
	.long	0xccfe
	.uleb128 0x1c
	.secrel32	.LASF78
	.byte	0xb
	.byte	0x59
	.byte	0x9
	.long	0x17dd7
	.uleb128 0x4b
	.secrel32	.LASF130
	.byte	0x18
	.byte	0xb
	.byte	0x80
	.byte	0xe
	.long	0xd0b0
	.uleb128 0x39
	.long	0xc856
	.uleb128 0x39
	.long	0xccfe
	.uleb128 0x2a
	.secrel32	.LASF130
	.byte	0xb
	.byte	0x83
	.byte	0x2
	.ascii "_ZNSt12_Vector_baseI5BlorbSaIS0_EE12_Vector_implC4Ev\0"
	.long	0xcf0a
	.long	0xcf10
	.uleb128 0x2
	.long	0x1c999
	.byte	0
	.uleb128 0x2a
	.secrel32	.LASF130
	.byte	0xb
	.byte	0x88
	.byte	0x2
	.ascii "_ZNSt12_Vector_baseI5BlorbSaIS0_EE12_Vector_implC4ERKS1_\0"
	.long	0xcf59
	.long	0xcf64
	.uleb128 0x2
	.long	0x1c999
	.uleb128 0x1
	.long	0x1c9a3
	.byte	0
	.uleb128 0x2a
	.secrel32	.LASF130
	.byte	0xb
	.byte	0x8f
	.byte	0x2
	.ascii "_ZNSt12_Vector_baseI5BlorbSaIS0_EE12_Vector_implC4EOS3_\0"
	.long	0xcfac
	.long	0xcfb7
	.uleb128 0x2
	.long	0x1c999
	.uleb128 0x1
	.long	0x1c9a8
	.byte	0
	.uleb128 0x2a
	.secrel32	.LASF130
	.byte	0xb
	.byte	0x93
	.byte	0x2
	.ascii "_ZNSt12_Vector_baseI5BlorbSaIS0_EE12_Vector_implC4EOS1_\0"
	.long	0xcfff
	.long	0xd00a
	.uleb128 0x2
	.long	0x1c999
	.uleb128 0x1
	.long	0x1c9ad
	.byte	0
	.uleb128 0x2a
	.secrel32	.LASF130
	.byte	0xb
	.byte	0x97
	.byte	0x2
	.ascii "_ZNSt12_Vector_baseI5BlorbSaIS0_EE12_Vector_implC4EOS1_OS3_\0"
	.long	0xd056
	.long	0xd066
	.uleb128 0x2
	.long	0x1c999
	.uleb128 0x1
	.long	0x1c9ad
	.uleb128 0x1
	.long	0x1c9a8
	.byte	0
	.uleb128 0x79
	.secrel32	.LASF131
	.ascii "_ZNSt12_Vector_baseI5BlorbSaIS0_EE12_Vector_implD4Ev\0"
	.long	0xd0a4
	.uleb128 0x2
	.long	0x1c999
	.uleb128 0x2
	.long	0x191dc
	.byte	0
	.byte	0
	.uleb128 0x1c
	.secrel32	.LASF132
	.byte	0xb
	.byte	0x57
	.byte	0x15
	.long	0x17e12
	.uleb128 0xa
	.long	0xd0b0
	.uleb128 0x2b
	.secrel32	.LASF133
	.byte	0xb
	.word	0x114
	.byte	0x7
	.ascii "_ZNSt12_Vector_baseI5BlorbSaIS0_EE19_M_get_Tp_allocatorEv\0"
	.long	0x1c9b2
	.long	0xd110
	.long	0xd116
	.uleb128 0x2
	.long	0x1c9b7
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF133
	.byte	0xb
	.word	0x118
	.byte	0x7
	.ascii "_ZNKSt12_Vector_baseI5BlorbSaIS0_EE19_M_get_Tp_allocatorEv\0"
	.long	0x1c9a3
	.long	0xd166
	.long	0xd16c
	.uleb128 0x2
	.long	0x1c9c1
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF79
	.byte	0xb
	.word	0x111
	.byte	0x16
	.long	0xc856
	.uleb128 0xa
	.long	0xd16c
	.uleb128 0x2b
	.secrel32	.LASF93
	.byte	0xb
	.word	0x11c
	.byte	0x7
	.ascii "_ZNKSt12_Vector_baseI5BlorbSaIS0_EE13get_allocatorEv\0"
	.long	0xd16c
	.long	0xd1c8
	.long	0xd1ce
	.uleb128 0x2
	.long	0x1c9c1
	.byte	0
	.uleb128 0x51
	.secrel32	.LASF134
	.byte	0xb
	.word	0x120
	.byte	0x7
	.ascii "_ZNSt12_Vector_baseI5BlorbSaIS0_EEC4Ev\0"
	.long	0xd206
	.long	0xd20c
	.uleb128 0x2
	.long	0x1c9b7
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF134
	.byte	0xb
	.word	0x125
	.byte	0x7
	.ascii "_ZNSt12_Vector_baseI5BlorbSaIS0_EEC4ERKS1_\0"
	.long	0xd248
	.long	0xd253
	.uleb128 0x2
	.long	0x1c9b7
	.uleb128 0x1
	.long	0x1c9cb
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF134
	.byte	0xb
	.word	0x12a
	.byte	0x7
	.ascii "_ZNSt12_Vector_baseI5BlorbSaIS0_EEC4Ey\0"
	.long	0xd28b
	.long	0xd296
	.uleb128 0x2
	.long	0x1c9b7
	.uleb128 0x1
	.long	0x2f0
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF134
	.byte	0xb
	.word	0x12f
	.byte	0x7
	.ascii "_ZNSt12_Vector_baseI5BlorbSaIS0_EEC4EyRKS1_\0"
	.long	0xd2d3
	.long	0xd2e3
	.uleb128 0x2
	.long	0x1c9b7
	.uleb128 0x1
	.long	0x2f0
	.uleb128 0x1
	.long	0x1c9cb
	.byte	0
	.uleb128 0x51
	.secrel32	.LASF134
	.byte	0xb
	.word	0x134
	.byte	0x7
	.ascii "_ZNSt12_Vector_baseI5BlorbSaIS0_EEC4EOS2_\0"
	.long	0xd31e
	.long	0xd329
	.uleb128 0x2
	.long	0x1c9b7
	.uleb128 0x1
	.long	0x1c9d0
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF134
	.byte	0xb
	.word	0x138
	.byte	0x7
	.ascii "_ZNSt12_Vector_baseI5BlorbSaIS0_EEC4EOS1_\0"
	.long	0xd364
	.long	0xd36f
	.uleb128 0x2
	.long	0x1c9b7
	.uleb128 0x1
	.long	0x1c9ad
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF134
	.byte	0xb
	.word	0x13b
	.byte	0x7
	.ascii "_ZNSt12_Vector_baseI5BlorbSaIS0_EEC4EOS2_RKS1_\0"
	.long	0xd3af
	.long	0xd3bf
	.uleb128 0x2
	.long	0x1c9b7
	.uleb128 0x1
	.long	0x1c9d0
	.uleb128 0x1
	.long	0x1c9cb
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF134
	.byte	0xb
	.word	0x148
	.byte	0x7
	.ascii "_ZNSt12_Vector_baseI5BlorbSaIS0_EEC4ERKS1_OS2_\0"
	.long	0xd3ff
	.long	0xd40f
	.uleb128 0x2
	.long	0x1c9b7
	.uleb128 0x1
	.long	0x1c9cb
	.uleb128 0x1
	.long	0x1c9d0
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF135
	.byte	0xb
	.word	0x14d
	.byte	0x7
	.ascii "_ZNSt12_Vector_baseI5BlorbSaIS0_EED4Ev\0"
	.long	0xd447
	.long	0xd452
	.uleb128 0x2
	.long	0x1c9b7
	.uleb128 0x2
	.long	0x191dc
	.byte	0
	.uleb128 0x5b
	.secrel32	.LASF95
	.byte	0xb
	.word	0x154
	.byte	0x14
	.long	0xceae
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF96
	.byte	0xb
	.word	0x157
	.byte	0x7
	.ascii "_ZNSt12_Vector_baseI5BlorbSaIS0_EE11_M_allocateEy\0"
	.long	0xcea2
	.long	0xd4a7
	.long	0xd4b2
	.uleb128 0x2
	.long	0x1c9b7
	.uleb128 0x1
	.long	0x2f0
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF97
	.byte	0xb
	.word	0x15e
	.byte	0x7
	.ascii "_ZNSt12_Vector_baseI5BlorbSaIS0_EE13_M_deallocateEPS0_y\0"
	.long	0xd4fb
	.long	0xd50b
	.uleb128 0x2
	.long	0x1c9b7
	.uleb128 0x1
	.long	0xcea2
	.uleb128 0x1
	.long	0x2f0
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF136
	.byte	0xb
	.word	0x167
	.byte	0x7
	.ascii "_ZNSt12_Vector_baseI5BlorbSaIS0_EE17_M_create_storageEy\0"
	.byte	0x2
	.long	0xd555
	.long	0xd560
	.uleb128 0x2
	.long	0x1c9b7
	.uleb128 0x1
	.long	0x2f0
	.byte	0
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1beba
	.uleb128 0x4
	.secrel32	.LASF98
	.long	0xc856
	.byte	0
	.uleb128 0xa
	.long	0xccc9
	.uleb128 0x4d
	.ascii "vector<Blorb, std::allocator<Blorb> >\0"
	.byte	0x18
	.byte	0xb
	.word	0x185
	.long	0xf1d5
	.uleb128 0x28
	.byte	0xb
	.word	0x185
	.byte	0xb
	.long	0xd460
	.uleb128 0x28
	.byte	0xb
	.word	0x185
	.byte	0xb
	.long	0xd4b2
	.uleb128 0x28
	.byte	0xb
	.word	0x185
	.byte	0xb
	.long	0xd452
	.uleb128 0x28
	.byte	0xb
	.word	0x185
	.byte	0xb
	.long	0xd116
	.uleb128 0x28
	.byte	0xb
	.word	0x185
	.byte	0xb
	.long	0xd0c1
	.uleb128 0x28
	.byte	0xb
	.word	0x185
	.byte	0xb
	.long	0xd17e
	.uleb128 0x48
	.long	0xccc9
	.byte	0x2
	.uleb128 0x14
	.secrel32	.LASF137
	.byte	0xb
	.word	0x1af
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE19_S_nothrow_relocateESt17integral_constantIbLb1EE\0"
	.long	0x14cc6
	.long	0xd648
	.uleb128 0x1
	.long	0x2b7e
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF137
	.byte	0xb
	.word	0x1b8
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE19_S_nothrow_relocateESt17integral_constantIbLb0EE\0"
	.long	0x14cc6
	.long	0xd6ad
	.uleb128 0x1
	.long	0x2dd
	.byte	0
	.uleb128 0x7a
	.secrel32	.LASF149
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE15_S_use_relocateEv\0"
	.long	0x14cc6
	.uleb128 0x1b
	.secrel32	.LASF78
	.byte	0xb
	.word	0x19f
	.byte	0x29
	.long	0xcea2
	.uleb128 0x14
	.secrel32	.LASF138
	.byte	0xb
	.word	0x1c5
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE\0"
	.long	0xd6e5
	.long	0xd774
	.uleb128 0x1
	.long	0xd6e5
	.uleb128 0x1
	.long	0xd6e5
	.uleb128 0x1
	.long	0xd6e5
	.uleb128 0x1
	.long	0x1c9d5
	.uleb128 0x1
	.long	0x2b7e
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF132
	.byte	0xb
	.word	0x19a
	.byte	0x2f
	.long	0xd0b0
	.uleb128 0xa
	.long	0xd774
	.uleb128 0x14
	.secrel32	.LASF138
	.byte	0xb
	.word	0x1cc
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb0EE\0"
	.long	0xd6e5
	.long	0xd808
	.uleb128 0x1
	.long	0xd6e5
	.uleb128 0x1
	.long	0xd6e5
	.uleb128 0x1
	.long	0xd6e5
	.uleb128 0x1
	.long	0x1c9d5
	.uleb128 0x1
	.long	0x2dd
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF139
	.byte	0xb
	.word	0x1d1
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_\0"
	.long	0xd6e5
	.long	0xd866
	.uleb128 0x1
	.long	0xd6e5
	.uleb128 0x1
	.long	0xd6e5
	.uleb128 0x1
	.long	0xd6e5
	.uleb128 0x1
	.long	0x1c9d5
	.byte	0
	.uleb128 0x54
	.secrel32	.LASF99
	.byte	0xb
	.word	0x1e7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EEC4Ev\0"
	.long	0xd896
	.long	0xd89c
	.uleb128 0x2
	.long	0x1c9da
	.byte	0
	.uleb128 0x43
	.secrel32	.LASF99
	.byte	0xb
	.word	0x1f1
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EEC4ERKS1_\0"
	.long	0xd8d0
	.long	0xd8db
	.uleb128 0x2
	.long	0x1c9da
	.uleb128 0x1
	.long	0x1c9e4
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF79
	.byte	0xb
	.word	0x1aa
	.byte	0x1a
	.long	0xc856
	.uleb128 0xa
	.long	0xd8db
	.uleb128 0x43
	.secrel32	.LASF99
	.byte	0xb
	.word	0x1fe
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EEC4EyRKS1_\0"
	.long	0xd922
	.long	0xd932
	.uleb128 0x2
	.long	0x1c9da
	.uleb128 0x1
	.long	0xd932
	.uleb128 0x1
	.long	0x1c9e4
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF56
	.byte	0xb
	.word	0x1a8
	.byte	0x1a
	.long	0x2f0
	.uleb128 0xa
	.long	0xd932
	.uleb128 0x12
	.secrel32	.LASF99
	.byte	0xb
	.word	0x20a
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EEC4EyRKS0_RKS1_\0"
	.byte	0x1
	.long	0xd980
	.long	0xd995
	.uleb128 0x2
	.long	0x1c9da
	.uleb128 0x1
	.long	0xd932
	.uleb128 0x1
	.long	0x1c9e9
	.uleb128 0x1
	.long	0x1c9e4
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF2
	.byte	0xb
	.word	0x19e
	.byte	0x17
	.long	0x1beba
	.uleb128 0xa
	.long	0xd995
	.uleb128 0x12
	.secrel32	.LASF99
	.byte	0xb
	.word	0x229
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EEC4ERKS2_\0"
	.byte	0x1
	.long	0xd9dd
	.long	0xd9e8
	.uleb128 0x2
	.long	0x1c9da
	.uleb128 0x1
	.long	0x1c9ee
	.byte	0
	.uleb128 0x54
	.secrel32	.LASF99
	.byte	0xb
	.word	0x23c
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EEC4EOS2_\0"
	.long	0xda1b
	.long	0xda26
	.uleb128 0x2
	.long	0x1c9da
	.uleb128 0x1
	.long	0x1c9f3
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF99
	.byte	0xb
	.word	0x23f
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EEC4ERKS2_RKS1_\0"
	.byte	0x1
	.long	0xda61
	.long	0xda71
	.uleb128 0x2
	.long	0x1c9da
	.uleb128 0x1
	.long	0x1c9ee
	.uleb128 0x1
	.long	0x1c9e4
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF99
	.byte	0xb
	.word	0x249
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EEC4EOS2_RKS1_St17integral_constantIbLb1EE\0"
	.long	0xdac6
	.long	0xdadb
	.uleb128 0x2
	.long	0x1c9da
	.uleb128 0x1
	.long	0x1c9f3
	.uleb128 0x1
	.long	0x1c9e4
	.uleb128 0x1
	.long	0x2b7e
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF99
	.byte	0xb
	.word	0x24d
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EEC4EOS2_RKS1_St17integral_constantIbLb0EE\0"
	.long	0xdb30
	.long	0xdb45
	.uleb128 0x2
	.long	0x1c9da
	.uleb128 0x1
	.long	0x1c9f3
	.uleb128 0x1
	.long	0x1c9e4
	.uleb128 0x1
	.long	0x2dd
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF99
	.byte	0xb
	.word	0x25f
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EEC4EOS2_RKS1_\0"
	.byte	0x1
	.long	0xdb7f
	.long	0xdb8f
	.uleb128 0x2
	.long	0x1c9da
	.uleb128 0x1
	.long	0x1c9f3
	.uleb128 0x1
	.long	0x1c9e4
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF99
	.byte	0xb
	.word	0x271
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EEC4ESt16initializer_listIS0_ERKS1_\0"
	.byte	0x1
	.long	0xdbde
	.long	0xdbee
	.uleb128 0x2
	.long	0x1c9da
	.uleb128 0x1
	.long	0xf1da
	.uleb128 0x1
	.long	0x1c9e4
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF100
	.byte	0xb
	.word	0x2a6
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EED4Ev\0"
	.byte	0x1
	.long	0xdc20
	.long	0xdc2b
	.uleb128 0x2
	.long	0x1c9da
	.uleb128 0x2
	.long	0x191dc
	.byte	0
	.uleb128 0x29
	.secrel32	.LASF35
	.byte	0xe
	.byte	0xc6
	.byte	0x5
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EEaSERKS2_\0"
	.long	0x1c9f8
	.byte	0x1
	.long	0xdc64
	.long	0xdc6f
	.uleb128 0x2
	.long	0x1c9da
	.uleb128 0x1
	.long	0x1c9ee
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF35
	.byte	0xb
	.word	0x2c5
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EEaSEOS2_\0"
	.long	0x1c9f8
	.byte	0x1
	.long	0xdca8
	.long	0xdcb3
	.uleb128 0x2
	.long	0x1c9da
	.uleb128 0x1
	.long	0x1c9f3
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF35
	.byte	0xb
	.word	0x2da
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EEaSESt16initializer_listIS0_E\0"
	.long	0x1c9f8
	.byte	0x1
	.long	0xdd01
	.long	0xdd0c
	.uleb128 0x2
	.long	0x1c9da
	.uleb128 0x1
	.long	0xf1da
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF101
	.byte	0xb
	.word	0x2ed
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE6assignEyRKS0_\0"
	.byte	0x1
	.long	0xdd48
	.long	0xdd58
	.uleb128 0x2
	.long	0x1c9da
	.uleb128 0x1
	.long	0xd932
	.uleb128 0x1
	.long	0x1c9e9
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF101
	.byte	0xb
	.word	0x31a
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE6assignESt16initializer_listIS0_E\0"
	.byte	0x1
	.long	0xdda7
	.long	0xddb2
	.uleb128 0x2
	.long	0x1c9da
	.uleb128 0x1
	.long	0xf1da
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF43
	.byte	0xb
	.word	0x1a3
	.byte	0x3d
	.long	0x17e32
	.uleb128 0x7
	.secrel32	.LASF60
	.byte	0xb
	.word	0x32b
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE5beginEv\0"
	.long	0xddb2
	.byte	0x1
	.long	0xddf9
	.long	0xddff
	.uleb128 0x2
	.long	0x1c9da
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF54
	.byte	0xb
	.word	0x1a5
	.byte	0x7
	.long	0x1842b
	.uleb128 0x7
	.secrel32	.LASF60
	.byte	0xb
	.word	0x334
	.byte	0x7
	.ascii "_ZNKSt6vectorI5BlorbSaIS0_EE5beginEv\0"
	.long	0xddff
	.byte	0x1
	.long	0xde47
	.long	0xde4d
	.uleb128 0x2
	.long	0x1c9fd
	.byte	0
	.uleb128 0x30
	.ascii "end\0"
	.byte	0xb
	.word	0x33d
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE3endEv\0"
	.long	0xddb2
	.byte	0x1
	.long	0xde85
	.long	0xde8b
	.uleb128 0x2
	.long	0x1c9da
	.byte	0
	.uleb128 0x30
	.ascii "end\0"
	.byte	0xb
	.word	0x346
	.byte	0x7
	.ascii "_ZNKSt6vectorI5BlorbSaIS0_EE3endEv\0"
	.long	0xddff
	.byte	0x1
	.long	0xdec4
	.long	0xdeca
	.uleb128 0x2
	.long	0x1c9fd
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF62
	.byte	0xb
	.word	0x1a7
	.byte	0x30
	.long	0xf1f3
	.uleb128 0x7
	.secrel32	.LASF102
	.byte	0xb
	.word	0x34f
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE6rbeginEv\0"
	.long	0xdeca
	.byte	0x1
	.long	0xdf12
	.long	0xdf18
	.uleb128 0x2
	.long	0x1c9da
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF103
	.byte	0xb
	.word	0x1a6
	.byte	0x35
	.long	0xf259
	.uleb128 0x7
	.secrel32	.LASF102
	.byte	0xb
	.word	0x358
	.byte	0x7
	.ascii "_ZNKSt6vectorI5BlorbSaIS0_EE6rbeginEv\0"
	.long	0xdf18
	.byte	0x1
	.long	0xdf61
	.long	0xdf67
	.uleb128 0x2
	.long	0x1c9fd
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF104
	.byte	0xb
	.word	0x361
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE4rendEv\0"
	.long	0xdeca
	.byte	0x1
	.long	0xdfa0
	.long	0xdfa6
	.uleb128 0x2
	.long	0x1c9da
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF104
	.byte	0xb
	.word	0x36a
	.byte	0x7
	.ascii "_ZNKSt6vectorI5BlorbSaIS0_EE4rendEv\0"
	.long	0xdf18
	.byte	0x1
	.long	0xdfe0
	.long	0xdfe6
	.uleb128 0x2
	.long	0x1c9fd
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF105
	.byte	0xb
	.word	0x374
	.byte	0x7
	.ascii "_ZNKSt6vectorI5BlorbSaIS0_EE6cbeginEv\0"
	.long	0xddff
	.byte	0x1
	.long	0xe022
	.long	0xe028
	.uleb128 0x2
	.long	0x1c9fd
	.byte	0
	.uleb128 0x30
	.ascii "cend\0"
	.byte	0xb
	.word	0x37d
	.byte	0x7
	.ascii "_ZNKSt6vectorI5BlorbSaIS0_EE4cendEv\0"
	.long	0xddff
	.byte	0x1
	.long	0xe063
	.long	0xe069
	.uleb128 0x2
	.long	0x1c9fd
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF106
	.byte	0xb
	.word	0x386
	.byte	0x7
	.ascii "_ZNKSt6vectorI5BlorbSaIS0_EE7crbeginEv\0"
	.long	0xdf18
	.byte	0x1
	.long	0xe0a6
	.long	0xe0ac
	.uleb128 0x2
	.long	0x1c9fd
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF107
	.byte	0xb
	.word	0x38f
	.byte	0x7
	.ascii "_ZNKSt6vectorI5BlorbSaIS0_EE5crendEv\0"
	.long	0xdf18
	.byte	0x1
	.long	0xe0e7
	.long	0xe0ed
	.uleb128 0x2
	.long	0x1c9fd
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF59
	.byte	0xb
	.word	0x396
	.byte	0x7
	.ascii "_ZNKSt6vectorI5BlorbSaIS0_EE4sizeEv\0"
	.long	0xd932
	.byte	0x1
	.long	0xe127
	.long	0xe12d
	.uleb128 0x2
	.long	0x1c9fd
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF81
	.byte	0xb
	.word	0x39b
	.byte	0x7
	.ascii "_ZNKSt6vectorI5BlorbSaIS0_EE8max_sizeEv\0"
	.long	0xd932
	.byte	0x1
	.long	0xe16b
	.long	0xe171
	.uleb128 0x2
	.long	0x1c9fd
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF119
	.byte	0xb
	.word	0x3a9
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE6resizeEy\0"
	.byte	0x1
	.long	0xe1a8
	.long	0xe1b3
	.uleb128 0x2
	.long	0x1c9da
	.uleb128 0x1
	.long	0xd932
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF119
	.byte	0xb
	.word	0x3bd
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE6resizeEyRKS0_\0"
	.byte	0x1
	.long	0xe1ef
	.long	0xe1ff
	.uleb128 0x2
	.long	0x1c9da
	.uleb128 0x1
	.long	0xd932
	.uleb128 0x1
	.long	0x1c9e9
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF120
	.byte	0xb
	.word	0x3dd
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE13shrink_to_fitEv\0"
	.byte	0x1
	.long	0xe23e
	.long	0xe244
	.uleb128 0x2
	.long	0x1c9da
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF108
	.byte	0xb
	.word	0x3e6
	.byte	0x7
	.ascii "_ZNKSt6vectorI5BlorbSaIS0_EE8capacityEv\0"
	.long	0xd932
	.byte	0x1
	.long	0xe282
	.long	0xe288
	.uleb128 0x2
	.long	0x1c9fd
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF109
	.byte	0xb
	.word	0x3ef
	.byte	0x7
	.ascii "_ZNKSt6vectorI5BlorbSaIS0_EE5emptyEv\0"
	.long	0x14cc6
	.byte	0x1
	.long	0xe2c3
	.long	0xe2c9
	.uleb128 0x2
	.long	0x1c9fd
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF111
	.byte	0xe
	.byte	0x42
	.byte	0x5
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE7reserveEy\0"
	.long	0xe2ff
	.long	0xe30a
	.uleb128 0x2
	.long	0x1c9da
	.uleb128 0x1
	.long	0xd932
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF45
	.byte	0xb
	.word	0x1a1
	.byte	0x32
	.long	0x17de3
	.uleb128 0x7
	.secrel32	.LASF51
	.byte	0xb
	.word	0x413
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EEixEy\0"
	.long	0xe30a
	.byte	0x1
	.long	0xe34d
	.long	0xe358
	.uleb128 0x2
	.long	0x1c9da
	.uleb128 0x1
	.long	0xd932
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF53
	.byte	0xb
	.word	0x1a2
	.byte	0x37
	.long	0x17def
	.uleb128 0x7
	.secrel32	.LASF51
	.byte	0xb
	.word	0x425
	.byte	0x7
	.ascii "_ZNKSt6vectorI5BlorbSaIS0_EEixEy\0"
	.long	0xe358
	.byte	0x1
	.long	0xe39c
	.long	0xe3a7
	.uleb128 0x2
	.long	0x1c9fd
	.uleb128 0x1
	.long	0xd932
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF110
	.byte	0xb
	.word	0x42e
	.byte	0x7
	.ascii "_ZNKSt6vectorI5BlorbSaIS0_EE14_M_range_checkEy\0"
	.byte	0x2
	.long	0xe3e8
	.long	0xe3f3
	.uleb128 0x2
	.long	0x1c9fd
	.uleb128 0x1
	.long	0xd932
	.byte	0
	.uleb128 0x30
	.ascii "at\0"
	.byte	0xb
	.word	0x444
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE2atEy\0"
	.long	0xe30a
	.byte	0x1
	.long	0xe429
	.long	0xe434
	.uleb128 0x2
	.long	0x1c9da
	.uleb128 0x1
	.long	0xd932
	.byte	0
	.uleb128 0x30
	.ascii "at\0"
	.byte	0xb
	.word	0x456
	.byte	0x7
	.ascii "_ZNKSt6vectorI5BlorbSaIS0_EE2atEy\0"
	.long	0xe358
	.byte	0x1
	.long	0xe46b
	.long	0xe476
	.uleb128 0x2
	.long	0x1c9fd
	.uleb128 0x1
	.long	0xd932
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF112
	.byte	0xb
	.word	0x461
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE5frontEv\0"
	.long	0xe30a
	.byte	0x1
	.long	0xe4b0
	.long	0xe4b6
	.uleb128 0x2
	.long	0x1c9da
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF112
	.byte	0xb
	.word	0x46c
	.byte	0x7
	.ascii "_ZNKSt6vectorI5BlorbSaIS0_EE5frontEv\0"
	.long	0xe358
	.byte	0x1
	.long	0xe4f1
	.long	0xe4f7
	.uleb128 0x2
	.long	0x1c9fd
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF113
	.byte	0xb
	.word	0x477
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE4backEv\0"
	.long	0xe30a
	.byte	0x1
	.long	0xe530
	.long	0xe536
	.uleb128 0x2
	.long	0x1c9da
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF113
	.byte	0xb
	.word	0x482
	.byte	0x7
	.ascii "_ZNKSt6vectorI5BlorbSaIS0_EE4backEv\0"
	.long	0xe358
	.byte	0x1
	.long	0xe570
	.long	0xe576
	.uleb128 0x2
	.long	0x1c9fd
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF114
	.byte	0xb
	.word	0x490
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE4dataEv\0"
	.long	0x1c92b
	.byte	0x1
	.long	0xe5af
	.long	0xe5b5
	.uleb128 0x2
	.long	0x1c9da
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF114
	.byte	0xb
	.word	0x494
	.byte	0x7
	.ascii "_ZNKSt6vectorI5BlorbSaIS0_EE4dataEv\0"
	.long	0x1c96c
	.byte	0x1
	.long	0xe5ef
	.long	0xe5f5
	.uleb128 0x2
	.long	0x1c9fd
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF115
	.byte	0xb
	.word	0x4a3
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE9push_backERKS0_\0"
	.byte	0x1
	.long	0xe633
	.long	0xe63e
	.uleb128 0x2
	.long	0x1c9da
	.uleb128 0x1
	.long	0x1c9e9
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF115
	.byte	0xb
	.word	0x4b3
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE9push_backEOS0_\0"
	.byte	0x1
	.long	0xe67b
	.long	0xe686
	.uleb128 0x2
	.long	0x1c9da
	.uleb128 0x1
	.long	0x1ca07
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF117
	.byte	0xb
	.word	0x4c9
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE8pop_backEv\0"
	.byte	0x1
	.long	0xe6bf
	.long	0xe6c5
	.uleb128 0x2
	.long	0x1c9da
	.byte	0
	.uleb128 0x29
	.secrel32	.LASF116
	.byte	0xe
	.byte	0x82
	.byte	0x5
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS0_S2_EERS5_\0"
	.long	0xddb2
	.byte	0x1
	.long	0xe72b
	.long	0xe73b
	.uleb128 0x2
	.long	0x1c9da
	.uleb128 0x1
	.long	0xddff
	.uleb128 0x1
	.long	0x1c9e9
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF116
	.byte	0xb
	.word	0x50d
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEOS0_\0"
	.long	0xddb2
	.byte	0x1
	.long	0xe7a2
	.long	0xe7b2
	.uleb128 0x2
	.long	0x1c9da
	.uleb128 0x1
	.long	0xddff
	.uleb128 0x1
	.long	0x1ca07
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF116
	.byte	0xb
	.word	0x51e
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS0_S2_EESt16initializer_listIS0_E\0"
	.long	0xddb2
	.byte	0x1
	.long	0xe82e
	.long	0xe83e
	.uleb128 0x2
	.long	0x1c9da
	.uleb128 0x1
	.long	0xddff
	.uleb128 0x1
	.long	0xf1da
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF116
	.byte	0xb
	.word	0x537
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEyRS5_\0"
	.long	0xddb2
	.byte	0x1
	.long	0xe8a6
	.long	0xe8bb
	.uleb128 0x2
	.long	0x1c9da
	.uleb128 0x1
	.long	0xddff
	.uleb128 0x1
	.long	0xd932
	.uleb128 0x1
	.long	0x1c9e9
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF118
	.byte	0xb
	.word	0x596
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS0_S2_EE\0"
	.long	0xddb2
	.byte	0x1
	.long	0xe91d
	.long	0xe928
	.uleb128 0x2
	.long	0x1c9da
	.uleb128 0x1
	.long	0xddff
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF118
	.byte	0xb
	.word	0x5b1
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS0_S2_EES7_\0"
	.long	0xddb2
	.byte	0x1
	.long	0xe98d
	.long	0xe99d
	.uleb128 0x2
	.long	0x1c9da
	.uleb128 0x1
	.long	0xddff
	.uleb128 0x1
	.long	0xddff
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF73
	.byte	0xb
	.word	0x5c8
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE4swapERS2_\0"
	.byte	0x1
	.long	0xe9d5
	.long	0xe9e0
	.uleb128 0x2
	.long	0x1c9da
	.uleb128 0x1
	.long	0x1c9f8
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF121
	.byte	0xb
	.word	0x5da
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE5clearEv\0"
	.byte	0x1
	.long	0xea16
	.long	0xea1c
	.uleb128 0x2
	.long	0x1c9da
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF140
	.byte	0xb
	.word	0x639
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE18_M_fill_initializeEyRKS0_\0"
	.byte	0x2
	.long	0xea65
	.long	0xea75
	.uleb128 0x2
	.long	0x1c9da
	.uleb128 0x1
	.long	0xd932
	.uleb128 0x1
	.long	0x1c9e9
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF141
	.byte	0xb
	.word	0x643
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE21_M_default_initializeEy\0"
	.byte	0x2
	.long	0xeabc
	.long	0xeac7
	.uleb128 0x2
	.long	0x1c9da
	.uleb128 0x1
	.long	0xd932
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF123
	.byte	0xe
	.word	0x101
	.byte	0x5
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE14_M_fill_assignEyRKS0_\0"
	.byte	0x2
	.long	0xeb0c
	.long	0xeb1c
	.uleb128 0x2
	.long	0x1c9da
	.uleb128 0x1
	.long	0x2f0
	.uleb128 0x1
	.long	0x1c9e9
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF124
	.byte	0xe
	.word	0x1fd
	.byte	0x5
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS0_S2_EEyRKS0_\0"
	.byte	0x2
	.long	0xeb89
	.long	0xeb9e
	.uleb128 0x2
	.long	0x1c9da
	.uleb128 0x1
	.long	0xddb2
	.uleb128 0x1
	.long	0xd932
	.uleb128 0x1
	.long	0x1c9e9
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF142
	.byte	0xe
	.word	0x263
	.byte	0x5
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE17_M_default_appendEy\0"
	.byte	0x2
	.long	0xebe1
	.long	0xebec
	.uleb128 0x2
	.long	0x1c9da
	.uleb128 0x1
	.long	0xd932
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF122
	.byte	0xe
	.word	0x2af
	.byte	0x5
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE16_M_shrink_to_fitEv\0"
	.long	0x14cc6
	.byte	0x2
	.long	0xec32
	.long	0xec38
	.uleb128 0x2
	.long	0x1c9da
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF143
	.byte	0xe
	.word	0x154
	.byte	0x5
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEOS0_\0"
	.long	0xddb2
	.byte	0x2
	.long	0xeca8
	.long	0xecb8
	.uleb128 0x2
	.long	0x1c9da
	.uleb128 0x1
	.long	0xddff
	.uleb128 0x1
	.long	0x1ca07
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF144
	.byte	0xb
	.word	0x6d6
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE14_M_emplace_auxEN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEOS0_\0"
	.long	0xddb2
	.byte	0x2
	.long	0xed28
	.long	0xed38
	.uleb128 0x2
	.long	0x1c9da
	.uleb128 0x1
	.long	0xddff
	.uleb128 0x1
	.long	0x1ca07
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF125
	.byte	0xb
	.word	0x6dc
	.byte	0x7
	.ascii "_ZNKSt6vectorI5BlorbSaIS0_EE12_M_check_lenEyPKc\0"
	.long	0xd932
	.byte	0x2
	.long	0xed7e
	.long	0xed8e
	.uleb128 0x2
	.long	0x1c9fd
	.uleb128 0x1
	.long	0xd932
	.uleb128 0x1
	.long	0x19524
	.byte	0
	.uleb128 0x60
	.secrel32	.LASF145
	.word	0x6e7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE17_S_check_init_lenEyRKS1_\0"
	.long	0xd932
	.long	0xedde
	.uleb128 0x1
	.long	0xd932
	.uleb128 0x1
	.long	0x1c9e4
	.byte	0
	.uleb128 0x60
	.secrel32	.LASF146
	.word	0x6f0
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE11_S_max_sizeERKS1_\0"
	.long	0xd932
	.long	0xee22
	.uleb128 0x1
	.long	0x1ca0c
	.byte	0
	.uleb128 0x12
	.secrel32	.LASF126
	.byte	0xb
	.word	0x700
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE15_M_erase_at_endEPS0_\0"
	.byte	0x2
	.long	0xee66
	.long	0xee71
	.uleb128 0x2
	.long	0x1c9da
	.uleb128 0x1
	.long	0xd6e5
	.byte	0
	.uleb128 0x29
	.secrel32	.LASF127
	.byte	0xe
	.byte	0xab
	.byte	0x5
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS0_S2_EE\0"
	.long	0xddb2
	.byte	0x2
	.long	0xeed4
	.long	0xeedf
	.uleb128 0x2
	.long	0x1c9da
	.uleb128 0x1
	.long	0xddb2
	.byte	0
	.uleb128 0x29
	.secrel32	.LASF127
	.byte	0xe
	.byte	0xb8
	.byte	0x5
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS0_S2_EES6_\0"
	.long	0xddb2
	.byte	0x2
	.long	0xef45
	.long	0xef55
	.uleb128 0x2
	.long	0x1c9da
	.uleb128 0x1
	.long	0xddb2
	.uleb128 0x1
	.long	0xddb2
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF147
	.byte	0xb
	.word	0x717
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE14_M_move_assignEOS2_St17integral_constantIbLb1EE\0"
	.long	0xefb3
	.long	0xefc3
	.uleb128 0x2
	.long	0x1c9da
	.uleb128 0x1
	.long	0x1c9f3
	.uleb128 0x1
	.long	0x2b7e
	.byte	0
	.uleb128 0x20
	.secrel32	.LASF147
	.byte	0xb
	.word	0x722
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE14_M_move_assignEOS2_St17integral_constantIbLb0EE\0"
	.long	0xf021
	.long	0xf031
	.uleb128 0x2
	.long	0x1c9da
	.uleb128 0x1
	.long	0x1c9f3
	.uleb128 0x1
	.long	0x2dd
	.byte	0
	.uleb128 0x55
	.ascii "_M_realloc_insert<Blorb>\0"
	.byte	0xe
	.word	0x1aa
	.byte	0x7
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_\0"
	.byte	0x2
	.long	0xf0cc
	.long	0xf0dc
	.uleb128 0x31
	.secrel32	.LASF148
	.long	0xf0cc
	.uleb128 0x32
	.long	0x1beba
	.byte	0
	.uleb128 0x2
	.long	0x1c9da
	.uleb128 0x1
	.long	0xddb2
	.uleb128 0x1
	.long	0x1e580
	.byte	0
	.uleb128 0x65
	.ascii "emplace_back<Blorb>\0"
	.byte	0xe
	.byte	0x6d
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_\0"
	.long	0xe30a
	.long	0xf149
	.long	0xf154
	.uleb128 0x31
	.secrel32	.LASF148
	.long	0xf149
	.uleb128 0x32
	.long	0x1beba
	.byte	0
	.uleb128 0x2
	.long	0x1c9da
	.uleb128 0x1
	.long	0x1e580
	.byte	0
	.uleb128 0x68
	.ascii "_M_data_ptr<Blorb>\0"
	.byte	0xb
	.word	0x734
	.byte	0x2
	.ascii "_ZNKSt6vectorI5BlorbSaIS0_EE11_M_data_ptrIS0_EEPT_S5_\0"
	.long	0x1c92b
	.long	0xf1b7
	.long	0xf1c2
	.uleb128 0x5
	.ascii "_Up\0"
	.long	0x1beba
	.uleb128 0x2
	.long	0x1c9fd
	.uleb128 0x1
	.long	0x1c92b
	.byte	0
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1beba
	.uleb128 0x4c
	.secrel32	.LASF98
	.long	0xc856
	.byte	0
	.uleb128 0xa
	.long	0xd578
	.uleb128 0x53
	.ascii "initializer_list<Blorb>\0"
	.uleb128 0x53
	.ascii "reverse_iterator<__gnu_cxx::__normal_iterator<Blorb*, std::vector<Blorb, std::allocator<Blorb> > > >\0"
	.uleb128 0x53
	.ascii "reverse_iterator<__gnu_cxx::__normal_iterator<const Blorb*, std::vector<Blorb, std::allocator<Blorb> > > >\0"
	.uleb128 0x26
	.ascii "iterator_traits<Blorb*>\0"
	.byte	0x1
	.byte	0x18
	.byte	0xc6
	.byte	0xc
	.long	0xf30b
	.uleb128 0x1c
	.secrel32	.LASF37
	.byte	0x18
	.byte	0xcb
	.byte	0xd
	.long	0x2b66
	.uleb128 0x1c
	.secrel32	.LASF78
	.byte	0x18
	.byte	0xcc
	.byte	0xd
	.long	0x1c92b
	.uleb128 0x1c
	.secrel32	.LASF45
	.byte	0x18
	.byte	0xcd
	.byte	0xd
	.long	0x1beb5
	.byte	0
	.uleb128 0x26
	.ascii "iterator_traits<const Blorb*>\0"
	.byte	0x1
	.byte	0x18
	.byte	0xc6
	.byte	0xc
	.long	0xf357
	.uleb128 0x1c
	.secrel32	.LASF37
	.byte	0x18
	.byte	0xcb
	.byte	0xd
	.long	0x2b66
	.uleb128 0x1c
	.secrel32	.LASF78
	.byte	0x18
	.byte	0xcc
	.byte	0xd
	.long	0x1c96c
	.uleb128 0x1c
	.secrel32	.LASF45
	.byte	0x18
	.byte	0xcd
	.byte	0xd
	.long	0x1ca7a
	.byte	0
	.uleb128 0x2f
	.ascii "remove_reference<DDT::Node&>\0"
	.byte	0x1
	.byte	0x1
	.word	0x615
	.byte	0xc
	.long	0xf395
	.uleb128 0x1a
	.secrel32	.LASF71
	.byte	0x1
	.word	0x616
	.byte	0x15
	.long	0x1c0ec
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1c8d4
	.byte	0
	.uleb128 0x26
	.ascii "iterator_traits<const DDT::Node*>\0"
	.byte	0x1
	.byte	0x18
	.byte	0xc6
	.byte	0xc
	.long	0xf3e5
	.uleb128 0x1c
	.secrel32	.LASF37
	.byte	0x18
	.byte	0xcb
	.byte	0xd
	.long	0x2b66
	.uleb128 0x1c
	.secrel32	.LASF78
	.byte	0x18
	.byte	0xcc
	.byte	0xd
	.long	0x1c50d
	.uleb128 0x1c
	.secrel32	.LASF45
	.byte	0x18
	.byte	0xcd
	.byte	0xd
	.long	0x1c901
	.byte	0
	.uleb128 0x26
	.ascii "iterator_traits<int const*>\0"
	.byte	0x1
	.byte	0x18
	.byte	0xc6
	.byte	0xc
	.long	0xf42f
	.uleb128 0x1c
	.secrel32	.LASF37
	.byte	0x18
	.byte	0xcb
	.byte	0xd
	.long	0x2b66
	.uleb128 0x1c
	.secrel32	.LASF78
	.byte	0x18
	.byte	0xcc
	.byte	0xd
	.long	0x1c5e9
	.uleb128 0x1c
	.secrel32	.LASF45
	.byte	0x18
	.byte	0xcd
	.byte	0xd
	.long	0x1b884
	.byte	0
	.uleb128 0x2f
	.ascii "__iterator_traits<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, void>\0"
	.byte	0x1
	.byte	0x1d
	.word	0x16e
	.byte	0xc
	.long	0xf4bb
	.uleb128 0x1a
	.secrel32	.LASF37
	.byte	0x1d
	.word	0x17c
	.byte	0xd
	.long	0x17778
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x173e1
	.byte	0
	.uleb128 0x2f
	.ascii "remove_reference<Blorb&>\0"
	.byte	0x1
	.byte	0x1
	.word	0x615
	.byte	0xc
	.long	0xf4f5
	.uleb128 0x1a
	.secrel32	.LASF71
	.byte	0x1
	.word	0x616
	.byte	0x15
	.long	0x1beba
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1beb5
	.byte	0
	.uleb128 0x2f
	.ascii "enable_if<true, int*>\0"
	.byte	0x1
	.byte	0x1
	.word	0x863
	.byte	0xc
	.long	0xf52c
	.uleb128 0x1a
	.secrel32	.LASF71
	.byte	0x1
	.word	0x864
	.byte	0x13
	.long	0x19287
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x19287
	.byte	0
	.uleb128 0x2f
	.ascii "remove_reference<DDT::Node>\0"
	.byte	0x1
	.byte	0x1
	.word	0x611
	.byte	0xc
	.long	0xf569
	.uleb128 0x1a
	.secrel32	.LASF71
	.byte	0x1
	.word	0x612
	.byte	0x15
	.long	0x1c0ec
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1c0ec
	.byte	0
	.uleb128 0x2f
	.ascii "remove_reference<Blorb>\0"
	.byte	0x1
	.byte	0x1
	.word	0x611
	.byte	0xc
	.long	0xf5a2
	.uleb128 0x1a
	.secrel32	.LASF71
	.byte	0x1
	.word	0x612
	.byte	0x15
	.long	0x1beba
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1beba
	.byte	0
	.uleb128 0x26
	.ascii "iterator_traits<int*>\0"
	.byte	0x1
	.byte	0x18
	.byte	0xc6
	.byte	0xc
	.long	0xf60c
	.uleb128 0x22
	.ascii "iterator_category\0"
	.byte	0x18
	.byte	0xc9
	.byte	0xd
	.long	0x461
	.uleb128 0x1c
	.secrel32	.LASF2
	.byte	0x18
	.byte	0xca
	.byte	0xd
	.long	0xf60c
	.uleb128 0x1c
	.secrel32	.LASF37
	.byte	0x18
	.byte	0xcb
	.byte	0xd
	.long	0x2b66
	.uleb128 0x1c
	.secrel32	.LASF78
	.byte	0x18
	.byte	0xcc
	.byte	0xd
	.long	0x19287
	.uleb128 0x1c
	.secrel32	.LASF45
	.byte	0x18
	.byte	0xcd
	.byte	0xd
	.long	0x1c8bb
	.byte	0
	.uleb128 0x46
	.ascii "remove_cv_t\0"
	.byte	0x1
	.word	0x5fe
	.byte	0xb
	.long	0x49bc
	.uleb128 0x26
	.ascii "__uninitialized_copy<false>\0"
	.byte	0x1
	.byte	0x13
	.byte	0x51
	.byte	0xc
	.long	0xf951
	.uleb128 0x1e
	.ascii "__uninit_copy<const Blorb*, Blorb*>\0"
	.byte	0x13
	.byte	0x55
	.byte	0x9
	.ascii "_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPK5BlorbPS2_EET0_T_S7_S6_\0"
	.long	0x1c92b
	.long	0xf6e3
	.uleb128 0x4
	.secrel32	.LASF30
	.long	0x1c96c
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x1c92b
	.uleb128 0x1
	.long	0x1c96c
	.uleb128 0x1
	.long	0x1c96c
	.uleb128 0x1
	.long	0x1c92b
	.byte	0
	.uleb128 0x1e
	.ascii "__uninit_copy<const DDT::Node*, DDT::Node*>\0"
	.byte	0x13
	.byte	0x55
	.byte	0x9
	.ascii "_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN3DDT4NodeEPS3_EET0_T_S8_S7_\0"
	.long	0x1c4db
	.long	0xf78d
	.uleb128 0x4
	.secrel32	.LASF30
	.long	0x1c50d
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c50d
	.uleb128 0x1
	.long	0x1c50d
	.uleb128 0x1
	.long	0x1c4db
	.byte	0
	.uleb128 0x1e
	.ascii "__uninit_copy<__gnu_cxx::__normal_iterator<const DDT::Node*, std::vector<DDT::Node> >, DDT::Node*>\0"
	.byte	0x13
	.byte	0x55
	.byte	0x9
	.ascii "_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_\0"
	.long	0x1c4db
	.long	0xf8a4
	.uleb128 0x4
	.secrel32	.LASF30
	.long	0x16399
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x1c4db
	.uleb128 0x1
	.long	0x16399
	.uleb128 0x1
	.long	0x16399
	.uleb128 0x1
	.long	0x1c4db
	.byte	0
	.uleb128 0x1e
	.ascii "__uninit_copy<DDT::Node*, DDT::Node*>\0"
	.byte	0x13
	.byte	0x55
	.byte	0x9
	.ascii "_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN3DDT4NodeES4_EET0_T_S6_S5_\0"
	.long	0x1c4db
	.long	0xf946
	.uleb128 0x4
	.secrel32	.LASF30
	.long	0x1c4db
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c4db
	.byte	0
	.uleb128 0x16
	.secrel32	.LASF31
	.long	0x14cc6
	.byte	0
	.byte	0
	.uleb128 0x2f
	.ascii "__copy_move<false, true, std::random_access_iterator_tag>\0"
	.byte	0x1
	.byte	0x3
	.word	0x19f
	.byte	0xc
	.long	0xfad5
	.uleb128 0x8
	.ascii "__copy_m<int>\0"
	.byte	0x3
	.word	0x1a4
	.byte	0x2
	.ascii "_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_\0"
	.long	0x19287
	.long	0xfa1f
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x191dc
	.uleb128 0x1
	.long	0x1c5e9
	.uleb128 0x1
	.long	0x1c5e9
	.uleb128 0x1
	.long	0x19287
	.byte	0
	.uleb128 0x8
	.ascii "__copy_m<long unsigned int>\0"
	.byte	0x3
	.word	0x1a4
	.byte	0x2
	.ascii "_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_\0"
	.long	0x1bd4d
	.long	0xfab7
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x19187
	.uleb128 0x1
	.long	0x1bd7f
	.uleb128 0x1
	.long	0x1bd7f
	.uleb128 0x1
	.long	0x1bd4d
	.byte	0
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x16
	.secrel32	.LASF7
	.long	0x14cc6
	.byte	0x1
	.uleb128 0x4
	.secrel32	.LASF8
	.long	0x461
	.byte	0
	.uleb128 0x2f
	.ascii "remove_reference<const DDT::Node&>\0"
	.byte	0x1
	.byte	0x1
	.word	0x615
	.byte	0xc
	.long	0xfb19
	.uleb128 0x1a
	.secrel32	.LASF71
	.byte	0x1
	.word	0x616
	.byte	0x15
	.long	0x1c33b
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1c901
	.byte	0
	.uleb128 0x26
	.ascii "iterator_traits<long unsigned int*>\0"
	.byte	0x1
	.byte	0x18
	.byte	0xc6
	.byte	0xc
	.long	0xfb53
	.uleb128 0x1c
	.secrel32	.LASF37
	.byte	0x18
	.byte	0xcb
	.byte	0xd
	.long	0x2b66
	.byte	0
	.uleb128 0x2f
	.ascii "remove_reference<const Blorb&>\0"
	.byte	0x1
	.byte	0x1
	.word	0x615
	.byte	0xc
	.long	0xfb93
	.uleb128 0x1a
	.secrel32	.LASF71
	.byte	0x1
	.word	0x616
	.byte	0x15
	.long	0x1c00c
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1ca7a
	.byte	0
	.uleb128 0x89
	.ascii "__throw_bad_alloc\0"
	.byte	0x34
	.ascii "_ZSt17__throw_bad_allocv\0"
	.uleb128 0x89
	.ascii "__throw_bad_array_new_length\0"
	.byte	0x37
	.ascii "_ZSt28__throw_bad_array_new_lengthv\0"
	.uleb128 0x86
	.ascii "__throw_length_error\0"
	.byte	0x2b
	.byte	0x4b
	.byte	0x3
	.ascii "_ZSt20__throw_length_errorPKc\0"
	.long	0xfc47
	.uleb128 0x1
	.long	0x19524
	.byte	0
	.uleb128 0x8
	.ascii "__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>\0"
	.byte	0x3
	.word	0x20f
	.byte	0x5
	.ascii "_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET1_T0_SA_S9_\0"
	.long	0x19287
	.long	0xfd4b
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x173e1
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x19287
	.uleb128 0x1
	.long	0x173e1
	.uleb128 0x1
	.long	0x173e1
	.uleb128 0x1
	.long	0x19287
	.byte	0
	.uleb128 0x8
	.ascii "copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>\0"
	.byte	0x3
	.word	0x263
	.byte	0x5
	.ascii "_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_\0"
	.long	0x19287
	.long	0xfe26
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x173e1
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x19287
	.uleb128 0x1
	.long	0x173e1
	.uleb128 0x1
	.long	0x173e1
	.uleb128 0x1
	.long	0x19287
	.byte	0
	.uleb128 0x40
	.ascii "__fill_a1<int*, int>\0"
	.byte	0x3
	.word	0x397
	.byte	0x5
	.ascii "_ZSt9__fill_a1IPiiEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S8_RKS4_\0"
	.long	0xfec7
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x19287
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x191dc
	.uleb128 0x1
	.long	0x19287
	.uleb128 0x1
	.long	0x19287
	.uleb128 0x1
	.long	0x1b884
	.byte	0
	.uleb128 0x1e
	.ascii "forward<const Blorb&>\0"
	.byte	0x11
	.byte	0x4d
	.byte	0x5
	.ascii "_ZSt7forwardIRK5BlorbEOT_RNSt16remove_referenceIS3_E4typeE\0"
	.long	0x1ca7a
	.long	0xff33
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1ca7a
	.uleb128 0x1
	.long	0x1d245
	.byte	0
	.uleb128 0x8
	.ascii "__copy_move_a2<false, int const*, int*>\0"
	.byte	0x3
	.word	0x1e6
	.byte	0x5
	.ascii "_ZSt14__copy_move_a2ILb0EPKiPiET1_T0_S4_S3_\0"
	.long	0x19287
	.long	0xffc0
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x1c5e9
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x19287
	.uleb128 0x1
	.long	0x1c5e9
	.uleb128 0x1
	.long	0x1c5e9
	.uleb128 0x1
	.long	0x19287
	.byte	0
	.uleb128 0x40
	.ascii "__fill_a<int*, int>\0"
	.byte	0x3
	.word	0x3c8
	.byte	0x5
	.ascii "_ZSt8__fill_aIPiiEvT_S1_RKT0_\0"
	.long	0x1001d
	.uleb128 0x4
	.secrel32	.LASF150
	.long	0x19287
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x191dc
	.uleb128 0x1
	.long	0x19287
	.uleb128 0x1
	.long	0x19287
	.uleb128 0x1
	.long	0x1b884
	.byte	0
	.uleb128 0x3b
	.ascii "_Construct<Blorb, const Blorb&>\0"
	.byte	0x6c
	.byte	0x5
	.ascii "_ZSt10_ConstructI5BlorbJRKS0_EEvPT_DpOT0_\0"
	.long	0x10091
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1beba
	.uleb128 0x31
	.secrel32	.LASF148
	.long	0x10086
	.uleb128 0x32
	.long	0x1ca7a
	.byte	0
	.uleb128 0x1
	.long	0x1c92b
	.uleb128 0x1
	.long	0x1ca7a
	.byte	0
	.uleb128 0x8
	.ascii "__copy_move_a2<false, int*, int*>\0"
	.byte	0x3
	.word	0x1e6
	.byte	0x5
	.ascii "_ZSt14__copy_move_a2ILb0EPiS0_ET1_T0_S2_S1_\0"
	.long	0x19287
	.long	0x10118
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x19287
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x19287
	.uleb128 0x1
	.long	0x19287
	.uleb128 0x1
	.long	0x19287
	.uleb128 0x1
	.long	0x19287
	.byte	0
	.uleb128 0x8
	.ascii "__niter_wrap<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int*>\0"
	.byte	0x3
	.word	0x148
	.byte	0x5
	.ascii "_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES2_ET_S7_T0_\0"
	.long	0x16e6c
	.long	0x101f6
	.uleb128 0x4
	.secrel32	.LASF151
	.long	0x16e6c
	.uleb128 0x5
	.ascii "_To\0"
	.long	0x19287
	.uleb128 0x1
	.long	0x16e6c
	.uleb128 0x1
	.long	0x19287
	.byte	0
	.uleb128 0x8
	.ascii "__copy_move_a1<false, int const*, int*>\0"
	.byte	0x3
	.word	0x209
	.byte	0x5
	.ascii "_ZSt14__copy_move_a1ILb0EPKiPiET1_T0_S4_S3_\0"
	.long	0x19287
	.long	0x10283
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x1c5e9
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x19287
	.uleb128 0x1
	.long	0x1c5e9
	.uleb128 0x1
	.long	0x1c5e9
	.uleb128 0x1
	.long	0x19287
	.byte	0
	.uleb128 0x8
	.ascii "__niter_base<int*, std::vector<int, std::allocator<int> > >\0"
	.byte	0xf
	.word	0x4e9
	.byte	0x5
	.ascii "_ZSt12__niter_baseIPiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE\0"
	.long	0x19287
	.long	0x10335
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x19287
	.uleb128 0x4
	.secrel32	.LASF152
	.long	0xac5c
	.uleb128 0x1
	.long	0x16e6c
	.byte	0
	.uleb128 0x8
	.ascii "__niter_base<int const*, std::vector<int, std::allocator<int> > >\0"
	.byte	0xf
	.word	0x4e9
	.byte	0x5
	.ascii "_ZSt12__niter_baseIPKiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE\0"
	.long	0x1c5e9
	.long	0x103ee
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x1c5e9
	.uleb128 0x4
	.secrel32	.LASF152
	.long	0xac5c
	.uleb128 0x1
	.long	0x173e1
	.byte	0
	.uleb128 0x1e
	.ascii "uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>\0"
	.byte	0x13
	.byte	0x7e
	.byte	0x5
	.ascii "_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_\0"
	.long	0x19287
	.long	0x104e5
	.uleb128 0x4
	.secrel32	.LASF30
	.long	0x173e1
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x19287
	.uleb128 0x1
	.long	0x173e1
	.uleb128 0x1
	.long	0x173e1
	.uleb128 0x1
	.long	0x19287
	.byte	0
	.uleb128 0x8
	.ascii "__fill_n_a<int*, long long unsigned int, int>\0"
	.byte	0x3
	.word	0x455
	.byte	0x5
	.ascii "_ZSt10__fill_n_aIPiyiET_S1_T0_RKT1_St26random_access_iterator_tag\0"
	.long	0x19287
	.long	0x10592
	.uleb128 0x4
	.secrel32	.LASF153
	.long	0x19287
	.uleb128 0x4
	.secrel32	.LASF32
	.long	0x191a1
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x191dc
	.uleb128 0x1
	.long	0x19287
	.uleb128 0x1
	.long	0x191a1
	.uleb128 0x1
	.long	0x1b884
	.uleb128 0x1
	.long	0x461
	.byte	0
	.uleb128 0x1e
	.ascii "__iterator_category<int*>\0"
	.byte	0x18
	.byte	0xee
	.byte	0x5
	.ascii "_ZSt19__iterator_categoryIPiENSt15iterator_traitsIT_E17iterator_categoryERKS2_\0"
	.long	0xf5c1
	.long	0x10616
	.uleb128 0x4
	.secrel32	.LASF154
	.long	0x19287
	.uleb128 0x1
	.long	0x1caf7
	.byte	0
	.uleb128 0x8
	.ascii "__copy_move_a2<false, std::_Bit_iterator, std::_Bit_iterator>\0"
	.byte	0x3
	.word	0x1e6
	.byte	0x5
	.ascii "_ZSt14__copy_move_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_\0"
	.long	0x3290
	.long	0x106c8
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x3290
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x3290
	.uleb128 0x1
	.long	0x3290
	.uleb128 0x1
	.long	0x3290
	.uleb128 0x1
	.long	0x3290
	.byte	0
	.uleb128 0x8
	.ascii "__copy_move_a2<false, std::_Bit_const_iterator, std::_Bit_iterator>\0"
	.byte	0x3
	.word	0x1e6
	.byte	0x5
	.ascii "_ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_\0"
	.long	0x3290
	.long	0x10794
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x3524
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x3290
	.uleb128 0x1
	.long	0x3524
	.uleb128 0x1
	.long	0x3524
	.uleb128 0x1
	.long	0x3290
	.byte	0
	.uleb128 0x3b
	.ascii "_Destroy<Blorb>\0"
	.byte	0x87
	.byte	0x5
	.ascii "_ZSt8_DestroyI5BlorbEvPT_\0"
	.long	0x107d4
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1beba
	.uleb128 0x1
	.long	0x1c92b
	.byte	0
	.uleb128 0x1e
	.ascii "__addressof<Blorb>\0"
	.byte	0x11
	.byte	0x31
	.byte	0x5
	.ascii "_ZSt11__addressofI5BlorbEPT_RS1_\0"
	.long	0x1c92b
	.long	0x10823
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1beba
	.uleb128 0x1
	.long	0x1beb5
	.byte	0
	.uleb128 0x1e
	.ascii "forward<const DDT::Node&>\0"
	.byte	0x11
	.byte	0x4d
	.byte	0x5
	.ascii "_ZSt7forwardIRKN3DDT4NodeEEOT_RNSt16remove_referenceIS4_E4typeE\0"
	.long	0x1c901
	.long	0x10898
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1c901
	.uleb128 0x1
	.long	0x1de69
	.byte	0
	.uleb128 0x1e
	.ascii "uninitialized_copy<int*, int*>\0"
	.byte	0x13
	.byte	0x7e
	.byte	0x5
	.ascii "_ZSt18uninitialized_copyIPiS0_ET0_T_S2_S1_\0"
	.long	0x19287
	.long	0x10910
	.uleb128 0x4
	.secrel32	.LASF30
	.long	0x19287
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x19287
	.uleb128 0x1
	.long	0x19287
	.uleb128 0x1
	.long	0x19287
	.uleb128 0x1
	.long	0x19287
	.byte	0
	.uleb128 0x8
	.ascii "__niter_wrap<int*>\0"
	.byte	0x3
	.word	0x14f
	.byte	0x5
	.ascii "_ZSt12__niter_wrapIPiET_RKS1_S1_\0"
	.long	0x19287
	.long	0x10965
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x19287
	.uleb128 0x1
	.long	0x1caf7
	.uleb128 0x1
	.long	0x19287
	.byte	0
	.uleb128 0x8
	.ascii "__copy_move_a1<false, int*, int*>\0"
	.byte	0x3
	.word	0x209
	.byte	0x5
	.ascii "_ZSt14__copy_move_a1ILb0EPiS0_ET1_T0_S2_S1_\0"
	.long	0x19287
	.long	0x109ec
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x19287
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x19287
	.uleb128 0x1
	.long	0x19287
	.uleb128 0x1
	.long	0x19287
	.uleb128 0x1
	.long	0x19287
	.byte	0
	.uleb128 0x3b
	.ascii "_Destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >\0"
	.byte	0xab
	.byte	0x5
	.ascii "_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEvT_S7_\0"
	.long	0x10aa8
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x16e6c
	.uleb128 0x1
	.long	0x16e6c
	.uleb128 0x1
	.long	0x16e6c
	.byte	0
	.uleb128 0x8
	.ascii "__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >\0"
	.byte	0x3
	.word	0x20f
	.byte	0x5
	.ascii "_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEENS1_IPiS6_EEET1_T0_SB_SA_\0"
	.long	0x16e6c
	.long	0x10bfe
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x173e1
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x16e6c
	.uleb128 0x1
	.long	0x173e1
	.uleb128 0x1
	.long	0x173e1
	.uleb128 0x1
	.long	0x16e6c
	.byte	0
	.uleb128 0x8
	.ascii "__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >\0"
	.byte	0x12
	.word	0x230
	.byte	0x5
	.ascii "_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEET_S8_\0"
	.long	0x173e1
	.long	0x10cca
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x173e1
	.uleb128 0x1
	.long	0x173e1
	.byte	0
	.uleb128 0x8
	.ascii "__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>\0"
	.byte	0x13
	.word	0x14b
	.byte	0x5
	.ascii "_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiiET0_T_SA_S9_RSaIT1_E\0"
	.long	0x19287
	.long	0x10de6
	.uleb128 0x4
	.secrel32	.LASF30
	.long	0x173e1
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x19287
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x191dc
	.uleb128 0x1
	.long	0x173e1
	.uleb128 0x1
	.long	0x173e1
	.uleb128 0x1
	.long	0x19287
	.uleb128 0x1
	.long	0x1c5da
	.byte	0
	.uleb128 0x8
	.ascii "fill_n<int*, long long unsigned int, int>\0"
	.byte	0x3
	.word	0x478
	.byte	0x5
	.ascii "_ZSt6fill_nIPiyiET_S1_T0_RKT1_\0"
	.long	0x19287
	.long	0x10e67
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x19287
	.uleb128 0x4
	.secrel32	.LASF32
	.long	0x191a1
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x191dc
	.uleb128 0x1
	.long	0x19287
	.uleb128 0x1
	.long	0x191a1
	.uleb128 0x1
	.long	0x1b884
	.byte	0
	.uleb128 0x3b
	.ascii "_Construct<int>\0"
	.byte	0x6c
	.byte	0x5
	.ascii "_ZSt10_ConstructIiJEEvPT_DpOT0_\0"
	.long	0x10eb3
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x191dc
	.uleb128 0x8a
	.secrel32	.LASF148
	.uleb128 0x1
	.long	0x19287
	.byte	0
	.uleb128 0x8
	.ascii "__copy_move_a1<false, std::_Bit_iterator, std::_Bit_iterator>\0"
	.byte	0x3
	.word	0x209
	.byte	0x5
	.ascii "_ZSt14__copy_move_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_\0"
	.long	0x3290
	.long	0x10f65
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x3290
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x3290
	.uleb128 0x1
	.long	0x3290
	.uleb128 0x1
	.long	0x3290
	.uleb128 0x1
	.long	0x3290
	.byte	0
	.uleb128 0x8
	.ascii "__copy_move_backward_a2<false, std::_Bit_iterator, std::_Bit_iterator>\0"
	.byte	0x3
	.word	0x2ee
	.byte	0x5
	.ascii "_ZSt23__copy_move_backward_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_\0"
	.long	0x3290
	.long	0x11029
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x4
	.secrel32	.LASF9
	.long	0x3290
	.uleb128 0x4
	.secrel32	.LASF10
	.long	0x3290
	.uleb128 0x1
	.long	0x3290
	.uleb128 0x1
	.long	0x3290
	.uleb128 0x1
	.long	0x3290
	.byte	0
	.uleb128 0x8
	.ascii "__copy_move_a1<false, std::_Bit_const_iterator, std::_Bit_iterator>\0"
	.byte	0x3
	.word	0x209
	.byte	0x5
	.ascii "_ZSt14__copy_move_a1ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_\0"
	.long	0x3290
	.long	0x110f5
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x3524
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x3290
	.uleb128 0x1
	.long	0x3524
	.uleb128 0x1
	.long	0x3524
	.uleb128 0x1
	.long	0x3290
	.byte	0
	.uleb128 0x8
	.ascii "__niter_base<std::_Bit_const_iterator>\0"
	.byte	0x3
	.word	0x139
	.byte	0x5
	.ascii "_ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_\0"
	.long	0x3524
	.long	0x11169
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x3524
	.uleb128 0x1
	.long	0x3524
	.byte	0
	.uleb128 0x8
	.ascii "__copy_move_a2<false, long unsigned int*, long unsigned int*>\0"
	.byte	0x3
	.word	0x1e6
	.byte	0x5
	.ascii "_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_\0"
	.long	0x1bd4d
	.long	0x1120c
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x1bd4d
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x1bd4d
	.uleb128 0x1
	.long	0x1bd4d
	.uleb128 0x1
	.long	0x1bd4d
	.uleb128 0x1
	.long	0x1bd4d
	.byte	0
	.uleb128 0x1e
	.ascii "uninitialized_copy<const Blorb*, Blorb*>\0"
	.byte	0x13
	.byte	0x7e
	.byte	0x5
	.ascii "_ZSt18uninitialized_copyIPK5BlorbPS0_ET0_T_S5_S4_\0"
	.long	0x1c92b
	.long	0x11295
	.uleb128 0x4
	.secrel32	.LASF30
	.long	0x1c96c
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x1c92b
	.uleb128 0x1
	.long	0x1c96c
	.uleb128 0x1
	.long	0x1c96c
	.uleb128 0x1
	.long	0x1c92b
	.byte	0
	.uleb128 0x1e
	.ascii "forward<DDT::Node&>\0"
	.byte	0x11
	.byte	0x4d
	.byte	0x5
	.ascii "_ZSt7forwardIRN3DDT4NodeEEOT_RNSt16remove_referenceIS3_E4typeE\0"
	.long	0x1c8d4
	.long	0x11303
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1c8d4
	.uleb128 0x1
	.long	0x1e768
	.byte	0
	.uleb128 0x3b
	.ascii "_Construct<DDT::Node, const DDT::Node&>\0"
	.byte	0x6c
	.byte	0x5
	.ascii "_ZSt10_ConstructIN3DDT4NodeEJRKS1_EEvPT_DpOT0_\0"
	.long	0x11384
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1c0ec
	.uleb128 0x31
	.secrel32	.LASF148
	.long	0x11379
	.uleb128 0x32
	.long	0x1c901
	.byte	0
	.uleb128 0x1
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c901
	.byte	0
	.uleb128 0x1e
	.ascii "uninitialized_copy<const DDT::Node*, DDT::Node*>\0"
	.byte	0x13
	.byte	0x7e
	.byte	0x5
	.ascii "_ZSt18uninitialized_copyIPKN3DDT4NodeEPS1_ET0_T_S6_S5_\0"
	.long	0x1c4db
	.long	0x1141a
	.uleb128 0x4
	.secrel32	.LASF30
	.long	0x1c50d
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c50d
	.uleb128 0x1
	.long	0x1c50d
	.uleb128 0x1
	.long	0x1c4db
	.byte	0
	.uleb128 0x8
	.ascii "__uninitialized_copy_a<int*, int*, int>\0"
	.byte	0x13
	.word	0x14b
	.byte	0x5
	.ascii "_ZSt22__uninitialized_copy_aIPiS0_iET0_T_S2_S1_RSaIT1_E\0"
	.long	0x19287
	.long	0x114b7
	.uleb128 0x4
	.secrel32	.LASF30
	.long	0x19287
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x19287
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x191dc
	.uleb128 0x1
	.long	0x19287
	.uleb128 0x1
	.long	0x19287
	.uleb128 0x1
	.long	0x19287
	.uleb128 0x1
	.long	0x1c5da
	.byte	0
	.uleb128 0x8
	.ascii "__copy_move_a<false, int*, int*>\0"
	.byte	0x3
	.word	0x20f
	.byte	0x5
	.ascii "_ZSt13__copy_move_aILb0EPiS0_ET1_T0_S2_S1_\0"
	.long	0x19287
	.long	0x1153c
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x19287
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x19287
	.uleb128 0x1
	.long	0x19287
	.uleb128 0x1
	.long	0x19287
	.uleb128 0x1
	.long	0x19287
	.byte	0
	.uleb128 0x8
	.ascii "__miter_base<int*>\0"
	.byte	0x12
	.word	0x230
	.byte	0x5
	.ascii "_ZSt12__miter_baseIPiET_S1_\0"
	.long	0x19287
	.long	0x11587
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x19287
	.uleb128 0x1
	.long	0x19287
	.byte	0
	.uleb128 0x40
	.ascii "_Destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int>\0"
	.byte	0x10
	.word	0x2e7
	.byte	0x5
	.ascii "_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiEvT_S7_RSaIT0_E\0"
	.long	0x11660
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x16e6c
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x191dc
	.uleb128 0x1
	.long	0x16e6c
	.uleb128 0x1
	.long	0x16e6c
	.uleb128 0x1
	.long	0x1c5da
	.byte	0
	.uleb128 0x8
	.ascii "copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >\0"
	.byte	0x3
	.word	0x263
	.byte	0x5
	.ascii "_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEENS1_IPiS6_EEET0_T_SB_SA_\0"
	.long	0x16e6c
	.long	0x1178d
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x173e1
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x16e6c
	.uleb128 0x1
	.long	0x173e1
	.uleb128 0x1
	.long	0x173e1
	.uleb128 0x1
	.long	0x16e6c
	.byte	0
	.uleb128 0x40
	.ascii "__alloc_on_copy<std::allocator<int> >\0"
	.byte	0x10
	.word	0x240
	.byte	0x5
	.ascii "_ZSt15__alloc_on_copyISaIiEEvRT_RKS1_\0"
	.long	0x117f6
	.uleb128 0x4
	.secrel32	.LASF98
	.long	0xa11e
	.uleb128 0x1
	.long	0x1c5da
	.uleb128 0x1
	.long	0x1c5d5
	.byte	0
	.uleb128 0x40
	.ascii "__alloc_on_copy<std::allocator<long unsigned int> >\0"
	.byte	0x10
	.word	0x240
	.byte	0x5
	.ascii "_ZSt15__alloc_on_copyISaImEEvRT_RKS1_\0"
	.long	0x1186d
	.uleb128 0x4
	.secrel32	.LASF98
	.long	0x5223
	.uleb128 0x1
	.long	0x1bd70
	.uleb128 0x1
	.long	0x1bd6b
	.byte	0
	.uleb128 0x4e
	.secrel32	.LASF36
	.byte	0xc
	.byte	0xd8
	.byte	0x7
	.ascii "_ZSteqRKSaImES1_\0"
	.long	0x14cc6
	.long	0x11899
	.uleb128 0x1
	.long	0x1bd6b
	.uleb128 0x1
	.long	0x1bd6b
	.byte	0
	.uleb128 0x46
	.ascii "__enable_if_t\0"
	.byte	0x1
	.word	0x868
	.byte	0xb
	.long	0xf515
	.uleb128 0x8
	.ascii "__relocate_a_1<int, int>\0"
	.byte	0x13
	.word	0x3ee
	.byte	0x5
	.ascii "_ZSt14__relocate_a_1IiiENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS2_E4typeES4_S4_S4_RSaIT0_E\0"
	.long	0x11899
	.long	0x1196b
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x191dc
	.uleb128 0x5
	.ascii "_Up\0"
	.long	0x191dc
	.uleb128 0x1
	.long	0x19287
	.uleb128 0x1
	.long	0x19287
	.uleb128 0x1
	.long	0x19287
	.uleb128 0x1
	.long	0x1c5da
	.byte	0
	.uleb128 0x8
	.ascii "__niter_base<int*>\0"
	.byte	0x3
	.word	0x139
	.byte	0x5
	.ascii "_ZSt12__niter_baseIPiET_S1_\0"
	.long	0x19287
	.long	0x119b6
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x19287
	.uleb128 0x1
	.long	0x19287
	.byte	0
	.uleb128 0x8
	.ascii "__copy_move_a<false, std::_Bit_iterator, std::_Bit_iterator>\0"
	.byte	0x3
	.word	0x20f
	.byte	0x5
	.ascii "_ZSt13__copy_move_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_\0"
	.long	0x3290
	.long	0x11a66
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x3290
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x3290
	.uleb128 0x1
	.long	0x3290
	.uleb128 0x1
	.long	0x3290
	.uleb128 0x1
	.long	0x3290
	.byte	0
	.uleb128 0x40
	.ascii "__fill_a<std::_Bit_iterator, bool>\0"
	.byte	0x3
	.word	0x3c8
	.byte	0x5
	.ascii "_ZSt8__fill_aISt13_Bit_iteratorbEvT_S1_RKT0_\0"
	.long	0x11ae1
	.uleb128 0x4
	.secrel32	.LASF150
	.long	0x3290
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x14cc6
	.uleb128 0x1
	.long	0x3290
	.uleb128 0x1
	.long	0x3290
	.uleb128 0x1
	.long	0x1af3d
	.byte	0
	.uleb128 0x8
	.ascii "__niter_wrap<std::_Bit_iterator>\0"
	.byte	0x3
	.word	0x14f
	.byte	0x5
	.ascii "_ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_\0"
	.long	0x3290
	.long	0x11b53
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x3290
	.uleb128 0x1
	.long	0x1af1a
	.uleb128 0x1
	.long	0x3290
	.byte	0
	.uleb128 0x8
	.ascii "__copy_move_backward_a1<false, std::_Bit_iterator, std::_Bit_iterator>\0"
	.byte	0x3
	.word	0x300
	.byte	0x5
	.ascii "_ZSt23__copy_move_backward_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_\0"
	.long	0x3290
	.long	0x11c17
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x4
	.secrel32	.LASF9
	.long	0x3290
	.uleb128 0x4
	.secrel32	.LASF10
	.long	0x3290
	.uleb128 0x1
	.long	0x3290
	.uleb128 0x1
	.long	0x3290
	.uleb128 0x1
	.long	0x3290
	.byte	0
	.uleb128 0x8
	.ascii "__niter_base<std::_Bit_iterator>\0"
	.byte	0x3
	.word	0x139
	.byte	0x5
	.ascii "_ZSt12__niter_baseISt13_Bit_iteratorET_S1_\0"
	.long	0x3290
	.long	0x11c7f
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x3290
	.uleb128 0x1
	.long	0x3290
	.byte	0
	.uleb128 0x8
	.ascii "__copy_move_a<false, std::_Bit_const_iterator, std::_Bit_iterator>\0"
	.byte	0x3
	.word	0x20f
	.byte	0x5
	.ascii "_ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_\0"
	.long	0x3290
	.long	0x11d49
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x3524
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x3290
	.uleb128 0x1
	.long	0x3524
	.uleb128 0x1
	.long	0x3524
	.uleb128 0x1
	.long	0x3290
	.byte	0
	.uleb128 0x8
	.ascii "__miter_base<std::_Bit_const_iterator>\0"
	.byte	0x12
	.word	0x230
	.byte	0x5
	.ascii "_ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_\0"
	.long	0x3524
	.long	0x11dbd
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x3524
	.uleb128 0x1
	.long	0x3524
	.byte	0
	.uleb128 0x8
	.ascii "__niter_wrap<long unsigned int*>\0"
	.byte	0x3
	.word	0x14f
	.byte	0x5
	.ascii "_ZSt12__niter_wrapIPmET_RKS1_S1_\0"
	.long	0x1bd4d
	.long	0x11e20
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x1bd4d
	.uleb128 0x1
	.long	0x1f252
	.uleb128 0x1
	.long	0x1bd4d
	.byte	0
	.uleb128 0x8
	.ascii "__copy_move_a1<false, long unsigned int*, long unsigned int*>\0"
	.byte	0x3
	.word	0x209
	.byte	0x5
	.ascii "_ZSt14__copy_move_a1ILb0EPmS0_ET1_T0_S2_S1_\0"
	.long	0x1bd4d
	.long	0x11ec3
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x1bd4d
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x1bd4d
	.uleb128 0x1
	.long	0x1bd4d
	.uleb128 0x1
	.long	0x1bd4d
	.uleb128 0x1
	.long	0x1bd4d
	.byte	0
	.uleb128 0x8
	.ascii "__niter_base<long unsigned int*>\0"
	.byte	0x3
	.word	0x139
	.byte	0x5
	.ascii "_ZSt12__niter_baseIPmET_S1_\0"
	.long	0x1bd4d
	.long	0x11f1c
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x1bd4d
	.uleb128 0x1
	.long	0x1bd4d
	.byte	0
	.uleb128 0x3b
	.ascii "destroy_at<int>\0"
	.byte	0x50
	.byte	0x5
	.ascii "_ZSt10destroy_atIiEvPT_\0"
	.long	0x11f5a
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x191dc
	.uleb128 0x1
	.long	0x19287
	.byte	0
	.uleb128 0x8
	.ascii "__copy_move_a2<true, Blorb*, Blorb*>\0"
	.byte	0x3
	.word	0x1e6
	.byte	0x5
	.ascii "_ZSt14__copy_move_a2ILb1EP5BlorbS1_ET1_T0_S3_S2_\0"
	.long	0x1c92b
	.long	0x11fe9
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0x1
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x1c92b
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x1c92b
	.uleb128 0x1
	.long	0x1c92b
	.uleb128 0x1
	.long	0x1c92b
	.uleb128 0x1
	.long	0x1c92b
	.byte	0
	.uleb128 0x3b
	.ascii "_Destroy<Blorb*>\0"
	.byte	0xab
	.byte	0x5
	.ascii "_ZSt8_DestroyIP5BlorbEvT_S2_\0"
	.long	0x12032
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x1c92b
	.uleb128 0x1
	.long	0x1c92b
	.uleb128 0x1
	.long	0x1c92b
	.byte	0
	.uleb128 0x8
	.ascii "__uninitialized_copy_a<const Blorb*, Blorb*, Blorb>\0"
	.byte	0x13
	.word	0x14b
	.byte	0x5
	.ascii "_ZSt22__uninitialized_copy_aIPK5BlorbPS0_S0_ET0_T_S5_S4_RSaIT1_E\0"
	.long	0x1c92b
	.long	0x120e4
	.uleb128 0x4
	.secrel32	.LASF30
	.long	0x1c96c
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x1c92b
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1beba
	.uleb128 0x1
	.long	0x1c96c
	.uleb128 0x1
	.long	0x1c96c
	.uleb128 0x1
	.long	0x1c92b
	.uleb128 0x1
	.long	0x1c95d
	.byte	0
	.uleb128 0x8
	.ascii "__make_move_if_noexcept_iterator<Blorb>\0"
	.byte	0xf
	.word	0x685
	.byte	0x5
	.ascii "_ZSt32__make_move_if_noexcept_iteratorI5BlorbPKS0_ET0_PT_\0"
	.long	0x1c96c
	.long	0x1216b
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1beba
	.uleb128 0x4c
	.secrel32	.LASF155
	.long	0x1c96c
	.uleb128 0x1
	.long	0x1c92b
	.byte	0
	.uleb128 0x3b
	.ascii "_Construct<DDT::Node, DDT::Node&>\0"
	.byte	0x6c
	.byte	0x5
	.ascii "_ZSt10_ConstructIN3DDT4NodeEJRS1_EEvPT_DpOT0_\0"
	.long	0x121e5
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1c0ec
	.uleb128 0x31
	.secrel32	.LASF148
	.long	0x121da
	.uleb128 0x32
	.long	0x1c8d4
	.byte	0
	.uleb128 0x1
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c8d4
	.byte	0
	.uleb128 0x8
	.ascii "__copy_move_a2<false, const DDT::Node*, DDT::Node*>\0"
	.byte	0x3
	.word	0x1e6
	.byte	0x5
	.ascii "_ZSt14__copy_move_a2ILb0EPKN3DDT4NodeEPS1_ET1_T0_S6_S5_\0"
	.long	0x1c4db
	.long	0x1228a
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x1c50d
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c50d
	.uleb128 0x1
	.long	0x1c50d
	.uleb128 0x1
	.long	0x1c4db
	.byte	0
	.uleb128 0x3b
	.ascii "destroy_at<DDT::Node>\0"
	.byte	0x50
	.byte	0x5
	.ascii "_ZSt10destroy_atIN3DDT4NodeEEvPT_\0"
	.long	0x122d8
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1c0ec
	.uleb128 0x1
	.long	0x1c4db
	.byte	0
	.uleb128 0x8
	.ascii "__uninitialized_copy_a<const DDT::Node*, DDT::Node*, DDT::Node>\0"
	.byte	0x13
	.word	0x14b
	.byte	0x5
	.ascii "_ZSt22__uninitialized_copy_aIPKN3DDT4NodeEPS1_S1_ET0_T_S6_S5_RSaIT1_E\0"
	.long	0x1c4db
	.long	0x1239b
	.uleb128 0x4
	.secrel32	.LASF30
	.long	0x1c50d
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x1c4db
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1c0ec
	.uleb128 0x1
	.long	0x1c50d
	.uleb128 0x1
	.long	0x1c50d
	.uleb128 0x1
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c4fe
	.byte	0
	.uleb128 0x8
	.ascii "__make_move_if_noexcept_iterator<DDT::Node>\0"
	.byte	0xf
	.word	0x685
	.byte	0x5
	.ascii "_ZSt32__make_move_if_noexcept_iteratorIN3DDT4NodeEPKS1_ET0_PT_\0"
	.long	0x1c50d
	.long	0x1242b
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1c0ec
	.uleb128 0x4c
	.secrel32	.LASF155
	.long	0x1c50d
	.uleb128 0x1
	.long	0x1c4db
	.byte	0
	.uleb128 0x8
	.ascii "copy<int*, int*>\0"
	.byte	0x3
	.word	0x263
	.byte	0x5
	.ascii "_ZSt4copyIPiS0_ET0_T_S2_S1_\0"
	.long	0x19287
	.long	0x12487
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x19287
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x19287
	.uleb128 0x1
	.long	0x19287
	.uleb128 0x1
	.long	0x19287
	.uleb128 0x1
	.long	0x19287
	.byte	0
	.uleb128 0x4e
	.secrel32	.LASF36
	.byte	0xc
	.byte	0xd8
	.byte	0x7
	.ascii "_ZSteqRKSaIiES1_\0"
	.long	0x14cc6
	.long	0x124b3
	.uleb128 0x1
	.long	0x1c5d5
	.uleb128 0x1
	.long	0x1c5d5
	.byte	0
	.uleb128 0x3b
	.ascii "_Destroy<DDT::Node>\0"
	.byte	0x87
	.byte	0x5
	.ascii "_ZSt8_DestroyIN3DDT4NodeEEvPT_\0"
	.long	0x124fc
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1c0ec
	.uleb128 0x1
	.long	0x1c4db
	.byte	0
	.uleb128 0x1e
	.ascii "__addressof<DDT::Node>\0"
	.byte	0x11
	.byte	0x31
	.byte	0x5
	.ascii "_ZSt11__addressofIN3DDT4NodeEEPT_RS2_\0"
	.long	0x1c4db
	.long	0x12554
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1c0ec
	.uleb128 0x1
	.long	0x1c8d4
	.byte	0
	.uleb128 0x8
	.ascii "__uninitialized_default_n<int*, long long unsigned int>\0"
	.byte	0x13
	.word	0x276
	.byte	0x5
	.ascii "_ZSt25__uninitialized_default_nIPiyET_S1_T0_\0"
	.long	0x19287
	.long	0x125e3
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x19287
	.uleb128 0x4
	.secrel32	.LASF32
	.long	0x191a1
	.uleb128 0x1
	.long	0x19287
	.uleb128 0x1
	.long	0x191a1
	.byte	0
	.uleb128 0x8
	.ascii "__relocate_a<int*, int*, std::allocator<int> >\0"
	.byte	0x13
	.word	0x410
	.byte	0x5
	.ascii "_ZSt12__relocate_aIPiS0_SaIiEET0_T_S3_S2_RT1_\0"
	.long	0x19287
	.long	0x1267d
	.uleb128 0x4
	.secrel32	.LASF30
	.long	0x19287
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x19287
	.uleb128 0x4
	.secrel32	.LASF156
	.long	0xa11e
	.uleb128 0x1
	.long	0x19287
	.uleb128 0x1
	.long	0x19287
	.uleb128 0x1
	.long	0x19287
	.uleb128 0x1
	.long	0x1c5da
	.byte	0
	.uleb128 0x8
	.ascii "copy<std::_Bit_iterator, std::_Bit_iterator>\0"
	.byte	0x3
	.word	0x263
	.byte	0x5
	.ascii "_ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_\0"
	.long	0x3290
	.long	0x12704
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x3290
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x3290
	.uleb128 0x1
	.long	0x3290
	.uleb128 0x1
	.long	0x3290
	.uleb128 0x1
	.long	0x3290
	.byte	0
	.uleb128 0x40
	.ascii "fill<std::_Bit_iterator, bool>\0"
	.byte	0x3
	.word	0x3e0
	.byte	0x5
	.ascii "_ZSt4fillISt13_Bit_iteratorbEvT_S1_RKT0_\0"
	.long	0x12777
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x3290
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x14cc6
	.uleb128 0x1
	.long	0x3290
	.uleb128 0x1
	.long	0x3290
	.uleb128 0x1
	.long	0x1af3d
	.byte	0
	.uleb128 0x8
	.ascii "__copy_move_backward_a<false, std::_Bit_iterator, std::_Bit_iterator>\0"
	.byte	0x3
	.word	0x31c
	.byte	0x5
	.ascii "_ZSt22__copy_move_backward_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_\0"
	.long	0x3290
	.long	0x12839
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x3290
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x3290
	.uleb128 0x1
	.long	0x3290
	.uleb128 0x1
	.long	0x3290
	.uleb128 0x1
	.long	0x3290
	.byte	0
	.uleb128 0x8
	.ascii "__miter_base<std::_Bit_iterator>\0"
	.byte	0x12
	.word	0x230
	.byte	0x5
	.ascii "_ZSt12__miter_baseISt13_Bit_iteratorET_S1_\0"
	.long	0x3290
	.long	0x128a1
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x3290
	.uleb128 0x1
	.long	0x3290
	.byte	0
	.uleb128 0x8
	.ascii "copy<std::_Bit_const_iterator, std::_Bit_iterator>\0"
	.byte	0x3
	.word	0x263
	.byte	0x5
	.ascii "_ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_\0"
	.long	0x3290
	.long	0x12942
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x3524
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x3290
	.uleb128 0x1
	.long	0x3524
	.uleb128 0x1
	.long	0x3524
	.uleb128 0x1
	.long	0x3290
	.byte	0
	.uleb128 0x8
	.ascii "__copy_move_a<false, long unsigned int*, long unsigned int*>\0"
	.byte	0x3
	.word	0x20f
	.byte	0x5
	.ascii "_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_\0"
	.long	0x1bd4d
	.long	0x129e3
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x1bd4d
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x1bd4d
	.uleb128 0x1
	.long	0x1bd4d
	.uleb128 0x1
	.long	0x1bd4d
	.uleb128 0x1
	.long	0x1bd4d
	.byte	0
	.uleb128 0x8
	.ascii "__miter_base<long unsigned int*>\0"
	.byte	0x12
	.word	0x230
	.byte	0x5
	.ascii "_ZSt12__miter_baseIPmET_S1_\0"
	.long	0x1bd4d
	.long	0x12a3c
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x1bd4d
	.uleb128 0x1
	.long	0x1bd4d
	.byte	0
	.uleb128 0x3b
	.ascii "_Destroy<int>\0"
	.byte	0x87
	.byte	0x5
	.ascii "_ZSt8_DestroyIiEvPT_\0"
	.long	0x12a75
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x191dc
	.uleb128 0x1
	.long	0x19287
	.byte	0
	.uleb128 0x1e
	.ascii "__addressof<int>\0"
	.byte	0x11
	.byte	0x31
	.byte	0x5
	.ascii "_ZSt11__addressofIiEPT_RS0_\0"
	.long	0x19287
	.long	0x12abd
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x191dc
	.uleb128 0x1
	.long	0x1c8bb
	.byte	0
	.uleb128 0x3b
	.ascii "destroy_at<Blorb>\0"
	.byte	0x50
	.byte	0x5
	.ascii "_ZSt10destroy_atI5BlorbEvPT_\0"
	.long	0x12b02
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1beba
	.uleb128 0x1
	.long	0x1c92b
	.byte	0
	.uleb128 0x8
	.ascii "__niter_wrap<__gnu_cxx::__normal_iterator<Blorb*, std::vector<Blorb> >, Blorb*>\0"
	.byte	0x3
	.word	0x148
	.byte	0x5
	.ascii "_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_\0"
	.long	0x17e32
	.long	0x12bd9
	.uleb128 0x4
	.secrel32	.LASF151
	.long	0x17e32
	.uleb128 0x5
	.ascii "_To\0"
	.long	0x1c92b
	.uleb128 0x1
	.long	0x17e32
	.uleb128 0x1
	.long	0x1c92b
	.byte	0
	.uleb128 0x8
	.ascii "__copy_move_a1<true, Blorb*, Blorb*>\0"
	.byte	0x3
	.word	0x209
	.byte	0x5
	.ascii "_ZSt14__copy_move_a1ILb1EP5BlorbS1_ET1_T0_S3_S2_\0"
	.long	0x1c92b
	.long	0x12c68
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0x1
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x1c92b
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x1c92b
	.uleb128 0x1
	.long	0x1c92b
	.uleb128 0x1
	.long	0x1c92b
	.uleb128 0x1
	.long	0x1c92b
	.byte	0
	.uleb128 0x8
	.ascii "__niter_base<Blorb*, std::vector<Blorb> >\0"
	.byte	0xf
	.word	0x4e9
	.byte	0x5
	.ascii "_ZSt12__niter_baseIP5BlorbSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE\0"
	.long	0x1c92b
	.long	0x12d11
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x1c92b
	.uleb128 0x4
	.secrel32	.LASF152
	.long	0xd578
	.uleb128 0x1
	.long	0x17e32
	.byte	0
	.uleb128 0x40
	.ascii "_Destroy<Blorb*, Blorb>\0"
	.byte	0x10
	.word	0x2e7
	.byte	0x5
	.ascii "_ZSt8_DestroyIP5BlorbS0_EvT_S2_RSaIT0_E\0"
	.long	0x12d7c
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x1c92b
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1beba
	.uleb128 0x1
	.long	0x1c92b
	.uleb128 0x1
	.long	0x1c92b
	.uleb128 0x1
	.long	0x1c95d
	.byte	0
	.uleb128 0x8
	.ascii "__uninitialized_move_if_noexcept_a<Blorb*, Blorb*, std::allocator<Blorb> >\0"
	.byte	0x13
	.word	0x15d
	.byte	0x5
	.ascii "_ZSt34__uninitialized_move_if_noexcept_aIP5BlorbS1_SaIS0_EET0_T_S4_S3_RT1_\0"
	.long	0x1c92b
	.long	0x12e4f
	.uleb128 0x4
	.secrel32	.LASF30
	.long	0x1c92b
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x1c92b
	.uleb128 0x4
	.secrel32	.LASF156
	.long	0xc856
	.uleb128 0x1
	.long	0x1c92b
	.uleb128 0x1
	.long	0x1c92b
	.uleb128 0x1
	.long	0x1c92b
	.uleb128 0x1
	.long	0x1c95d
	.byte	0
	.uleb128 0x8
	.ascii "__copy_move_a2<false, DDT::Node*, DDT::Node*>\0"
	.byte	0x3
	.word	0x1e6
	.byte	0x5
	.ascii "_ZSt14__copy_move_a2ILb0EPN3DDT4NodeES2_ET1_T0_S4_S3_\0"
	.long	0x1c4db
	.long	0x12eec
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x1c4db
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c4db
	.byte	0
	.uleb128 0x8
	.ascii "__niter_wrap<__gnu_cxx::__normal_iterator<DDT::Node*, std::vector<DDT::Node> >, DDT::Node*>\0"
	.byte	0x3
	.word	0x148
	.byte	0x5
	.ascii "_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_\0"
	.long	0x15d4e
	.long	0x12fd4
	.uleb128 0x4
	.secrel32	.LASF151
	.long	0x15d4e
	.uleb128 0x5
	.ascii "_To\0"
	.long	0x1c4db
	.uleb128 0x1
	.long	0x15d4e
	.uleb128 0x1
	.long	0x1c4db
	.byte	0
	.uleb128 0x8
	.ascii "__copy_move_a1<false, const DDT::Node*, DDT::Node*>\0"
	.byte	0x3
	.word	0x209
	.byte	0x5
	.ascii "_ZSt14__copy_move_a1ILb0EPKN3DDT4NodeEPS1_ET1_T0_S6_S5_\0"
	.long	0x1c4db
	.long	0x13079
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x1c50d
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c50d
	.uleb128 0x1
	.long	0x1c50d
	.uleb128 0x1
	.long	0x1c4db
	.byte	0
	.uleb128 0x8
	.ascii "__niter_base<DDT::Node*, std::vector<DDT::Node> >\0"
	.byte	0xf
	.word	0x4e9
	.byte	0x5
	.ascii "_ZSt12__niter_baseIPN3DDT4NodeESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE\0"
	.long	0x1c4db
	.long	0x1312f
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x1c4db
	.uleb128 0x4
	.secrel32	.LASF152
	.long	0x7fc1
	.uleb128 0x1
	.long	0x15d4e
	.byte	0
	.uleb128 0x8
	.ascii "__niter_base<const DDT::Node*, std::vector<DDT::Node> >\0"
	.byte	0xf
	.word	0x4e9
	.byte	0x5
	.ascii "_ZSt12__niter_baseIPKN3DDT4NodeESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE\0"
	.long	0x1c50d
	.long	0x131ec
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x1c50d
	.uleb128 0x4
	.secrel32	.LASF152
	.long	0x7fc1
	.uleb128 0x1
	.long	0x16399
	.byte	0
	.uleb128 0x1e
	.ascii "uninitialized_copy<__gnu_cxx::__normal_iterator<const DDT::Node*, std::vector<DDT::Node> >, DDT::Node*>\0"
	.byte	0x13
	.byte	0x7e
	.byte	0x5
	.ascii "_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_\0"
	.long	0x1c4db
	.long	0x132ef
	.uleb128 0x4
	.secrel32	.LASF30
	.long	0x16399
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x1c4db
	.uleb128 0x1
	.long	0x16399
	.uleb128 0x1
	.long	0x16399
	.uleb128 0x1
	.long	0x1c4db
	.byte	0
	.uleb128 0x8
	.ascii "__uninitialized_move_if_noexcept_a<DDT::Node*, DDT::Node*, std::allocator<DDT::Node> >\0"
	.byte	0x13
	.word	0x15d
	.byte	0x5
	.ascii "_ZSt34__uninitialized_move_if_noexcept_aIPN3DDT4NodeES2_SaIS1_EET0_T_S5_S4_RT1_\0"
	.long	0x1c4db
	.long	0x133d3
	.uleb128 0x4
	.secrel32	.LASF30
	.long	0x1c4db
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x1c4db
	.uleb128 0x4
	.secrel32	.LASF156
	.long	0x71c4
	.uleb128 0x1
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c4fe
	.byte	0
	.uleb128 0x8
	.ascii "__uninitialized_default_n_a<int*, long long unsigned int, int>\0"
	.byte	0x13
	.word	0x2be
	.byte	0x5
	.ascii "_ZSt27__uninitialized_default_n_aIPiyiET_S1_T0_RSaIT1_E\0"
	.long	0x19287
	.long	0x13482
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x19287
	.uleb128 0x4
	.secrel32	.LASF32
	.long	0x191a1
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x191dc
	.uleb128 0x1
	.long	0x19287
	.uleb128 0x1
	.long	0x191a1
	.uleb128 0x1
	.long	0x1c5da
	.byte	0
	.uleb128 0x8
	.ascii "copy_backward<std::_Bit_iterator, std::_Bit_iterator>\0"
	.byte	0x3
	.word	0x350
	.byte	0x5
	.ascii "_ZSt13copy_backwardISt13_Bit_iteratorS0_ET0_T_S2_S1_\0"
	.long	0x3290
	.long	0x1351c
	.uleb128 0x4
	.secrel32	.LASF9
	.long	0x3290
	.uleb128 0x4
	.secrel32	.LASF10
	.long	0x3290
	.uleb128 0x1
	.long	0x3290
	.uleb128 0x1
	.long	0x3290
	.uleb128 0x1
	.long	0x3290
	.byte	0
	.uleb128 0x8
	.ascii "copy<long unsigned int*, long unsigned int*>\0"
	.byte	0x3
	.word	0x263
	.byte	0x5
	.ascii "_ZSt4copyIPmS0_ET0_T_S2_S1_\0"
	.long	0x1bd4d
	.long	0x13594
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x1bd4d
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x1bd4d
	.uleb128 0x1
	.long	0x1bd4d
	.uleb128 0x1
	.long	0x1bd4d
	.uleb128 0x1
	.long	0x1bd4d
	.byte	0
	.uleb128 0x1e
	.ascii "__addressof<long unsigned int>\0"
	.byte	0x11
	.byte	0x31
	.byte	0x5
	.ascii "_ZSt11__addressofImEPT_RS0_\0"
	.long	0x1bd4d
	.long	0x135ea
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x19187
	.uleb128 0x1
	.long	0x1cb0b
	.byte	0
	.uleb128 0x8
	.ascii "__copy_move_a<true, __gnu_cxx::__normal_iterator<Blorb*, std::vector<Blorb> >, __gnu_cxx::__normal_iterator<Blorb*, std::vector<Blorb> > >\0"
	.byte	0x3
	.word	0x20f
	.byte	0x5
	.ascii "_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS2_SaIS2_EEEES7_ET1_T0_S9_S8_\0"
	.long	0x17e32
	.long	0x13714
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0x1
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x17e32
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x17e32
	.uleb128 0x1
	.long	0x17e32
	.uleb128 0x1
	.long	0x17e32
	.uleb128 0x1
	.long	0x17e32
	.byte	0
	.uleb128 0x8
	.ascii "__miter_base<__gnu_cxx::__normal_iterator<Blorb*, std::vector<Blorb> > >\0"
	.byte	0x12
	.word	0x230
	.byte	0x5
	.ascii "_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS2_SaIS2_EEEEET_S8_\0"
	.long	0x17e32
	.long	0x137d0
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x17e32
	.uleb128 0x1
	.long	0x17e32
	.byte	0
	.uleb128 0x1e
	.ascii "construct_at<Blorb, Blorb>\0"
	.byte	0x15
	.byte	0x5e
	.byte	0x5
	.ascii "_ZSt12construct_atI5BlorbJS0_EEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS2_DpOS3_\0"
	.long	0x1c92b
	.long	0x1386b
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1beba
	.uleb128 0x31
	.secrel32	.LASF148
	.long	0x13860
	.uleb128 0x32
	.long	0x1beba
	.byte	0
	.uleb128 0x1
	.long	0x1c92b
	.uleb128 0x1
	.long	0x1e580
	.byte	0
	.uleb128 0x1e
	.ascii "forward<Blorb>\0"
	.byte	0x11
	.byte	0x4d
	.byte	0x5
	.ascii "_ZSt7forwardI5BlorbEOT_RNSt16remove_referenceIS1_E4typeE\0"
	.long	0x1e580
	.long	0x138ce
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1beba
	.uleb128 0x1
	.long	0x217b1
	.byte	0
	.uleb128 0x8
	.ascii "__count_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<bool const> >\0"
	.byte	0x3
	.word	0x849
	.byte	0x5
	.ascii "_ZSt10__count_ifIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEENS0_5__ops16_Iter_equals_valIKbEEENSt15iterator_traitsIT_E15difference_typeESD_SD_T0_\0"
	.long	0xf4a4
	.long	0x13a28
	.uleb128 0x4
	.secrel32	.LASF30
	.long	0x173e1
	.uleb128 0x4
	.secrel32	.LASF157
	.long	0x14cf2
	.uleb128 0x1
	.long	0x173e1
	.uleb128 0x1
	.long	0x173e1
	.uleb128 0x1
	.long	0x14cf2
	.byte	0
	.uleb128 0x1e
	.ascii "uninitialized_copy<DDT::Node*, DDT::Node*>\0"
	.byte	0x13
	.byte	0x7e
	.byte	0x5
	.ascii "_ZSt18uninitialized_copyIPN3DDT4NodeES2_ET0_T_S4_S3_\0"
	.long	0x1c4db
	.long	0x13ab6
	.uleb128 0x4
	.secrel32	.LASF30
	.long	0x1c4db
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c4db
	.byte	0
	.uleb128 0x8
	.ascii "__niter_wrap<DDT::Node*>\0"
	.byte	0x3
	.word	0x14f
	.byte	0x5
	.ascii "_ZSt12__niter_wrapIPN3DDT4NodeEET_RKS3_S3_\0"
	.long	0x1c4db
	.long	0x13b1b
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c8e3
	.uleb128 0x1
	.long	0x1c4db
	.byte	0
	.uleb128 0x8
	.ascii "__copy_move_a1<false, DDT::Node*, DDT::Node*>\0"
	.byte	0x3
	.word	0x209
	.byte	0x5
	.ascii "_ZSt14__copy_move_a1ILb0EPN3DDT4NodeES2_ET1_T0_S4_S3_\0"
	.long	0x1c4db
	.long	0x13bb8
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x1c4db
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c4db
	.byte	0
	.uleb128 0x8
	.ascii "__niter_base<DDT::Node*>\0"
	.byte	0x3
	.word	0x139
	.byte	0x5
	.ascii "_ZSt12__niter_baseIPN3DDT4NodeEET_S3_\0"
	.long	0x1c4db
	.long	0x13c13
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c4db
	.byte	0
	.uleb128 0x3b
	.ascii "_Destroy<__gnu_cxx::__normal_iterator<DDT::Node*, std::vector<DDT::Node> > >\0"
	.byte	0xab
	.byte	0x5
	.ascii "_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS3_SaIS3_EEEEEvT_S9_\0"
	.long	0x13cd3
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x15d4e
	.uleb128 0x1
	.long	0x15d4e
	.uleb128 0x1
	.long	0x15d4e
	.byte	0
	.uleb128 0x8
	.ascii "__copy_move_a<false, __gnu_cxx::__normal_iterator<const DDT::Node*, std::vector<DDT::Node> >, __gnu_cxx::__normal_iterator<DDT::Node*, std::vector<DDT::Node> > >\0"
	.byte	0x3
	.word	0x20f
	.byte	0x5
	.ascii "_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET1_T0_SD_SC_\0"
	.long	0x15d4e
	.long	0x13e25
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x16399
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x15d4e
	.uleb128 0x1
	.long	0x16399
	.uleb128 0x1
	.long	0x16399
	.uleb128 0x1
	.long	0x15d4e
	.byte	0
	.uleb128 0x8
	.ascii "__miter_base<__gnu_cxx::__normal_iterator<const DDT::Node*, std::vector<DDT::Node> > >\0"
	.byte	0x12
	.word	0x230
	.byte	0x5
	.ascii "_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS3_SaIS3_EEEEET_SA_\0"
	.long	0x16399
	.long	0x13ef5
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x16399
	.uleb128 0x1
	.long	0x16399
	.byte	0
	.uleb128 0x8
	.ascii "__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const DDT::Node*, std::vector<DDT::Node> >, DDT::Node*, DDT::Node>\0"
	.byte	0x13
	.word	0x14b
	.byte	0x5
	.ascii "_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E\0"
	.long	0x1c4db
	.long	0x14025
	.uleb128 0x4
	.secrel32	.LASF30
	.long	0x16399
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x1c4db
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1c0ec
	.uleb128 0x1
	.long	0x16399
	.uleb128 0x1
	.long	0x16399
	.uleb128 0x1
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c4fe
	.byte	0
	.uleb128 0x1e
	.ascii "construct_at<DDT::Node, DDT::Node>\0"
	.byte	0x15
	.byte	0x5e
	.byte	0x5
	.ascii "_ZSt12construct_atIN3DDT4NodeEJS1_EEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_\0"
	.long	0x1c4db
	.long	0x140cd
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1c0ec
	.uleb128 0x31
	.secrel32	.LASF148
	.long	0x140c2
	.uleb128 0x32
	.long	0x1c0ec
	.byte	0
	.uleb128 0x1
	.long	0x1c4db
	.uleb128 0x1
	.long	0x21f2e
	.byte	0
	.uleb128 0x1e
	.ascii "forward<DDT::Node>\0"
	.byte	0x11
	.byte	0x4d
	.byte	0x5
	.ascii "_ZSt7forwardIN3DDT4NodeEEOT_RNSt16remove_referenceIS2_E4typeE\0"
	.long	0x21f2e
	.long	0x14139
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1c0ec
	.uleb128 0x1
	.long	0x22101
	.byte	0
	.uleb128 0x3b
	.ascii "_Destroy<DDT::Node*>\0"
	.byte	0xab
	.byte	0x5
	.ascii "_ZSt8_DestroyIPN3DDT4NodeEEvT_S3_\0"
	.long	0x1418b
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c4db
	.byte	0
	.uleb128 0x3b
	.ascii "_Destroy<int*>\0"
	.byte	0xab
	.byte	0x5
	.ascii "_ZSt8_DestroyIPiEvT_S1_\0"
	.long	0x141cd
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x19287
	.uleb128 0x1
	.long	0x19287
	.uleb128 0x1
	.long	0x19287
	.byte	0
	.uleb128 0x8
	.ascii "move<__gnu_cxx::__normal_iterator<Blorb*, std::vector<Blorb> >, __gnu_cxx::__normal_iterator<Blorb*, std::vector<Blorb> > >\0"
	.byte	0x3
	.word	0x284
	.byte	0x5
	.ascii "_ZSt4moveIN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS2_SaIS2_EEEES7_ET0_T_S9_S8_\0"
	.long	0x17e32
	.long	0x142cf
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x17e32
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x17e32
	.uleb128 0x1
	.long	0x17e32
	.uleb128 0x1
	.long	0x17e32
	.uleb128 0x1
	.long	0x17e32
	.byte	0
	.uleb128 0x1e
	.ascii "move<Blorb&>\0"
	.byte	0x11
	.byte	0x68
	.byte	0x5
	.ascii "_ZSt4moveIR5BlorbEONSt16remove_referenceIT_E4typeEOS3_\0"
	.long	0x22c0b
	.long	0x1432e
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1beb5
	.uleb128 0x1
	.long	0x1beb5
	.byte	0
	.uleb128 0x8
	.ascii "count<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, bool>\0"
	.byte	0x14
	.word	0xfdb
	.byte	0x5
	.ascii "_ZSt5countIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEbENSt15iterator_traitsIT_E15difference_typeES9_S9_RKT0_\0"
	.long	0xf4a4
	.long	0x14437
	.uleb128 0x5
	.ascii "_IIter\0"
	.long	0x173e1
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x14cc6
	.uleb128 0x1
	.long	0x173e1
	.uleb128 0x1
	.long	0x173e1
	.uleb128 0x1
	.long	0x1af3d
	.byte	0
	.uleb128 0x8
	.ascii "__uninitialized_copy_a<DDT::Node*, DDT::Node*, DDT::Node>\0"
	.byte	0x13
	.word	0x14b
	.byte	0x5
	.ascii "_ZSt22__uninitialized_copy_aIPN3DDT4NodeES2_S1_ET0_T_S4_S3_RSaIT1_E\0"
	.long	0x1c4db
	.long	0x144f2
	.uleb128 0x4
	.secrel32	.LASF30
	.long	0x1c4db
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x1c4db
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1c0ec
	.uleb128 0x1
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c4fe
	.byte	0
	.uleb128 0x8
	.ascii "__copy_move_a<false, DDT::Node*, DDT::Node*>\0"
	.byte	0x3
	.word	0x20f
	.byte	0x5
	.ascii "_ZSt13__copy_move_aILb0EPN3DDT4NodeES2_ET1_T0_S4_S3_\0"
	.long	0x1c4db
	.long	0x1458d
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x1c4db
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c4db
	.byte	0
	.uleb128 0x8
	.ascii "__miter_base<DDT::Node*>\0"
	.byte	0x12
	.word	0x230
	.byte	0x5
	.ascii "_ZSt12__miter_baseIPN3DDT4NodeEET_S3_\0"
	.long	0x1c4db
	.long	0x145e8
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c4db
	.byte	0
	.uleb128 0x40
	.ascii "_Destroy<__gnu_cxx::__normal_iterator<DDT::Node*, std::vector<DDT::Node> >, DDT::Node>\0"
	.byte	0x10
	.word	0x2e7
	.byte	0x5
	.ascii "_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS3_SaIS3_EEEES3_EvT_S9_RSaIT0_E\0"
	.long	0x146cd
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x15d4e
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1c0ec
	.uleb128 0x1
	.long	0x15d4e
	.uleb128 0x1
	.long	0x15d4e
	.uleb128 0x1
	.long	0x1c4fe
	.byte	0
	.uleb128 0x8
	.ascii "copy<__gnu_cxx::__normal_iterator<const DDT::Node*, std::vector<DDT::Node> >, __gnu_cxx::__normal_iterator<DDT::Node*, std::vector<DDT::Node> > >\0"
	.byte	0x3
	.word	0x263
	.byte	0x5
	.ascii "_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET0_T_SD_SC_\0"
	.long	0x15d4e
	.long	0x147f6
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x16399
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x15d4e
	.uleb128 0x1
	.long	0x16399
	.uleb128 0x1
	.long	0x16399
	.uleb128 0x1
	.long	0x15d4e
	.byte	0
	.uleb128 0x40
	.ascii "__alloc_on_copy<std::allocator<DDT::Node> >\0"
	.byte	0x10
	.word	0x240
	.byte	0x5
	.ascii "_ZSt15__alloc_on_copyISaIN3DDT4NodeEEEvRT_RKS3_\0"
	.long	0x1486f
	.uleb128 0x4
	.secrel32	.LASF98
	.long	0x71c4
	.uleb128 0x1
	.long	0x1c4fe
	.uleb128 0x1
	.long	0x1c4f9
	.byte	0
	.uleb128 0x1e
	.ascii "move<DDT::Node&>\0"
	.byte	0x11
	.byte	0x68
	.byte	0x5
	.ascii "_ZSt4moveIRN3DDT4NodeEEONSt16remove_referenceIT_E4typeEOS4_\0"
	.long	0x232cb
	.long	0x148d7
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1c8d4
	.uleb128 0x1
	.long	0x1c8d4
	.byte	0
	.uleb128 0x40
	.ascii "_Destroy<DDT::Node*, DDT::Node>\0"
	.byte	0x10
	.word	0x2e7
	.byte	0x5
	.ascii "_ZSt8_DestroyIPN3DDT4NodeES1_EvT_S3_RSaIT0_E\0"
	.long	0x1494f
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x1c4db
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1c0ec
	.uleb128 0x1
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c4fe
	.byte	0
	.uleb128 0x40
	.ascii "_Destroy<int*, int>\0"
	.byte	0x10
	.word	0x2e7
	.byte	0x5
	.ascii "_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E\0"
	.long	0x149af
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x19287
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x191dc
	.uleb128 0x1
	.long	0x19287
	.uleb128 0x1
	.long	0x19287
	.uleb128 0x1
	.long	0x1c5da
	.byte	0
	.uleb128 0x8
	.ascii "copy<DDT::Node*, DDT::Node*>\0"
	.byte	0x3
	.word	0x263
	.byte	0x5
	.ascii "_ZSt4copyIPN3DDT4NodeES2_ET0_T_S4_S3_\0"
	.long	0x1c4db
	.long	0x14a21
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x1c4db
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c4db
	.byte	0
	.uleb128 0x4e
	.secrel32	.LASF36
	.byte	0xc
	.byte	0xd8
	.byte	0x7
	.ascii "_ZSteqRKSaIN3DDT4NodeEES3_\0"
	.long	0x14cc6
	.long	0x14a57
	.uleb128 0x1
	.long	0x1c4f9
	.uleb128 0x1
	.long	0x1c4f9
	.byte	0
	.uleb128 0x1e
	.ascii "max<long long unsigned int>\0"
	.byte	0x3
	.byte	0xfe
	.byte	0x5
	.ascii "_ZSt3maxIyERKT_S2_S2_\0"
	.long	0x1b87f
	.long	0x14aa9
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x191a1
	.uleb128 0x1
	.long	0x1b87f
	.uleb128 0x1
	.long	0x1b87f
	.byte	0
	.uleb128 0x1e
	.ascii "min<long long unsigned int>\0"
	.byte	0x3
	.byte	0xe6
	.byte	0x5
	.ascii "_ZSt3minIyERKT_S2_S2_\0"
	.long	0x1b87f
	.long	0x14afb
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x191a1
	.uleb128 0x1
	.long	0x1b87f
	.uleb128 0x1
	.long	0x1b87f
	.byte	0
	.uleb128 0x40
	.ascii "__fill_a1\0"
	.byte	0x8
	.word	0x542
	.byte	0x3
	.ascii "_ZSt9__fill_a1St13_Bit_iteratorS_RKb\0"
	.long	0x14b43
	.uleb128 0x1
	.long	0x3290
	.uleb128 0x1
	.long	0x3290
	.uleb128 0x1
	.long	0x1af3d
	.byte	0
	.uleb128 0x40
	.ascii "__fill_bvector\0"
	.byte	0x8
	.word	0x532
	.byte	0x3
	.ascii "_ZSt14__fill_bvectorPmjjb\0"
	.long	0x14b8a
	.uleb128 0x1
	.long	0x1aec0
	.uleb128 0x1
	.long	0x14cb6
	.uleb128 0x1
	.long	0x14cb6
	.uleb128 0x1
	.long	0x14cc6
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF66
	.byte	0x8
	.word	0x18f
	.byte	0x5
	.ascii "_ZStplRKSt19_Bit_const_iteratorx\0"
	.long	0x368c
	.long	0x14bc7
	.uleb128 0x1
	.long	0x250e3
	.uleb128 0x1
	.long	0x3111
	.byte	0
	.uleb128 0x14
	.secrel32	.LASF66
	.byte	0x8
	.word	0x12f
	.byte	0x5
	.ascii "_ZStplRKSt13_Bit_iteratorx\0"
	.long	0x330c
	.long	0x14bfe
	.uleb128 0x1
	.long	0x25342
	.uleb128 0x1
	.long	0x3111
	.byte	0
	.uleb128 0x4e
	.secrel32	.LASF67
	.byte	0x8
	.byte	0xe0
	.byte	0x5
	.ascii "_ZStmiRKSt18_Bit_iterator_baseS1_\0"
	.long	0x2b66
	.long	0x14c3b
	.uleb128 0x1
	.long	0x2556c
	.uleb128 0x1
	.long	0x2556c
	.byte	0
	.uleb128 0x8
	.ascii "__size_to_integer\0"
	.byte	0x3
	.word	0x3f6
	.byte	0x3
	.ascii "_ZSt17__size_to_integery\0"
	.long	0x191a1
	.long	0x14c79
	.uleb128 0x1
	.long	0x191a1
	.byte	0
	.uleb128 0x7b
	.ascii "is_constant_evaluated\0"
	.byte	0x1
	.word	0xcfc
	.byte	0x3
	.ascii "_ZSt21is_constant_evaluatedv\0"
	.long	0x14cc6
	.byte	0
	.uleb128 0x33
	.byte	0x4
	.byte	0x7
	.ascii "unsigned int\0"
	.uleb128 0x33
	.byte	0x1
	.byte	0x2
	.ascii "bool\0"
	.uleb128 0xa
	.long	0x14cc6
	.uleb128 0x7f
	.ascii "__gnu_cxx\0"
	.word	0x130
	.long	0x19160
	.uleb128 0x64
	.ascii "__ops\0"
	.byte	0x17
	.byte	0x25
	.byte	0xb
	.long	0x14ef6
	.uleb128 0x2f
	.ascii "_Iter_equals_val<bool const>\0"
	.byte	0x8
	.byte	0x17
	.word	0x100
	.byte	0xc
	.long	0x14e74
	.uleb128 0x3c
	.ascii "_M_value\0"
	.byte	0x17
	.word	0x102
	.byte	0xf
	.long	0x1af3d
	.byte	0
	.uleb128 0xac
	.ascii "_Iter_equals_val\0"
	.byte	0x17
	.word	0x106
	.byte	0x7
	.ascii "_ZN9__gnu_cxx5__ops16_Iter_equals_valIKbEC4ERS2_\0"
	.long	0x14d7c
	.long	0x14d87
	.uleb128 0x2
	.long	0x1cad9
	.uleb128 0x1
	.long	0x1af3d
	.byte	0
	.uleb128 0x68
	.ascii "operator()<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >\0"
	.byte	0x17
	.word	0x10d
	.byte	0x2
	.ascii "_ZN9__gnu_cxx5__ops16_Iter_equals_valIKbEclINS_17__normal_iteratorIPKiSt6vectorIiSaIiEEEEEEbT_\0"
	.long	0x14cc6
	.long	0x14e5f
	.long	0x14e6a
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x173e1
	.uleb128 0x2
	.long	0x1cad9
	.uleb128 0x1
	.long	0x173e1
	.byte	0
	.uleb128 0x4
	.secrel32	.LASF158
	.long	0x14cce
	.byte	0
	.uleb128 0x8b
	.ascii "__iter_equals_val<bool const>\0"
	.byte	0x17
	.word	0x114
	.ascii "_ZN9__gnu_cxx5__ops17__iter_equals_valIKbEENS0_16_Iter_equals_valIT_EERS4_\0"
	.long	0x14cf2
	.uleb128 0x4
	.secrel32	.LASF158
	.long	0x14cce
	.uleb128 0x1
	.long	0x1af3d
	.byte	0
	.byte	0
	.uleb128 0x3
	.byte	0x22
	.byte	0xc8
	.byte	0xb
	.long	0x1960a
	.uleb128 0x3
	.byte	0x22
	.byte	0xd8
	.byte	0xb
	.long	0x1a73b
	.uleb128 0x3
	.byte	0x22
	.byte	0xe3
	.byte	0xb
	.long	0x1a759
	.uleb128 0x3
	.byte	0x22
	.byte	0xe4
	.byte	0xb
	.long	0x1a772
	.uleb128 0x3
	.byte	0x22
	.byte	0xe5
	.byte	0xb
	.long	0x1a797
	.uleb128 0x3
	.byte	0x22
	.byte	0xe7
	.byte	0xb
	.long	0x1a7bd
	.uleb128 0x3
	.byte	0x22
	.byte	0xe8
	.byte	0xb
	.long	0x1a7dc
	.uleb128 0x1e
	.ascii "div\0"
	.byte	0x22
	.byte	0xd5
	.byte	0x3
	.ascii "_ZN9__gnu_cxx3divExx\0"
	.long	0x1960a
	.long	0x14f5e
	.uleb128 0x1
	.long	0x191f4
	.uleb128 0x1
	.long	0x191f4
	.byte	0
	.uleb128 0x3
	.byte	0x23
	.byte	0xaf
	.byte	0xb
	.long	0x1ada2
	.uleb128 0x3
	.byte	0x23
	.byte	0xb0
	.byte	0xb
	.long	0x1addc
	.uleb128 0x3
	.byte	0x23
	.byte	0xb1
	.byte	0xb
	.long	0x1ae19
	.uleb128 0x3
	.byte	0x23
	.byte	0xb2
	.byte	0xb
	.long	0x1ae47
	.uleb128 0x3
	.byte	0x23
	.byte	0xb3
	.byte	0xb
	.long	0x1ae88
	.uleb128 0x3
	.byte	0x25
	.byte	0xfb
	.byte	0xb
	.long	0x1b7c1
	.uleb128 0x28
	.byte	0x25
	.word	0x104
	.byte	0xb
	.long	0x1b7e1
	.uleb128 0x28
	.byte	0x25
	.word	0x105
	.byte	0xb
	.long	0x1b806
	.uleb128 0x3a
	.ascii "new_allocator<bool>\0"
	.byte	0x1
	.byte	0x16
	.byte	0x37
	.byte	0xb
	.long	0x1513d
	.uleb128 0x24
	.secrel32	.LASF159
	.byte	0x16
	.byte	0x4f
	.byte	0x7
	.ascii "_ZN9__gnu_cxx13new_allocatorIbEC4Ev\0"
	.long	0x14ff1
	.long	0x14ff7
	.uleb128 0x2
	.long	0x1bd16
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF159
	.byte	0x16
	.byte	0x52
	.byte	0x7
	.ascii "_ZN9__gnu_cxx13new_allocatorIbEC4ERKS1_\0"
	.long	0x1502f
	.long	0x1503a
	.uleb128 0x2
	.long	0x1bd16
	.uleb128 0x1
	.long	0x1bd1b
	.byte	0
	.uleb128 0x29
	.secrel32	.LASF76
	.byte	0x16
	.byte	0x67
	.byte	0x7
	.ascii "_ZN9__gnu_cxx13new_allocatorIbE8allocateEyPKv\0"
	.long	0x1aee3
	.byte	0x1
	.long	0x1507d
	.long	0x1508d
	.uleb128 0x2
	.long	0x1bd16
	.uleb128 0x1
	.long	0x1508d
	.uleb128 0x1
	.long	0x1a551
	.byte	0
	.uleb128 0x36
	.secrel32	.LASF56
	.byte	0x16
	.byte	0x3b
	.byte	0x1f
	.long	0x2f0
	.uleb128 0x24
	.secrel32	.LASF77
	.byte	0x16
	.byte	0x84
	.byte	0x7
	.ascii "_ZN9__gnu_cxx13new_allocatorIbE10deallocateEPby\0"
	.long	0x150d9
	.long	0x150e9
	.uleb128 0x2
	.long	0x1bd16
	.uleb128 0x1
	.long	0x1aee3
	.uleb128 0x1
	.long	0x1508d
	.byte	0
	.uleb128 0x3e
	.secrel32	.LASF160
	.byte	0x16
	.byte	0xc5
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx13new_allocatorIbE11_M_max_sizeEv\0"
	.long	0x1508d
	.long	0x1512d
	.long	0x15133
	.uleb128 0x2
	.long	0x1bd20
	.byte	0
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x14cc6
	.byte	0
	.uleb128 0xa
	.long	0x14fa0
	.uleb128 0x26
	.ascii "__alloc_traits<std::allocator<bool>, bool>\0"
	.byte	0x1
	.byte	0xd
	.byte	0x30
	.byte	0xa
	.long	0x153f0
	.uleb128 0x3
	.byte	0xd
	.byte	0x30
	.byte	0xa
	.long	0x50c2
	.uleb128 0x3
	.byte	0xd
	.byte	0x30
	.byte	0xa
	.long	0x5059
	.uleb128 0x3
	.byte	0xd
	.byte	0x30
	.byte	0xa
	.long	0x5121
	.uleb128 0x3
	.byte	0xd
	.byte	0x30
	.byte	0xa
	.long	0x516d
	.uleb128 0x39
	.long	0x501a
	.uleb128 0x4e
	.secrel32	.LASF161
	.byte	0xd
	.byte	0x61
	.byte	0x1d
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaIbEbE17_S_select_on_copyERKS1_\0"
	.long	0x4eea
	.long	0x151f0
	.uleb128 0x1
	.long	0x1bd2a
	.byte	0
	.uleb128 0x50
	.secrel32	.LASF162
	.byte	0xd
	.byte	0x64
	.byte	0x26
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaIbEbE10_S_on_swapERS1_S3_\0"
	.long	0x15241
	.uleb128 0x1
	.long	0x1bd2f
	.uleb128 0x1
	.long	0x1bd2f
	.byte	0
	.uleb128 0x2e
	.secrel32	.LASF163
	.byte	0x67
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaIbEbE27_S_propagate_on_copy_assignEv\0"
	.long	0x14cc6
	.uleb128 0x2e
	.secrel32	.LASF164
	.byte	0x6a
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaIbEbE27_S_propagate_on_move_assignEv\0"
	.long	0x14cc6
	.uleb128 0x2e
	.secrel32	.LASF165
	.byte	0x6d
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaIbEbE20_S_propagate_on_swapEv\0"
	.long	0x14cc6
	.uleb128 0x2e
	.secrel32	.LASF166
	.byte	0x70
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaIbEbE15_S_always_equalEv\0"
	.long	0x14cc6
	.uleb128 0x2e
	.secrel32	.LASF167
	.byte	0x73
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaIbEbE15_S_nothrow_moveEv\0"
	.long	0x14cc6
	.uleb128 0x26
	.ascii "rebind<long unsigned int>\0"
	.byte	0x1
	.byte	0xd
	.byte	0x77
	.byte	0xe
	.long	0x153e6
	.uleb128 0x1c
	.secrel32	.LASF168
	.byte	0xd
	.byte	0x78
	.byte	0x41
	.long	0x5215
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x19187
	.byte	0
	.uleb128 0x4
	.secrel32	.LASF98
	.long	0x4eea
	.byte	0
	.uleb128 0x3a
	.ascii "new_allocator<long unsigned int>\0"
	.byte	0x1
	.byte	0x16
	.byte	0x37
	.byte	0xb
	.long	0x1559a
	.uleb128 0x24
	.secrel32	.LASF159
	.byte	0x16
	.byte	0x4f
	.byte	0x7
	.ascii "_ZN9__gnu_cxx13new_allocatorImEC4Ev\0"
	.long	0x1544e
	.long	0x15454
	.uleb128 0x2
	.long	0x1bd3e
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF159
	.byte	0x16
	.byte	0x52
	.byte	0x7
	.ascii "_ZN9__gnu_cxx13new_allocatorImEC4ERKS1_\0"
	.long	0x1548c
	.long	0x15497
	.uleb128 0x2
	.long	0x1bd3e
	.uleb128 0x1
	.long	0x1bd48
	.byte	0
	.uleb128 0x29
	.secrel32	.LASF76
	.byte	0x16
	.byte	0x67
	.byte	0x7
	.ascii "_ZN9__gnu_cxx13new_allocatorImE8allocateEyPKv\0"
	.long	0x1bd4d
	.byte	0x1
	.long	0x154da
	.long	0x154ea
	.uleb128 0x2
	.long	0x1bd3e
	.uleb128 0x1
	.long	0x154ea
	.uleb128 0x1
	.long	0x1a551
	.byte	0
	.uleb128 0x36
	.secrel32	.LASF56
	.byte	0x16
	.byte	0x3b
	.byte	0x1f
	.long	0x2f0
	.uleb128 0x24
	.secrel32	.LASF77
	.byte	0x16
	.byte	0x84
	.byte	0x7
	.ascii "_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmy\0"
	.long	0x15536
	.long	0x15546
	.uleb128 0x2
	.long	0x1bd3e
	.uleb128 0x1
	.long	0x1bd4d
	.uleb128 0x1
	.long	0x154ea
	.byte	0
	.uleb128 0x3e
	.secrel32	.LASF160
	.byte	0x16
	.byte	0xc5
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx13new_allocatorImE11_M_max_sizeEv\0"
	.long	0x154ea
	.long	0x1558a
	.long	0x15590
	.uleb128 0x2
	.long	0x1bd57
	.byte	0
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x19187
	.byte	0
	.uleb128 0xa
	.long	0x153f0
	.uleb128 0x26
	.ascii "__alloc_traits<std::allocator<long unsigned int>, long unsigned int>\0"
	.byte	0x1
	.byte	0xd
	.byte	0x30
	.byte	0xa
	.long	0x1583a
	.uleb128 0x3
	.byte	0xd
	.byte	0x30
	.byte	0xa
	.long	0x5415
	.uleb128 0x3
	.byte	0xd
	.byte	0x30
	.byte	0xa
	.long	0x53ac
	.uleb128 0x3
	.byte	0xd
	.byte	0x30
	.byte	0xa
	.long	0x5474
	.uleb128 0x3
	.byte	0xd
	.byte	0x30
	.byte	0xa
	.long	0x54c0
	.uleb128 0x39
	.long	0x5360
	.uleb128 0x4e
	.secrel32	.LASF161
	.byte	0xd
	.byte	0x61
	.byte	0x1d
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaImEmE17_S_select_on_copyERKS1_\0"
	.long	0x5223
	.long	0x15667
	.uleb128 0x1
	.long	0x1bd6b
	.byte	0
	.uleb128 0x50
	.secrel32	.LASF162
	.byte	0xd
	.byte	0x64
	.byte	0x26
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaImEmE10_S_on_swapERS1_S3_\0"
	.long	0x156b8
	.uleb128 0x1
	.long	0x1bd70
	.uleb128 0x1
	.long	0x1bd70
	.byte	0
	.uleb128 0x2e
	.secrel32	.LASF163
	.byte	0x67
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaImEmE27_S_propagate_on_copy_assignEv\0"
	.long	0x14cc6
	.uleb128 0x2e
	.secrel32	.LASF164
	.byte	0x6a
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaImEmE27_S_propagate_on_move_assignEv\0"
	.long	0x14cc6
	.uleb128 0x2e
	.secrel32	.LASF165
	.byte	0x6d
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaImEmE20_S_propagate_on_swapEv\0"
	.long	0x14cc6
	.uleb128 0x2e
	.secrel32	.LASF166
	.byte	0x70
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaImEmE15_S_always_equalEv\0"
	.long	0x14cc6
	.uleb128 0x2e
	.secrel32	.LASF167
	.byte	0x73
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaImEmE15_S_nothrow_moveEv\0"
	.long	0x14cc6
	.uleb128 0x1c
	.secrel32	.LASF78
	.byte	0xd
	.byte	0x39
	.byte	0x35
	.long	0x539f
	.uleb128 0x4
	.secrel32	.LASF98
	.long	0x5223
	.byte	0
	.uleb128 0x3a
	.ascii "new_allocator<DDT::Node>\0"
	.byte	0x1
	.byte	0x16
	.byte	0x37
	.byte	0xb
	.long	0x15a10
	.uleb128 0x24
	.secrel32	.LASF159
	.byte	0x16
	.byte	0x4f
	.byte	0x7
	.ascii "_ZN9__gnu_cxx13new_allocatorIN3DDT4NodeEEC4Ev\0"
	.long	0x1589a
	.long	0x158a0
	.uleb128 0x2
	.long	0x1c0d0
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF159
	.byte	0x16
	.byte	0x52
	.byte	0x7
	.ascii "_ZN9__gnu_cxx13new_allocatorIN3DDT4NodeEEC4ERKS3_\0"
	.long	0x158e2
	.long	0x158ed
	.uleb128 0x2
	.long	0x1c0d0
	.uleb128 0x1
	.long	0x1c0da
	.byte	0
	.uleb128 0x29
	.secrel32	.LASF76
	.byte	0x16
	.byte	0x67
	.byte	0x7
	.ascii "_ZN9__gnu_cxx13new_allocatorIN3DDT4NodeEE8allocateEyPKv\0"
	.long	0x1c4db
	.byte	0x1
	.long	0x1593a
	.long	0x1594a
	.uleb128 0x2
	.long	0x1c0d0
	.uleb128 0x1
	.long	0x1594a
	.uleb128 0x1
	.long	0x1a551
	.byte	0
	.uleb128 0x36
	.secrel32	.LASF56
	.byte	0x16
	.byte	0x3b
	.byte	0x1f
	.long	0x2f0
	.uleb128 0x24
	.secrel32	.LASF77
	.byte	0x16
	.byte	0x84
	.byte	0x7
	.ascii "_ZN9__gnu_cxx13new_allocatorIN3DDT4NodeEE10deallocateEPS2_y\0"
	.long	0x159a2
	.long	0x159b2
	.uleb128 0x2
	.long	0x1c0d0
	.uleb128 0x1
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1594a
	.byte	0
	.uleb128 0x3e
	.secrel32	.LASF160
	.byte	0x16
	.byte	0xc5
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx13new_allocatorIN3DDT4NodeEE11_M_max_sizeEv\0"
	.long	0x1594a
	.long	0x15a00
	.long	0x15a06
	.uleb128 0x2
	.long	0x1c4e5
	.byte	0
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1c0ec
	.byte	0
	.uleb128 0xa
	.long	0x1583a
	.uleb128 0x26
	.ascii "__alloc_traits<std::allocator<DDT::Node>, DDT::Node>\0"
	.byte	0x1
	.byte	0xd
	.byte	0x30
	.byte	0xa
	.long	0x15d4e
	.uleb128 0x3
	.byte	0xd
	.byte	0x30
	.byte	0xa
	.long	0x73f0
	.uleb128 0x3
	.byte	0xd
	.byte	0x30
	.byte	0xa
	.long	0x737d
	.uleb128 0x3
	.byte	0xd
	.byte	0x30
	.byte	0xa
	.long	0x7459
	.uleb128 0x3
	.byte	0xd
	.byte	0x30
	.byte	0xa
	.long	0x74b1
	.uleb128 0x39
	.long	0x7339
	.uleb128 0x4e
	.secrel32	.LASF161
	.byte	0xd
	.byte	0x61
	.byte	0x1d
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaIN3DDT4NodeEES2_E17_S_select_on_copyERKS3_\0"
	.long	0x71c4
	.long	0x15ad9
	.uleb128 0x1
	.long	0x1c4f9
	.byte	0
	.uleb128 0x50
	.secrel32	.LASF162
	.byte	0xd
	.byte	0x64
	.byte	0x26
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaIN3DDT4NodeEES2_E10_S_on_swapERS3_S5_\0"
	.long	0x15b36
	.uleb128 0x1
	.long	0x1c4fe
	.uleb128 0x1
	.long	0x1c4fe
	.byte	0
	.uleb128 0x2e
	.secrel32	.LASF163
	.byte	0x67
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaIN3DDT4NodeEES2_E27_S_propagate_on_copy_assignEv\0"
	.long	0x14cc6
	.uleb128 0x2e
	.secrel32	.LASF164
	.byte	0x6a
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaIN3DDT4NodeEES2_E27_S_propagate_on_move_assignEv\0"
	.long	0x14cc6
	.uleb128 0x2e
	.secrel32	.LASF165
	.byte	0x6d
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaIN3DDT4NodeEES2_E20_S_propagate_on_swapEv\0"
	.long	0x14cc6
	.uleb128 0x2e
	.secrel32	.LASF166
	.byte	0x70
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaIN3DDT4NodeEES2_E15_S_always_equalEv\0"
	.long	0x14cc6
	.uleb128 0x2e
	.secrel32	.LASF167
	.byte	0x73
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaIN3DDT4NodeEES2_E15_S_nothrow_moveEv\0"
	.long	0x14cc6
	.uleb128 0x1c
	.secrel32	.LASF2
	.byte	0xd
	.byte	0x38
	.byte	0x35
	.long	0x756d
	.uleb128 0xa
	.long	0x15cde
	.uleb128 0x1c
	.secrel32	.LASF78
	.byte	0xd
	.byte	0x39
	.byte	0x35
	.long	0x7370
	.uleb128 0x1c
	.secrel32	.LASF45
	.byte	0xd
	.byte	0x3e
	.byte	0x35
	.long	0x1c517
	.uleb128 0x1c
	.secrel32	.LASF53
	.byte	0xd
	.byte	0x3f
	.byte	0x35
	.long	0x1c51c
	.uleb128 0x26
	.ascii "rebind<DDT::Node>\0"
	.byte	0x1
	.byte	0xd
	.byte	0x77
	.byte	0xe
	.long	0x15d44
	.uleb128 0x1c
	.secrel32	.LASF168
	.byte	0xd
	.byte	0x78
	.byte	0x41
	.long	0x757a
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1c0ec
	.byte	0
	.uleb128 0x4
	.secrel32	.LASF98
	.long	0x71c4
	.byte	0
	.uleb128 0x4d
	.ascii "__normal_iterator<DDT::Node*, std::vector<DDT::Node, std::allocator<DDT::Node> > >\0"
	.byte	0x8
	.byte	0xf
	.word	0x3db
	.long	0x16394
	.uleb128 0x5c
	.secrel32	.LASF169
	.byte	0xf
	.word	0x3de
	.byte	0x11
	.long	0x1c4db
	.uleb128 0x12
	.secrel32	.LASF170
	.byte	0xf
	.word	0x3ee
	.byte	0x1a
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEC4Ev\0"
	.byte	0x1
	.long	0x15e11
	.long	0x15e17
	.uleb128 0x2
	.long	0x1c8d9
	.byte	0
	.uleb128 0x43
	.secrel32	.LASF170
	.byte	0xf
	.word	0x3f2
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEC4ERKS3_\0"
	.long	0x15e73
	.long	0x15e7e
	.uleb128 0x2
	.long	0x1c8d9
	.uleb128 0x1
	.long	0x1c8e3
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF45
	.byte	0xf
	.word	0x3e7
	.byte	0x32
	.long	0xc849
	.uleb128 0x7
	.secrel32	.LASF46
	.byte	0xf
	.word	0x401
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEdeEv\0"
	.long	0x15e7e
	.byte	0x1
	.long	0x15eea
	.long	0x15ef0
	.uleb128 0x2
	.long	0x1c8e8
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF78
	.byte	0xf
	.word	0x3e8
	.byte	0x32
	.long	0xc83d
	.uleb128 0x7
	.secrel32	.LASF65
	.byte	0xf
	.word	0x406
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEptEv\0"
	.long	0x15ef0
	.byte	0x1
	.long	0x15f5c
	.long	0x15f62
	.uleb128 0x2
	.long	0x1c8e8
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF47
	.byte	0xf
	.word	0x40b
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEppEv\0"
	.long	0x1c8f2
	.byte	0x1
	.long	0x15fc0
	.long	0x15fc6
	.uleb128 0x2
	.long	0x1c8d9
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF47
	.byte	0xf
	.word	0x413
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEppEi\0"
	.long	0x15d4e
	.byte	0x1
	.long	0x16024
	.long	0x1602f
	.uleb128 0x2
	.long	0x1c8d9
	.uleb128 0x1
	.long	0x191dc
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF48
	.byte	0xf
	.word	0x419
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEmmEv\0"
	.long	0x1c8f2
	.byte	0x1
	.long	0x1608d
	.long	0x16093
	.uleb128 0x2
	.long	0x1c8d9
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF48
	.byte	0xf
	.word	0x421
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEmmEi\0"
	.long	0x15d4e
	.byte	0x1
	.long	0x160f1
	.long	0x160fc
	.uleb128 0x2
	.long	0x1c8d9
	.uleb128 0x1
	.long	0x191dc
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF51
	.byte	0xf
	.word	0x427
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEixEx\0"
	.long	0x15e7e
	.byte	0x1
	.long	0x1615b
	.long	0x16166
	.uleb128 0x2
	.long	0x1c8e8
	.uleb128 0x1
	.long	0x16166
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF37
	.byte	0xf
	.word	0x3e6
	.byte	0x38
	.long	0xc831
	.uleb128 0x7
	.secrel32	.LASF49
	.byte	0xf
	.word	0x42c
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEpLEx\0"
	.long	0x1c8f2
	.byte	0x1
	.long	0x161d1
	.long	0x161dc
	.uleb128 0x2
	.long	0x1c8d9
	.uleb128 0x1
	.long	0x16166
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF66
	.byte	0xf
	.word	0x431
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEplEx\0"
	.long	0x15d4e
	.byte	0x1
	.long	0x1623b
	.long	0x16246
	.uleb128 0x2
	.long	0x1c8e8
	.uleb128 0x1
	.long	0x16166
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF50
	.byte	0xf
	.word	0x436
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEmIEx\0"
	.long	0x1c8f2
	.byte	0x1
	.long	0x162a4
	.long	0x162af
	.uleb128 0x2
	.long	0x1c8d9
	.uleb128 0x1
	.long	0x16166
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF67
	.byte	0xf
	.word	0x43b
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEmiEx\0"
	.long	0x15d4e
	.byte	0x1
	.long	0x1630e
	.long	0x16319
	.uleb128 0x2
	.long	0x1c8e8
	.uleb128 0x1
	.long	0x16166
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF64
	.byte	0xf
	.word	0x440
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEE4baseEv\0"
	.long	0x1c8e3
	.byte	0x1
	.long	0x1637b
	.long	0x16381
	.uleb128 0x2
	.long	0x1c8e8
	.byte	0
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x1c4db
	.uleb128 0x4
	.secrel32	.LASF152
	.long	0x7fc1
	.byte	0
	.uleb128 0xa
	.long	0x15d4e
	.uleb128 0x4d
	.ascii "__normal_iterator<const DDT::Node*, std::vector<DDT::Node, std::allocator<DDT::Node> > >\0"
	.byte	0x8
	.byte	0xf
	.word	0x3db
	.long	0x169f3
	.uleb128 0x5c
	.secrel32	.LASF169
	.byte	0xf
	.word	0x3de
	.byte	0x11
	.long	0x1c50d
	.uleb128 0x12
	.secrel32	.LASF170
	.byte	0xf
	.word	0x3ee
	.byte	0x1a
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS2_SaIS2_EEEC4Ev\0"
	.byte	0x1
	.long	0x16463
	.long	0x16469
	.uleb128 0x2
	.long	0x1ca9d
	.byte	0
	.uleb128 0x43
	.secrel32	.LASF170
	.byte	0xf
	.word	0x3f2
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS2_SaIS2_EEEC4ERKS4_\0"
	.long	0x164c6
	.long	0x164d1
	.uleb128 0x2
	.long	0x1ca9d
	.uleb128 0x1
	.long	0x1caa7
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF45
	.byte	0xf
	.word	0x3e7
	.byte	0x32
	.long	0xf3d8
	.uleb128 0x7
	.secrel32	.LASF46
	.byte	0xf
	.word	0x401
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS2_SaIS2_EEEdeEv\0"
	.long	0x164d1
	.byte	0x1
	.long	0x1653e
	.long	0x16544
	.uleb128 0x2
	.long	0x1caac
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF78
	.byte	0xf
	.word	0x3e8
	.byte	0x32
	.long	0xf3cc
	.uleb128 0x7
	.secrel32	.LASF65
	.byte	0xf
	.word	0x406
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS2_SaIS2_EEEptEv\0"
	.long	0x16544
	.byte	0x1
	.long	0x165b1
	.long	0x165b7
	.uleb128 0x2
	.long	0x1caac
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF47
	.byte	0xf
	.word	0x40b
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS2_SaIS2_EEEppEv\0"
	.long	0x1cab6
	.byte	0x1
	.long	0x16616
	.long	0x1661c
	.uleb128 0x2
	.long	0x1ca9d
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF47
	.byte	0xf
	.word	0x413
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS2_SaIS2_EEEppEi\0"
	.long	0x16399
	.byte	0x1
	.long	0x1667b
	.long	0x16686
	.uleb128 0x2
	.long	0x1ca9d
	.uleb128 0x1
	.long	0x191dc
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF48
	.byte	0xf
	.word	0x419
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS2_SaIS2_EEEmmEv\0"
	.long	0x1cab6
	.byte	0x1
	.long	0x166e5
	.long	0x166eb
	.uleb128 0x2
	.long	0x1ca9d
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF48
	.byte	0xf
	.word	0x421
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS2_SaIS2_EEEmmEi\0"
	.long	0x16399
	.byte	0x1
	.long	0x1674a
	.long	0x16755
	.uleb128 0x2
	.long	0x1ca9d
	.uleb128 0x1
	.long	0x191dc
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF51
	.byte	0xf
	.word	0x427
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS2_SaIS2_EEEixEx\0"
	.long	0x164d1
	.byte	0x1
	.long	0x167b5
	.long	0x167c0
	.uleb128 0x2
	.long	0x1caac
	.uleb128 0x1
	.long	0x167c0
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF37
	.byte	0xf
	.word	0x3e6
	.byte	0x38
	.long	0xf3c0
	.uleb128 0x7
	.secrel32	.LASF49
	.byte	0xf
	.word	0x42c
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS2_SaIS2_EEEpLEx\0"
	.long	0x1cab6
	.byte	0x1
	.long	0x1682c
	.long	0x16837
	.uleb128 0x2
	.long	0x1ca9d
	.uleb128 0x1
	.long	0x167c0
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF66
	.byte	0xf
	.word	0x431
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS2_SaIS2_EEEplEx\0"
	.long	0x16399
	.byte	0x1
	.long	0x16897
	.long	0x168a2
	.uleb128 0x2
	.long	0x1caac
	.uleb128 0x1
	.long	0x167c0
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF50
	.byte	0xf
	.word	0x436
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS2_SaIS2_EEEmIEx\0"
	.long	0x1cab6
	.byte	0x1
	.long	0x16901
	.long	0x1690c
	.uleb128 0x2
	.long	0x1ca9d
	.uleb128 0x1
	.long	0x167c0
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF67
	.byte	0xf
	.word	0x43b
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS2_SaIS2_EEEmiEx\0"
	.long	0x16399
	.byte	0x1
	.long	0x1696c
	.long	0x16977
	.uleb128 0x2
	.long	0x1caac
	.uleb128 0x1
	.long	0x167c0
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF64
	.byte	0xf
	.word	0x440
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS2_SaIS2_EEE4baseEv\0"
	.long	0x1caa7
	.byte	0x1
	.long	0x169da
	.long	0x169e0
	.uleb128 0x2
	.long	0x1caac
	.byte	0
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x1c50d
	.uleb128 0x4
	.secrel32	.LASF152
	.long	0x7fc1
	.byte	0
	.uleb128 0xa
	.long	0x16399
	.uleb128 0x3a
	.ascii "new_allocator<int>\0"
	.byte	0x1
	.byte	0x16
	.byte	0x37
	.byte	0xb
	.long	0x16b94
	.uleb128 0x24
	.secrel32	.LASF159
	.byte	0x16
	.byte	0x4f
	.byte	0x7
	.ascii "_ZN9__gnu_cxx13new_allocatorIiEC4Ev\0"
	.long	0x16a48
	.long	0x16a4e
	.uleb128 0x2
	.long	0x1c5b2
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF159
	.byte	0x16
	.byte	0x52
	.byte	0x7
	.ascii "_ZN9__gnu_cxx13new_allocatorIiEC4ERKS1_\0"
	.long	0x16a86
	.long	0x16a91
	.uleb128 0x2
	.long	0x1c5b2
	.uleb128 0x1
	.long	0x1c5bc
	.byte	0
	.uleb128 0x29
	.secrel32	.LASF76
	.byte	0x16
	.byte	0x67
	.byte	0x7
	.ascii "_ZN9__gnu_cxx13new_allocatorIiE8allocateEyPKv\0"
	.long	0x19287
	.byte	0x1
	.long	0x16ad4
	.long	0x16ae4
	.uleb128 0x2
	.long	0x1c5b2
	.uleb128 0x1
	.long	0x16ae4
	.uleb128 0x1
	.long	0x1a551
	.byte	0
	.uleb128 0x36
	.secrel32	.LASF56
	.byte	0x16
	.byte	0x3b
	.byte	0x1f
	.long	0x2f0
	.uleb128 0x24
	.secrel32	.LASF77
	.byte	0x16
	.byte	0x84
	.byte	0x7
	.ascii "_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPiy\0"
	.long	0x16b30
	.long	0x16b40
	.uleb128 0x2
	.long	0x1c5b2
	.uleb128 0x1
	.long	0x19287
	.uleb128 0x1
	.long	0x16ae4
	.byte	0
	.uleb128 0x3e
	.secrel32	.LASF160
	.byte	0x16
	.byte	0xc5
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx13new_allocatorIiE11_M_max_sizeEv\0"
	.long	0x16ae4
	.long	0x16b84
	.long	0x16b8a
	.uleb128 0x2
	.long	0x1c5c1
	.byte	0
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x191dc
	.byte	0
	.uleb128 0xa
	.long	0x169f8
	.uleb128 0x26
	.ascii "__alloc_traits<std::allocator<int>, int>\0"
	.byte	0x1
	.byte	0xd
	.byte	0x30
	.byte	0xa
	.long	0x16e6c
	.uleb128 0x3
	.byte	0xd
	.byte	0x30
	.byte	0xa
	.long	0xa2f4
	.uleb128 0x3
	.byte	0xd
	.byte	0x30
	.byte	0xa
	.long	0xa28b
	.uleb128 0x3
	.byte	0xd
	.byte	0x30
	.byte	0xa
	.long	0xa353
	.uleb128 0x3
	.byte	0xd
	.byte	0x30
	.byte	0xa
	.long	0xa39f
	.uleb128 0x39
	.long	0xa24d
	.uleb128 0x4e
	.secrel32	.LASF161
	.byte	0xd
	.byte	0x61
	.byte	0x1d
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaIiEiE17_S_select_on_copyERKS1_\0"
	.long	0xa11e
	.long	0x16c45
	.uleb128 0x1
	.long	0x1c5d5
	.byte	0
	.uleb128 0x50
	.secrel32	.LASF162
	.byte	0xd
	.byte	0x64
	.byte	0x26
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaIiEiE10_S_on_swapERS1_S3_\0"
	.long	0x16c96
	.uleb128 0x1
	.long	0x1c5da
	.uleb128 0x1
	.long	0x1c5da
	.byte	0
	.uleb128 0x2e
	.secrel32	.LASF163
	.byte	0x67
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaIiEiE27_S_propagate_on_copy_assignEv\0"
	.long	0x14cc6
	.uleb128 0x2e
	.secrel32	.LASF164
	.byte	0x6a
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaIiEiE27_S_propagate_on_move_assignEv\0"
	.long	0x14cc6
	.uleb128 0x2e
	.secrel32	.LASF165
	.byte	0x6d
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaIiEiE20_S_propagate_on_swapEv\0"
	.long	0x14cc6
	.uleb128 0x2e
	.secrel32	.LASF166
	.byte	0x70
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaIiEiE15_S_always_equalEv\0"
	.long	0x14cc6
	.uleb128 0x2e
	.secrel32	.LASF167
	.byte	0x73
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaIiEiE15_S_nothrow_moveEv\0"
	.long	0x14cc6
	.uleb128 0x1c
	.secrel32	.LASF2
	.byte	0xd
	.byte	0x38
	.byte	0x35
	.long	0xa447
	.uleb128 0xa
	.long	0x16e02
	.uleb128 0x1c
	.secrel32	.LASF78
	.byte	0xd
	.byte	0x39
	.byte	0x35
	.long	0xa27e
	.uleb128 0x1c
	.secrel32	.LASF45
	.byte	0xd
	.byte	0x3e
	.byte	0x35
	.long	0x1c5f3
	.uleb128 0x1c
	.secrel32	.LASF53
	.byte	0xd
	.byte	0x3f
	.byte	0x35
	.long	0x1c5f8
	.uleb128 0x26
	.ascii "rebind<int>\0"
	.byte	0x1
	.byte	0xd
	.byte	0x77
	.byte	0xe
	.long	0x16e62
	.uleb128 0x1c
	.secrel32	.LASF168
	.byte	0xd
	.byte	0x78
	.byte	0x41
	.long	0xa454
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x191dc
	.byte	0
	.uleb128 0x4
	.secrel32	.LASF98
	.long	0xa11e
	.byte	0
	.uleb128 0x4d
	.ascii "__normal_iterator<int*, std::vector<int, std::allocator<int> > >\0"
	.byte	0x8
	.byte	0xf
	.word	0x3db
	.long	0x173dc
	.uleb128 0x5c
	.secrel32	.LASF169
	.byte	0xf
	.word	0x3de
	.byte	0x11
	.long	0x19287
	.uleb128 0x12
	.secrel32	.LASF170
	.byte	0xf
	.word	0x3ee
	.byte	0x1a
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC4Ev\0"
	.byte	0x1
	.long	0x16f0f
	.long	0x16f15
	.uleb128 0x2
	.long	0x1caed
	.byte	0
	.uleb128 0x43
	.secrel32	.LASF170
	.byte	0xf
	.word	0x3f2
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC4ERKS1_\0"
	.long	0x16f63
	.long	0x16f6e
	.uleb128 0x2
	.long	0x1caed
	.uleb128 0x1
	.long	0x1caf7
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF45
	.byte	0xf
	.word	0x3e7
	.byte	0x32
	.long	0xf5ff
	.uleb128 0x7
	.secrel32	.LASF46
	.byte	0xf
	.word	0x401
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv\0"
	.long	0x16f6e
	.byte	0x1
	.long	0x16fcc
	.long	0x16fd2
	.uleb128 0x2
	.long	0x1cafc
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF78
	.byte	0xf
	.word	0x3e8
	.byte	0x32
	.long	0xf5f3
	.uleb128 0x7
	.secrel32	.LASF65
	.byte	0xf
	.word	0x406
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEptEv\0"
	.long	0x16fd2
	.byte	0x1
	.long	0x17030
	.long	0x17036
	.uleb128 0x2
	.long	0x1cafc
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF47
	.byte	0xf
	.word	0x40b
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEppEv\0"
	.long	0x1cb06
	.byte	0x1
	.long	0x17086
	.long	0x1708c
	.uleb128 0x2
	.long	0x1caed
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF47
	.byte	0xf
	.word	0x413
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEppEi\0"
	.long	0x16e6c
	.byte	0x1
	.long	0x170dc
	.long	0x170e7
	.uleb128 0x2
	.long	0x1caed
	.uleb128 0x1
	.long	0x191dc
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF48
	.byte	0xf
	.word	0x419
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEmmEv\0"
	.long	0x1cb06
	.byte	0x1
	.long	0x17137
	.long	0x1713d
	.uleb128 0x2
	.long	0x1caed
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF48
	.byte	0xf
	.word	0x421
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEmmEi\0"
	.long	0x16e6c
	.byte	0x1
	.long	0x1718d
	.long	0x17198
	.uleb128 0x2
	.long	0x1caed
	.uleb128 0x1
	.long	0x191dc
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF51
	.byte	0xf
	.word	0x427
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEixEx\0"
	.long	0x16f6e
	.byte	0x1
	.long	0x171e9
	.long	0x171f4
	.uleb128 0x2
	.long	0x1cafc
	.uleb128 0x1
	.long	0x171f4
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF37
	.byte	0xf
	.word	0x3e6
	.byte	0x38
	.long	0xf5e7
	.uleb128 0x7
	.secrel32	.LASF49
	.byte	0xf
	.word	0x42c
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEpLEx\0"
	.long	0x1cb06
	.byte	0x1
	.long	0x17251
	.long	0x1725c
	.uleb128 0x2
	.long	0x1caed
	.uleb128 0x1
	.long	0x171f4
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF66
	.byte	0xf
	.word	0x431
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEplEx\0"
	.long	0x16e6c
	.byte	0x1
	.long	0x172ad
	.long	0x172b8
	.uleb128 0x2
	.long	0x1cafc
	.uleb128 0x1
	.long	0x171f4
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF50
	.byte	0xf
	.word	0x436
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEmIEx\0"
	.long	0x1cb06
	.byte	0x1
	.long	0x17308
	.long	0x17313
	.uleb128 0x2
	.long	0x1caed
	.uleb128 0x1
	.long	0x171f4
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF67
	.byte	0xf
	.word	0x43b
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEmiEx\0"
	.long	0x16e6c
	.byte	0x1
	.long	0x17364
	.long	0x1736f
	.uleb128 0x2
	.long	0x1cafc
	.uleb128 0x1
	.long	0x171f4
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF64
	.byte	0xf
	.word	0x440
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv\0"
	.long	0x1caf7
	.byte	0x1
	.long	0x173c3
	.long	0x173c9
	.uleb128 0x2
	.long	0x1cafc
	.byte	0
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x19287
	.uleb128 0x4
	.secrel32	.LASF152
	.long	0xac5c
	.byte	0
	.uleb128 0xa
	.long	0x16e6c
	.uleb128 0x4d
	.ascii "__normal_iterator<int const*, std::vector<int, std::allocator<int> > >\0"
	.byte	0x8
	.byte	0xf
	.word	0x3db
	.long	0x17965
	.uleb128 0x5c
	.secrel32	.LASF169
	.byte	0xf
	.word	0x3de
	.byte	0x11
	.long	0x1c5e9
	.uleb128 0x12
	.secrel32	.LASF170
	.byte	0xf
	.word	0x3ee
	.byte	0x1a
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC4Ev\0"
	.byte	0x1
	.long	0x1748b
	.long	0x17491
	.uleb128 0x2
	.long	0x1cabb
	.byte	0
	.uleb128 0x43
	.secrel32	.LASF170
	.byte	0xf
	.word	0x3f2
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC4ERKS2_\0"
	.long	0x174e0
	.long	0x174eb
	.uleb128 0x2
	.long	0x1cabb
	.uleb128 0x1
	.long	0x1cac5
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF45
	.byte	0xf
	.word	0x3e7
	.byte	0x32
	.long	0xf422
	.uleb128 0x7
	.secrel32	.LASF46
	.byte	0xf
	.word	0x401
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEdeEv\0"
	.long	0x174eb
	.byte	0x1
	.long	0x1754a
	.long	0x17550
	.uleb128 0x2
	.long	0x1caca
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF78
	.byte	0xf
	.word	0x3e8
	.byte	0x32
	.long	0xf416
	.uleb128 0x7
	.secrel32	.LASF65
	.byte	0xf
	.word	0x406
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEptEv\0"
	.long	0x17550
	.byte	0x1
	.long	0x175af
	.long	0x175b5
	.uleb128 0x2
	.long	0x1caca
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF47
	.byte	0xf
	.word	0x40b
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEppEv\0"
	.long	0x1cad4
	.byte	0x1
	.long	0x17606
	.long	0x1760c
	.uleb128 0x2
	.long	0x1cabb
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF47
	.byte	0xf
	.word	0x413
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEppEi\0"
	.long	0x173e1
	.byte	0x1
	.long	0x1765d
	.long	0x17668
	.uleb128 0x2
	.long	0x1cabb
	.uleb128 0x1
	.long	0x191dc
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF48
	.byte	0xf
	.word	0x419
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEmmEv\0"
	.long	0x1cad4
	.byte	0x1
	.long	0x176b9
	.long	0x176bf
	.uleb128 0x2
	.long	0x1cabb
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF48
	.byte	0xf
	.word	0x421
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEmmEi\0"
	.long	0x173e1
	.byte	0x1
	.long	0x17710
	.long	0x1771b
	.uleb128 0x2
	.long	0x1cabb
	.uleb128 0x1
	.long	0x191dc
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF51
	.byte	0xf
	.word	0x427
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEixEx\0"
	.long	0x174eb
	.byte	0x1
	.long	0x1776d
	.long	0x17778
	.uleb128 0x2
	.long	0x1caca
	.uleb128 0x1
	.long	0x17778
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF37
	.byte	0xf
	.word	0x3e6
	.byte	0x38
	.long	0xf40a
	.uleb128 0x7
	.secrel32	.LASF49
	.byte	0xf
	.word	0x42c
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEpLEx\0"
	.long	0x1cad4
	.byte	0x1
	.long	0x177d6
	.long	0x177e1
	.uleb128 0x2
	.long	0x1cabb
	.uleb128 0x1
	.long	0x17778
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF66
	.byte	0xf
	.word	0x431
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEplEx\0"
	.long	0x173e1
	.byte	0x1
	.long	0x17833
	.long	0x1783e
	.uleb128 0x2
	.long	0x1caca
	.uleb128 0x1
	.long	0x17778
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF50
	.byte	0xf
	.word	0x436
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEmIEx\0"
	.long	0x1cad4
	.byte	0x1
	.long	0x1788f
	.long	0x1789a
	.uleb128 0x2
	.long	0x1cabb
	.uleb128 0x1
	.long	0x17778
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF67
	.byte	0xf
	.word	0x43b
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEmiEx\0"
	.long	0x173e1
	.byte	0x1
	.long	0x178ec
	.long	0x178f7
	.uleb128 0x2
	.long	0x1caca
	.uleb128 0x1
	.long	0x17778
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF64
	.byte	0xf
	.word	0x440
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv\0"
	.long	0x1cac5
	.byte	0x1
	.long	0x1794c
	.long	0x17952
	.uleb128 0x2
	.long	0x1caca
	.byte	0
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x1c5e9
	.uleb128 0x4
	.secrel32	.LASF152
	.long	0xac5c
	.byte	0
	.uleb128 0xa
	.long	0x173e1
	.uleb128 0x3a
	.ascii "new_allocator<Blorb>\0"
	.byte	0x1
	.byte	0x16
	.byte	0x37
	.byte	0xb
	.long	0x17b23
	.uleb128 0x24
	.secrel32	.LASF159
	.byte	0x16
	.byte	0x4f
	.byte	0x7
	.ascii "_ZN9__gnu_cxx13new_allocatorI5BlorbEC4Ev\0"
	.long	0x179c1
	.long	0x179c7
	.uleb128 0x2
	.long	0x1c935
	.byte	0
	.uleb128 0x24
	.secrel32	.LASF159
	.byte	0x16
	.byte	0x52
	.byte	0x7
	.ascii "_ZN9__gnu_cxx13new_allocatorI5BlorbEC4ERKS2_\0"
	.long	0x17a04
	.long	0x17a0f
	.uleb128 0x2
	.long	0x1c935
	.uleb128 0x1
	.long	0x1c93f
	.byte	0
	.uleb128 0x29
	.secrel32	.LASF76
	.byte	0x16
	.byte	0x67
	.byte	0x7
	.ascii "_ZN9__gnu_cxx13new_allocatorI5BlorbE8allocateEyPKv\0"
	.long	0x1c92b
	.byte	0x1
	.long	0x17a57
	.long	0x17a67
	.uleb128 0x2
	.long	0x1c935
	.uleb128 0x1
	.long	0x17a67
	.uleb128 0x1
	.long	0x1a551
	.byte	0
	.uleb128 0x36
	.secrel32	.LASF56
	.byte	0x16
	.byte	0x3b
	.byte	0x1f
	.long	0x2f0
	.uleb128 0x24
	.secrel32	.LASF77
	.byte	0x16
	.byte	0x84
	.byte	0x7
	.ascii "_ZN9__gnu_cxx13new_allocatorI5BlorbE10deallocateEPS1_y\0"
	.long	0x17aba
	.long	0x17aca
	.uleb128 0x2
	.long	0x1c935
	.uleb128 0x1
	.long	0x1c92b
	.uleb128 0x1
	.long	0x17a67
	.byte	0
	.uleb128 0x3e
	.secrel32	.LASF160
	.byte	0x16
	.byte	0xc5
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx13new_allocatorI5BlorbE11_M_max_sizeEv\0"
	.long	0x17a67
	.long	0x17b13
	.long	0x17b19
	.uleb128 0x2
	.long	0x1c944
	.byte	0
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1beba
	.byte	0
	.uleb128 0xa
	.long	0x1796a
	.uleb128 0x26
	.ascii "__alloc_traits<std::allocator<Blorb>, Blorb>\0"
	.byte	0x1
	.byte	0xd
	.byte	0x30
	.byte	0xa
	.long	0x17e32
	.uleb128 0x3
	.byte	0xd
	.byte	0x30
	.byte	0xa
	.long	0xca56
	.uleb128 0x3
	.byte	0xd
	.byte	0x30
	.byte	0xa
	.long	0xc9e8
	.uleb128 0x3
	.byte	0xd
	.byte	0x30
	.byte	0xa
	.long	0xcaba
	.uleb128 0x3
	.byte	0xd
	.byte	0x30
	.byte	0xa
	.long	0xcb0d
	.uleb128 0x39
	.long	0xc9a8
	.uleb128 0x4e
	.secrel32	.LASF161
	.byte	0xd
	.byte	0x61
	.byte	0x1d
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaI5BlorbES1_E17_S_select_on_copyERKS2_\0"
	.long	0xc856
	.long	0x17bdf
	.uleb128 0x1
	.long	0x1c958
	.byte	0
	.uleb128 0x50
	.secrel32	.LASF162
	.byte	0xd
	.byte	0x64
	.byte	0x26
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaI5BlorbES1_E10_S_on_swapERS2_S4_\0"
	.long	0x17c37
	.uleb128 0x1
	.long	0x1c95d
	.uleb128 0x1
	.long	0x1c95d
	.byte	0
	.uleb128 0x2e
	.secrel32	.LASF163
	.byte	0x67
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaI5BlorbES1_E27_S_propagate_on_copy_assignEv\0"
	.long	0x14cc6
	.uleb128 0x2e
	.secrel32	.LASF164
	.byte	0x6a
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaI5BlorbES1_E27_S_propagate_on_move_assignEv\0"
	.long	0x14cc6
	.uleb128 0x2e
	.secrel32	.LASF165
	.byte	0x6d
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaI5BlorbES1_E20_S_propagate_on_swapEv\0"
	.long	0x14cc6
	.uleb128 0x2e
	.secrel32	.LASF166
	.byte	0x70
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaI5BlorbES1_E15_S_always_equalEv\0"
	.long	0x14cc6
	.uleb128 0x2e
	.secrel32	.LASF167
	.byte	0x73
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaI5BlorbES1_E15_S_nothrow_moveEv\0"
	.long	0x14cc6
	.uleb128 0x1c
	.secrel32	.LASF2
	.byte	0xd
	.byte	0x38
	.byte	0x35
	.long	0xcbbf
	.uleb128 0xa
	.long	0x17dc6
	.uleb128 0x1c
	.secrel32	.LASF78
	.byte	0xd
	.byte	0x39
	.byte	0x35
	.long	0xc9db
	.uleb128 0x1c
	.secrel32	.LASF45
	.byte	0xd
	.byte	0x3e
	.byte	0x35
	.long	0x1c976
	.uleb128 0x1c
	.secrel32	.LASF53
	.byte	0xd
	.byte	0x3f
	.byte	0x35
	.long	0x1c97b
	.uleb128 0x26
	.ascii "rebind<Blorb>\0"
	.byte	0x1
	.byte	0xd
	.byte	0x77
	.byte	0xe
	.long	0x17e28
	.uleb128 0x1c
	.secrel32	.LASF168
	.byte	0xd
	.byte	0x78
	.byte	0x41
	.long	0xcbcc
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1beba
	.byte	0
	.uleb128 0x4
	.secrel32	.LASF98
	.long	0xc856
	.byte	0
	.uleb128 0x4d
	.ascii "__normal_iterator<Blorb*, std::vector<Blorb, std::allocator<Blorb> > >\0"
	.byte	0x8
	.byte	0xf
	.word	0x3db
	.long	0x18426
	.uleb128 0x5c
	.secrel32	.LASF169
	.byte	0xf
	.word	0x3de
	.byte	0x11
	.long	0x1c92b
	.uleb128 0x12
	.secrel32	.LASF170
	.byte	0xf
	.word	0x3ee
	.byte	0x1a
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEEC4Ev\0"
	.byte	0x1
	.long	0x17ee4
	.long	0x17eea
	.uleb128 0x2
	.long	0x1ca5c
	.byte	0
	.uleb128 0x43
	.secrel32	.LASF170
	.byte	0xf
	.word	0x3f2
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEEC4ERKS2_\0"
	.long	0x17f41
	.long	0x17f4c
	.uleb128 0x2
	.long	0x1ca5c
	.uleb128 0x1
	.long	0x1ca66
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF45
	.byte	0xf
	.word	0x3e7
	.byte	0x32
	.long	0xf2fe
	.uleb128 0x7
	.secrel32	.LASF46
	.byte	0xf
	.word	0x401
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEEdeEv\0"
	.long	0x17f4c
	.byte	0x1
	.long	0x17fb3
	.long	0x17fb9
	.uleb128 0x2
	.long	0x1ca6b
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF78
	.byte	0xf
	.word	0x3e8
	.byte	0x32
	.long	0xf2f2
	.uleb128 0x7
	.secrel32	.LASF65
	.byte	0xf
	.word	0x406
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEEptEv\0"
	.long	0x17fb9
	.byte	0x1
	.long	0x18020
	.long	0x18026
	.uleb128 0x2
	.long	0x1ca6b
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF47
	.byte	0xf
	.word	0x40b
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEEppEv\0"
	.long	0x1ca75
	.byte	0x1
	.long	0x1807f
	.long	0x18085
	.uleb128 0x2
	.long	0x1ca5c
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF47
	.byte	0xf
	.word	0x413
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEEppEi\0"
	.long	0x17e32
	.byte	0x1
	.long	0x180de
	.long	0x180e9
	.uleb128 0x2
	.long	0x1ca5c
	.uleb128 0x1
	.long	0x191dc
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF48
	.byte	0xf
	.word	0x419
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEEmmEv\0"
	.long	0x1ca75
	.byte	0x1
	.long	0x18142
	.long	0x18148
	.uleb128 0x2
	.long	0x1ca5c
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF48
	.byte	0xf
	.word	0x421
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEEmmEi\0"
	.long	0x17e32
	.byte	0x1
	.long	0x181a1
	.long	0x181ac
	.uleb128 0x2
	.long	0x1ca5c
	.uleb128 0x1
	.long	0x191dc
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF51
	.byte	0xf
	.word	0x427
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEEixEx\0"
	.long	0x17f4c
	.byte	0x1
	.long	0x18206
	.long	0x18211
	.uleb128 0x2
	.long	0x1ca6b
	.uleb128 0x1
	.long	0x18211
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF37
	.byte	0xf
	.word	0x3e6
	.byte	0x38
	.long	0xf2e6
	.uleb128 0x7
	.secrel32	.LASF49
	.byte	0xf
	.word	0x42c
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEEpLEx\0"
	.long	0x1ca75
	.byte	0x1
	.long	0x18277
	.long	0x18282
	.uleb128 0x2
	.long	0x1ca5c
	.uleb128 0x1
	.long	0x18211
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF66
	.byte	0xf
	.word	0x431
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEEplEx\0"
	.long	0x17e32
	.byte	0x1
	.long	0x182dc
	.long	0x182e7
	.uleb128 0x2
	.long	0x1ca6b
	.uleb128 0x1
	.long	0x18211
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF50
	.byte	0xf
	.word	0x436
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEEmIEx\0"
	.long	0x1ca75
	.byte	0x1
	.long	0x18340
	.long	0x1834b
	.uleb128 0x2
	.long	0x1ca5c
	.uleb128 0x1
	.long	0x18211
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF67
	.byte	0xf
	.word	0x43b
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEEmiEx\0"
	.long	0x17e32
	.byte	0x1
	.long	0x183a5
	.long	0x183b0
	.uleb128 0x2
	.long	0x1ca6b
	.uleb128 0x1
	.long	0x18211
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF64
	.byte	0xf
	.word	0x440
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEE4baseEv\0"
	.long	0x1ca66
	.byte	0x1
	.long	0x1840d
	.long	0x18413
	.uleb128 0x2
	.long	0x1ca6b
	.byte	0
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x1c92b
	.uleb128 0x4
	.secrel32	.LASF152
	.long	0xd578
	.byte	0
	.uleb128 0xa
	.long	0x17e32
	.uleb128 0x4d
	.ascii "__normal_iterator<const Blorb*, std::vector<Blorb, std::allocator<Blorb> > >\0"
	.byte	0x8
	.byte	0xf
	.word	0x3db
	.long	0x18b02
	.uleb128 0x5c
	.secrel32	.LASF169
	.byte	0xf
	.word	0x3de
	.byte	0x11
	.long	0x1c96c
	.uleb128 0x12
	.secrel32	.LASF170
	.byte	0xf
	.word	0x3ee
	.byte	0x1a
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPK5BlorbSt6vectorIS1_SaIS1_EEEC4Ev\0"
	.byte	0x1
	.long	0x184e4
	.long	0x184ea
	.uleb128 0x2
	.long	0x1ca7f
	.byte	0
	.uleb128 0x43
	.secrel32	.LASF170
	.byte	0xf
	.word	0x3f2
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPK5BlorbSt6vectorIS1_SaIS1_EEEC4ERKS3_\0"
	.long	0x18542
	.long	0x1854d
	.uleb128 0x2
	.long	0x1ca7f
	.uleb128 0x1
	.long	0x1ca89
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF45
	.byte	0xf
	.word	0x3e7
	.byte	0x32
	.long	0xf34a
	.uleb128 0x7
	.secrel32	.LASF46
	.byte	0xf
	.word	0x401
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPK5BlorbSt6vectorIS1_SaIS1_EEEdeEv\0"
	.long	0x1854d
	.byte	0x1
	.long	0x185b5
	.long	0x185bb
	.uleb128 0x2
	.long	0x1ca8e
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF78
	.byte	0xf
	.word	0x3e8
	.byte	0x32
	.long	0xf33e
	.uleb128 0x7
	.secrel32	.LASF65
	.byte	0xf
	.word	0x406
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPK5BlorbSt6vectorIS1_SaIS1_EEEptEv\0"
	.long	0x185bb
	.byte	0x1
	.long	0x18623
	.long	0x18629
	.uleb128 0x2
	.long	0x1ca8e
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF47
	.byte	0xf
	.word	0x40b
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPK5BlorbSt6vectorIS1_SaIS1_EEEppEv\0"
	.long	0x1ca98
	.byte	0x1
	.long	0x18683
	.long	0x18689
	.uleb128 0x2
	.long	0x1ca7f
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF47
	.byte	0xf
	.word	0x413
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPK5BlorbSt6vectorIS1_SaIS1_EEEppEi\0"
	.long	0x1842b
	.byte	0x1
	.long	0x186e3
	.long	0x186ee
	.uleb128 0x2
	.long	0x1ca7f
	.uleb128 0x1
	.long	0x191dc
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF48
	.byte	0xf
	.word	0x419
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPK5BlorbSt6vectorIS1_SaIS1_EEEmmEv\0"
	.long	0x1ca98
	.byte	0x1
	.long	0x18748
	.long	0x1874e
	.uleb128 0x2
	.long	0x1ca7f
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF48
	.byte	0xf
	.word	0x421
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPK5BlorbSt6vectorIS1_SaIS1_EEEmmEi\0"
	.long	0x1842b
	.byte	0x1
	.long	0x187a8
	.long	0x187b3
	.uleb128 0x2
	.long	0x1ca7f
	.uleb128 0x1
	.long	0x191dc
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF51
	.byte	0xf
	.word	0x427
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPK5BlorbSt6vectorIS1_SaIS1_EEEixEx\0"
	.long	0x1854d
	.byte	0x1
	.long	0x1880e
	.long	0x18819
	.uleb128 0x2
	.long	0x1ca8e
	.uleb128 0x1
	.long	0x18819
	.byte	0
	.uleb128 0x1b
	.secrel32	.LASF37
	.byte	0xf
	.word	0x3e6
	.byte	0x38
	.long	0xf332
	.uleb128 0x7
	.secrel32	.LASF49
	.byte	0xf
	.word	0x42c
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPK5BlorbSt6vectorIS1_SaIS1_EEEpLEx\0"
	.long	0x1ca98
	.byte	0x1
	.long	0x18880
	.long	0x1888b
	.uleb128 0x2
	.long	0x1ca7f
	.uleb128 0x1
	.long	0x18819
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF66
	.byte	0xf
	.word	0x431
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPK5BlorbSt6vectorIS1_SaIS1_EEEplEx\0"
	.long	0x1842b
	.byte	0x1
	.long	0x188e6
	.long	0x188f1
	.uleb128 0x2
	.long	0x1ca8e
	.uleb128 0x1
	.long	0x18819
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF50
	.byte	0xf
	.word	0x436
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPK5BlorbSt6vectorIS1_SaIS1_EEEmIEx\0"
	.long	0x1ca98
	.byte	0x1
	.long	0x1894b
	.long	0x18956
	.uleb128 0x2
	.long	0x1ca7f
	.uleb128 0x1
	.long	0x18819
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF67
	.byte	0xf
	.word	0x43b
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPK5BlorbSt6vectorIS1_SaIS1_EEEmiEx\0"
	.long	0x1842b
	.byte	0x1
	.long	0x189b1
	.long	0x189bc
	.uleb128 0x2
	.long	0x1ca8e
	.uleb128 0x1
	.long	0x18819
	.byte	0
	.uleb128 0x7
	.secrel32	.LASF64
	.byte	0xf
	.word	0x440
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPK5BlorbSt6vectorIS1_SaIS1_EEE4baseEv\0"
	.long	0x1ca89
	.byte	0x1
	.long	0x18a1a
	.long	0x18a20
	.uleb128 0x2
	.long	0x1ca8e
	.byte	0
	.uleb128 0x55
	.ascii "__normal_iterator<Blorb*>\0"
	.byte	0xf
	.word	0x3f8
	.byte	0x9
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPK5BlorbSt6vectorIS1_SaIS1_EEEC4IPS1_EERKNS0_IT_NS_11__enable_ifIXsrSt10__are_sameISA_S9_E7__valueES6_E6__typeEEE\0"
	.byte	0x1
	.long	0x18ae4
	.long	0x18aef
	.uleb128 0x4
	.secrel32	.LASF154
	.long	0x1c92b
	.uleb128 0x2
	.long	0x1ca7f
	.uleb128 0x1
	.long	0x20418
	.byte	0
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x1c96c
	.uleb128 0x4
	.secrel32	.LASF152
	.long	0xd578
	.byte	0
	.uleb128 0xa
	.long	0x1842b
	.uleb128 0x8
	.ascii "operator==<int*, int*, std::vector<int, std::allocator<int> > >\0"
	.byte	0xf
	.word	0x451
	.byte	0x5
	.ascii "_ZN9__gnu_cxxeqIPiS1_St6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T1_EERKNS5_IT0_S7_EE\0"
	.long	0x14cc6
	.long	0x18bd3
	.uleb128 0x4
	.secrel32	.LASF171
	.long	0x19287
	.uleb128 0x4
	.secrel32	.LASF172
	.long	0x19287
	.uleb128 0x4
	.secrel32	.LASF152
	.long	0xac5c
	.uleb128 0x1
	.long	0x1d7ff
	.uleb128 0x1
	.long	0x1d7ff
	.byte	0
	.uleb128 0x8
	.ascii "operator==<const DDT::Node*, const DDT::Node*, std::vector<DDT::Node> >\0"
	.byte	0xf
	.word	0x451
	.byte	0x5
	.ascii "_ZN9__gnu_cxxeqIPKN3DDT4NodeES4_St6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T1_EERKNS8_IT0_SA_EE\0"
	.long	0x14cc6
	.long	0x18cb6
	.uleb128 0x4
	.secrel32	.LASF171
	.long	0x1c50d
	.uleb128 0x4
	.secrel32	.LASF172
	.long	0x1c50d
	.uleb128 0x4
	.secrel32	.LASF152
	.long	0x7fc1
	.uleb128 0x1
	.long	0x1e8aa
	.uleb128 0x1
	.long	0x1e8aa
	.byte	0
	.uleb128 0x8
	.ascii "operator-<Blorb*, std::vector<Blorb> >\0"
	.byte	0xf
	.word	0x4d2
	.byte	0x5
	.ascii "_ZN9__gnu_cxxmiIP5BlorbSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_\0"
	.long	0x18211
	.long	0x18d6d
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x1c92b
	.uleb128 0x4
	.secrel32	.LASF152
	.long	0xd578
	.uleb128 0x1
	.long	0x20418
	.uleb128 0x1
	.long	0x20418
	.byte	0
	.uleb128 0x8
	.ascii "operator==<DDT::Node*, DDT::Node*, std::vector<DDT::Node> >\0"
	.byte	0xf
	.word	0x451
	.byte	0x5
	.ascii "_ZN9__gnu_cxxeqIPN3DDT4NodeES3_St6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T1_EERKNS7_IT0_S9_EE\0"
	.long	0x14cc6
	.long	0x18e43
	.uleb128 0x4
	.secrel32	.LASF171
	.long	0x1c4db
	.uleb128 0x4
	.secrel32	.LASF172
	.long	0x1c4db
	.uleb128 0x4
	.secrel32	.LASF152
	.long	0x7fc1
	.uleb128 0x1
	.long	0x20693
	.uleb128 0x1
	.long	0x20693
	.byte	0
	.uleb128 0x8
	.ascii "operator-<DDT::Node*, std::vector<DDT::Node> >\0"
	.byte	0xf
	.word	0x4d2
	.byte	0x5
	.ascii "_ZN9__gnu_cxxmiIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_\0"
	.long	0x16166
	.long	0x18f07
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x1c4db
	.uleb128 0x4
	.secrel32	.LASF152
	.long	0x7fc1
	.uleb128 0x1
	.long	0x20693
	.uleb128 0x1
	.long	0x20693
	.byte	0
	.uleb128 0x8
	.ascii "operator==<Blorb*, Blorb*, std::vector<Blorb> >\0"
	.byte	0xf
	.word	0x451
	.byte	0x5
	.ascii "_ZN9__gnu_cxxeqIP5BlorbS2_St6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T1_EERKNS6_IT0_S8_EE\0"
	.long	0x14cc6
	.long	0x18fcc
	.uleb128 0x4
	.secrel32	.LASF171
	.long	0x1c92b
	.uleb128 0x4
	.secrel32	.LASF172
	.long	0x1c92b
	.uleb128 0x4
	.secrel32	.LASF152
	.long	0xd578
	.uleb128 0x1
	.long	0x20418
	.uleb128 0x1
	.long	0x20418
	.byte	0
	.uleb128 0x8
	.ascii "operator==<int const*, int const*, std::vector<int, std::allocator<int> > >\0"
	.byte	0xf
	.word	0x451
	.byte	0x5
	.ascii "_ZN9__gnu_cxxeqIPKiS2_St6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T1_EERKNS6_IT0_S8_EE\0"
	.long	0x14cc6
	.long	0x190a5
	.uleb128 0x4
	.secrel32	.LASF171
	.long	0x1c5e9
	.uleb128 0x4
	.secrel32	.LASF172
	.long	0x1c5e9
	.uleb128 0x4
	.secrel32	.LASF152
	.long	0xac5c
	.uleb128 0x1
	.long	0x21941
	.uleb128 0x1
	.long	0x21941
	.byte	0
	.uleb128 0x8b
	.ascii "operator-<const Blorb*, std::vector<Blorb> >\0"
	.byte	0xf
	.word	0x4d2
	.ascii "_ZN9__gnu_cxxmiIPK5BlorbSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_\0"
	.long	0x18819
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x1c96c
	.uleb128 0x4
	.secrel32	.LASF152
	.long	0xd578
	.uleb128 0x1
	.long	0x22a14
	.uleb128 0x1
	.long	0x22a14
	.byte	0
	.byte	0
	.uleb128 0x33
	.byte	0x1
	.byte	0x8
	.ascii "unsigned char\0"
	.uleb128 0x33
	.byte	0x2
	.byte	0x7
	.ascii "short unsigned int\0"
	.uleb128 0x33
	.byte	0x4
	.byte	0x7
	.ascii "long unsigned int\0"
	.uleb128 0xa
	.long	0x19187
	.uleb128 0x33
	.byte	0x8
	.byte	0x7
	.ascii "long long unsigned int\0"
	.uleb128 0xa
	.long	0x191a1
	.uleb128 0x33
	.byte	0x1
	.byte	0x6
	.ascii "signed char\0"
	.uleb128 0x33
	.byte	0x2
	.byte	0x5
	.ascii "short int\0"
	.uleb128 0x33
	.byte	0x4
	.byte	0x5
	.ascii "int\0"
	.uleb128 0xa
	.long	0x191dc
	.uleb128 0x33
	.byte	0x4
	.byte	0x5
	.ascii "long int\0"
	.uleb128 0x33
	.byte	0x8
	.byte	0x5
	.ascii "long long int\0"
	.uleb128 0x33
	.byte	0x10
	.byte	0x4
	.ascii "long double\0"
	.uleb128 0x33
	.byte	0x8
	.byte	0x4
	.ascii "double\0"
	.uleb128 0x33
	.byte	0x4
	.byte	0x4
	.ascii "float\0"
	.uleb128 0xa
	.long	0x1921e
	.uleb128 0x22
	.ascii "size_t\0"
	.byte	0x2c
	.byte	0x28
	.byte	0x2c
	.long	0x191a1
	.uleb128 0x22
	.ascii "intptr_t\0"
	.byte	0x2c
	.byte	0x43
	.byte	0x23
	.long	0x191f4
	.uleb128 0x22
	.ascii "uintptr_t\0"
	.byte	0x2c
	.byte	0x50
	.byte	0x2c
	.long	0x191a1
	.uleb128 0x22
	.ascii "wint_t\0"
	.byte	0x2c
	.byte	0x6f
	.byte	0x18
	.long	0x19171
	.uleb128 0xe
	.long	0xa3
	.uleb128 0xe
	.long	0x19277
	.uleb128 0x33
	.byte	0x2
	.byte	0x7
	.ascii "wchar_t\0"
	.uleb128 0xa
	.long	0x19277
	.uleb128 0xe
	.long	0x191dc
	.uleb128 0xa
	.long	0x19287
	.uleb128 0x26
	.ascii "lconv\0"
	.byte	0x98
	.byte	0x2d
	.byte	0x2d
	.byte	0xa
	.long	0x1951f
	.uleb128 0x19
	.ascii "decimal_point\0"
	.byte	0x2d
	.byte	0x2e
	.byte	0xb
	.long	0x1926d
	.byte	0
	.uleb128 0x19
	.ascii "thousands_sep\0"
	.byte	0x2d
	.byte	0x2f
	.byte	0xb
	.long	0x1926d
	.byte	0x8
	.uleb128 0x19
	.ascii "grouping\0"
	.byte	0x2d
	.byte	0x30
	.byte	0xb
	.long	0x1926d
	.byte	0x10
	.uleb128 0x19
	.ascii "int_curr_symbol\0"
	.byte	0x2d
	.byte	0x31
	.byte	0xb
	.long	0x1926d
	.byte	0x18
	.uleb128 0x19
	.ascii "currency_symbol\0"
	.byte	0x2d
	.byte	0x32
	.byte	0xb
	.long	0x1926d
	.byte	0x20
	.uleb128 0x19
	.ascii "mon_decimal_point\0"
	.byte	0x2d
	.byte	0x33
	.byte	0xb
	.long	0x1926d
	.byte	0x28
	.uleb128 0x19
	.ascii "mon_thousands_sep\0"
	.byte	0x2d
	.byte	0x34
	.byte	0xb
	.long	0x1926d
	.byte	0x30
	.uleb128 0x19
	.ascii "mon_grouping\0"
	.byte	0x2d
	.byte	0x35
	.byte	0xb
	.long	0x1926d
	.byte	0x38
	.uleb128 0x19
	.ascii "positive_sign\0"
	.byte	0x2d
	.byte	0x36
	.byte	0xb
	.long	0x1926d
	.byte	0x40
	.uleb128 0x19
	.ascii "negative_sign\0"
	.byte	0x2d
	.byte	0x37
	.byte	0xb
	.long	0x1926d
	.byte	0x48
	.uleb128 0x19
	.ascii "int_frac_digits\0"
	.byte	0x2d
	.byte	0x38
	.byte	0xa
	.long	0xa3
	.byte	0x50
	.uleb128 0x19
	.ascii "frac_digits\0"
	.byte	0x2d
	.byte	0x39
	.byte	0xa
	.long	0xa3
	.byte	0x51
	.uleb128 0x19
	.ascii "p_cs_precedes\0"
	.byte	0x2d
	.byte	0x3a
	.byte	0xa
	.long	0xa3
	.byte	0x52
	.uleb128 0x19
	.ascii "p_sep_by_space\0"
	.byte	0x2d
	.byte	0x3b
	.byte	0xa
	.long	0xa3
	.byte	0x53
	.uleb128 0x19
	.ascii "n_cs_precedes\0"
	.byte	0x2d
	.byte	0x3c
	.byte	0xa
	.long	0xa3
	.byte	0x54
	.uleb128 0x19
	.ascii "n_sep_by_space\0"
	.byte	0x2d
	.byte	0x3d
	.byte	0xa
	.long	0xa3
	.byte	0x55
	.uleb128 0x19
	.ascii "p_sign_posn\0"
	.byte	0x2d
	.byte	0x3e
	.byte	0xa
	.long	0xa3
	.byte	0x56
	.uleb128 0x19
	.ascii "n_sign_posn\0"
	.byte	0x2d
	.byte	0x3f
	.byte	0xa
	.long	0xa3
	.byte	0x57
	.uleb128 0x19
	.ascii "_W_decimal_point\0"
	.byte	0x2d
	.byte	0x41
	.byte	0xe
	.long	0x19272
	.byte	0x58
	.uleb128 0x19
	.ascii "_W_thousands_sep\0"
	.byte	0x2d
	.byte	0x42
	.byte	0xe
	.long	0x19272
	.byte	0x60
	.uleb128 0x19
	.ascii "_W_int_curr_symbol\0"
	.byte	0x2d
	.byte	0x43
	.byte	0xe
	.long	0x19272
	.byte	0x68
	.uleb128 0x19
	.ascii "_W_currency_symbol\0"
	.byte	0x2d
	.byte	0x44
	.byte	0xe
	.long	0x19272
	.byte	0x70
	.uleb128 0x19
	.ascii "_W_mon_decimal_point\0"
	.byte	0x2d
	.byte	0x45
	.byte	0xe
	.long	0x19272
	.byte	0x78
	.uleb128 0x19
	.ascii "_W_mon_thousands_sep\0"
	.byte	0x2d
	.byte	0x46
	.byte	0xe
	.long	0x19272
	.byte	0x80
	.uleb128 0x19
	.ascii "_W_positive_sign\0"
	.byte	0x2d
	.byte	0x47
	.byte	0xe
	.long	0x19272
	.byte	0x88
	.uleb128 0x19
	.ascii "_W_negative_sign\0"
	.byte	0x2d
	.byte	0x48
	.byte	0xe
	.long	0x19272
	.byte	0x90
	.byte	0
	.uleb128 0xe
	.long	0x19291
	.uleb128 0xe
	.long	0xab
	.uleb128 0x46
	.ascii "float_t\0"
	.byte	0x2e
	.word	0x16f
	.byte	0xf
	.long	0x1921e
	.uleb128 0x46
	.ascii "double_t\0"
	.byte	0x2e
	.word	0x170
	.byte	0x10
	.long	0x19214
	.uleb128 0x26
	.ascii "_div_t\0"
	.byte	0x8
	.byte	0x2f
	.byte	0x3c
	.byte	0x12
	.long	0x19578
	.uleb128 0x19
	.ascii "quot\0"
	.byte	0x2f
	.byte	0x3d
	.byte	0x9
	.long	0x191dc
	.byte	0
	.uleb128 0x19
	.ascii "rem\0"
	.byte	0x2f
	.byte	0x3e
	.byte	0x9
	.long	0x191dc
	.byte	0x4
	.byte	0
	.uleb128 0x22
	.ascii "div_t\0"
	.byte	0x2f
	.byte	0x3f
	.byte	0x5
	.long	0x1954c
	.uleb128 0x26
	.ascii "_ldiv_t\0"
	.byte	0x8
	.byte	0x2f
	.byte	0x41
	.byte	0x12
	.long	0x195b3
	.uleb128 0x19
	.ascii "quot\0"
	.byte	0x2f
	.byte	0x42
	.byte	0xa
	.long	0x191e8
	.byte	0
	.uleb128 0x19
	.ascii "rem\0"
	.byte	0x2f
	.byte	0x43
	.byte	0xa
	.long	0x191e8
	.byte	0x4
	.byte	0
	.uleb128 0x22
	.ascii "ldiv_t\0"
	.byte	0x2f
	.byte	0x44
	.byte	0x5
	.long	0x19586
	.uleb128 0xe
	.long	0x195c7
	.uleb128 0xad
	.uleb128 0xe
	.long	0x19282
	.uleb128 0xe
	.long	0x1926d
	.uleb128 0xe
	.long	0x19272
	.uleb128 0xae
	.byte	0x10
	.byte	0x2f
	.word	0x2d4
	.byte	0x12
	.ascii "7lldiv_t\0"
	.long	0x1960a
	.uleb128 0x3c
	.ascii "quot\0"
	.byte	0x2f
	.word	0x2d4
	.byte	0x30
	.long	0x191f4
	.byte	0
	.uleb128 0x3c
	.ascii "rem\0"
	.byte	0x2f
	.word	0x2d4
	.byte	0x36
	.long	0x191f4
	.byte	0x8
	.byte	0
	.uleb128 0x46
	.ascii "lldiv_t\0"
	.byte	0x2f
	.word	0x2d4
	.byte	0x3d
	.long	0x195d8
	.uleb128 0xe
	.long	0x1d9
	.uleb128 0xe
	.long	0x2d8
	.uleb128 0x33
	.byte	0x1
	.byte	0x7
	.ascii "char8_t\0"
	.uleb128 0x33
	.byte	0x2
	.byte	0x10
	.ascii "char16_t\0"
	.uleb128 0x33
	.byte	0x4
	.byte	0x10
	.ascii "char32_t\0"
	.uleb128 0x33
	.byte	0x10
	.byte	0x5
	.ascii "__int128\0"
	.uleb128 0x64
	.ascii "__gnu_debug\0"
	.byte	0x30
	.byte	0x27
	.byte	0xb
	.long	0x19672
	.uleb128 0xaf
	.byte	0x1f
	.byte	0x3a
	.byte	0x18
	.long	0x4a2
	.byte	0
	.uleb128 0x33
	.byte	0x10
	.byte	0x7
	.ascii "__int128 unsigned\0"
	.uleb128 0x3
	.byte	0x31
	.byte	0x26
	.byte	0xc
	.long	0xc60
	.uleb128 0x3
	.byte	0x31
	.byte	0x26
	.byte	0xc
	.long	0xc80
	.uleb128 0x3
	.byte	0x31
	.byte	0x26
	.byte	0xc
	.long	0xca0
	.uleb128 0x3
	.byte	0x31
	.byte	0x26
	.byte	0xc
	.long	0xcc0
	.uleb128 0x3
	.byte	0x31
	.byte	0x26
	.byte	0xc
	.long	0xce0
	.uleb128 0x3
	.byte	0x31
	.byte	0x27
	.byte	0xc
	.long	0xd00
	.uleb128 0x3
	.byte	0x31
	.byte	0x27
	.byte	0xc
	.long	0xd22
	.uleb128 0x3
	.byte	0x31
	.byte	0x28
	.byte	0xc
	.long	0xd44
	.uleb128 0x3
	.byte	0x31
	.byte	0x28
	.byte	0xc
	.long	0xd66
	.uleb128 0x3
	.byte	0x31
	.byte	0x29
	.byte	0xc
	.long	0xd88
	.uleb128 0x3
	.byte	0x31
	.byte	0x29
	.byte	0xc
	.long	0xdaa
	.uleb128 0x3
	.byte	0x31
	.byte	0x2a
	.byte	0xc
	.long	0xdcc
	.uleb128 0x3
	.byte	0x31
	.byte	0x2a
	.byte	0xc
	.long	0xdf6
	.uleb128 0x3
	.byte	0x31
	.byte	0x2b
	.byte	0xc
	.long	0xe20
	.uleb128 0x3
	.byte	0x31
	.byte	0x2b
	.byte	0xc
	.long	0xe40
	.uleb128 0x3
	.byte	0x31
	.byte	0x2c
	.byte	0xc
	.long	0xe60
	.uleb128 0x3
	.byte	0x31
	.byte	0x2c
	.byte	0xc
	.long	0xe81
	.uleb128 0x3
	.byte	0x31
	.byte	0x2d
	.byte	0xc
	.long	0xea2
	.uleb128 0x3
	.byte	0x31
	.byte	0x2d
	.byte	0xc
	.long	0xec3
	.uleb128 0x3
	.byte	0x31
	.byte	0x2e
	.byte	0xc
	.long	0xee4
	.uleb128 0x3
	.byte	0x31
	.byte	0x2e
	.byte	0xc
	.long	0xf06
	.uleb128 0x3
	.byte	0x31
	.byte	0x2f
	.byte	0xc
	.long	0xf28
	.uleb128 0x3
	.byte	0x31
	.byte	0x2f
	.byte	0xc
	.long	0xf4b
	.uleb128 0x3
	.byte	0x31
	.byte	0x30
	.byte	0xc
	.long	0xf6e
	.uleb128 0x3
	.byte	0x31
	.byte	0x30
	.byte	0xc
	.long	0xf91
	.uleb128 0x3
	.byte	0x31
	.byte	0x31
	.byte	0xc
	.long	0xfb4
	.uleb128 0x3
	.byte	0x31
	.byte	0x31
	.byte	0xc
	.long	0xfd4
	.uleb128 0x3
	.byte	0x31
	.byte	0x32
	.byte	0xc
	.long	0xff4
	.uleb128 0x3
	.byte	0x31
	.byte	0x32
	.byte	0xc
	.long	0x1020
	.uleb128 0x3
	.byte	0x31
	.byte	0x33
	.byte	0xc
	.long	0x104c
	.uleb128 0x3
	.byte	0x31
	.byte	0x33
	.byte	0xc
	.long	0x1077
	.uleb128 0x3
	.byte	0x31
	.byte	0x34
	.byte	0xc
	.long	0x10a2
	.uleb128 0x3
	.byte	0x31
	.byte	0x34
	.byte	0xc
	.long	0x10c3
	.uleb128 0x3
	.byte	0x31
	.byte	0x35
	.byte	0xc
	.long	0x10e4
	.uleb128 0x3
	.byte	0x31
	.byte	0x35
	.byte	0xc
	.long	0x1109
	.uleb128 0xe
	.long	0x19205
	.uleb128 0x3
	.byte	0x31
	.byte	0x36
	.byte	0xc
	.long	0x112e
	.uleb128 0xe
	.long	0x1921e
	.uleb128 0x3
	.byte	0x31
	.byte	0x36
	.byte	0xc
	.long	0x1158
	.uleb128 0x3
	.byte	0x31
	.byte	0x37
	.byte	0xc
	.long	0x1182
	.uleb128 0x3
	.byte	0x31
	.byte	0x37
	.byte	0xc
	.long	0x11a9
	.uleb128 0x3
	.byte	0x31
	.byte	0x38
	.byte	0xc
	.long	0x11d0
	.uleb128 0x3
	.byte	0x31
	.byte	0x38
	.byte	0xc
	.long	0x11f3
	.uleb128 0x3
	.byte	0x31
	.byte	0x39
	.byte	0xc
	.long	0x1216
	.uleb128 0x3
	.byte	0x31
	.byte	0x39
	.byte	0xc
	.long	0x1238
	.uleb128 0x3
	.byte	0x31
	.byte	0x3a
	.byte	0xc
	.long	0x125a
	.uleb128 0x3
	.byte	0x31
	.byte	0x3a
	.byte	0xc
	.long	0x127c
	.uleb128 0x3
	.byte	0x31
	.byte	0x3b
	.byte	0xc
	.long	0x129e
	.uleb128 0x3
	.byte	0x31
	.byte	0x3b
	.byte	0xc
	.long	0x12c3
	.uleb128 0x3
	.byte	0x31
	.byte	0x3c
	.byte	0xc
	.long	0x12e8
	.uleb128 0x3
	.byte	0x31
	.byte	0x3c
	.byte	0xc
	.long	0x1311
	.uleb128 0x3
	.byte	0x31
	.byte	0x3f
	.byte	0xc
	.long	0x133a
	.uleb128 0x3
	.byte	0x31
	.byte	0x3f
	.byte	0xc
	.long	0x1363
	.uleb128 0x3
	.byte	0x31
	.byte	0x3f
	.byte	0xc
	.long	0x138c
	.uleb128 0x3
	.byte	0x31
	.byte	0x40
	.byte	0xc
	.long	0x13b5
	.uleb128 0x3
	.byte	0x31
	.byte	0x40
	.byte	0xc
	.long	0x13db
	.uleb128 0x3
	.byte	0x31
	.byte	0x40
	.byte	0xc
	.long	0x1401
	.uleb128 0x3
	.byte	0x31
	.byte	0x41
	.byte	0xc
	.long	0x1427
	.uleb128 0x3
	.byte	0x31
	.byte	0x41
	.byte	0xc
	.long	0x144c
	.uleb128 0x3
	.byte	0x31
	.byte	0x41
	.byte	0xc
	.long	0x1471
	.uleb128 0x3
	.byte	0x31
	.byte	0x42
	.byte	0xc
	.long	0x1496
	.uleb128 0x3
	.byte	0x31
	.byte	0x42
	.byte	0xc
	.long	0x14bb
	.uleb128 0x3
	.byte	0x31
	.byte	0x42
	.byte	0xc
	.long	0x14e0
	.uleb128 0x3
	.byte	0x31
	.byte	0x43
	.byte	0xc
	.long	0x1505
	.uleb128 0x3
	.byte	0x31
	.byte	0x43
	.byte	0xc
	.long	0x152b
	.uleb128 0x3
	.byte	0x31
	.byte	0x43
	.byte	0xc
	.long	0x1551
	.uleb128 0x3
	.byte	0x31
	.byte	0x44
	.byte	0xc
	.long	0x1577
	.uleb128 0x3
	.byte	0x31
	.byte	0x44
	.byte	0xc
	.long	0x159c
	.uleb128 0x3
	.byte	0x31
	.byte	0x44
	.byte	0xc
	.long	0x15c1
	.uleb128 0x3
	.byte	0x31
	.byte	0x45
	.byte	0xc
	.long	0x15e6
	.uleb128 0x3
	.byte	0x31
	.byte	0x45
	.byte	0xc
	.long	0x1613
	.uleb128 0x3
	.byte	0x31
	.byte	0x45
	.byte	0xc
	.long	0x1640
	.uleb128 0x3
	.byte	0x31
	.byte	0x46
	.byte	0xc
	.long	0x166d
	.uleb128 0x3
	.byte	0x31
	.byte	0x46
	.byte	0xc
	.long	0x16a0
	.uleb128 0x3
	.byte	0x31
	.byte	0x46
	.byte	0xc
	.long	0x16d3
	.uleb128 0x3
	.byte	0x31
	.byte	0x47
	.byte	0xc
	.long	0x1706
	.uleb128 0x3
	.byte	0x31
	.byte	0x47
	.byte	0xc
	.long	0x1730
	.uleb128 0x3
	.byte	0x31
	.byte	0x47
	.byte	0xc
	.long	0x175a
	.uleb128 0x3
	.byte	0x31
	.byte	0x48
	.byte	0xc
	.long	0x1784
	.uleb128 0x3
	.byte	0x31
	.byte	0x48
	.byte	0xc
	.long	0x17b4
	.uleb128 0x3
	.byte	0x31
	.byte	0x48
	.byte	0xc
	.long	0x17e4
	.uleb128 0x3
	.byte	0x31
	.byte	0x49
	.byte	0xc
	.long	0x1814
	.uleb128 0x3
	.byte	0x31
	.byte	0x49
	.byte	0xc
	.long	0x1846
	.uleb128 0x3
	.byte	0x31
	.byte	0x49
	.byte	0xc
	.long	0x1878
	.uleb128 0x3
	.byte	0x31
	.byte	0x4a
	.byte	0xc
	.long	0x18aa
	.uleb128 0x3
	.byte	0x31
	.byte	0x4a
	.byte	0xc
	.long	0x18da
	.uleb128 0x3
	.byte	0x31
	.byte	0x4a
	.byte	0xc
	.long	0x190a
	.uleb128 0x3
	.byte	0x31
	.byte	0x4e
	.byte	0xc
	.long	0x193a
	.uleb128 0x3
	.byte	0x31
	.byte	0x4e
	.byte	0xc
	.long	0x195f
	.uleb128 0x3
	.byte	0x31
	.byte	0x4f
	.byte	0xc
	.long	0x1984
	.uleb128 0x3
	.byte	0x31
	.byte	0x4f
	.byte	0xc
	.long	0x19a9
	.uleb128 0x3
	.byte	0x31
	.byte	0x50
	.byte	0xc
	.long	0x19ce
	.uleb128 0x3
	.byte	0x31
	.byte	0x50
	.byte	0xc
	.long	0x19f3
	.uleb128 0x3
	.byte	0x31
	.byte	0x51
	.byte	0xc
	.long	0x1a18
	.uleb128 0x3
	.byte	0x31
	.byte	0x51
	.byte	0xc
	.long	0x1a3b
	.uleb128 0x3
	.byte	0x31
	.byte	0x52
	.byte	0xc
	.long	0x1a5e
	.uleb128 0x3
	.byte	0x31
	.byte	0x52
	.byte	0xc
	.long	0x1a8a
	.uleb128 0x3
	.byte	0x31
	.byte	0x53
	.byte	0xc
	.long	0x1ab6
	.uleb128 0x3
	.byte	0x31
	.byte	0x53
	.byte	0xc
	.long	0x1ad7
	.uleb128 0x3
	.byte	0x31
	.byte	0x54
	.byte	0xc
	.long	0x1af8
	.uleb128 0x3
	.byte	0x31
	.byte	0x54
	.byte	0xc
	.long	0x1b1b
	.uleb128 0x3
	.byte	0x31
	.byte	0x55
	.byte	0xc
	.long	0x1b3e
	.uleb128 0x3
	.byte	0x31
	.byte	0x55
	.byte	0xc
	.long	0x1b61
	.uleb128 0x3
	.byte	0x31
	.byte	0x56
	.byte	0xc
	.long	0x1b84
	.uleb128 0x3
	.byte	0x31
	.byte	0x56
	.byte	0xc
	.long	0x1ba9
	.uleb128 0x3
	.byte	0x31
	.byte	0x57
	.byte	0xc
	.long	0x1bce
	.uleb128 0x3
	.byte	0x31
	.byte	0x57
	.byte	0xc
	.long	0x1bf7
	.uleb128 0x3
	.byte	0x31
	.byte	0x58
	.byte	0xc
	.long	0x1c20
	.uleb128 0x3
	.byte	0x31
	.byte	0x58
	.byte	0xc
	.long	0x1c4d
	.uleb128 0x3
	.byte	0x31
	.byte	0x59
	.byte	0xc
	.long	0x1c7a
	.uleb128 0x3
	.byte	0x31
	.byte	0x59
	.byte	0xc
	.long	0x1ca3
	.uleb128 0x3
	.byte	0x31
	.byte	0x5a
	.byte	0xc
	.long	0x1ccc
	.uleb128 0x3
	.byte	0x31
	.byte	0x5a
	.byte	0xc
	.long	0x1cf5
	.uleb128 0x3
	.byte	0x31
	.byte	0x5b
	.byte	0xc
	.long	0x1d1e
	.uleb128 0x3
	.byte	0x31
	.byte	0x5b
	.byte	0xc
	.long	0x1d4d
	.uleb128 0x3
	.byte	0x31
	.byte	0x5b
	.byte	0xc
	.long	0x1d7c
	.uleb128 0x3
	.byte	0x31
	.byte	0x5b
	.byte	0xc
	.long	0x1dab
	.uleb128 0x3
	.byte	0x31
	.byte	0x5b
	.byte	0xc
	.long	0x1dd4
	.uleb128 0x3
	.byte	0x31
	.byte	0x5c
	.byte	0xc
	.long	0x1dfd
	.uleb128 0x3
	.byte	0x31
	.byte	0x5c
	.byte	0xc
	.long	0x1e22
	.uleb128 0x3
	.byte	0x31
	.byte	0x5d
	.byte	0xc
	.long	0x1e47
	.uleb128 0x3
	.byte	0x31
	.byte	0x5d
	.byte	0xc
	.long	0x1e6e
	.uleb128 0x3
	.byte	0x31
	.byte	0x5e
	.byte	0xc
	.long	0x1e95
	.uleb128 0x3
	.byte	0x31
	.byte	0x5e
	.byte	0xc
	.long	0x1ebc
	.uleb128 0x3
	.byte	0x31
	.byte	0x5f
	.byte	0xc
	.long	0x1ee3
	.uleb128 0x3
	.byte	0x31
	.byte	0x5f
	.byte	0xc
	.long	0x1f0c
	.uleb128 0x3
	.byte	0x31
	.byte	0x60
	.byte	0xc
	.long	0x1f35
	.uleb128 0x3
	.byte	0x31
	.byte	0x60
	.byte	0xc
	.long	0x1f5a
	.uleb128 0x3
	.byte	0x31
	.byte	0x61
	.byte	0xc
	.long	0x1f7f
	.uleb128 0x3
	.byte	0x31
	.byte	0x61
	.byte	0xc
	.long	0x1fa2
	.uleb128 0x3
	.byte	0x31
	.byte	0x62
	.byte	0xc
	.long	0x1fc5
	.uleb128 0x3
	.byte	0x31
	.byte	0x62
	.byte	0xc
	.long	0x1fe8
	.uleb128 0x3
	.byte	0x31
	.byte	0x63
	.byte	0xc
	.long	0x200b
	.uleb128 0x3
	.byte	0x31
	.byte	0x63
	.byte	0xc
	.long	0x2030
	.uleb128 0x3
	.byte	0x31
	.byte	0x64
	.byte	0xc
	.long	0x2055
	.uleb128 0x3
	.byte	0x31
	.byte	0x64
	.byte	0xc
	.long	0x207c
	.uleb128 0x3
	.byte	0x31
	.byte	0x65
	.byte	0xc
	.long	0x20a3
	.uleb128 0x3
	.byte	0x31
	.byte	0x65
	.byte	0xc
	.long	0x20ca
	.uleb128 0x3
	.byte	0x31
	.byte	0x66
	.byte	0xc
	.long	0x20f1
	.uleb128 0x3
	.byte	0x31
	.byte	0x66
	.byte	0xc
	.long	0x211e
	.uleb128 0x3
	.byte	0x31
	.byte	0x67
	.byte	0xc
	.long	0x214b
	.uleb128 0x3
	.byte	0x31
	.byte	0x67
	.byte	0xc
	.long	0x217a
	.uleb128 0x3
	.byte	0x31
	.byte	0x68
	.byte	0xc
	.long	0x21a9
	.uleb128 0x3
	.byte	0x31
	.byte	0x68
	.byte	0xc
	.long	0x21d6
	.uleb128 0x3
	.byte	0x31
	.byte	0x69
	.byte	0xc
	.long	0x2203
	.uleb128 0x3
	.byte	0x31
	.byte	0x69
	.byte	0xc
	.long	0x2237
	.uleb128 0x3
	.byte	0x31
	.byte	0x6a
	.byte	0xc
	.long	0x226b
	.uleb128 0x3
	.byte	0x31
	.byte	0x6a
	.byte	0xc
	.long	0x228e
	.uleb128 0x3
	.byte	0x31
	.byte	0x6b
	.byte	0xc
	.long	0x22b1
	.uleb128 0x3
	.byte	0x31
	.byte	0x6b
	.byte	0xc
	.long	0x22d6
	.uleb128 0x3
	.byte	0x31
	.byte	0x6c
	.byte	0xc
	.long	0x22fb
	.uleb128 0x3
	.byte	0x31
	.byte	0x6c
	.byte	0xc
	.long	0x232a
	.uleb128 0x3
	.byte	0x31
	.byte	0x6d
	.byte	0xc
	.long	0x2359
	.uleb128 0x3
	.byte	0x31
	.byte	0x6d
	.byte	0xc
	.long	0x2386
	.uleb128 0x3
	.byte	0x31
	.byte	0x6e
	.byte	0xc
	.long	0x23b3
	.uleb128 0x3
	.byte	0x31
	.byte	0x6e
	.byte	0xc
	.long	0x23da
	.uleb128 0x3
	.byte	0x31
	.byte	0x6f
	.byte	0xc
	.long	0x2401
	.uleb128 0x3
	.byte	0x31
	.byte	0x6f
	.byte	0xc
	.long	0x2426
	.uleb128 0x3
	.byte	0x31
	.byte	0xb7
	.byte	0xc
	.long	0x244b
	.uleb128 0x3
	.byte	0x31
	.byte	0xb7
	.byte	0xc
	.long	0x247a
	.uleb128 0x3
	.byte	0x31
	.byte	0xb7
	.byte	0xc
	.long	0x24a9
	.uleb128 0x26
	.ascii "Vector2\0"
	.byte	0x8
	.byte	0x4
	.byte	0xca
	.byte	0x10
	.long	0x19e7a
	.uleb128 0x19
	.ascii "x\0"
	.byte	0x4
	.byte	0xcb
	.byte	0xb
	.long	0x1921e
	.byte	0
	.uleb128 0x19
	.ascii "y\0"
	.byte	0x4
	.byte	0xcc
	.byte	0xb
	.long	0x1921e
	.byte	0x4
	.uleb128 0x8c
	.ascii "zero\0"
	.byte	0xce
	.ascii "_ZN7Vector24zeroEv\0"
	.long	0x19b89
	.uleb128 0x8c
	.ascii "one\0"
	.byte	0xcf
	.ascii "_ZN7Vector23oneEv\0"
	.long	0x19b89
	.uleb128 0x35
	.ascii "magn\0"
	.byte	0x4
	.byte	0xd1
	.byte	0xb
	.ascii "_ZNK7Vector24magnEv\0"
	.long	0x1921e
	.long	0x19c15
	.long	0x19c1b
	.uleb128 0x2
	.long	0x19e7f
	.byte	0
	.uleb128 0x35
	.ascii "magnSqr\0"
	.byte	0x4
	.byte	0xd2
	.byte	0xb
	.ascii "_ZNK7Vector27magnSqrEv\0"
	.long	0x1921e
	.long	0x19c4a
	.long	0x19c50
	.uleb128 0x2
	.long	0x19e7f
	.byte	0
	.uleb128 0x35
	.ascii "angle\0"
	.byte	0x4
	.byte	0xd3
	.byte	0xb
	.ascii "_ZNK7Vector25angleEv\0"
	.long	0x1921e
	.long	0x19c7b
	.long	0x19c81
	.uleb128 0x2
	.long	0x19e7f
	.byte	0
	.uleb128 0x35
	.ascii "dist\0"
	.byte	0x4
	.byte	0xd4
	.byte	0xb
	.ascii "_ZNK7Vector24distES_\0"
	.long	0x1921e
	.long	0x19cab
	.long	0x19cb6
	.uleb128 0x2
	.long	0x19e7f
	.uleb128 0x1
	.long	0x19b89
	.byte	0
	.uleb128 0x35
	.ascii "distSqr\0"
	.byte	0x4
	.byte	0xd5
	.byte	0xb
	.ascii "_ZNK7Vector27distSqrES_\0"
	.long	0x1921e
	.long	0x19ce6
	.long	0x19cf1
	.uleb128 0x2
	.long	0x19e7f
	.uleb128 0x1
	.long	0x19b89
	.byte	0
	.uleb128 0x35
	.ascii "dot\0"
	.byte	0x4
	.byte	0xd6
	.byte	0xb
	.ascii "_ZNK7Vector23dotES_\0"
	.long	0x1921e
	.long	0x19d19
	.long	0x19d24
	.uleb128 0x2
	.long	0x19e7f
	.uleb128 0x1
	.long	0x19b89
	.byte	0
	.uleb128 0x35
	.ascii "setMagn\0"
	.byte	0x4
	.byte	0xd8
	.byte	0xe
	.ascii "_ZN7Vector27setMagnEf\0"
	.long	0x19e89
	.long	0x19d52
	.long	0x19d5d
	.uleb128 0x2
	.long	0x19e8e
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x35
	.ascii "setAngle\0"
	.byte	0x4
	.byte	0xd9
	.byte	0xe
	.ascii "_ZN7Vector28setAngleEf\0"
	.long	0x19e89
	.long	0x19d8d
	.long	0x19d98
	.uleb128 0x2
	.long	0x19e8e
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x35
	.ascii "clamp\0"
	.byte	0x4
	.byte	0xda
	.byte	0xe
	.ascii "_ZN7Vector25clampEff\0"
	.long	0x19e89
	.long	0x19dc3
	.long	0x19dd3
	.uleb128 0x2
	.long	0x19e8e
	.uleb128 0x1
	.long	0x1921e
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x35
	.ascii "clamp\0"
	.byte	0x4
	.byte	0xdb
	.byte	0xe
	.ascii "_ZN7Vector25clampES_S_\0"
	.long	0x19e89
	.long	0x19e00
	.long	0x19e10
	.uleb128 0x2
	.long	0x19e8e
	.uleb128 0x1
	.long	0x19b89
	.uleb128 0x1
	.long	0x19b89
	.byte	0
	.uleb128 0x35
	.ascii "moveTo\0"
	.byte	0x4
	.byte	0xdc
	.byte	0xe
	.ascii "_ZN7Vector26moveToES_f\0"
	.long	0x19e89
	.long	0x19e3e
	.long	0x19e4e
	.uleb128 0x2
	.long	0x19e8e
	.uleb128 0x1
	.long	0x19b89
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0xb0
	.ascii "copy\0"
	.byte	0x4
	.byte	0xdd
	.byte	0xd
	.ascii "_ZN7Vector24copyEv\0"
	.long	0x19b89
	.long	0x19e73
	.uleb128 0x2
	.long	0x19e8e
	.byte	0
	.byte	0
	.uleb128 0xa
	.long	0x19b89
	.uleb128 0xe
	.long	0x19e7a
	.uleb128 0xa
	.long	0x19e7f
	.uleb128 0xd
	.long	0x19b89
	.uleb128 0xe
	.long	0x19b89
	.uleb128 0xa
	.long	0x19e8e
	.uleb128 0x22
	.ascii "Vector2\0"
	.byte	0x4
	.byte	0xe0
	.byte	0x3
	.long	0x19b89
	.uleb128 0xa
	.long	0x19e98
	.uleb128 0x26
	.ascii "Vector3\0"
	.byte	0xc
	.byte	0x4
	.byte	0xe3
	.byte	0x10
	.long	0x19ee0
	.uleb128 0x19
	.ascii "x\0"
	.byte	0x4
	.byte	0xe4
	.byte	0xb
	.long	0x1921e
	.byte	0
	.uleb128 0x19
	.ascii "y\0"
	.byte	0x4
	.byte	0xe5
	.byte	0xb
	.long	0x1921e
	.byte	0x4
	.uleb128 0x19
	.ascii "z\0"
	.byte	0x4
	.byte	0xe6
	.byte	0xb
	.long	0x1921e
	.byte	0x8
	.byte	0
	.uleb128 0x22
	.ascii "Vector3\0"
	.byte	0x4
	.byte	0xe7
	.byte	0x3
	.long	0x19ead
	.uleb128 0x26
	.ascii "Vector4\0"
	.byte	0x10
	.byte	0x4
	.byte	0xea
	.byte	0x10
	.long	0x19f2e
	.uleb128 0x19
	.ascii "x\0"
	.byte	0x4
	.byte	0xeb
	.byte	0xb
	.long	0x1921e
	.byte	0
	.uleb128 0x19
	.ascii "y\0"
	.byte	0x4
	.byte	0xec
	.byte	0xb
	.long	0x1921e
	.byte	0x4
	.uleb128 0x19
	.ascii "z\0"
	.byte	0x4
	.byte	0xed
	.byte	0xb
	.long	0x1921e
	.byte	0x8
	.uleb128 0x19
	.ascii "w\0"
	.byte	0x4
	.byte	0xee
	.byte	0xb
	.long	0x1921e
	.byte	0xc
	.byte	0
	.uleb128 0x22
	.ascii "Vector4\0"
	.byte	0x4
	.byte	0xef
	.byte	0x3
	.long	0x19ef0
	.uleb128 0x26
	.ascii "Color\0"
	.byte	0x4
	.byte	0x4
	.byte	0xfe
	.byte	0x10
	.long	0x1a158
	.uleb128 0x19
	.ascii "r\0"
	.byte	0x4
	.byte	0xff
	.byte	0x13
	.long	0x19160
	.byte	0
	.uleb128 0x3c
	.ascii "g\0"
	.byte	0x4
	.word	0x100
	.byte	0x13
	.long	0x19160
	.byte	0x1
	.uleb128 0x3c
	.ascii "b\0"
	.byte	0x4
	.word	0x101
	.byte	0x13
	.long	0x19160
	.byte	0x2
	.uleb128 0x3c
	.ascii "a\0"
	.byte	0x4
	.word	0x102
	.byte	0x13
	.long	0x19160
	.byte	0x3
	.uleb128 0x2b
	.secrel32	.LASF35
	.byte	0x4
	.word	0x104
	.byte	0xc
	.ascii "_ZN5ColoraSE7Vector4\0"
	.long	0x1a15d
	.long	0x19fa6
	.long	0x19fb1
	.uleb128 0x2
	.long	0x1a162
	.uleb128 0x1
	.long	0x19f2e
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF35
	.byte	0x4
	.word	0x10b
	.byte	0xc
	.ascii "_ZN5ColoraSE7Vector3\0"
	.long	0x1a15d
	.long	0x19fdb
	.long	0x19fe6
	.uleb128 0x2
	.long	0x1a162
	.uleb128 0x1
	.long	0x19ee0
	.byte	0
	.uleb128 0x8
	.ascii "from\0"
	.byte	0x4
	.word	0x113
	.byte	0x12
	.ascii "_ZN5Color4fromEf\0"
	.long	0x19f3e
	.long	0x1a00f
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x8
	.ascii "from\0"
	.byte	0x4
	.word	0x115
	.byte	0x12
	.ascii "_ZN5Color4fromE7Vector4\0"
	.long	0x19f3e
	.long	0x1a03f
	.uleb128 0x1
	.long	0x19f2e
	.byte	0
	.uleb128 0x8
	.ascii "from\0"
	.byte	0x4
	.word	0x117
	.byte	0x12
	.ascii "_ZN5Color4fromE7Vector3\0"
	.long	0x19f3e
	.long	0x1a06f
	.uleb128 0x1
	.long	0x19ee0
	.byte	0
	.uleb128 0x68
	.ascii "toHSV\0"
	.byte	0x4
	.word	0x119
	.byte	0xd
	.ascii "_ZNK5Color5toHSVEv\0"
	.long	0x19ee0
	.long	0x1a099
	.long	0x1a09f
	.uleb128 0x2
	.long	0x1a16c
	.byte	0
	.uleb128 0x8
	.ascii "fromHSV\0"
	.byte	0x4
	.word	0x11a
	.byte	0x12
	.ascii "_ZN5Color7fromHSVE7Vector3\0"
	.long	0x19f3e
	.long	0x1a0d5
	.uleb128 0x1
	.long	0x19ee0
	.byte	0
	.uleb128 0x68
	.ascii "setAlpha\0"
	.byte	0x4
	.word	0x11c
	.byte	0xc
	.ascii "_ZN5Color8setAlphaEf\0"
	.long	0x1a15d
	.long	0x1a104
	.long	0x1a10f
	.uleb128 0x2
	.long	0x1a162
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x7b
	.ascii "random\0"
	.byte	0x4
	.word	0x11e
	.byte	0x12
	.ascii "_ZN5Color6randomEv\0"
	.long	0x19f3e
	.uleb128 0x7b
	.ascii "randhue\0"
	.byte	0x4
	.word	0x120
	.byte	0x12
	.ascii "_ZN5Color7randhueEv\0"
	.long	0x19f3e
	.byte	0
	.uleb128 0xa
	.long	0x19f3e
	.uleb128 0xd
	.long	0x19f3e
	.uleb128 0xe
	.long	0x19f3e
	.uleb128 0xa
	.long	0x1a162
	.uleb128 0xe
	.long	0x1a158
	.uleb128 0xa
	.long	0x1a16c
	.uleb128 0x46
	.ascii "Color\0"
	.byte	0x4
	.word	0x122
	.byte	0x3
	.long	0x19f3e
	.uleb128 0xb1
	.byte	0x8
	.uleb128 0x6a
	.secrel32	.LASF173
	.byte	0x18
	.byte	0x4
	.word	0x177
	.byte	0x10
	.long	0x1a1d8
	.uleb128 0x3c
	.ascii "offset\0"
	.byte	0x4
	.word	0x178
	.byte	0xd
	.long	0x19e98
	.byte	0
	.uleb128 0x5b
	.secrel32	.LASF174
	.byte	0x4
	.word	0x179
	.byte	0xd
	.long	0x19e98
	.byte	0x8
	.uleb128 0x3c
	.ascii "rotation\0"
	.byte	0x4
	.word	0x17a
	.byte	0xb
	.long	0x1921e
	.byte	0x10
	.uleb128 0x3c
	.ascii "zoom\0"
	.byte	0x4
	.word	0x17b
	.byte	0xb
	.long	0x1921e
	.byte	0x14
	.byte	0
	.uleb128 0x1a
	.secrel32	.LASF173
	.byte	0x4
	.word	0x17c
	.byte	0x3
	.long	0x1a188
	.uleb128 0xb2
	.byte	0x7
	.byte	0x4
	.long	0x14cb6
	.byte	0x4
	.word	0x2d0
	.byte	0xe
	.ascii "11MouseButton\0"
	.long	0x1a297
	.uleb128 0x45
	.ascii "MOUSE_BUTTON_LEFT\0"
	.byte	0
	.uleb128 0x45
	.ascii "MOUSE_BUTTON_RIGHT\0"
	.byte	0x1
	.uleb128 0x45
	.ascii "MOUSE_BUTTON_MIDDLE\0"
	.byte	0x2
	.uleb128 0x45
	.ascii "MOUSE_BUTTON_SIDE\0"
	.byte	0x3
	.uleb128 0x45
	.ascii "MOUSE_BUTTON_EXTRA\0"
	.byte	0x4
	.uleb128 0x45
	.ascii "MOUSE_BUTTON_FORWARD\0"
	.byte	0x5
	.uleb128 0x45
	.ascii "MOUSE_BUTTON_BACK\0"
	.byte	0x6
	.byte	0
	.uleb128 0x46
	.ascii "MouseButton\0"
	.byte	0x4
	.word	0x2d8
	.byte	0x3
	.long	0x1a1e5
	.uleb128 0xb3
	.ascii "decltype(nullptr)\0"
	.uleb128 0x22
	.ascii "int8_t\0"
	.byte	0x32
	.byte	0x23
	.byte	0x15
	.long	0x191c0
	.uleb128 0x22
	.ascii "uint8_t\0"
	.byte	0x32
	.byte	0x24
	.byte	0x19
	.long	0x19160
	.uleb128 0x22
	.ascii "int16_t\0"
	.byte	0x32
	.byte	0x25
	.byte	0x10
	.long	0x191cf
	.uleb128 0x22
	.ascii "uint16_t\0"
	.byte	0x32
	.byte	0x26
	.byte	0x19
	.long	0x19171
	.uleb128 0x22
	.ascii "int32_t\0"
	.byte	0x32
	.byte	0x27
	.byte	0xe
	.long	0x191dc
	.uleb128 0x22
	.ascii "uint32_t\0"
	.byte	0x32
	.byte	0x28
	.byte	0x14
	.long	0x14cb6
	.uleb128 0x22
	.ascii "int64_t\0"
	.byte	0x32
	.byte	0x29
	.byte	0x26
	.long	0x191f4
	.uleb128 0x22
	.ascii "uint64_t\0"
	.byte	0x32
	.byte	0x2a
	.byte	0x30
	.long	0x191a1
	.uleb128 0x22
	.ascii "int_least8_t\0"
	.byte	0x32
	.byte	0x2d
	.byte	0x15
	.long	0x191c0
	.uleb128 0x22
	.ascii "uint_least8_t\0"
	.byte	0x32
	.byte	0x2e
	.byte	0x19
	.long	0x19160
	.uleb128 0x22
	.ascii "int_least16_t\0"
	.byte	0x32
	.byte	0x2f
	.byte	0x10
	.long	0x191cf
	.uleb128 0x22
	.ascii "uint_least16_t\0"
	.byte	0x32
	.byte	0x30
	.byte	0x19
	.long	0x19171
	.uleb128 0x22
	.ascii "int_least32_t\0"
	.byte	0x32
	.byte	0x31
	.byte	0xe
	.long	0x191dc
	.uleb128 0x22
	.ascii "uint_least32_t\0"
	.byte	0x32
	.byte	0x32
	.byte	0x14
	.long	0x14cb6
	.uleb128 0x22
	.ascii "int_least64_t\0"
	.byte	0x32
	.byte	0x33
	.byte	0x26
	.long	0x191f4
	.uleb128 0x22
	.ascii "uint_least64_t\0"
	.byte	0x32
	.byte	0x34
	.byte	0x30
	.long	0x191a1
	.uleb128 0x22
	.ascii "int_fast8_t\0"
	.byte	0x32
	.byte	0x3a
	.byte	0x15
	.long	0x191c0
	.uleb128 0x22
	.ascii "uint_fast8_t\0"
	.byte	0x32
	.byte	0x3b
	.byte	0x17
	.long	0x19160
	.uleb128 0x22
	.ascii "int_fast16_t\0"
	.byte	0x32
	.byte	0x3c
	.byte	0x10
	.long	0x191cf
	.uleb128 0x22
	.ascii "uint_fast16_t\0"
	.byte	0x32
	.byte	0x3d
	.byte	0x19
	.long	0x19171
	.uleb128 0x22
	.ascii "int_fast32_t\0"
	.byte	0x32
	.byte	0x3e
	.byte	0xe
	.long	0x191dc
	.uleb128 0x22
	.ascii "uint_fast32_t\0"
	.byte	0x32
	.byte	0x3f
	.byte	0x18
	.long	0x14cb6
	.uleb128 0x22
	.ascii "int_fast64_t\0"
	.byte	0x32
	.byte	0x40
	.byte	0x26
	.long	0x191f4
	.uleb128 0x22
	.ascii "uint_fast64_t\0"
	.byte	0x32
	.byte	0x41
	.byte	0x30
	.long	0x191a1
	.uleb128 0x22
	.ascii "intmax_t\0"
	.byte	0x32
	.byte	0x44
	.byte	0x26
	.long	0x191f4
	.uleb128 0x22
	.ascii "uintmax_t\0"
	.byte	0x32
	.byte	0x45
	.byte	0x30
	.long	0x191a1
	.uleb128 0x10
	.ascii "atexit\0"
	.byte	0x2f
	.word	0x1a9
	.byte	0xf
	.long	0x191dc
	.long	0x1a4db
	.uleb128 0x1
	.long	0x195c2
	.byte	0
	.uleb128 0x6c
	.ascii "atof\0"
	.byte	0x2e
	.byte	0xfe
	.byte	0x12
	.long	0x19214
	.long	0x1a4f2
	.uleb128 0x1
	.long	0x19524
	.byte	0
	.uleb128 0x10
	.ascii "atoi\0"
	.byte	0x2f
	.word	0x1b2
	.byte	0xf
	.long	0x191dc
	.long	0x1a50a
	.uleb128 0x1
	.long	0x19524
	.byte	0
	.uleb128 0x10
	.ascii "atol\0"
	.byte	0x2f
	.word	0x1b4
	.byte	0x10
	.long	0x191e8
	.long	0x1a522
	.uleb128 0x1
	.long	0x19524
	.byte	0
	.uleb128 0x10
	.ascii "bsearch\0"
	.byte	0x2f
	.word	0x1b8
	.byte	0x11
	.long	0x1a185
	.long	0x1a551
	.uleb128 0x1
	.long	0x1a551
	.uleb128 0x1
	.long	0x1a551
	.uleb128 0x1
	.long	0x1922c
	.uleb128 0x1
	.long	0x1922c
	.uleb128 0x1
	.long	0x1a558
	.byte	0
	.uleb128 0xe
	.long	0x1a556
	.uleb128 0xb4
	.uleb128 0xe
	.long	0x1a55d
	.uleb128 0x8d
	.long	0x191dc
	.long	0x1a572
	.uleb128 0x1
	.long	0x1a551
	.uleb128 0x1
	.long	0x1a551
	.byte	0
	.uleb128 0x10
	.ascii "div\0"
	.byte	0x2f
	.word	0x1be
	.byte	0x11
	.long	0x19578
	.long	0x1a58e
	.uleb128 0x1
	.long	0x191dc
	.uleb128 0x1
	.long	0x191dc
	.byte	0
	.uleb128 0x10
	.ascii "getenv\0"
	.byte	0x2f
	.word	0x1bf
	.byte	0x11
	.long	0x1926d
	.long	0x1a5a8
	.uleb128 0x1
	.long	0x19524
	.byte	0
	.uleb128 0x10
	.ascii "ldiv\0"
	.byte	0x2f
	.word	0x1c9
	.byte	0x12
	.long	0x195b3
	.long	0x1a5c5
	.uleb128 0x1
	.long	0x191e8
	.uleb128 0x1
	.long	0x191e8
	.byte	0
	.uleb128 0x10
	.ascii "mblen\0"
	.byte	0x2f
	.word	0x1cb
	.byte	0xf
	.long	0x191dc
	.long	0x1a5e3
	.uleb128 0x1
	.long	0x19524
	.uleb128 0x1
	.long	0x1922c
	.byte	0
	.uleb128 0x10
	.ascii "mbstowcs\0"
	.byte	0x2f
	.word	0x1d3
	.byte	0x12
	.long	0x1922c
	.long	0x1a609
	.uleb128 0x1
	.long	0x19272
	.uleb128 0x1
	.long	0x19524
	.uleb128 0x1
	.long	0x1922c
	.byte	0
	.uleb128 0x10
	.ascii "mbtowc\0"
	.byte	0x2f
	.word	0x1d1
	.byte	0xf
	.long	0x191dc
	.long	0x1a62d
	.uleb128 0x1
	.long	0x19272
	.uleb128 0x1
	.long	0x19524
	.uleb128 0x1
	.long	0x1922c
	.byte	0
	.uleb128 0x44
	.ascii "qsort\0"
	.byte	0x2f
	.word	0x1b9
	.byte	0x10
	.long	0x1a651
	.uleb128 0x1
	.long	0x1a185
	.uleb128 0x1
	.long	0x1922c
	.uleb128 0x1
	.long	0x1922c
	.uleb128 0x1
	.long	0x1a558
	.byte	0
	.uleb128 0x56
	.ascii "rand\0"
	.byte	0x2f
	.word	0x1d6
	.byte	0xf
	.long	0x191dc
	.uleb128 0x44
	.ascii "srand\0"
	.byte	0x2f
	.word	0x1d8
	.byte	0x10
	.long	0x1a674
	.uleb128 0x1
	.long	0x14cb6
	.byte	0
	.uleb128 0x10
	.ascii "strtod\0"
	.byte	0x2f
	.word	0x1e4
	.byte	0x20
	.long	0x19214
	.long	0x1a693
	.uleb128 0x1
	.long	0x19524
	.uleb128 0x1
	.long	0x195ce
	.byte	0
	.uleb128 0x10
	.ascii "strtol\0"
	.byte	0x2f
	.word	0x207
	.byte	0x10
	.long	0x191e8
	.long	0x1a6b7
	.uleb128 0x1
	.long	0x19524
	.uleb128 0x1
	.long	0x195ce
	.uleb128 0x1
	.long	0x191dc
	.byte	0
	.uleb128 0x10
	.ascii "strtoul\0"
	.byte	0x2f
	.word	0x209
	.byte	0x19
	.long	0x19187
	.long	0x1a6dc
	.uleb128 0x1
	.long	0x19524
	.uleb128 0x1
	.long	0x195ce
	.uleb128 0x1
	.long	0x191dc
	.byte	0
	.uleb128 0x10
	.ascii "system\0"
	.byte	0x2f
	.word	0x20d
	.byte	0xf
	.long	0x191dc
	.long	0x1a6f6
	.uleb128 0x1
	.long	0x19524
	.byte	0
	.uleb128 0x10
	.ascii "wcstombs\0"
	.byte	0x2f
	.word	0x212
	.byte	0x12
	.long	0x1922c
	.long	0x1a71c
	.uleb128 0x1
	.long	0x1926d
	.uleb128 0x1
	.long	0x195c9
	.uleb128 0x1
	.long	0x1922c
	.byte	0
	.uleb128 0x10
	.ascii "wctomb\0"
	.byte	0x2f
	.word	0x210
	.byte	0xf
	.long	0x191dc
	.long	0x1a73b
	.uleb128 0x1
	.long	0x1926d
	.uleb128 0x1
	.long	0x19277
	.byte	0
	.uleb128 0x10
	.ascii "lldiv\0"
	.byte	0x2f
	.word	0x2d6
	.byte	0x25
	.long	0x1960a
	.long	0x1a759
	.uleb128 0x1
	.long	0x191f4
	.uleb128 0x1
	.long	0x191f4
	.byte	0
	.uleb128 0x10
	.ascii "atoll\0"
	.byte	0x2f
	.word	0x2e1
	.byte	0x28
	.long	0x191f4
	.long	0x1a772
	.uleb128 0x1
	.long	0x19524
	.byte	0
	.uleb128 0x10
	.ascii "strtoll\0"
	.byte	0x2f
	.word	0x2dd
	.byte	0x28
	.long	0x191f4
	.long	0x1a797
	.uleb128 0x1
	.long	0x19524
	.uleb128 0x1
	.long	0x195ce
	.uleb128 0x1
	.long	0x191dc
	.byte	0
	.uleb128 0x10
	.ascii "strtoull\0"
	.byte	0x2f
	.word	0x2de
	.byte	0x31
	.long	0x191a1
	.long	0x1a7bd
	.uleb128 0x1
	.long	0x19524
	.uleb128 0x1
	.long	0x195ce
	.uleb128 0x1
	.long	0x191dc
	.byte	0
	.uleb128 0x10
	.ascii "strtof\0"
	.byte	0x2f
	.word	0x1eb
	.byte	0x1f
	.long	0x1921e
	.long	0x1a7dc
	.uleb128 0x1
	.long	0x19524
	.uleb128 0x1
	.long	0x195ce
	.byte	0
	.uleb128 0x10
	.ascii "strtold\0"
	.byte	0x2f
	.word	0x1f6
	.byte	0x27
	.long	0x19205
	.long	0x1a7fc
	.uleb128 0x1
	.long	0x19524
	.uleb128 0x1
	.long	0x195ce
	.byte	0
	.uleb128 0x26
	.ascii "_iobuf\0"
	.byte	0x30
	.byte	0x6
	.byte	0x21
	.byte	0xa
	.long	0x1a88c
	.uleb128 0x19
	.ascii "_ptr\0"
	.byte	0x6
	.byte	0x25
	.byte	0xb
	.long	0x1926d
	.byte	0
	.uleb128 0x19
	.ascii "_cnt\0"
	.byte	0x6
	.byte	0x26
	.byte	0x9
	.long	0x191dc
	.byte	0x8
	.uleb128 0x19
	.ascii "_base\0"
	.byte	0x6
	.byte	0x27
	.byte	0xb
	.long	0x1926d
	.byte	0x10
	.uleb128 0x19
	.ascii "_flag\0"
	.byte	0x6
	.byte	0x28
	.byte	0x9
	.long	0x191dc
	.byte	0x18
	.uleb128 0x19
	.ascii "_file\0"
	.byte	0x6
	.byte	0x29
	.byte	0x9
	.long	0x191dc
	.byte	0x1c
	.uleb128 0x19
	.ascii "_charbuf\0"
	.byte	0x6
	.byte	0x2a
	.byte	0x9
	.long	0x191dc
	.byte	0x20
	.uleb128 0x19
	.ascii "_bufsiz\0"
	.byte	0x6
	.byte	0x2b
	.byte	0x9
	.long	0x191dc
	.byte	0x24
	.uleb128 0x19
	.ascii "_tmpfname\0"
	.byte	0x6
	.byte	0x2c
	.byte	0xb
	.long	0x1926d
	.byte	0x28
	.byte	0
	.uleb128 0x22
	.ascii "FILE\0"
	.byte	0x6
	.byte	0x2f
	.byte	0x19
	.long	0x1a7fc
	.uleb128 0x22
	.ascii "fpos_t\0"
	.byte	0x6
	.byte	0x73
	.byte	0x25
	.long	0x191f4
	.uleb128 0xa
	.long	0x1a899
	.uleb128 0x44
	.ascii "clearerr\0"
	.byte	0x6
	.word	0x262
	.byte	0x10
	.long	0x1a8c5
	.uleb128 0x1
	.long	0x1a8c5
	.byte	0
	.uleb128 0xe
	.long	0x1a88c
	.uleb128 0x10
	.ascii "fclose\0"
	.byte	0x6
	.word	0x263
	.byte	0xf
	.long	0x191dc
	.long	0x1a8e4
	.uleb128 0x1
	.long	0x1a8c5
	.byte	0
	.uleb128 0x10
	.ascii "feof\0"
	.byte	0x6
	.word	0x26a
	.byte	0xf
	.long	0x191dc
	.long	0x1a8fc
	.uleb128 0x1
	.long	0x1a8c5
	.byte	0
	.uleb128 0x10
	.ascii "ferror\0"
	.byte	0x6
	.word	0x26b
	.byte	0xf
	.long	0x191dc
	.long	0x1a916
	.uleb128 0x1
	.long	0x1a8c5
	.byte	0
	.uleb128 0x10
	.ascii "fflush\0"
	.byte	0x6
	.word	0x26c
	.byte	0xf
	.long	0x191dc
	.long	0x1a930
	.uleb128 0x1
	.long	0x1a8c5
	.byte	0
	.uleb128 0x10
	.ascii "fgetc\0"
	.byte	0x6
	.word	0x26d
	.byte	0xf
	.long	0x191dc
	.long	0x1a949
	.uleb128 0x1
	.long	0x1a8c5
	.byte	0
	.uleb128 0x10
	.ascii "fgetpos\0"
	.byte	0x6
	.word	0x26f
	.byte	0xf
	.long	0x191dc
	.long	0x1a969
	.uleb128 0x1
	.long	0x1a8c5
	.uleb128 0x1
	.long	0x1a969
	.byte	0
	.uleb128 0xe
	.long	0x1a899
	.uleb128 0x10
	.ascii "fgets\0"
	.byte	0x6
	.word	0x271
	.byte	0x11
	.long	0x1926d
	.long	0x1a991
	.uleb128 0x1
	.long	0x1926d
	.uleb128 0x1
	.long	0x191dc
	.uleb128 0x1
	.long	0x1a8c5
	.byte	0
	.uleb128 0x10
	.ascii "fopen\0"
	.byte	0x6
	.word	0x278
	.byte	0x11
	.long	0x1a8c5
	.long	0x1a9af
	.uleb128 0x1
	.long	0x19524
	.uleb128 0x1
	.long	0x19524
	.byte	0
	.uleb128 0x8
	.ascii "fprintf\0"
	.byte	0x6
	.word	0x165
	.byte	0x5
	.ascii "_Z7fprintfP6_iobufPKcz\0"
	.long	0x191dc
	.long	0x1a9e7
	.uleb128 0x1
	.long	0x1a8c5
	.uleb128 0x1
	.long	0x19524
	.uleb128 0x41
	.byte	0
	.uleb128 0x10
	.ascii "fread\0"
	.byte	0x6
	.word	0x27d
	.byte	0x12
	.long	0x1922c
	.long	0x1aa0f
	.uleb128 0x1
	.long	0x1a185
	.uleb128 0x1
	.long	0x1922c
	.uleb128 0x1
	.long	0x1922c
	.uleb128 0x1
	.long	0x1a8c5
	.byte	0
	.uleb128 0x10
	.ascii "freopen\0"
	.byte	0x6
	.word	0x27e
	.byte	0x11
	.long	0x1a8c5
	.long	0x1aa34
	.uleb128 0x1
	.long	0x19524
	.uleb128 0x1
	.long	0x19524
	.uleb128 0x1
	.long	0x1a8c5
	.byte	0
	.uleb128 0x8
	.ascii "fscanf\0"
	.byte	0x6
	.word	0x138
	.byte	0x5
	.ascii "_Z6fscanfP6_iobufPKcz\0"
	.long	0x191dc
	.long	0x1aa6a
	.uleb128 0x1
	.long	0x1a8c5
	.uleb128 0x1
	.long	0x19524
	.uleb128 0x41
	.byte	0
	.uleb128 0x10
	.ascii "fseek\0"
	.byte	0x6
	.word	0x281
	.byte	0xf
	.long	0x191dc
	.long	0x1aa8d
	.uleb128 0x1
	.long	0x1a8c5
	.uleb128 0x1
	.long	0x191e8
	.uleb128 0x1
	.long	0x191dc
	.byte	0
	.uleb128 0x10
	.ascii "fsetpos\0"
	.byte	0x6
	.word	0x27f
	.byte	0xf
	.long	0x191dc
	.long	0x1aaad
	.uleb128 0x1
	.long	0x1a8c5
	.uleb128 0x1
	.long	0x1aaad
	.byte	0
	.uleb128 0xe
	.long	0x1a8a8
	.uleb128 0x10
	.ascii "ftell\0"
	.byte	0x6
	.word	0x282
	.byte	0x10
	.long	0x191e8
	.long	0x1aacb
	.uleb128 0x1
	.long	0x1a8c5
	.byte	0
	.uleb128 0x10
	.ascii "getc\0"
	.byte	0x6
	.word	0x2ac
	.byte	0xf
	.long	0x191dc
	.long	0x1aae3
	.uleb128 0x1
	.long	0x1a8c5
	.byte	0
	.uleb128 0x56
	.ascii "getchar\0"
	.byte	0x6
	.word	0x2ad
	.byte	0xf
	.long	0x191dc
	.uleb128 0x44
	.ascii "perror\0"
	.byte	0x2f
	.word	0x286
	.byte	0x10
	.long	0x1ab0a
	.uleb128 0x1
	.long	0x19524
	.byte	0
	.uleb128 0x5d
	.ascii "printf\0"
	.byte	0x6
	.word	0x170
	.byte	0x5
	.ascii "_Z6printfPKcz\0"
	.long	0x191dc
	.quad	.LFB1277
	.quad	.LFE1277-.LFB1277
	.uleb128 0x1
	.byte	0x9c
	.long	0x1ab92
	.uleb128 0x41
	.uleb128 0x9
	.ascii "__format\0"
	.byte	0x6
	.word	0x170
	.byte	0x19
	.long	0x19524
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x41
	.uleb128 0x25
	.ascii "__retval\0"
	.byte	0x6
	.word	0x172
	.byte	0x7
	.long	0x191dc
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x25
	.ascii "__local_argv\0"
	.byte	0x6
	.word	0x173
	.byte	0x15
	.long	0x8a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0xb5
	.quad	.LVL0
	.long	0x1cdea
	.byte	0
	.uleb128 0x10
	.ascii "remove\0"
	.byte	0x6
	.word	0x2c3
	.byte	0xf
	.long	0x191dc
	.long	0x1abac
	.uleb128 0x1
	.long	0x19524
	.byte	0
	.uleb128 0x10
	.ascii "rename\0"
	.byte	0x6
	.word	0x2c4
	.byte	0xf
	.long	0x191dc
	.long	0x1abcb
	.uleb128 0x1
	.long	0x19524
	.uleb128 0x1
	.long	0x19524
	.byte	0
	.uleb128 0x44
	.ascii "rewind\0"
	.byte	0x6
	.word	0x2ca
	.byte	0x10
	.long	0x1abe1
	.uleb128 0x1
	.long	0x1a8c5
	.byte	0
	.uleb128 0x8
	.ascii "scanf\0"
	.byte	0x6
	.word	0x12d
	.byte	0x5
	.ascii "_Z5scanfPKcz\0"
	.long	0x191dc
	.long	0x1ac08
	.uleb128 0x1
	.long	0x19524
	.uleb128 0x41
	.byte	0
	.uleb128 0x44
	.ascii "setbuf\0"
	.byte	0x6
	.word	0x2cc
	.byte	0x10
	.long	0x1ac23
	.uleb128 0x1
	.long	0x1a8c5
	.uleb128 0x1
	.long	0x1926d
	.byte	0
	.uleb128 0x10
	.ascii "setvbuf\0"
	.byte	0x6
	.word	0x2d0
	.byte	0xf
	.long	0x191dc
	.long	0x1ac4d
	.uleb128 0x1
	.long	0x1a8c5
	.uleb128 0x1
	.long	0x1926d
	.uleb128 0x1
	.long	0x191dc
	.uleb128 0x1
	.long	0x1922c
	.byte	0
	.uleb128 0x8
	.ascii "sprintf\0"
	.byte	0x6
	.word	0x18c
	.byte	0x5
	.ascii "_Z7sprintfPcPKcz\0"
	.long	0x191dc
	.long	0x1ac7f
	.uleb128 0x1
	.long	0x1926d
	.uleb128 0x1
	.long	0x19524
	.uleb128 0x41
	.byte	0
	.uleb128 0x8
	.ascii "sscanf\0"
	.byte	0x6
	.word	0x122
	.byte	0x5
	.ascii "_Z6sscanfPKcS0_z\0"
	.long	0x191dc
	.long	0x1acb0
	.uleb128 0x1
	.long	0x19524
	.uleb128 0x1
	.long	0x19524
	.uleb128 0x41
	.byte	0
	.uleb128 0x56
	.ascii "tmpfile\0"
	.byte	0x6
	.word	0x2ea
	.byte	0x11
	.long	0x1a8c5
	.uleb128 0x10
	.ascii "tmpnam\0"
	.byte	0x6
	.word	0x2eb
	.byte	0x11
	.long	0x1926d
	.long	0x1acdb
	.uleb128 0x1
	.long	0x1926d
	.byte	0
	.uleb128 0x10
	.ascii "ungetc\0"
	.byte	0x6
	.word	0x2ec
	.byte	0xf
	.long	0x191dc
	.long	0x1acfa
	.uleb128 0x1
	.long	0x191dc
	.uleb128 0x1
	.long	0x1a8c5
	.byte	0
	.uleb128 0x8
	.ascii "vfprintf\0"
	.byte	0x6
	.word	0x199
	.byte	0x5
	.ascii "_Z8vfprintfP6_iobufPKcPc\0"
	.long	0x191dc
	.long	0x1ad39
	.uleb128 0x1
	.long	0x1a8c5
	.uleb128 0x1
	.long	0x19524
	.uleb128 0x1
	.long	0x8a
	.byte	0
	.uleb128 0x8
	.ascii "vprintf\0"
	.byte	0x6
	.word	0x1a0
	.byte	0x5
	.ascii "_Z7vprintfPKcPc\0"
	.long	0x191dc
	.long	0x1ad69
	.uleb128 0x1
	.long	0x19524
	.uleb128 0x1
	.long	0x8a
	.byte	0
	.uleb128 0x8
	.ascii "vsprintf\0"
	.byte	0x6
	.word	0x1a7
	.byte	0x5
	.ascii "_Z8vsprintfPcPKcS_\0"
	.long	0x191dc
	.long	0x1ada2
	.uleb128 0x1
	.long	0x1926d
	.uleb128 0x1
	.long	0x19524
	.uleb128 0x1
	.long	0x8a
	.byte	0
	.uleb128 0x8
	.ascii "snprintf\0"
	.byte	0x6
	.word	0x1c3
	.byte	0x5
	.ascii "_Z8snprintfPcyPKcz\0"
	.long	0x191dc
	.long	0x1addc
	.uleb128 0x1
	.long	0x1926d
	.uleb128 0x1
	.long	0x1922c
	.uleb128 0x1
	.long	0x19524
	.uleb128 0x41
	.byte	0
	.uleb128 0x8
	.ascii "vfscanf\0"
	.byte	0x6
	.word	0x157
	.byte	0x5
	.ascii "_Z7vfscanfP6_iobufPKcPc\0"
	.long	0x191dc
	.long	0x1ae19
	.uleb128 0x1
	.long	0x1a8c5
	.uleb128 0x1
	.long	0x19524
	.uleb128 0x1
	.long	0x8a
	.byte	0
	.uleb128 0x8
	.ascii "vscanf\0"
	.byte	0x6
	.word	0x150
	.byte	0x5
	.ascii "_Z6vscanfPKcPc\0"
	.long	0x191dc
	.long	0x1ae47
	.uleb128 0x1
	.long	0x19524
	.uleb128 0x1
	.long	0x8a
	.byte	0
	.uleb128 0x8
	.ascii "vsnprintf\0"
	.byte	0x6
	.word	0x1d0
	.byte	0x5
	.ascii "_Z9vsnprintfPcyPKcS_\0"
	.long	0x191dc
	.long	0x1ae88
	.uleb128 0x1
	.long	0x1926d
	.uleb128 0x1
	.long	0x1922c
	.uleb128 0x1
	.long	0x19524
	.uleb128 0x1
	.long	0x8a
	.byte	0
	.uleb128 0x8
	.ascii "vsscanf\0"
	.byte	0x6
	.word	0x149
	.byte	0x5
	.ascii "_Z7vsscanfPKcS0_Pc\0"
	.long	0x191dc
	.long	0x1aec0
	.uleb128 0x1
	.long	0x19524
	.uleb128 0x1
	.long	0x19524
	.uleb128 0x1
	.long	0x8a
	.byte	0
	.uleb128 0xe
	.long	0x30a4
	.uleb128 0xe
	.long	0x2e72
	.uleb128 0xa
	.long	0x1aec5
	.uleb128 0xd
	.long	0x309f
	.uleb128 0xe
	.long	0x309f
	.uleb128 0xa
	.long	0x1aed4
	.uleb128 0xd
	.long	0x2e72
	.uleb128 0xe
	.long	0x14cc6
	.uleb128 0xd
	.long	0x14cc6
	.uleb128 0xe
	.long	0x314b
	.uleb128 0xa
	.long	0x1aeed
	.uleb128 0xe
	.long	0x3290
	.uleb128 0xa
	.long	0x1aef7
	.uleb128 0xe
	.long	0x351f
	.uleb128 0xa
	.long	0x1af01
	.uleb128 0xd
	.long	0x330c
	.uleb128 0xe
	.long	0x3524
	.uleb128 0xa
	.long	0x1af10
	.uleb128 0xd
	.long	0x351f
	.uleb128 0xe
	.long	0x384a
	.uleb128 0xa
	.long	0x1af1f
	.uleb128 0xd
	.long	0x368c
	.uleb128 0xe
	.long	0x14cce
	.uleb128 0xe
	.long	0x384f
	.uleb128 0xe
	.long	0x39e5
	.uleb128 0xd
	.long	0x14cce
	.uleb128 0xe
	.long	0x3b04
	.uleb128 0xd
	.long	0x4049
	.uleb128 0xd
	.long	0x3b04
	.uleb128 0xe
	.long	0x4049
	.uleb128 0xe
	.long	0x417d
	.uleb128 0xd
	.long	0x4728
	.uleb128 0xd
	.long	0x417d
	.uleb128 0xe
	.long	0x4728
	.uleb128 0x2f
	.ascii "tm\0"
	.byte	0x24
	.byte	0x33
	.word	0x567
	.byte	0xa
	.long	0x1b018
	.uleb128 0x3c
	.ascii "tm_sec\0"
	.byte	0x33
	.word	0x568
	.byte	0x9
	.long	0x191dc
	.byte	0
	.uleb128 0x3c
	.ascii "tm_min\0"
	.byte	0x33
	.word	0x569
	.byte	0x9
	.long	0x191dc
	.byte	0x4
	.uleb128 0x3c
	.ascii "tm_hour\0"
	.byte	0x33
	.word	0x56a
	.byte	0x9
	.long	0x191dc
	.byte	0x8
	.uleb128 0x3c
	.ascii "tm_mday\0"
	.byte	0x33
	.word	0x56b
	.byte	0x9
	.long	0x191dc
	.byte	0xc
	.uleb128 0x3c
	.ascii "tm_mon\0"
	.byte	0x33
	.word	0x56c
	.byte	0x9
	.long	0x191dc
	.byte	0x10
	.uleb128 0x3c
	.ascii "tm_year\0"
	.byte	0x33
	.word	0x56d
	.byte	0x9
	.long	0x191dc
	.byte	0x14
	.uleb128 0x3c
	.ascii "tm_wday\0"
	.byte	0x33
	.word	0x56e
	.byte	0x9
	.long	0x191dc
	.byte	0x18
	.uleb128 0x3c
	.ascii "tm_yday\0"
	.byte	0x33
	.word	0x56f
	.byte	0x9
	.long	0x191dc
	.byte	0x1c
	.uleb128 0x3c
	.ascii "tm_isdst\0"
	.byte	0x33
	.word	0x570
	.byte	0x9
	.long	0x191dc
	.byte	0x20
	.byte	0
	.uleb128 0xa
	.long	0x1af6a
	.uleb128 0x46
	.ascii "mbstate_t\0"
	.byte	0x33
	.word	0x5a5
	.byte	0xf
	.long	0x191dc
	.uleb128 0xa
	.long	0x1b01d
	.uleb128 0x10
	.ascii "btowc\0"
	.byte	0x33
	.word	0x5a9
	.byte	0x12
	.long	0x1925e
	.long	0x1b04e
	.uleb128 0x1
	.long	0x191dc
	.byte	0
	.uleb128 0x10
	.ascii "fgetwc\0"
	.byte	0x6
	.word	0x4ea
	.byte	0x12
	.long	0x1925e
	.long	0x1b068
	.uleb128 0x1
	.long	0x1a8c5
	.byte	0
	.uleb128 0x10
	.ascii "fgetws\0"
	.byte	0x6
	.word	0x4f3
	.byte	0x14
	.long	0x19272
	.long	0x1b08c
	.uleb128 0x1
	.long	0x19272
	.uleb128 0x1
	.long	0x191dc
	.uleb128 0x1
	.long	0x1a8c5
	.byte	0
	.uleb128 0x10
	.ascii "fputwc\0"
	.byte	0x6
	.word	0x4ec
	.byte	0x12
	.long	0x1925e
	.long	0x1b0ab
	.uleb128 0x1
	.long	0x19277
	.uleb128 0x1
	.long	0x1a8c5
	.byte	0
	.uleb128 0x10
	.ascii "fputws\0"
	.byte	0x6
	.word	0x4f4
	.byte	0xf
	.long	0x191dc
	.long	0x1b0ca
	.uleb128 0x1
	.long	0x195c9
	.uleb128 0x1
	.long	0x1a8c5
	.byte	0
	.uleb128 0x10
	.ascii "fwide\0"
	.byte	0x33
	.word	0x5b8
	.byte	0xf
	.long	0x191dc
	.long	0x1b0e8
	.uleb128 0x1
	.long	0x1a8c5
	.uleb128 0x1
	.long	0x191dc
	.byte	0
	.uleb128 0x10
	.ascii "fwprintf\0"
	.byte	0x6
	.word	0x41e
	.byte	0x5
	.long	0x191dc
	.long	0x1b10a
	.uleb128 0x1
	.long	0x1a8c5
	.uleb128 0x1
	.long	0x195c9
	.uleb128 0x41
	.byte	0
	.uleb128 0x10
	.ascii "fwscanf\0"
	.byte	0x6
	.word	0x3fa
	.byte	0x5
	.long	0x191dc
	.long	0x1b12b
	.uleb128 0x1
	.long	0x1a8c5
	.uleb128 0x1
	.long	0x195c9
	.uleb128 0x41
	.byte	0
	.uleb128 0x10
	.ascii "getwc\0"
	.byte	0x6
	.word	0x4ee
	.byte	0x12
	.long	0x1925e
	.long	0x1b144
	.uleb128 0x1
	.long	0x1a8c5
	.byte	0
	.uleb128 0x56
	.ascii "getwchar\0"
	.byte	0x6
	.word	0x4ef
	.byte	0x12
	.long	0x1925e
	.uleb128 0x10
	.ascii "mbrlen\0"
	.byte	0x33
	.word	0x5aa
	.byte	0x12
	.long	0x1922c
	.long	0x1b17a
	.uleb128 0x1
	.long	0x19524
	.uleb128 0x1
	.long	0x1922c
	.uleb128 0x1
	.long	0x1b17a
	.byte	0
	.uleb128 0xe
	.long	0x1b01d
	.uleb128 0x10
	.ascii "mbrtowc\0"
	.byte	0x33
	.word	0x5ab
	.byte	0x12
	.long	0x1922c
	.long	0x1b1a9
	.uleb128 0x1
	.long	0x19272
	.uleb128 0x1
	.long	0x19524
	.uleb128 0x1
	.long	0x1922c
	.uleb128 0x1
	.long	0x1b17a
	.byte	0
	.uleb128 0x10
	.ascii "mbsinit\0"
	.byte	0x33
	.word	0x5bd
	.byte	0xf
	.long	0x191dc
	.long	0x1b1c4
	.uleb128 0x1
	.long	0x1b1c4
	.byte	0
	.uleb128 0xe
	.long	0x1b030
	.uleb128 0x10
	.ascii "mbsrtowcs\0"
	.byte	0x33
	.word	0x5ac
	.byte	0x12
	.long	0x1922c
	.long	0x1b1f5
	.uleb128 0x1
	.long	0x19272
	.uleb128 0x1
	.long	0x1b1f5
	.uleb128 0x1
	.long	0x1922c
	.uleb128 0x1
	.long	0x1b17a
	.byte	0
	.uleb128 0xe
	.long	0x19524
	.uleb128 0x10
	.ascii "putwc\0"
	.byte	0x6
	.word	0x4f0
	.byte	0x12
	.long	0x1925e
	.long	0x1b218
	.uleb128 0x1
	.long	0x19277
	.uleb128 0x1
	.long	0x1a8c5
	.byte	0
	.uleb128 0x10
	.ascii "putwchar\0"
	.byte	0x6
	.word	0x4f1
	.byte	0x12
	.long	0x1925e
	.long	0x1b234
	.uleb128 0x1
	.long	0x19277
	.byte	0
	.uleb128 0x6d
	.secrel32	.LASF175
	.byte	0x3e
	.long	0x191dc
	.long	0x1b24e
	.uleb128 0x1
	.long	0x19272
	.uleb128 0x1
	.long	0x195c9
	.uleb128 0x41
	.byte	0
	.uleb128 0x6d
	.secrel32	.LASF175
	.byte	0x22
	.long	0x191dc
	.long	0x1b26d
	.uleb128 0x1
	.long	0x19272
	.uleb128 0x1
	.long	0x1922c
	.uleb128 0x1
	.long	0x195c9
	.uleb128 0x41
	.byte	0
	.uleb128 0x10
	.ascii "swscanf\0"
	.byte	0x6
	.word	0x3e4
	.byte	0x5
	.long	0x191dc
	.long	0x1b28e
	.uleb128 0x1
	.long	0x195c9
	.uleb128 0x1
	.long	0x195c9
	.uleb128 0x41
	.byte	0
	.uleb128 0x10
	.ascii "ungetwc\0"
	.byte	0x6
	.word	0x4f2
	.byte	0x12
	.long	0x1925e
	.long	0x1b2ae
	.uleb128 0x1
	.long	0x1925e
	.uleb128 0x1
	.long	0x1a8c5
	.byte	0
	.uleb128 0x10
	.ascii "vfwprintf\0"
	.byte	0x6
	.word	0x434
	.byte	0x5
	.long	0x191dc
	.long	0x1b2d5
	.uleb128 0x1
	.long	0x1a8c5
	.uleb128 0x1
	.long	0x195c9
	.uleb128 0x1
	.long	0x8a
	.byte	0
	.uleb128 0x10
	.ascii "vfwscanf\0"
	.byte	0x6
	.word	0x414
	.byte	0x5
	.long	0x191dc
	.long	0x1b2fb
	.uleb128 0x1
	.long	0x1a8c5
	.uleb128 0x1
	.long	0x195c9
	.uleb128 0x1
	.long	0x8a
	.byte	0
	.uleb128 0x6d
	.secrel32	.LASF176
	.byte	0x33
	.long	0x191dc
	.long	0x1b319
	.uleb128 0x1
	.long	0x19272
	.uleb128 0x1
	.long	0x195c9
	.uleb128 0x1
	.long	0x8a
	.byte	0
	.uleb128 0x6d
	.secrel32	.LASF176
	.byte	0x1b
	.long	0x191dc
	.long	0x1b33c
	.uleb128 0x1
	.long	0x19272
	.uleb128 0x1
	.long	0x1922c
	.uleb128 0x1
	.long	0x195c9
	.uleb128 0x1
	.long	0x8a
	.byte	0
	.uleb128 0x10
	.ascii "vswscanf\0"
	.byte	0x6
	.word	0x406
	.byte	0x5
	.long	0x191dc
	.long	0x1b362
	.uleb128 0x1
	.long	0x195c9
	.uleb128 0x1
	.long	0x195c9
	.uleb128 0x1
	.long	0x8a
	.byte	0
	.uleb128 0x10
	.ascii "vwprintf\0"
	.byte	0x6
	.word	0x43b
	.byte	0x5
	.long	0x191dc
	.long	0x1b383
	.uleb128 0x1
	.long	0x195c9
	.uleb128 0x1
	.long	0x8a
	.byte	0
	.uleb128 0x10
	.ascii "vwscanf\0"
	.byte	0x6
	.word	0x40d
	.byte	0x5
	.long	0x191dc
	.long	0x1b3a3
	.uleb128 0x1
	.long	0x195c9
	.uleb128 0x1
	.long	0x8a
	.byte	0
	.uleb128 0x10
	.ascii "wcrtomb\0"
	.byte	0x33
	.word	0x5ad
	.byte	0x12
	.long	0x1922c
	.long	0x1b3c8
	.uleb128 0x1
	.long	0x1926d
	.uleb128 0x1
	.long	0x19277
	.uleb128 0x1
	.long	0x1b17a
	.byte	0
	.uleb128 0x10
	.ascii "wcscat\0"
	.byte	0x33
	.word	0x52b
	.byte	0x14
	.long	0x19272
	.long	0x1b3e7
	.uleb128 0x1
	.long	0x19272
	.uleb128 0x1
	.long	0x195c9
	.byte	0
	.uleb128 0x10
	.ascii "wcscmp\0"
	.byte	0x33
	.word	0x52d
	.byte	0xf
	.long	0x191dc
	.long	0x1b406
	.uleb128 0x1
	.long	0x195c9
	.uleb128 0x1
	.long	0x195c9
	.byte	0
	.uleb128 0x10
	.ascii "wcscoll\0"
	.byte	0x33
	.word	0x54e
	.byte	0xf
	.long	0x191dc
	.long	0x1b426
	.uleb128 0x1
	.long	0x195c9
	.uleb128 0x1
	.long	0x195c9
	.byte	0
	.uleb128 0x10
	.ascii "wcscpy\0"
	.byte	0x33
	.word	0x52e
	.byte	0x14
	.long	0x19272
	.long	0x1b445
	.uleb128 0x1
	.long	0x19272
	.uleb128 0x1
	.long	0x195c9
	.byte	0
	.uleb128 0x10
	.ascii "wcscspn\0"
	.byte	0x33
	.word	0x52f
	.byte	0x12
	.long	0x1922c
	.long	0x1b465
	.uleb128 0x1
	.long	0x195c9
	.uleb128 0x1
	.long	0x195c9
	.byte	0
	.uleb128 0x10
	.ascii "wcsftime\0"
	.byte	0x33
	.word	0x57b
	.byte	0x12
	.long	0x1922c
	.long	0x1b490
	.uleb128 0x1
	.long	0x19272
	.uleb128 0x1
	.long	0x1922c
	.uleb128 0x1
	.long	0x195c9
	.uleb128 0x1
	.long	0x1b490
	.byte	0
	.uleb128 0xe
	.long	0x1b018
	.uleb128 0x10
	.ascii "wcslen\0"
	.byte	0x33
	.word	0x530
	.byte	0x12
	.long	0x1922c
	.long	0x1b4af
	.uleb128 0x1
	.long	0x195c9
	.byte	0
	.uleb128 0x10
	.ascii "wcsncat\0"
	.byte	0x33
	.word	0x532
	.byte	0x14
	.long	0x19272
	.long	0x1b4d4
	.uleb128 0x1
	.long	0x19272
	.uleb128 0x1
	.long	0x195c9
	.uleb128 0x1
	.long	0x1922c
	.byte	0
	.uleb128 0x10
	.ascii "wcsncmp\0"
	.byte	0x33
	.word	0x533
	.byte	0xf
	.long	0x191dc
	.long	0x1b4f9
	.uleb128 0x1
	.long	0x195c9
	.uleb128 0x1
	.long	0x195c9
	.uleb128 0x1
	.long	0x1922c
	.byte	0
	.uleb128 0x10
	.ascii "wcsncpy\0"
	.byte	0x33
	.word	0x534
	.byte	0x14
	.long	0x19272
	.long	0x1b51e
	.uleb128 0x1
	.long	0x19272
	.uleb128 0x1
	.long	0x195c9
	.uleb128 0x1
	.long	0x1922c
	.byte	0
	.uleb128 0x10
	.ascii "wcsrtombs\0"
	.byte	0x33
	.word	0x5ae
	.byte	0x12
	.long	0x1922c
	.long	0x1b54a
	.uleb128 0x1
	.long	0x1926d
	.uleb128 0x1
	.long	0x1b54a
	.uleb128 0x1
	.long	0x1922c
	.uleb128 0x1
	.long	0x1b17a
	.byte	0
	.uleb128 0xe
	.long	0x195c9
	.uleb128 0x10
	.ascii "wcsspn\0"
	.byte	0x33
	.word	0x538
	.byte	0x12
	.long	0x1922c
	.long	0x1b56e
	.uleb128 0x1
	.long	0x195c9
	.uleb128 0x1
	.long	0x195c9
	.byte	0
	.uleb128 0x10
	.ascii "wcstod\0"
	.byte	0x2f
	.word	0x232
	.byte	0x12
	.long	0x19214
	.long	0x1b58d
	.uleb128 0x1
	.long	0x195c9
	.uleb128 0x1
	.long	0x195d3
	.byte	0
	.uleb128 0x10
	.ascii "wcstof\0"
	.byte	0x2f
	.word	0x236
	.byte	0x11
	.long	0x1921e
	.long	0x1b5ac
	.uleb128 0x1
	.long	0x195c9
	.uleb128 0x1
	.long	0x195d3
	.byte	0
	.uleb128 0x10
	.ascii "wcstok\0"
	.byte	0x33
	.word	0x53d
	.byte	0x14
	.long	0x19272
	.long	0x1b5cb
	.uleb128 0x1
	.long	0x19272
	.uleb128 0x1
	.long	0x195c9
	.byte	0
	.uleb128 0x10
	.ascii "wcstol\0"
	.byte	0x2f
	.word	0x242
	.byte	0x10
	.long	0x191e8
	.long	0x1b5ef
	.uleb128 0x1
	.long	0x195c9
	.uleb128 0x1
	.long	0x195d3
	.uleb128 0x1
	.long	0x191dc
	.byte	0
	.uleb128 0x10
	.ascii "wcstoul\0"
	.byte	0x2f
	.word	0x244
	.byte	0x19
	.long	0x19187
	.long	0x1b614
	.uleb128 0x1
	.long	0x195c9
	.uleb128 0x1
	.long	0x195d3
	.uleb128 0x1
	.long	0x191dc
	.byte	0
	.uleb128 0x10
	.ascii "wcsxfrm\0"
	.byte	0x33
	.word	0x54c
	.byte	0x12
	.long	0x1922c
	.long	0x1b639
	.uleb128 0x1
	.long	0x19272
	.uleb128 0x1
	.long	0x195c9
	.uleb128 0x1
	.long	0x1922c
	.byte	0
	.uleb128 0x10
	.ascii "wctob\0"
	.byte	0x33
	.word	0x5af
	.byte	0xf
	.long	0x191dc
	.long	0x1b652
	.uleb128 0x1
	.long	0x1925e
	.byte	0
	.uleb128 0x10
	.ascii "wmemcmp\0"
	.byte	0x33
	.word	0x5b4
	.byte	0xf
	.long	0x191dc
	.long	0x1b677
	.uleb128 0x1
	.long	0x195c9
	.uleb128 0x1
	.long	0x195c9
	.uleb128 0x1
	.long	0x1922c
	.byte	0
	.uleb128 0x10
	.ascii "wmemcpy\0"
	.byte	0x33
	.word	0x5b5
	.byte	0x14
	.long	0x19272
	.long	0x1b69c
	.uleb128 0x1
	.long	0x19272
	.uleb128 0x1
	.long	0x195c9
	.uleb128 0x1
	.long	0x1922c
	.byte	0
	.uleb128 0x10
	.ascii "wmemmove\0"
	.byte	0x33
	.word	0x5b7
	.byte	0x14
	.long	0x19272
	.long	0x1b6c2
	.uleb128 0x1
	.long	0x19272
	.uleb128 0x1
	.long	0x195c9
	.uleb128 0x1
	.long	0x1922c
	.byte	0
	.uleb128 0x10
	.ascii "wmemset\0"
	.byte	0x33
	.word	0x5b2
	.byte	0x14
	.long	0x19272
	.long	0x1b6e7
	.uleb128 0x1
	.long	0x19272
	.uleb128 0x1
	.long	0x19277
	.uleb128 0x1
	.long	0x1922c
	.byte	0
	.uleb128 0x10
	.ascii "wprintf\0"
	.byte	0x6
	.word	0x429
	.byte	0x5
	.long	0x191dc
	.long	0x1b703
	.uleb128 0x1
	.long	0x195c9
	.uleb128 0x41
	.byte	0
	.uleb128 0x10
	.ascii "wscanf\0"
	.byte	0x6
	.word	0x3ef
	.byte	0x5
	.long	0x191dc
	.long	0x1b71e
	.uleb128 0x1
	.long	0x195c9
	.uleb128 0x41
	.byte	0
	.uleb128 0x10
	.ascii "wcschr\0"
	.byte	0x33
	.word	0x52c
	.byte	0x22
	.long	0x19272
	.long	0x1b73d
	.uleb128 0x1
	.long	0x195c9
	.uleb128 0x1
	.long	0x19277
	.byte	0
	.uleb128 0x10
	.ascii "wcspbrk\0"
	.byte	0x33
	.word	0x536
	.byte	0x22
	.long	0x19272
	.long	0x1b75d
	.uleb128 0x1
	.long	0x195c9
	.uleb128 0x1
	.long	0x195c9
	.byte	0
	.uleb128 0x10
	.ascii "wcsrchr\0"
	.byte	0x33
	.word	0x537
	.byte	0x22
	.long	0x19272
	.long	0x1b77d
	.uleb128 0x1
	.long	0x195c9
	.uleb128 0x1
	.long	0x19277
	.byte	0
	.uleb128 0x10
	.ascii "wcsstr\0"
	.byte	0x33
	.word	0x539
	.byte	0x22
	.long	0x19272
	.long	0x1b79c
	.uleb128 0x1
	.long	0x195c9
	.uleb128 0x1
	.long	0x195c9
	.byte	0
	.uleb128 0x10
	.ascii "wmemchr\0"
	.byte	0x33
	.word	0x5b3
	.byte	0x22
	.long	0x19272
	.long	0x1b7c1
	.uleb128 0x1
	.long	0x195c9
	.uleb128 0x1
	.long	0x19277
	.uleb128 0x1
	.long	0x1922c
	.byte	0
	.uleb128 0x10
	.ascii "wcstold\0"
	.byte	0x2f
	.word	0x23f
	.byte	0x17
	.long	0x19205
	.long	0x1b7e1
	.uleb128 0x1
	.long	0x195c9
	.uleb128 0x1
	.long	0x195d3
	.byte	0
	.uleb128 0x10
	.ascii "wcstoll\0"
	.byte	0x33
	.word	0x5bf
	.byte	0x27
	.long	0x191f4
	.long	0x1b806
	.uleb128 0x1
	.long	0x195c9
	.uleb128 0x1
	.long	0x195d3
	.uleb128 0x1
	.long	0x191dc
	.byte	0
	.uleb128 0x10
	.ascii "wcstoull\0"
	.byte	0x33
	.word	0x5c0
	.byte	0x30
	.long	0x191a1
	.long	0x1b82c
	.uleb128 0x1
	.long	0x195c9
	.uleb128 0x1
	.long	0x195d3
	.uleb128 0x1
	.long	0x191dc
	.byte	0
	.uleb128 0x6c
	.ascii "setlocale\0"
	.byte	0x2d
	.byte	0x5a
	.byte	0x11
	.long	0x1926d
	.long	0x1b84d
	.uleb128 0x1
	.long	0x191dc
	.uleb128 0x1
	.long	0x19524
	.byte	0
	.uleb128 0xb6
	.ascii "localeconv\0"
	.byte	0x2d
	.byte	0x5b
	.byte	0x21
	.long	0x1951f
	.uleb128 0xe
	.long	0x49ef
	.uleb128 0xe
	.long	0x4e4d
	.uleb128 0xd
	.long	0x4e4d
	.uleb128 0x2c
	.long	0x49ef
	.uleb128 0xd
	.long	0x49ef
	.uleb128 0xe
	.long	0x4ecb
	.uleb128 0xd
	.long	0x191bb
	.uleb128 0xd
	.long	0x191e3
	.uleb128 0x64
	.ascii "__pstl\0"
	.byte	0x35
	.byte	0xf
	.byte	0xb
	.long	0x1bd02
	.uleb128 0xb7
	.ascii "execution\0"
	.byte	0x35
	.byte	0x11
	.byte	0xb
	.uleb128 0xb8
	.ascii "v1\0"
	.byte	0x35
	.byte	0x13
	.byte	0x12
	.uleb128 0x3a
	.ascii "sequenced_policy\0"
	.byte	0x1
	.byte	0x35
	.byte	0x17
	.byte	0x7
	.long	0x1b9a3
	.uleb128 0x47
	.secrel32	.LASF177
	.byte	0x1c
	.ascii "_ZN6__pstl9execution2v116sequenced_policy19__allow_unsequencedEv\0"
	.long	0x2dd
	.uleb128 0x47
	.secrel32	.LASF178
	.byte	0x21
	.ascii "_ZN6__pstl9execution2v116sequenced_policy14__allow_vectorEv\0"
	.long	0x2dd
	.uleb128 0x47
	.secrel32	.LASF179
	.byte	0x26
	.ascii "_ZN6__pstl9execution2v116sequenced_policy16__allow_parallelEv\0"
	.long	0x2dd
	.byte	0
	.uleb128 0xa
	.long	0x1b8af
	.uleb128 0x3a
	.ascii "parallel_policy\0"
	.byte	0x1
	.byte	0x35
	.byte	0x2d
	.byte	0x7
	.long	0x1ba98
	.uleb128 0x47
	.secrel32	.LASF177
	.byte	0x32
	.ascii "_ZN6__pstl9execution2v115parallel_policy19__allow_unsequencedEv\0"
	.long	0x2dd
	.uleb128 0x47
	.secrel32	.LASF178
	.byte	0x37
	.ascii "_ZN6__pstl9execution2v115parallel_policy14__allow_vectorEv\0"
	.long	0x2dd
	.uleb128 0x47
	.secrel32	.LASF179
	.byte	0x3c
	.ascii "_ZN6__pstl9execution2v115parallel_policy16__allow_parallelEv\0"
	.long	0x2b7e
	.byte	0
	.uleb128 0xa
	.long	0x1b9a8
	.uleb128 0x3a
	.ascii "parallel_unsequenced_policy\0"
	.byte	0x1
	.byte	0x35
	.byte	0x43
	.byte	0x7
	.long	0x1bbbd
	.uleb128 0x47
	.secrel32	.LASF177
	.byte	0x48
	.ascii "_ZN6__pstl9execution2v127parallel_unsequenced_policy19__allow_unsequencedEv\0"
	.long	0x2b7e
	.uleb128 0x47
	.secrel32	.LASF178
	.byte	0x4d
	.ascii "_ZN6__pstl9execution2v127parallel_unsequenced_policy14__allow_vectorEv\0"
	.long	0x2b7e
	.uleb128 0x47
	.secrel32	.LASF179
	.byte	0x52
	.ascii "_ZN6__pstl9execution2v127parallel_unsequenced_policy16__allow_parallelEv\0"
	.long	0x2b7e
	.byte	0
	.uleb128 0xa
	.long	0x1ba9d
	.uleb128 0x3a
	.ascii "unsequenced_policy\0"
	.byte	0x1
	.byte	0x35
	.byte	0x58
	.byte	0x7
	.long	0x1bcbe
	.uleb128 0x47
	.secrel32	.LASF177
	.byte	0x5d
	.ascii "_ZN6__pstl9execution2v118unsequenced_policy19__allow_unsequencedEv\0"
	.long	0x2b7e
	.uleb128 0x47
	.secrel32	.LASF178
	.byte	0x62
	.ascii "_ZN6__pstl9execution2v118unsequenced_policy14__allow_vectorEv\0"
	.long	0x2b7e
	.uleb128 0x47
	.secrel32	.LASF179
	.byte	0x67
	.ascii "_ZN6__pstl9execution2v118unsequenced_policy16__allow_parallelEv\0"
	.long	0x2dd
	.byte	0
	.uleb128 0xa
	.long	0x1bbc2
	.uleb128 0x6e
	.ascii "seq\0"
	.byte	0x6e
	.byte	0x1c
	.long	0x1b9a3
	.byte	0x1
	.byte	0
	.uleb128 0x6e
	.ascii "par\0"
	.byte	0x6f
	.byte	0x1b
	.long	0x1ba98
	.byte	0x1
	.byte	0
	.uleb128 0x6e
	.ascii "par_unseq\0"
	.byte	0x70
	.byte	0x27
	.long	0x1bbbd
	.byte	0x1
	.byte	0
	.uleb128 0x6e
	.ascii "unseq\0"
	.byte	0x71
	.byte	0x1e
	.long	0x1bcbe
	.byte	0x1
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x6f
	.long	0x1bcc3
	.uleb128 0x6f
	.long	0x1bcd0
	.uleb128 0x6f
	.long	0x1bcdd
	.uleb128 0x6f
	.long	0x1bcf0
	.uleb128 0xe
	.long	0x14fa0
	.uleb128 0xd
	.long	0x1513d
	.uleb128 0xe
	.long	0x1513d
	.uleb128 0xe
	.long	0x4eea
	.uleb128 0xd
	.long	0x5015
	.uleb128 0xd
	.long	0x4eea
	.uleb128 0xd
	.long	0x50a3
	.uleb128 0xd
	.long	0x50b0
	.uleb128 0xe
	.long	0x153f0
	.uleb128 0xa
	.long	0x1bd3e
	.uleb128 0xd
	.long	0x1559a
	.uleb128 0xe
	.long	0x19187
	.uleb128 0xa
	.long	0x1bd4d
	.uleb128 0xe
	.long	0x1559a
	.uleb128 0xa
	.long	0x1bd57
	.uleb128 0xe
	.long	0x5223
	.uleb128 0xa
	.long	0x1bd61
	.uleb128 0xd
	.long	0x535b
	.uleb128 0xd
	.long	0x5223
	.uleb128 0xd
	.long	0x53f6
	.uleb128 0xd
	.long	0x5403
	.uleb128 0xe
	.long	0x1919c
	.uleb128 0xe
	.long	0x5595
	.uleb128 0xa
	.long	0x1bd84
	.uleb128 0xd
	.long	0x582c
	.uleb128 0xd
	.long	0x5595
	.uleb128 0x2c
	.long	0x5595
	.uleb128 0xe
	.long	0x583e
	.uleb128 0xa
	.long	0x1bd9d
	.uleb128 0xd
	.long	0x5a5f
	.uleb128 0x2c
	.long	0x583e
	.uleb128 0x2c
	.long	0x5a46
	.uleb128 0xe
	.long	0x5a41
	.uleb128 0xa
	.long	0x1bdb6
	.uleb128 0xd
	.long	0x5a46
	.uleb128 0xe
	.long	0x5566
	.uleb128 0xa
	.long	0x1bdc5
	.uleb128 0xe
	.long	0x5ddd
	.uleb128 0xa
	.long	0x1bdcf
	.uleb128 0xd
	.long	0x5b10
	.uleb128 0x2c
	.long	0x5566
	.uleb128 0xe
	.long	0x71bf
	.uleb128 0xa
	.long	0x1bde3
	.uleb128 0xe
	.long	0x5de2
	.uleb128 0xa
	.long	0x1bded
	.uleb128 0xd
	.long	0x5e4f
	.uleb128 0xd
	.long	0x71bf
	.uleb128 0x2c
	.long	0x5de2
	.uleb128 0xd
	.long	0x5de2
	.uleb128 0x37
	.ascii "XMAX\0"
	.byte	0xa
	.byte	0xc
	.byte	0xd
	.long	0x19227
	.uleb128 0x9
	.byte	0x3
	.quad	_ZL4XMAX
	.uleb128 0x37
	.ascii "YMAX\0"
	.byte	0xa
	.byte	0xd
	.byte	0xd
	.long	0x19227
	.uleb128 0x9
	.byte	0x3
	.quad	_ZL4YMAX
	.uleb128 0x57
	.ascii "mpo\0"
	.byte	0xe
	.byte	0x9
	.long	0x19e98
	.uleb128 0x9
	.byte	0x3
	.quad	mpo
	.uleb128 0x57
	.ascii "wmpo\0"
	.byte	0xf
	.byte	0x9
	.long	0x19e98
	.uleb128 0x9
	.byte	0x3
	.quad	wmpo
	.uleb128 0x57
	.ascii "mdt\0"
	.byte	0x10
	.byte	0x9
	.long	0x19e98
	.uleb128 0x9
	.byte	0x3
	.quad	mdt
	.uleb128 0x57
	.ascii "dt\0"
	.byte	0x11
	.byte	0x7
	.long	0x1921e
	.uleb128 0x9
	.byte	0x3
	.quad	dt
	.uleb128 0x22
	.ascii "ActionOutput\0"
	.byte	0xa
	.byte	0x15
	.byte	0x11
	.long	0x1a2cf
	.uleb128 0x22
	.ascii "ActionData\0"
	.byte	0xa
	.byte	0x16
	.byte	0x10
	.long	0x1beb5
	.uleb128 0xd
	.long	0x1beba
	.uleb128 0x4b
	.secrel32	.LASF180
	.byte	0x30
	.byte	0xa
	.byte	0x9a
	.byte	0x8
	.long	0x1c00c
	.uleb128 0xb9
	.secrel32	.LASF59
	.byte	0xa
	.byte	0x9b
	.byte	0x19
	.ascii "_ZN5Blorb4sizeE\0"
	.long	0x19227
	.byte	0x4
	.byte	0
	.byte	0
	.byte	0x20
	.byte	0x42
	.byte	0x1
	.uleb128 0x19
	.ascii "pos\0"
	.byte	0xa
	.byte	0x9c
	.byte	0xa
	.long	0x19e98
	.byte	0
	.uleb128 0x19
	.ascii "angle\0"
	.byte	0xa
	.byte	0x9d
	.byte	0x8
	.long	0x1921e
	.byte	0x8
	.uleb128 0x19
	.ascii "ddt\0"
	.byte	0xa
	.byte	0x9e
	.byte	0x6
	.long	0x1c0df
	.byte	0x10
	.uleb128 0x2a
	.secrel32	.LASF180
	.byte	0xa
	.byte	0xa0
	.byte	0x2
	.ascii "_ZN5BlorbC4Ev\0"
	.long	0x1bf31
	.long	0x1bf37
	.uleb128 0x2
	.long	0x1c92b
	.byte	0
	.uleb128 0x35
	.ascii "update\0"
	.byte	0xa
	.byte	0xa2
	.byte	0x6
	.ascii "_ZN5Blorb6updateEv\0"
	.long	0x1c906
	.long	0x1bf61
	.long	0x1bf67
	.uleb128 0x2
	.long	0x1c92b
	.byte	0
	.uleb128 0x8e
	.secrel32	.LASF180
	.ascii "_ZN5BlorbC4ERKS_\0"
	.long	0x1bf86
	.long	0x1bf91
	.uleb128 0x2
	.long	0x1c92b
	.uleb128 0x1
	.long	0x1ca7a
	.byte	0
	.uleb128 0x70
	.secrel32	.LASF35
	.ascii "_ZN5BlorbaSEOS_\0"
	.long	0x1beb5
	.long	0x1bfb2
	.long	0x1bfbd
	.uleb128 0x2
	.long	0x1c92b
	.uleb128 0x1
	.long	0x1e580
	.byte	0
	.uleb128 0x8e
	.secrel32	.LASF180
	.ascii "_ZN5BlorbC4EOS_\0"
	.long	0x1bfdb
	.long	0x1bfe6
	.uleb128 0x2
	.long	0x1c92b
	.uleb128 0x1
	.long	0x1e580
	.byte	0
	.uleb128 0x6b
	.ascii "~Blorb\0"
	.ascii "_ZN5BlorbD4Ev\0"
	.long	0x1c000
	.uleb128 0x2
	.long	0x1c92b
	.uleb128 0x2
	.long	0x191dc
	.byte	0
	.byte	0
	.uleb128 0xa
	.long	0x1beba
	.uleb128 0x22
	.ascii "ActionFunc\0"
	.byte	0xa
	.byte	0x17
	.byte	0x17
	.long	0x1c024
	.uleb128 0xe
	.long	0x1c029
	.uleb128 0x8d
	.long	0x1be8d
	.long	0x1c039
	.uleb128 0x1
	.long	0x1bea2
	.byte	0
	.uleb128 0x8f
	.ascii "Action\0"
	.long	0x14cb6
	.byte	0x19
	.long	0x1c076
	.uleb128 0x45
	.ascii "ACT_NULL\0"
	.byte	0
	.uleb128 0x45
	.ascii "ACT_MOVE_FORWARD\0"
	.byte	0x1
	.uleb128 0x45
	.ascii "ACT_COUNT\0"
	.byte	0x2
	.byte	0
	.uleb128 0x90
	.long	0x1c011
	.long	0x1c087
	.uleb128 0x91
	.long	0x191a1
	.byte	0
	.uleb128 0x57
	.ascii "actreg\0"
	.byte	0x23
	.byte	0xc
	.long	0x1c076
	.uleb128 0x9
	.byte	0x3
	.quad	actreg
	.uleb128 0x90
	.long	0x191e3
	.long	0x1c0b0
	.uleb128 0x91
	.long	0x191a1
	.byte	0
	.uleb128 0xa
	.long	0x1c09f
	.uleb128 0x37
	.ascii "act_outc\0"
	.byte	0xa
	.byte	0x2a
	.byte	0xb
	.long	0x1c0b0
	.uleb128 0x9
	.byte	0x3
	.quad	_ZL8act_outc
	.uleb128 0xe
	.long	0x1583a
	.uleb128 0xa
	.long	0x1c0d0
	.uleb128 0xd
	.long	0x15a10
	.uleb128 0x26
	.ascii "DDT\0"
	.byte	0x20
	.byte	0xa
	.byte	0x2f
	.byte	0x8
	.long	0x1c4d6
	.uleb128 0x26
	.ascii "Node\0"
	.byte	0x48
	.byte	0xa
	.byte	0x32
	.byte	0x9
	.long	0x1c33b
	.uleb128 0x19
	.ascii "action\0"
	.byte	0xa
	.byte	0x35
	.byte	0xa
	.long	0x1c039
	.byte	0
	.uleb128 0x19
	.ascii "next\0"
	.byte	0xa
	.byte	0x36
	.byte	0x24
	.long	0x1c68e
	.byte	0x8
	.uleb128 0x42
	.ascii "Node\0"
	.byte	0xa
	.byte	0x3b
	.byte	0x3
	.ascii "_ZN3DDT4NodeC4Ev\0"
	.long	0x1c13a
	.long	0x1c140
	.uleb128 0x2
	.long	0x1c4db
	.byte	0
	.uleb128 0x42
	.ascii "Node\0"
	.byte	0xa
	.byte	0x3c
	.byte	0x3
	.ascii "_ZN3DDT4NodeC4E6Action\0"
	.long	0x1c168
	.long	0x1c173
	.uleb128 0x2
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c039
	.byte	0
	.uleb128 0x42
	.ascii "addPath\0"
	.byte	0xa
	.byte	0x3e
	.byte	0x8
	.ascii "_ZN3DDT4Node7addPathEhi\0"
	.long	0x1c19f
	.long	0x1c1af
	.uleb128 0x2
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1be8d
	.uleb128 0x1
	.long	0x1c340
	.byte	0
	.uleb128 0x35
	.ascii "getNextNode\0"
	.byte	0xa
	.byte	0x42
	.byte	0xd
	.ascii "_ZN3DDT4Node11getNextNodeER5BlorbN9__gnu_cxx17__normal_iteratorIPS0_St6vectorIS0_SaIS0_EEEE\0"
	.long	0x1c340
	.long	0x1c227
	.long	0x1c237
	.uleb128 0x2
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1bea2
	.uleb128 0x1
	.long	0x1c237
	.byte	0
	.uleb128 0x22
	.ascii "RegisterIterator\0"
	.byte	0xa
	.byte	0x34
	.byte	0x9
	.long	0x8876
	.uleb128 0x42
	.ascii "draw\0"
	.byte	0xa
	.byte	0x4b
	.byte	0x8
	.ascii "_ZN3DDT4Node4drawE7Vector2\0"
	.long	0x1c27c
	.long	0x1c287
	.uleb128 0x2
	.long	0x1c4db
	.uleb128 0x1
	.long	0x19e98
	.byte	0
	.uleb128 0x7c
	.ascii "Node\0"
	.ascii "_ZN3DDT4NodeC4ERKS0_\0"
	.long	0x1c2aa
	.long	0x1c2b5
	.uleb128 0x2
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c901
	.byte	0
	.uleb128 0x70
	.secrel32	.LASF35
	.ascii "_ZN3DDT4NodeaSERKS0_\0"
	.long	0x1c8d4
	.long	0x1c2db
	.long	0x1c2e6
	.uleb128 0x2
	.long	0x1c4db
	.uleb128 0x1
	.long	0x1c901
	.byte	0
	.uleb128 0x7c
	.ascii "Node\0"
	.ascii "_ZN3DDT4NodeC4EOS0_\0"
	.long	0x1c308
	.long	0x1c313
	.uleb128 0x2
	.long	0x1c4db
	.uleb128 0x1
	.long	0x21f2e
	.byte	0
	.uleb128 0x6b
	.ascii "~Node\0"
	.ascii "_ZN3DDT4NodeD4Ev\0"
	.long	0x1c32f
	.uleb128 0x2
	.long	0x1c4db
	.uleb128 0x2
	.long	0x191dc
	.byte	0
	.byte	0
	.uleb128 0xa
	.long	0x1c0ec
	.uleb128 0x22
	.ascii "NodeIndex\0"
	.byte	0xa
	.byte	0x30
	.byte	0x8
	.long	0x191dc
	.uleb128 0x19
	.ascii "nodes\0"
	.byte	0xa
	.byte	0x51
	.byte	0x14
	.long	0x7fc1
	.byte	0
	.uleb128 0x3f
	.secrel32	.LASF70
	.byte	0xa
	.byte	0x52
	.byte	0xc
	.long	0x1c340
	.byte	0x18
	.uleb128 0x42
	.ascii "DDT\0"
	.byte	0xa
	.byte	0x54
	.byte	0x2
	.ascii "_ZN3DDTC4Ev\0"
	.long	0x1c38a
	.long	0x1c390
	.uleb128 0x2
	.long	0x1c8c0
	.byte	0
	.uleb128 0x42
	.ascii "DDT\0"
	.byte	0xa
	.byte	0x59
	.byte	0x2
	.ascii "_ZN3DDTC4ERKS_\0"
	.long	0x1c3af
	.long	0x1c3ba
	.uleb128 0x2
	.long	0x1c8c0
	.uleb128 0x1
	.long	0x1c8ca
	.byte	0
	.uleb128 0x35
	.ascii "mutate_ip\0"
	.byte	0xa
	.byte	0x5f
	.byte	0x7
	.ascii "_ZN3DDT9mutate_ipEv\0"
	.long	0x1c8cf
	.long	0x1c3e8
	.long	0x1c3ee
	.uleb128 0x2
	.long	0x1c8c0
	.byte	0
	.uleb128 0x35
	.ascii "mutate\0"
	.byte	0xa
	.byte	0x74
	.byte	0xd
	.ascii "_ZN3DDT6mutateEv\0"
	.long	0x1c0df
	.long	0x1c416
	.long	0x1c41c
	.uleb128 0x2
	.long	0x1c8c0
	.byte	0
	.uleb128 0x42
	.ascii "update\0"
	.byte	0xa
	.byte	0x7a
	.byte	0x7
	.ascii "_ZN3DDT6updateER5Blorb\0"
	.long	0x1c446
	.long	0x1c451
	.uleb128 0x2
	.long	0x1c8c0
	.uleb128 0x1
	.long	0x1bea2
	.byte	0
	.uleb128 0x42
	.ascii "draw\0"
	.byte	0xa
	.byte	0x81
	.byte	0x7
	.ascii "_ZN3DDT4drawE7Vector2i\0"
	.long	0x1c479
	.long	0x1c489
	.uleb128 0x2
	.long	0x1c8c0
	.uleb128 0x1
	.long	0x19e98
	.uleb128 0x1
	.long	0x191dc
	.byte	0
	.uleb128 0x70
	.secrel32	.LASF35
	.ascii "_ZN3DDTaSERKS_\0"
	.long	0x1c8cf
	.long	0x1c4a9
	.long	0x1c4b4
	.uleb128 0x2
	.long	0x1c8c0
	.uleb128 0x1
	.long	0x1c8ca
	.byte	0
	.uleb128 0x6b
	.ascii "~DDT\0"
	.ascii "_ZN3DDTD4Ev\0"
	.long	0x1c4ca
	.uleb128 0x2
	.long	0x1c8c0
	.uleb128 0x2
	.long	0x191dc
	.byte	0
	.byte	0
	.uleb128 0xa
	.long	0x1c0df
	.uleb128 0xe
	.long	0x1c0ec
	.uleb128 0xa
	.long	0x1c4db
	.uleb128 0xe
	.long	0x15a10
	.uleb128 0xa
	.long	0x1c4e5
	.uleb128 0xe
	.long	0x71c4
	.uleb128 0xa
	.long	0x1c4ef
	.uleb128 0xd
	.long	0x7334
	.uleb128 0xd
	.long	0x71c4
	.uleb128 0xd
	.long	0x73d1
	.uleb128 0xd
	.long	0x73de
	.uleb128 0xe
	.long	0x1c33b
	.uleb128 0xa
	.long	0x1c50d
	.uleb128 0xd
	.long	0x15cde
	.uleb128 0xd
	.long	0x15cea
	.uleb128 0xe
	.long	0x76ca
	.uleb128 0xa
	.long	0x1c521
	.uleb128 0x2c
	.long	0x76ca
	.uleb128 0xd
	.long	0x787d
	.uleb128 0xd
	.long	0x76ca
	.uleb128 0xe
	.long	0x788e
	.uleb128 0xa
	.long	0x1c53a
	.uleb128 0xd
	.long	0x7aba
	.uleb128 0x2c
	.long	0x788e
	.uleb128 0x2c
	.long	0x7aae
	.uleb128 0xd
	.long	0x7aae
	.uleb128 0xe
	.long	0x768d
	.uleb128 0xa
	.long	0x1c558
	.uleb128 0xe
	.long	0x7fbc
	.uleb128 0xa
	.long	0x1c562
	.uleb128 0xd
	.long	0x7b81
	.uleb128 0x2c
	.long	0x768d
	.uleb128 0xd
	.long	0x81d9
	.uleb128 0xe
	.long	0x7fc1
	.uleb128 0xa
	.long	0x1c57b
	.uleb128 0xd
	.long	0x8361
	.uleb128 0xd
	.long	0x8425
	.uleb128 0xd
	.long	0x9e5b
	.uleb128 0x2c
	.long	0x7fc1
	.uleb128 0xd
	.long	0x7fc1
	.uleb128 0xe
	.long	0x9e5b
	.uleb128 0xa
	.long	0x1c59e
	.uleb128 0x2c
	.long	0x8418
	.uleb128 0xd
	.long	0x81e6
	.uleb128 0xe
	.long	0x169f8
	.uleb128 0xa
	.long	0x1c5b2
	.uleb128 0xd
	.long	0x16b94
	.uleb128 0xe
	.long	0x16b94
	.uleb128 0xa
	.long	0x1c5c1
	.uleb128 0xe
	.long	0xa11e
	.uleb128 0xa
	.long	0x1c5cb
	.uleb128 0xd
	.long	0xa248
	.uleb128 0xd
	.long	0xa11e
	.uleb128 0xd
	.long	0xa2d5
	.uleb128 0xd
	.long	0xa2e2
	.uleb128 0xe
	.long	0x191e3
	.uleb128 0xa
	.long	0x1c5e9
	.uleb128 0xd
	.long	0x16e02
	.uleb128 0xd
	.long	0x16e0e
	.uleb128 0xe
	.long	0xa493
	.uleb128 0xa
	.long	0x1c5fd
	.uleb128 0x2c
	.long	0xa493
	.uleb128 0xd
	.long	0xa616
	.uleb128 0xd
	.long	0xa493
	.uleb128 0xe
	.long	0xa627
	.uleb128 0xa
	.long	0x1c616
	.uleb128 0xd
	.long	0xa80b
	.uleb128 0x2c
	.long	0xa627
	.uleb128 0x2c
	.long	0xa7ff
	.uleb128 0xd
	.long	0xa7ff
	.uleb128 0xe
	.long	0xa462
	.uleb128 0xa
	.long	0x1c634
	.uleb128 0xe
	.long	0xac57
	.uleb128 0xa
	.long	0x1c63e
	.uleb128 0xd
	.long	0xa8ba
	.uleb128 0x2c
	.long	0xa462
	.uleb128 0xd
	.long	0xae36
	.uleb128 0xe
	.long	0xac5c
	.uleb128 0xa
	.long	0x1c657
	.uleb128 0xd
	.long	0xaf8a
	.uleb128 0xd
	.long	0xb034
	.uleb128 0xd
	.long	0xc5a7
	.uleb128 0x2c
	.long	0xac5c
	.uleb128 0xd
	.long	0xac5c
	.uleb128 0xe
	.long	0xc5a7
	.uleb128 0xa
	.long	0x1c67a
	.uleb128 0x2c
	.long	0xb027
	.uleb128 0xd
	.long	0xae43
	.uleb128 0x26
	.ascii "Optimap<unsigned char, int>\0"
	.byte	0x40
	.byte	0x9
	.byte	0x7
	.byte	0x8
	.long	0x1c89d
	.uleb128 0x19
	.ascii "mapped\0"
	.byte	0x9
	.byte	0x9
	.byte	0x14
	.long	0x5de2
	.byte	0
	.uleb128 0x19
	.ascii "val\0"
	.byte	0x9
	.byte	0xa
	.byte	0x18
	.long	0xac5c
	.byte	0x28
	.uleb128 0x42
	.ascii "init\0"
	.byte	0x9
	.byte	0xd
	.byte	0x7
	.ascii "_ZN7OptimapIhiE4initEi\0"
	.long	0x1c6f8
	.long	0x1c703
	.uleb128 0x2
	.long	0x1c8a2
	.uleb128 0x1
	.long	0x191dc
	.byte	0
	.uleb128 0x42
	.ascii "Optimap\0"
	.byte	0x9
	.byte	0x14
	.byte	0x2
	.ascii "_ZN7OptimapIhiEC4Ev\0"
	.long	0x1c72b
	.long	0x1c731
	.uleb128 0x2
	.long	0x1c8a2
	.byte	0
	.uleb128 0x42
	.ascii "Optimap\0"
	.byte	0x9
	.byte	0x15
	.byte	0x2
	.ascii "_ZN7OptimapIhiEC4ERKS0_\0"
	.long	0x1c75d
	.long	0x1c768
	.uleb128 0x2
	.long	0x1c8a2
	.uleb128 0x1
	.long	0x1c8ac
	.byte	0
	.uleb128 0x22
	.ascii "Self\0"
	.byte	0x9
	.byte	0x8
	.byte	0x8
	.long	0x1c68e
	.uleb128 0xa
	.long	0x1c768
	.uleb128 0x35
	.ascii "contains\0"
	.byte	0x9
	.byte	0x1a
	.byte	0xe
	.ascii "_ZNK7OptimapIhiE8containsEh\0"
	.long	0x14cc6
	.long	0x1c7af
	.long	0x1c7ba
	.uleb128 0x2
	.long	0x1c8b1
	.uleb128 0x1
	.long	0x19160
	.byte	0
	.uleb128 0x3e
	.secrel32	.LASF51
	.byte	0x9
	.byte	0x1e
	.byte	0x12
	.ascii "_ZN7OptimapIhiEixEh\0"
	.long	0x1c8bb
	.long	0x1c7e2
	.long	0x1c7ed
	.uleb128 0x2
	.long	0x1c8a2
	.uleb128 0x1
	.long	0x19160
	.byte	0
	.uleb128 0x3e
	.secrel32	.LASF59
	.byte	0x9
	.byte	0x23
	.byte	0xd
	.ascii "_ZNK7OptimapIhiE4sizeEv\0"
	.long	0x191dc
	.long	0x1c819
	.long	0x1c81f
	.uleb128 0x2
	.long	0x1c8b1
	.byte	0
	.uleb128 0x70
	.secrel32	.LASF35
	.ascii "_ZN7OptimapIhiEaSERKS0_\0"
	.long	0x1f7c8
	.long	0x1c848
	.long	0x1c853
	.uleb128 0x2
	.long	0x1c8a2
	.uleb128 0x1
	.long	0x1f7cd
	.byte	0
	.uleb128 0x7c
	.ascii "~Optimap\0"
	.ascii "_ZN7OptimapIhiED4Ev\0"
	.long	0x1c879
	.long	0x1c884
	.uleb128 0x2
	.long	0x1c8a2
	.uleb128 0x2
	.long	0x191dc
	.byte	0
	.uleb128 0x5
	.ascii "Key_T\0"
	.long	0x19160
	.uleb128 0x5
	.ascii "Value_T\0"
	.long	0x191dc
	.byte	0
	.uleb128 0xa
	.long	0x1c68e
	.uleb128 0xe
	.long	0x1c68e
	.uleb128 0xa
	.long	0x1c8a2
	.uleb128 0xd
	.long	0x1c775
	.uleb128 0xe
	.long	0x1c89d
	.uleb128 0xa
	.long	0x1c8b1
	.uleb128 0xd
	.long	0x191dc
	.uleb128 0xe
	.long	0x1c0df
	.uleb128 0xa
	.long	0x1c8c0
	.uleb128 0xd
	.long	0x1c4d6
	.uleb128 0xd
	.long	0x1c0df
	.uleb128 0xd
	.long	0x1c0ec
	.uleb128 0xe
	.long	0x15d4e
	.uleb128 0xa
	.long	0x1c8d9
	.uleb128 0xd
	.long	0x1c4e0
	.uleb128 0xe
	.long	0x16394
	.uleb128 0xa
	.long	0x1c8e8
	.uleb128 0xd
	.long	0x15d4e
	.uleb128 0xe
	.long	0x9e60
	.uleb128 0xe
	.long	0xa02f
	.uleb128 0xd
	.long	0x1c33b
	.uleb128 0x8f
	.ascii "AUM\0"
	.long	0x14cb6
	.byte	0x95
	.long	0x1c92b
	.uleb128 0x45
	.ascii "AUM_NONE\0"
	.byte	0
	.uleb128 0x45
	.ascii "AUM_RMV\0"
	.byte	0x1
	.byte	0
	.uleb128 0xe
	.long	0x1beba
	.uleb128 0xa
	.long	0x1c92b
	.uleb128 0xe
	.long	0x1796a
	.uleb128 0xa
	.long	0x1c935
	.uleb128 0xd
	.long	0x17b23
	.uleb128 0xe
	.long	0x17b23
	.uleb128 0xa
	.long	0x1c944
	.uleb128 0xe
	.long	0xc856
	.uleb128 0xa
	.long	0x1c94e
	.uleb128 0xd
	.long	0xc9a3
	.uleb128 0xd
	.long	0xc856
	.uleb128 0xd
	.long	0xca37
	.uleb128 0xd
	.long	0xca44
	.uleb128 0xe
	.long	0x1c00c
	.uleb128 0xa
	.long	0x1c96c
	.uleb128 0xd
	.long	0x17dc6
	.uleb128 0xd
	.long	0x17dd2
	.uleb128 0xe
	.long	0xccfe
	.uleb128 0xa
	.long	0x1c980
	.uleb128 0x2c
	.long	0xccfe
	.uleb128 0xd
	.long	0xce9d
	.uleb128 0xd
	.long	0xccfe
	.uleb128 0xe
	.long	0xceae
	.uleb128 0xa
	.long	0x1c999
	.uleb128 0xd
	.long	0xd0bc
	.uleb128 0x2c
	.long	0xceae
	.uleb128 0x2c
	.long	0xd0b0
	.uleb128 0xd
	.long	0xd0b0
	.uleb128 0xe
	.long	0xccc9
	.uleb128 0xa
	.long	0x1c9b7
	.uleb128 0xe
	.long	0xd573
	.uleb128 0xa
	.long	0x1c9c1
	.uleb128 0xd
	.long	0xd179
	.uleb128 0x2c
	.long	0xccc9
	.uleb128 0xd
	.long	0xd774
	.uleb128 0xe
	.long	0xd578
	.uleb128 0xa
	.long	0x1c9da
	.uleb128 0xd
	.long	0xd8e8
	.uleb128 0xd
	.long	0xd9a2
	.uleb128 0xd
	.long	0xf1d5
	.uleb128 0x2c
	.long	0xd578
	.uleb128 0xd
	.long	0xd578
	.uleb128 0xe
	.long	0xf1d5
	.uleb128 0xa
	.long	0x1c9fd
	.uleb128 0x2c
	.long	0xd995
	.uleb128 0xd
	.long	0xd781
	.uleb128 0x57
	.ascii "bs\0"
	.byte	0xa5
	.byte	0x14
	.long	0xd578
	.uleb128 0x9
	.byte	0x3
	.quad	bs
	.uleb128 0x57
	.ascii "hovered_index\0"
	.byte	0xa7
	.byte	0x5
	.long	0x191dc
	.uleb128 0x9
	.byte	0x3
	.quad	hovered_index
	.uleb128 0x57
	.ascii "camera\0"
	.byte	0xc9
	.byte	0xa
	.long	0x1a1d8
	.uleb128 0x9
	.byte	0x3
	.quad	camera
	.uleb128 0xe
	.long	0x17e32
	.uleb128 0xa
	.long	0x1ca5c
	.uleb128 0xd
	.long	0x1c930
	.uleb128 0xe
	.long	0x18426
	.uleb128 0xa
	.long	0x1ca6b
	.uleb128 0xd
	.long	0x17e32
	.uleb128 0xd
	.long	0x1c00c
	.uleb128 0xe
	.long	0x1842b
	.uleb128 0xa
	.long	0x1ca7f
	.uleb128 0xd
	.long	0x1c971
	.uleb128 0xe
	.long	0x18b02
	.uleb128 0xa
	.long	0x1ca8e
	.uleb128 0xd
	.long	0x1842b
	.uleb128 0xe
	.long	0x16399
	.uleb128 0xa
	.long	0x1ca9d
	.uleb128 0xd
	.long	0x1c512
	.uleb128 0xe
	.long	0x169f3
	.uleb128 0xa
	.long	0x1caac
	.uleb128 0xd
	.long	0x16399
	.uleb128 0xe
	.long	0x173e1
	.uleb128 0xa
	.long	0x1cabb
	.uleb128 0xd
	.long	0x1c5ee
	.uleb128 0xe
	.long	0x17965
	.uleb128 0xa
	.long	0x1caca
	.uleb128 0xd
	.long	0x173e1
	.uleb128 0xe
	.long	0x14cf2
	.uleb128 0xa
	.long	0x1cad9
	.uleb128 0xe
	.long	0xc5ac
	.uleb128 0xe
	.long	0xc741
	.uleb128 0xe
	.long	0x16e6c
	.uleb128 0xa
	.long	0x1caed
	.uleb128 0xd
	.long	0x1928c
	.uleb128 0xe
	.long	0x173dc
	.uleb128 0xa
	.long	0x1cafc
	.uleb128 0xd
	.long	0x16e6c
	.uleb128 0xd
	.long	0x19187
	.uleb128 0x44
	.ascii "DrawText\0"
	.byte	0x4
	.word	0x58f
	.byte	0xc
	.long	0x1cb3c
	.uleb128 0x1
	.long	0x19524
	.uleb128 0x1
	.long	0x191dc
	.uleb128 0x1
	.long	0x191dc
	.uleb128 0x1
	.long	0x191dc
	.uleb128 0x1
	.long	0x1a176
	.byte	0
	.uleb128 0x10
	.ascii "TextFormat\0"
	.byte	0x4
	.word	0x5ac
	.byte	0x13
	.long	0x19524
	.long	0x1cb5b
	.uleb128 0x1
	.long	0x19524
	.uleb128 0x41
	.byte	0
	.uleb128 0x71
	.ascii "CloseWindow\0"
	.word	0x3da
	.uleb128 0x56
	.ascii "WindowShouldClose\0"
	.byte	0x4
	.word	0x3d9
	.byte	0xc
	.long	0x14cc6
	.uleb128 0x56
	.ascii "GetFrameTime\0"
	.byte	0x4
	.word	0x446
	.byte	0xd
	.long	0x1921e
	.uleb128 0x56
	.ascii "GetMouseDelta\0"
	.byte	0x4
	.word	0x4a3
	.byte	0xf
	.long	0x19e98
	.uleb128 0x10
	.ascii "GetScreenToWorld2D\0"
	.byte	0x4
	.word	0x43f
	.byte	0xf
	.long	0x19e98
	.long	0x1cbdd
	.uleb128 0x1
	.long	0x19e98
	.uleb128 0x1
	.long	0x1a1d8
	.byte	0
	.uleb128 0x56
	.ascii "GetMousePosition\0"
	.byte	0x4
	.word	0x4a2
	.byte	0xf
	.long	0x19e98
	.uleb128 0x71
	.ascii "EndDrawing\0"
	.word	0x419
	.uleb128 0x44
	.ascii "DrawFPS\0"
	.byte	0x4
	.word	0x58e
	.byte	0xc
	.long	0x1cc21
	.uleb128 0x1
	.long	0x191dc
	.uleb128 0x1
	.long	0x191dc
	.byte	0
	.uleb128 0x71
	.ascii "EndMode2D\0"
	.word	0x41b
	.uleb128 0x44
	.ascii "BeginMode2D\0"
	.byte	0x4
	.word	0x41a
	.byte	0xc
	.long	0x1cc49
	.uleb128 0x1
	.long	0x1a1d8
	.byte	0
	.uleb128 0x44
	.ascii "ClearBackground\0"
	.byte	0x4
	.word	0x417
	.byte	0xc
	.long	0x1cc68
	.uleb128 0x1
	.long	0x1a176
	.byte	0
	.uleb128 0x71
	.ascii "BeginDrawing\0"
	.word	0x418
	.uleb128 0x10
	.ascii "IsMouseButtonDown\0"
	.byte	0x4
	.word	0x49d
	.byte	0xc
	.long	0x14cc6
	.long	0x1cc9d
	.uleb128 0x1
	.long	0x191dc
	.byte	0
	.uleb128 0x44
	.ascii "InitWindow\0"
	.byte	0x4
	.word	0x3d8
	.byte	0xc
	.long	0x1ccc1
	.uleb128 0x1
	.long	0x191dc
	.uleb128 0x1
	.long	0x191dc
	.uleb128 0x1
	.long	0x19524
	.byte	0
	.uleb128 0x44
	.ascii "SetTargetFPS\0"
	.byte	0x4
	.word	0x444
	.byte	0xc
	.long	0x1ccdd
	.uleb128 0x1
	.long	0x191dc
	.byte	0
	.uleb128 0xba
	.ascii "__cxa_end_catch\0"
	.uleb128 0xbb
	.ascii "__cxa_rethrow\0"
	.uleb128 0xbc
	.ascii "__cxa_begin_catch\0"
	.long	0x1a185
	.long	0x1cd21
	.uleb128 0x1
	.long	0x1a185
	.byte	0
	.uleb128 0x4e
	.secrel32	.LASF181
	.byte	0x2
	.byte	0x7e
	.byte	0x1a
	.ascii "_Znwy\0"
	.long	0x1a185
	.long	0x1cd3d
	.uleb128 0x1
	.long	0x2f0
	.byte	0
	.uleb128 0x50
	.secrel32	.LASF182
	.byte	0x2
	.byte	0x87
	.byte	0x6
	.ascii "_ZdlPvy\0"
	.long	0x1cd5c
	.uleb128 0x1
	.long	0x1a185
	.uleb128 0x1
	.long	0x2f0
	.byte	0
	.uleb128 0x50
	.secrel32	.LASF182
	.byte	0x2
	.byte	0x82
	.byte	0x6
	.ascii "_ZdlPv\0"
	.long	0x1cd75
	.uleb128 0x1
	.long	0x1a185
	.byte	0
	.uleb128 0x44
	.ascii "DrawLineV\0"
	.byte	0x4
	.word	0x4d0
	.byte	0xc
	.long	0x1cd98
	.uleb128 0x1
	.long	0x19e98
	.uleb128 0x1
	.long	0x19e98
	.uleb128 0x1
	.long	0x1a176
	.byte	0
	.uleb128 0x44
	.ascii "DrawCircleV\0"
	.byte	0x4
	.word	0x4da
	.byte	0xc
	.long	0x1cdbd
	.uleb128 0x1
	.long	0x19e98
	.uleb128 0x1
	.long	0x1921e
	.uleb128 0x1
	.long	0x1a176
	.byte	0
	.uleb128 0x6c
	.ascii "__mingw_vfprintf\0"
	.byte	0x6
	.byte	0xc1
	.byte	0xf
	.long	0x191dc
	.long	0x1cdea
	.uleb128 0x1
	.long	0x1a8c5
	.uleb128 0x1
	.long	0x19524
	.uleb128 0x1
	.long	0xb0
	.byte	0
	.uleb128 0x6c
	.ascii "__acrt_iob_func\0"
	.byte	0x33
	.byte	0x38
	.byte	0x17
	.long	0x1a8c5
	.long	0x1ce0c
	.uleb128 0x1
	.long	0x14cb6
	.byte	0
	.uleb128 0xbd
	.ascii "exit\0"
	.byte	0x2f
	.word	0x184
	.byte	0x20
	.long	0x1ce21
	.uleb128 0x1
	.long	0x191dc
	.byte	0
	.uleb128 0x10
	.ascii "cosf\0"
	.byte	0x2e
	.word	0x296
	.byte	0x18
	.long	0x1921e
	.long	0x1ce39
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x10
	.ascii "atan2f\0"
	.byte	0x2e
	.word	0x2a4
	.byte	0x18
	.long	0x1921e
	.long	0x1ce58
	.uleb128 0x1
	.long	0x1921e
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x10
	.ascii "sqrtf\0"
	.byte	0x2e
	.word	0x380
	.byte	0x18
	.long	0x1921e
	.long	0x1ce71
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x10
	.ascii "GetRandomValue\0"
	.byte	0x4
	.word	0x44a
	.byte	0xb
	.long	0x191dc
	.long	0x1ce98
	.uleb128 0x1
	.long	0x191dc
	.uleb128 0x1
	.long	0x191dc
	.byte	0
	.uleb128 0x10
	.ascii "ColorAlpha\0"
	.byte	0x4
	.word	0x575
	.byte	0xd
	.long	0x1a176
	.long	0x1cebb
	.uleb128 0x1
	.long	0x1a176
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x10
	.ascii "ColorFromHSV\0"
	.byte	0x4
	.word	0x571
	.byte	0xd
	.long	0x1a176
	.long	0x1cee5
	.uleb128 0x1
	.long	0x1921e
	.uleb128 0x1
	.long	0x1921e
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x10
	.ascii "ColorToHSV\0"
	.byte	0x4
	.word	0x570
	.byte	0xf
	.long	0x19ee0
	.long	0x1cf03
	.uleb128 0x1
	.long	0x1a176
	.byte	0
	.uleb128 0x10
	.ascii "sinf\0"
	.byte	0x2e
	.word	0x293
	.byte	0x18
	.long	0x1921e
	.long	0x1cf1b
	.uleb128 0x1
	.long	0x1921e
	.byte	0
	.uleb128 0x10
	.ascii "ColorFromNormalized\0"
	.byte	0x4
	.word	0x56f
	.byte	0xd
	.long	0x1a176
	.long	0x1cf42
	.uleb128 0x1
	.long	0x19f2e
	.byte	0
	.uleb128 0x10
	.ascii "ColorTint\0"
	.byte	0x4
	.word	0x572
	.byte	0xd
	.long	0x1a176
	.long	0x1cf64
	.uleb128 0x1
	.long	0x1a176
	.uleb128 0x1
	.long	0x1a176
	.byte	0
	.uleb128 0x92
	.ascii "_GLOBAL__sub_I__Zpl\0"
	.quad	.LFB6027
	.quad	.LFE6027-.LFB6027
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x17
	.long	0xdbee
	.long	0x1cf9a
	.byte	0x2
	.long	0x1cfad
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c9df
	.uleb128 0x13
	.secrel32	.LASF184
	.long	0x191e3
	.byte	0
	.uleb128 0x23
	.long	0x1cf8c
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EED1Ev\0"
	.long	0x1cfec
	.quad	.LFB6026
	.quad	.LFE6026-.LFB6026
	.uleb128 0x1
	.byte	0x9c
	.long	0x1cff5
	.uleb128 0xf
	.long	0x1cf9a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xbe
	.ascii "__static_initialization_and_destruction_0\0"
	.quad	.LFB6022
	.quad	.LFE6022-.LFB6022
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d068
	.uleb128 0x18
	.ascii "__initialize_p\0"
	.byte	0xa
	.byte	0xf9
	.byte	0x1
	.long	0x191dc
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__priority\0"
	.byte	0xa
	.byte	0xf9
	.byte	0x1
	.long	0x191dc
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x92
	.ascii "__tcf_0\0"
	.quad	.LFB6023
	.quad	.LFE6023-.LFB6023
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0xc
	.long	0xfc47
	.quad	.LFB6021
	.quad	.LFE6021-.LFB6021
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d0ec
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x173e1
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x19287
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x20f
	.byte	0x17
	.long	0x173e1
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x20f
	.byte	0x24
	.long	0x173e1
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x20f
	.byte	0x30
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x1d
	.long	0x4f3
	.quad	.LFB6020
	.quad	.LFE6020-.LFB6020
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d179
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x1c5e9
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x19287
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x17c
	.byte	0xf
	.long	0x1c5e9
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x17c
	.byte	0x1c
	.long	0x1c5e9
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x17c
	.byte	0x28
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1a
	.secrel32	.LASF38
	.byte	0x3
	.word	0x17e
	.byte	0x3b
	.long	0xf40a
	.uleb128 0x2d
	.quad	.LBB161
	.quad	.LBE161-.LBB161
	.uleb128 0x25
	.ascii "__n\0"
	.byte	0x3
	.word	0x17f
	.byte	0x12
	.long	0x1d149
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0xc
	.long	0xfd4b
	.quad	.LFB6019
	.quad	.LFE6019-.LFB6019
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d1d7
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x173e1
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x19287
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x263
	.byte	0xe
	.long	0x173e1
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x263
	.byte	0x1b
	.long	0x173e1
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x263
	.byte	0x27
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x1d
	.long	0xfe26
	.quad	.LFB6018
	.quad	.LFE6018-.LFB6018
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d245
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x19287
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x191dc
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x397
	.byte	0x20
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x397
	.byte	0x3a
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF188
	.byte	0x3
	.word	0x398
	.byte	0x13
	.long	0x1b884
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x21
	.secrel32	.LASF189
	.byte	0x3
	.word	0x39a
	.byte	0x11
	.long	0x191e3
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0xd
	.long	0xfb7c
	.uleb128 0x1d
	.long	0xfec7
	.quad	.LFB6017
	.quad	.LFE6017-.LFB6017
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d27e
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1ca7a
	.uleb128 0x18
	.ascii "__t\0"
	.byte	0x11
	.byte	0x4d
	.byte	0x38
	.long	0x1d245
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0xf995
	.quad	.LFB6016
	.quad	.LFE6016-.LFB6016
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d2e4
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x191dc
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x1a4
	.byte	0x16
	.long	0x1c5e9
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x1a4
	.byte	0x2a
	.long	0x1c5e9
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x1a4
	.byte	0x37
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x25
	.ascii "_Num\0"
	.byte	0x3
	.word	0x1ad
	.byte	0x14
	.long	0x2b79
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x1d
	.long	0x594
	.quad	.LFB6015
	.quad	.LFE6015-.LFB6015
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d371
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x19287
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x19287
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x17c
	.byte	0xf
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x17c
	.byte	0x1c
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x17c
	.byte	0x28
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1a
	.secrel32	.LASF38
	.byte	0x3
	.word	0x17e
	.byte	0x3b
	.long	0xf5e7
	.uleb128 0x2d
	.quad	.LBB160
	.quad	.LBE160-.LBB160
	.uleb128 0x25
	.ascii "__n\0"
	.byte	0x3
	.word	0x17f
	.byte	0x12
	.long	0x1d341
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x27
	.long	0x16f7b
	.long	0x1d390
	.quad	.LFB6014
	.quad	.LFE6014-.LFB6014
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d39d
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1cb01
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0x1725c
	.long	0x1d3bc
	.quad	.LFB6013
	.quad	.LFE6013-.LFB6013
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d3d9
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1cb01
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0xf
	.word	0x431
	.byte	0x21
	.long	0x171f4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xc
	.long	0xff33
	.quad	.LFB6012
	.quad	.LFE6012-.LFB6012
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d441
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x1c5e9
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x19287
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x1e6
	.byte	0x18
	.long	0x1c5e9
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x1e6
	.byte	0x25
	.long	0x1c5e9
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x1e6
	.byte	0x31
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0xc
	.long	0x2bb4
	.quad	.LFB6011
	.quad	.LFE6011-.LFB6011
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d49c
	.uleb128 0x4
	.secrel32	.LASF30
	.long	0x173e1
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x19287
	.uleb128 0x15
	.secrel32	.LASF185
	.byte	0x13
	.byte	0x6c
	.byte	0x26
	.long	0x173e1
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x15
	.secrel32	.LASF186
	.byte	0x13
	.byte	0x6c
	.byte	0x3e
	.long	0x173e1
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x15
	.secrel32	.LASF187
	.byte	0x13
	.byte	0x6d
	.byte	0x1a
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0xc
	.long	0xffc0
	.quad	.LFB6010
	.quad	.LFE6010-.LFB6010
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d4fa
	.uleb128 0x4
	.secrel32	.LASF150
	.long	0x19287
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x191dc
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x3c8
	.byte	0x14
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x3c8
	.byte	0x23
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF188
	.byte	0x3
	.word	0x3c8
	.byte	0x36
	.long	0x1b884
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0xc
	.long	0x62f
	.quad	.LFB6009
	.quad	.LFE6009-.LFB6009
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d587
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x3290
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x3290
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x17c
	.byte	0xf
	.long	0x3290
	.uleb128 0x2
	.byte	0x73
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x17c
	.byte	0x1c
	.long	0x3290
	.uleb128 0x2
	.byte	0x75
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x17c
	.byte	0x28
	.long	0x3290
	.uleb128 0x2
	.byte	0x74
	.sleb128 0
	.uleb128 0x1a
	.secrel32	.LASF38
	.byte	0x3
	.word	0x17e
	.byte	0x3b
	.long	0x3a20
	.uleb128 0x2d
	.quad	.LBB159
	.quad	.LBE159-.LBB159
	.uleb128 0x25
	.ascii "__n\0"
	.byte	0x3
	.word	0x17f
	.byte	0x12
	.long	0x1d557
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.byte	0
	.uleb128 0xc
	.long	0x6f5
	.quad	.LFB6008
	.quad	.LFE6008-.LFB6008
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d614
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x3524
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x3290
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x17c
	.byte	0xf
	.long	0x3524
	.uleb128 0x2
	.byte	0x73
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x17c
	.byte	0x1c
	.long	0x3524
	.uleb128 0x2
	.byte	0x75
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x17c
	.byte	0x28
	.long	0x3290
	.uleb128 0x2
	.byte	0x74
	.sleb128 0
	.uleb128 0x1a
	.secrel32	.LASF38
	.byte	0x3
	.word	0x17e
	.byte	0x3b
	.long	0x40a2
	.uleb128 0x2d
	.quad	.LBB158
	.quad	.LBE158-.LBB158
	.uleb128 0x25
	.ascii "__n\0"
	.byte	0x3
	.word	0x17f
	.byte	0x12
	.long	0x1d5e4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.byte	0
	.uleb128 0xc
	.long	0x1001d
	.quad	.LFB6004
	.quad	.LFE6004-.LFB6004
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d664
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1beba
	.uleb128 0x31
	.secrel32	.LASF148
	.long	0x1d647
	.uleb128 0x32
	.long	0x1ca7a
	.byte	0
	.uleb128 0x18
	.ascii "__p\0"
	.byte	0x15
	.byte	0x6c
	.byte	0x15
	.long	0x1c92b
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x5e
	.byte	0x15
	.byte	0x6c
	.byte	0x21
	.uleb128 0x1f
	.long	0x1ca7a
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.byte	0
	.uleb128 0x49
	.long	0x1bf67
	.byte	0xa
	.byte	0x9a
	.byte	0x8
	.long	0x1d674
	.long	0x1d683
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c930
	.uleb128 0x1
	.long	0x1ca7a
	.byte	0
	.uleb128 0x23
	.long	0x1d664
	.ascii "_ZN5BlorbC1ERKS_\0"
	.long	0x1d6b3
	.quad	.LFB6007
	.quad	.LFE6007-.LFB6007
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d6c4
	.uleb128 0xf
	.long	0x1d674
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0xf
	.long	0x1d67d
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xc
	.long	0x2cbf
	.quad	.LFB6003
	.quad	.LFE6003-.LFB6003
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d71f
	.uleb128 0x4
	.secrel32	.LASF30
	.long	0x19287
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x19287
	.uleb128 0x15
	.secrel32	.LASF185
	.byte	0x13
	.byte	0x6c
	.byte	0x26
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x15
	.secrel32	.LASF186
	.byte	0x13
	.byte	0x6c
	.byte	0x3e
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x15
	.secrel32	.LASF187
	.byte	0x13
	.byte	0x6d
	.byte	0x1a
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0xc
	.long	0x10091
	.quad	.LFB6002
	.quad	.LFE6002-.LFB6002
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d787
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x19287
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x19287
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x1e6
	.byte	0x18
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x1e6
	.byte	0x25
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x1e6
	.byte	0x31
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x1d
	.long	0x280c
	.quad	.LFB6001
	.quad	.LFE6001-.LFB6001
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d7bc
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x16e6c
	.uleb128 0x1f
	.long	0x16e6c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1f
	.long	0x16e6c
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xc
	.long	0x28f6
	.quad	.LFB5997
	.quad	.LFE5997-.LFB5997
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d7ff
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x16e6c
	.uleb128 0x15
	.secrel32	.LASF185
	.byte	0x15
	.byte	0x95
	.byte	0x1d
	.long	0x16e6c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x15
	.secrel32	.LASF186
	.byte	0x15
	.byte	0x95
	.byte	0x37
	.long	0x16e6c
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xd
	.long	0x173dc
	.uleb128 0xc
	.long	0x18b07
	.quad	.LFB6000
	.quad	.LFE6000-.LFB6000
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d85b
	.uleb128 0x4
	.secrel32	.LASF171
	.long	0x19287
	.uleb128 0x4
	.secrel32	.LASF172
	.long	0x19287
	.uleb128 0x4
	.secrel32	.LASF152
	.long	0xac5c
	.uleb128 0x6
	.secrel32	.LASF190
	.byte	0xf
	.word	0x451
	.byte	0x41
	.long	0x1d7ff
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF191
	.byte	0xf
	.word	0x452
	.byte	0x3a
	.long	0x1d7ff
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x27
	.long	0x17036
	.long	0x1d87a
	.quad	.LFB5999
	.quad	.LFE5999-.LFB5999
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d887
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1caf2
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x27
	.long	0x1736f
	.long	0x1d8a6
	.quad	.LFB5998
	.quad	.LFE5998-.LFB5998
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d8b3
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1cb01
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0x10118
	.quad	.LFB5996
	.quad	.LFE5996-.LFB5996
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d901
	.uleb128 0x4
	.secrel32	.LASF151
	.long	0x16e6c
	.uleb128 0x5
	.ascii "_To\0"
	.long	0x19287
	.uleb128 0x6
	.secrel32	.LASF192
	.byte	0x3
	.word	0x148
	.byte	0x18
	.long	0x16e6c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF193
	.byte	0x3
	.word	0x148
	.byte	0x24
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xc
	.long	0x101f6
	.quad	.LFB5995
	.quad	.LFE5995-.LFB5995
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d969
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x1c5e9
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x19287
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x209
	.byte	0x18
	.long	0x1c5e9
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x209
	.byte	0x25
	.long	0x1c5e9
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x209
	.byte	0x31
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0xc
	.long	0x10283
	.quad	.LFB5994
	.quad	.LFE5994-.LFB5994
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d9a7
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x19287
	.uleb128 0x4
	.secrel32	.LASF152
	.long	0xac5c
	.uleb128 0x6
	.secrel32	.LASF194
	.byte	0xf
	.word	0x4e9
	.byte	0x46
	.long	0x16e6c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0x10335
	.quad	.LFB5993
	.quad	.LFE5993-.LFB5993
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d9e5
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x1c5e9
	.uleb128 0x4
	.secrel32	.LASF152
	.long	0xac5c
	.uleb128 0x6
	.secrel32	.LASF194
	.byte	0xf
	.word	0x4e9
	.byte	0x46
	.long	0x173e1
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0x103ee
	.quad	.LFB5992
	.quad	.LFE5992-.LFB5992
	.uleb128 0x1
	.byte	0x9c
	.long	0x1da4f
	.uleb128 0x4
	.secrel32	.LASF30
	.long	0x173e1
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x19287
	.uleb128 0x15
	.secrel32	.LASF185
	.byte	0x13
	.byte	0x7e
	.byte	0x27
	.long	0x173e1
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x15
	.secrel32	.LASF186
	.byte	0x13
	.byte	0x7e
	.byte	0x3f
	.long	0x173e1
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x15
	.secrel32	.LASF187
	.byte	0x13
	.byte	0x7f
	.byte	0x1b
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3d
	.secrel32	.LASF195
	.byte	0x13
	.byte	0x91
	.byte	0x12
	.long	0x14cce
	.uleb128 0x2
	.byte	0x91
	.sleb128 -17
	.byte	0
	.uleb128 0xc
	.long	0x104e5
	.quad	.LFB5991
	.quad	.LFE5991-.LFB5991
	.uleb128 0x1
	.byte	0x9c
	.long	0x1dabe
	.uleb128 0x4
	.secrel32	.LASF153
	.long	0x19287
	.uleb128 0x4
	.secrel32	.LASF32
	.long	0x191a1
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x191dc
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x455
	.byte	0x20
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0x3
	.word	0x455
	.byte	0x2f
	.long	0x191a1
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF188
	.byte	0x3
	.word	0x455
	.byte	0x3f
	.long	0x1b884
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1f
	.long	0x461
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.byte	0
	.uleb128 0x1d
	.long	0x10592
	.quad	.LFB5990
	.quad	.LFE5990-.LFB5990
	.uleb128 0x1
	.byte	0x9c
	.long	0x1daeb
	.uleb128 0x4
	.secrel32	.LASF154
	.long	0x19287
	.uleb128 0x1f
	.long	0x1caf7
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0x10616
	.quad	.LFB5989
	.quad	.LFE5989-.LFB5989
	.uleb128 0x1
	.byte	0x9c
	.long	0x1db53
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x3290
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x3290
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x1e6
	.byte	0x18
	.long	0x3290
	.uleb128 0x2
	.byte	0x73
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x1e6
	.byte	0x25
	.long	0x3290
	.uleb128 0x2
	.byte	0x75
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x1e6
	.byte	0x31
	.long	0x3290
	.uleb128 0x2
	.byte	0x74
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0xb68
	.quad	.LFB5988
	.quad	.LFE5988-.LFB5988
	.uleb128 0x1
	.byte	0x9c
	.long	0x1dbc1
	.uleb128 0x4
	.secrel32	.LASF9
	.long	0x3290
	.uleb128 0x4
	.secrel32	.LASF10
	.long	0x3290
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x2b9
	.byte	0x15
	.long	0x3290
	.uleb128 0x2
	.byte	0x74
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x2b9
	.byte	0x23
	.long	0x3290
	.uleb128 0x2
	.byte	0x75
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x2b9
	.byte	0x30
	.long	0x3290
	.uleb128 0x2
	.byte	0x73
	.sleb128 0
	.uleb128 0x25
	.ascii "__n\0"
	.byte	0x3
	.word	0x2bc
	.byte	0x6
	.long	0x3a20
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.uleb128 0xc
	.long	0x106c8
	.quad	.LFB5987
	.quad	.LFE5987-.LFB5987
	.uleb128 0x1
	.byte	0x9c
	.long	0x1dc29
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x3524
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x3290
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x1e6
	.byte	0x18
	.long	0x3524
	.uleb128 0x2
	.byte	0x73
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x1e6
	.byte	0x25
	.long	0x3524
	.uleb128 0x2
	.byte	0x75
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x1e6
	.byte	0x31
	.long	0x3290
	.uleb128 0x2
	.byte	0x74
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0xfa1f
	.quad	.LFB5985
	.quad	.LFE5985-.LFB5985
	.uleb128 0x1
	.byte	0x9c
	.long	0x1dc8f
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x19187
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x1a4
	.byte	0x16
	.long	0x1bd7f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x1a4
	.byte	0x2a
	.long	0x1bd7f
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x1a4
	.byte	0x37
	.long	0x1bd4d
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x25
	.ascii "_Num\0"
	.byte	0x3
	.word	0x1ad
	.byte	0x14
	.long	0x2b79
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x1d
	.long	0x7d5
	.quad	.LFB5984
	.quad	.LFE5984-.LFB5984
	.uleb128 0x1
	.byte	0x9c
	.long	0x1dd1c
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x1bd4d
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x1bd4d
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x17c
	.byte	0xf
	.long	0x1bd4d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x17c
	.byte	0x1c
	.long	0x1bd4d
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x17c
	.byte	0x28
	.long	0x1bd4d
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1a
	.secrel32	.LASF38
	.byte	0x3
	.word	0x17e
	.byte	0x3b
	.long	0xfb46
	.uleb128 0x2d
	.quad	.LBB156
	.quad	.LBE156-.LBB156
	.uleb128 0x25
	.ascii "__n\0"
	.byte	0x3
	.word	0x17f
	.byte	0x12
	.long	0x1dcec
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0xc
	.long	0x10794
	.quad	.LFB5975
	.quad	.LFE5975-.LFB5975
	.uleb128 0x1
	.byte	0x9c
	.long	0x1dd50
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1beba
	.uleb128 0x15
	.secrel32	.LASF196
	.byte	0x15
	.byte	0x87
	.byte	0x13
	.long	0x1c92b
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x1d
	.long	0x107d4
	.quad	.LFB5974
	.quad	.LFE5974-.LFB5974
	.uleb128 0x1
	.byte	0x9c
	.long	0x1dd84
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1beba
	.uleb128 0x18
	.ascii "__r\0"
	.byte	0x11
	.byte	0x31
	.byte	0x16
	.long	0x1beb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0xf646
	.quad	.LFB5973
	.quad	.LFE5973-.LFB5973
	.uleb128 0x1
	.byte	0x9c
	.long	0x1ddee
	.uleb128 0x4
	.secrel32	.LASF30
	.long	0x1c96c
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x1c92b
	.uleb128 0x15
	.secrel32	.LASF185
	.byte	0x13
	.byte	0x55
	.byte	0x26
	.long	0x1c96c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x15
	.secrel32	.LASF186
	.byte	0x13
	.byte	0x55
	.byte	0x3e
	.long	0x1c96c
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x15
	.secrel32	.LASF187
	.byte	0x13
	.byte	0x56
	.byte	0x1a
	.long	0x1c92b
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3d
	.secrel32	.LASF197
	.byte	0x13
	.byte	0x58
	.byte	0x15
	.long	0x1c92b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x11
	.long	0x17a0f
	.long	0x1de0d
	.quad	.LFB5971
	.quad	.LFE5971-.LFB5971
	.uleb128 0x1
	.byte	0x9c
	.long	0x1de3d
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c93a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__n\0"
	.byte	0x16
	.byte	0x67
	.byte	0x1a
	.long	0x17a67
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x1f
	.long	0x1a551
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x72
	.uleb128 0x73
	.ascii "__al\0"
	.long	0x48b
	.byte	0
	.byte	0
	.uleb128 0x27
	.long	0x17aca
	.long	0x1de5c
	.quad	.LFB5972
	.quad	.LFE5972-.LFB5972
	.uleb128 0x1
	.byte	0x9c
	.long	0x1de69
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c949
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xd
	.long	0xfb02
	.uleb128 0x1d
	.long	0x10823
	.quad	.LFB5970
	.quad	.LFE5970-.LFB5970
	.uleb128 0x1
	.byte	0x9c
	.long	0x1dea2
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1c901
	.uleb128 0x18
	.ascii "__t\0"
	.byte	0x11
	.byte	0x4d
	.byte	0x38
	.long	0x1de69
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0xf6e3
	.quad	.LFB5969
	.quad	.LFE5969-.LFB5969
	.uleb128 0x1
	.byte	0x9c
	.long	0x1df0c
	.uleb128 0x4
	.secrel32	.LASF30
	.long	0x1c50d
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x1c4db
	.uleb128 0x15
	.secrel32	.LASF185
	.byte	0x13
	.byte	0x55
	.byte	0x26
	.long	0x1c50d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x15
	.secrel32	.LASF186
	.byte	0x13
	.byte	0x55
	.byte	0x3e
	.long	0x1c50d
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x15
	.secrel32	.LASF187
	.byte	0x13
	.byte	0x56
	.byte	0x1a
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3d
	.secrel32	.LASF197
	.byte	0x13
	.byte	0x58
	.byte	0x15
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0xc
	.long	0x10898
	.quad	.LFB5967
	.quad	.LFE5967-.LFB5967
	.uleb128 0x1
	.byte	0x9c
	.long	0x1df76
	.uleb128 0x4
	.secrel32	.LASF30
	.long	0x19287
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x19287
	.uleb128 0x15
	.secrel32	.LASF185
	.byte	0x13
	.byte	0x7e
	.byte	0x27
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x15
	.secrel32	.LASF186
	.byte	0x13
	.byte	0x7e
	.byte	0x3f
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x15
	.secrel32	.LASF187
	.byte	0x13
	.byte	0x7f
	.byte	0x1b
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3d
	.secrel32	.LASF195
	.byte	0x13
	.byte	0x91
	.byte	0x12
	.long	0x14cce
	.uleb128 0x2
	.byte	0x91
	.sleb128 -17
	.byte	0
	.uleb128 0x1d
	.long	0x10910
	.quad	.LFB5966
	.quad	.LFE5966-.LFB5966
	.uleb128 0x1
	.byte	0x9c
	.long	0x1dfb3
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x19287
	.uleb128 0x1f
	.long	0x1caf7
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF193
	.byte	0x3
	.word	0x14f
	.byte	0x2e
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xc
	.long	0x10965
	.quad	.LFB5965
	.quad	.LFE5965-.LFB5965
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e01b
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x19287
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x19287
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x209
	.byte	0x18
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x209
	.byte	0x25
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x209
	.byte	0x31
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0xc
	.long	0x109ec
	.quad	.LFB5964
	.quad	.LFE5964-.LFB5964
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e05e
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x16e6c
	.uleb128 0x15
	.secrel32	.LASF185
	.byte	0x15
	.byte	0xab
	.byte	0x1f
	.long	0x16e6c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x15
	.secrel32	.LASF186
	.byte	0x15
	.byte	0xab
	.byte	0x39
	.long	0x16e6c
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xc
	.long	0x10aa8
	.quad	.LFB5962
	.quad	.LFE5962-.LFB5962
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e0c6
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x173e1
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x16e6c
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x20f
	.byte	0x17
	.long	0x173e1
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x20f
	.byte	0x24
	.long	0x173e1
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x20f
	.byte	0x30
	.long	0x16e6c
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x1d
	.long	0x10bfe
	.quad	.LFB5961
	.quad	.LFE5961-.LFB5961
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e0fb
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x173e1
	.uleb128 0x6
	.secrel32	.LASF194
	.byte	0x12
	.word	0x230
	.byte	0x1c
	.long	0x173e1
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x16f15
	.long	0x1e109
	.byte	0x2
	.long	0x1e120
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1caf2
	.uleb128 0x4f
	.ascii "__i\0"
	.byte	0xf
	.word	0x3f2
	.byte	0x2a
	.long	0x1caf7
	.byte	0
	.uleb128 0x38
	.long	0x1e0fb
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC1ERKS1_\0"
	.long	0x1e17d
	.quad	.LFB5960
	.quad	.LFE5960-.LFB5960
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e18e
	.uleb128 0xf
	.long	0x1e109
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0xf
	.long	0x1e112
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xc
	.long	0x10cca
	.quad	.LFB5957
	.quad	.LFE5957-.LFB5957
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e1fd
	.uleb128 0x4
	.secrel32	.LASF30
	.long	0x173e1
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x19287
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x191dc
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x13
	.word	0x14b
	.byte	0x2b
	.long	0x173e1
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x13
	.word	0x14b
	.byte	0x43
	.long	0x173e1
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x13
	.word	0x14c
	.byte	0x18
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1f
	.long	0x1c5da
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.byte	0
	.uleb128 0xc
	.long	0x10de6
	.quad	.LFB5956
	.quad	.LFE5956-.LFB5956
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e264
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x19287
	.uleb128 0x4
	.secrel32	.LASF32
	.long	0x191a1
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x191dc
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x478
	.byte	0x10
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0x3
	.word	0x478
	.byte	0x1f
	.long	0x191a1
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF188
	.byte	0x3
	.word	0x478
	.byte	0x2f
	.long	0x1b884
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0xc
	.long	0x10e67
	.quad	.LFB5955
	.quad	.LFE5955-.LFB5955
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e2a3
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x191dc
	.uleb128 0x8a
	.secrel32	.LASF148
	.uleb128 0x18
	.ascii "__p\0"
	.byte	0x15
	.byte	0x6c
	.byte	0x15
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0xbf
	.byte	0x15
	.byte	0x6c
	.byte	0x21
	.byte	0
	.uleb128 0xc
	.long	0x10eb3
	.quad	.LFB5954
	.quad	.LFE5954-.LFB5954
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e30b
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x3290
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x3290
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x209
	.byte	0x18
	.long	0x3290
	.uleb128 0x2
	.byte	0x73
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x209
	.byte	0x25
	.long	0x3290
	.uleb128 0x2
	.byte	0x75
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x209
	.byte	0x31
	.long	0x3290
	.uleb128 0x2
	.byte	0x74
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0x10f65
	.quad	.LFB5953
	.quad	.LFE5953-.LFB5953
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e373
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x4
	.secrel32	.LASF9
	.long	0x3290
	.uleb128 0x4
	.secrel32	.LASF10
	.long	0x3290
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x2ee
	.byte	0x22
	.long	0x3290
	.uleb128 0x2
	.byte	0x73
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x2ee
	.byte	0x30
	.long	0x3290
	.uleb128 0x2
	.byte	0x75
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x2ee
	.byte	0x3d
	.long	0x3290
	.uleb128 0x2
	.byte	0x74
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0x11029
	.quad	.LFB5952
	.quad	.LFE5952-.LFB5952
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e3db
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x3524
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x3290
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x209
	.byte	0x18
	.long	0x3524
	.uleb128 0x2
	.byte	0x73
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x209
	.byte	0x25
	.long	0x3524
	.uleb128 0x2
	.byte	0x75
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x209
	.byte	0x31
	.long	0x3290
	.uleb128 0x2
	.byte	0x74
	.sleb128 0
	.byte	0
	.uleb128 0x1d
	.long	0x110f5
	.quad	.LFB5951
	.quad	.LFE5951-.LFB5951
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e410
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x3524
	.uleb128 0x6
	.secrel32	.LASF194
	.byte	0x3
	.word	0x139
	.byte	0x1c
	.long	0x3524
	.uleb128 0x2
	.byte	0x73
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0x11169
	.quad	.LFB5950
	.quad	.LFE5950-.LFB5950
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e478
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x1bd4d
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x1bd4d
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x1e6
	.byte	0x18
	.long	0x1bd4d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x1e6
	.byte	0x25
	.long	0x1bd4d
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x1e6
	.byte	0x31
	.long	0x1bd4d
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x11
	.long	0x15497
	.long	0x1e497
	.quad	.LFB5948
	.quad	.LFE5948-.LFB5948
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e4c7
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1bd43
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__n\0"
	.byte	0x16
	.byte	0x67
	.byte	0x1a
	.long	0x154ea
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x1f
	.long	0x1a551
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x72
	.uleb128 0x73
	.ascii "__al\0"
	.long	0x48b
	.byte	0
	.byte	0
	.uleb128 0x27
	.long	0x15546
	.long	0x1e4e6
	.quad	.LFB5949
	.quad	.LFE5949-.LFB5949
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e4f3
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1bd5c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0xa58
	.quad	.LFB5929
	.quad	.LFE5929-.LFB5929
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e580
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x1c92b
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x1c92b
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x190
	.byte	0xf
	.long	0x1c92b
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x190
	.byte	0x1c
	.long	0x1c92b
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x190
	.byte	0x28
	.long	0x1c92b
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1a
	.secrel32	.LASF38
	.byte	0x3
	.word	0x192
	.byte	0x3b
	.long	0xf2e6
	.uleb128 0x2d
	.quad	.LBB154
	.quad	.LBE154-.LBB154
	.uleb128 0x25
	.ascii "__n\0"
	.byte	0x3
	.word	0x193
	.byte	0x12
	.long	0x1e550
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x2c
	.long	0x1beba
	.uleb128 0x74
	.long	0x1bf91
	.byte	0xa
	.byte	0x9a
	.byte	0x8
	.long	0x1e5a7
	.quad	.LFB5930
	.quad	.LFE5930-.LFB5930
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e5bc
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c930
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1f
	.long	0x1e580
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x74
	.long	0x1c489
	.byte	0xa
	.byte	0x2f
	.byte	0x8
	.long	0x1e5de
	.quad	.LFB5931
	.quad	.LFE5931-.LFB5931
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e5f3
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c8c5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1f
	.long	0x1c8ca
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xc
	.long	0x2977
	.quad	.LFB5928
	.quad	.LFE5928-.LFB5928
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e636
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x1c92b
	.uleb128 0x15
	.secrel32	.LASF185
	.byte	0x15
	.byte	0x95
	.byte	0x1d
	.long	0x1c92b
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x15
	.secrel32	.LASF186
	.byte	0x15
	.byte	0x95
	.byte	0x37
	.long	0x1c92b
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xc
	.long	0x1120c
	.quad	.LFB5926
	.quad	.LFE5926-.LFB5926
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e6a0
	.uleb128 0x4
	.secrel32	.LASF30
	.long	0x1c96c
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x1c92b
	.uleb128 0x15
	.secrel32	.LASF185
	.byte	0x13
	.byte	0x7e
	.byte	0x27
	.long	0x1c96c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x15
	.secrel32	.LASF186
	.byte	0x13
	.byte	0x7e
	.byte	0x3f
	.long	0x1c96c
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x15
	.secrel32	.LASF187
	.byte	0x13
	.byte	0x7f
	.byte	0x1b
	.long	0x1c92b
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3d
	.secrel32	.LASF195
	.byte	0x13
	.byte	0x91
	.byte	0x12
	.long	0x14cce
	.uleb128 0x2
	.byte	0x91
	.sleb128 -17
	.byte	0
	.uleb128 0x17
	.long	0xc931
	.long	0x1e6ae
	.byte	0x3
	.long	0x1e6c4
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c953
	.uleb128 0x34
	.ascii "__n\0"
	.byte	0xc
	.byte	0xbf
	.byte	0x17
	.long	0x2f0
	.byte	0
	.uleb128 0x27
	.long	0xd116
	.long	0x1e6e3
	.quad	.LFB5924
	.quad	.LFE5924-.LFB5924
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e6f0
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c9c6
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0xedde
	.quad	.LFB5922
	.quad	.LFE5922-.LFB5922
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e73c
	.uleb128 0x9
	.ascii "__a\0"
	.byte	0xb
	.word	0x6f0
	.byte	0x29
	.long	0x1ca0c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x21
	.secrel32	.LASF198
	.byte	0xb
	.word	0x6f5
	.byte	0xf
	.long	0x300
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x21
	.secrel32	.LASF199
	.byte	0xb
	.word	0x6f7
	.byte	0xf
	.long	0x300
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x1d
	.long	0xcb0d
	.quad	.LFB5923
	.quad	.LFE5923-.LFB5923
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e768
	.uleb128 0x9
	.ascii "__a\0"
	.byte	0x10
	.word	0x21f
	.byte	0x26
	.long	0x1c967
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xd
	.long	0xf37e
	.uleb128 0x1d
	.long	0x11295
	.quad	.LFB5921
	.quad	.LFE5921-.LFB5921
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e7a1
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1c8d4
	.uleb128 0x18
	.ascii "__t\0"
	.byte	0x11
	.byte	0x4d
	.byte	0x38
	.long	0x1e768
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0x88c
	.quad	.LFB5920
	.quad	.LFE5920-.LFB5920
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e82e
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x1c50d
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x1c4db
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x17c
	.byte	0xf
	.long	0x1c50d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x17c
	.byte	0x1c
	.long	0x1c50d
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x17c
	.byte	0x28
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1a
	.secrel32	.LASF38
	.byte	0x3
	.word	0x17e
	.byte	0x3b
	.long	0xf3c0
	.uleb128 0x2d
	.quad	.LBB153
	.quad	.LBE153-.LBB153
	.uleb128 0x25
	.ascii "__n\0"
	.byte	0x3
	.word	0x17f
	.byte	0x12
	.long	0x1e7fe
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0xc
	.long	0x11303
	.quad	.LFB5919
	.quad	.LFE5919-.LFB5919
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e87e
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1c0ec
	.uleb128 0x31
	.secrel32	.LASF148
	.long	0x1e861
	.uleb128 0x32
	.long	0x1c901
	.byte	0
	.uleb128 0x18
	.ascii "__p\0"
	.byte	0x15
	.byte	0x6c
	.byte	0x15
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x5e
	.byte	0x15
	.byte	0x6c
	.byte	0x21
	.uleb128 0x1f
	.long	0x1c901
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.byte	0
	.uleb128 0x27
	.long	0x164de
	.long	0x1e89d
	.quad	.LFB5918
	.quad	.LFE5918-.LFB5918
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e8aa
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1cab1
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xd
	.long	0x169f3
	.uleb128 0xc
	.long	0x18bd3
	.quad	.LFB5917
	.quad	.LFE5917-.LFB5917
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e906
	.uleb128 0x4
	.secrel32	.LASF171
	.long	0x1c50d
	.uleb128 0x4
	.secrel32	.LASF172
	.long	0x1c50d
	.uleb128 0x4
	.secrel32	.LASF152
	.long	0x7fc1
	.uleb128 0x6
	.secrel32	.LASF190
	.byte	0xf
	.word	0x451
	.byte	0x41
	.long	0x1e8aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF191
	.byte	0xf
	.word	0x452
	.byte	0x3a
	.long	0x1e8aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x11
	.long	0x158ed
	.long	0x1e925
	.quad	.LFB5915
	.quad	.LFE5915-.LFB5915
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e955
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c0d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__n\0"
	.byte	0x16
	.byte	0x67
	.byte	0x1a
	.long	0x1594a
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x1f
	.long	0x1a551
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x72
	.uleb128 0x73
	.ascii "__al\0"
	.long	0x48b
	.byte	0
	.byte	0
	.uleb128 0x27
	.long	0x159b2
	.long	0x1e974
	.quad	.LFB5916
	.quad	.LFE5916-.LFB5916
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e981
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c4ea
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0x11384
	.quad	.LFB5914
	.quad	.LFE5914-.LFB5914
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e9eb
	.uleb128 0x4
	.secrel32	.LASF30
	.long	0x1c50d
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x1c4db
	.uleb128 0x15
	.secrel32	.LASF185
	.byte	0x13
	.byte	0x7e
	.byte	0x27
	.long	0x1c50d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x15
	.secrel32	.LASF186
	.byte	0x13
	.byte	0x7e
	.byte	0x3f
	.long	0x1c50d
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x15
	.secrel32	.LASF187
	.byte	0x13
	.byte	0x7f
	.byte	0x1b
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3d
	.secrel32	.LASF195
	.byte	0x13
	.byte	0x91
	.byte	0x12
	.long	0x14cce
	.uleb128 0x2
	.byte	0x91
	.sleb128 -17
	.byte	0
	.uleb128 0xc
	.long	0x99a6
	.quad	.LFB5912
	.quad	.LFE5912-.LFB5912
	.uleb128 0x1
	.byte	0x9c
	.long	0x1ea37
	.uleb128 0x9
	.ascii "__a\0"
	.byte	0xb
	.word	0x6f0
	.byte	0x29
	.long	0x1c5ad
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x21
	.secrel32	.LASF198
	.byte	0xb
	.word	0x6f5
	.byte	0xf
	.long	0x300
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x21
	.secrel32	.LASF199
	.byte	0xb
	.word	0x6f7
	.byte	0xf
	.long	0x300
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x1d
	.long	0x74b1
	.quad	.LFB5913
	.quad	.LFE5913-.LFB5913
	.uleb128 0x1
	.byte	0x9c
	.long	0x1ea63
	.uleb128 0x9
	.ascii "__a\0"
	.byte	0x10
	.word	0x21f
	.byte	0x26
	.long	0x1c508
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0x1141a
	.quad	.LFB5911
	.quad	.LFE5911-.LFB5911
	.uleb128 0x1
	.byte	0x9c
	.long	0x1ead2
	.uleb128 0x4
	.secrel32	.LASF30
	.long	0x19287
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x19287
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x191dc
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x13
	.word	0x14b
	.byte	0x2b
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x13
	.word	0x14b
	.byte	0x43
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x13
	.word	0x14c
	.byte	0x18
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1f
	.long	0x1c5da
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.byte	0
	.uleb128 0xc
	.long	0x114b7
	.quad	.LFB5910
	.quad	.LFE5910-.LFB5910
	.uleb128 0x1
	.byte	0x9c
	.long	0x1eb3a
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x19287
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x19287
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x20f
	.byte	0x17
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x20f
	.byte	0x24
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x20f
	.byte	0x30
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x1d
	.long	0x1153c
	.quad	.LFB5909
	.quad	.LFE5909-.LFB5909
	.uleb128 0x1
	.byte	0x9c
	.long	0x1eb6f
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x19287
	.uleb128 0x6
	.secrel32	.LASF194
	.byte	0x12
	.word	0x230
	.byte	0x1c
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0x11587
	.quad	.LFB5908
	.quad	.LFE5908-.LFB5908
	.uleb128 0x1
	.byte	0x9c
	.long	0x1ebc5
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x16e6c
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x191dc
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x10
	.word	0x2e7
	.byte	0x1f
	.long	0x16e6c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x10
	.word	0x2e7
	.byte	0x39
	.long	0x16e6c
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x1f
	.long	0x1c5da
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x11
	.long	0xb46e
	.long	0x1ebe4
	.quad	.LFB5907
	.quad	.LFE5907-.LFB5907
	.uleb128 0x1
	.byte	0x9c
	.long	0x1ebf1
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c65c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0x11660
	.quad	.LFB5906
	.quad	.LFE5906-.LFB5906
	.uleb128 0x1
	.byte	0x9c
	.long	0x1ec4f
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x173e1
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x16e6c
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x263
	.byte	0xe
	.long	0x173e1
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x263
	.byte	0x1b
	.long	0x173e1
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x263
	.byte	0x27
	.long	0x16e6c
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x11
	.long	0xb3ee
	.long	0x1ec6e
	.quad	.LFB5905
	.quad	.LFE5905-.LFB5905
	.uleb128 0x1
	.byte	0x9c
	.long	0x1ec7b
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c65c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0xc49e
	.long	0x1eca3
	.quad	.LFB5904
	.quad	.LFE5904-.LFB5904
	.uleb128 0x1
	.byte	0x9c
	.long	0x1ecf0
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x173e1
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c65c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0xb
	.word	0x5e4
	.byte	0x21
	.long	0xafcd
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0xb
	.word	0x5e5
	.byte	0x1a
	.long	0x173e1
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0xb
	.word	0x5e5
	.byte	0x34
	.long	0x173e1
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x21
	.secrel32	.LASF187
	.byte	0xb
	.word	0x5e7
	.byte	0xc
	.long	0xadb0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x1d
	.long	0x1178d
	.quad	.LFB5903
	.quad	.LFE5903-.LFB5903
	.uleb128 0x1
	.byte	0x9c
	.long	0x1ed39
	.uleb128 0x4
	.secrel32	.LASF98
	.long	0xa11e
	.uleb128 0x9
	.ascii "__one\0"
	.byte	0x10
	.word	0x240
	.byte	0x1d
	.long	0x1c5da
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__two\0"
	.byte	0x10
	.word	0x240
	.byte	0x32
	.long	0x1c5d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x11
	.long	0xbeda
	.long	0x1ed58
	.quad	.LFB5902
	.quad	.LFE5902-.LFB5902
	.uleb128 0x1
	.byte	0x9c
	.long	0x1ed65
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c65c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0x6dff
	.long	0x1ed84
	.quad	.LFB5901
	.quad	.LFE5901-.LFB5901
	.uleb128 0x1
	.byte	0x9c
	.long	0x1edd3
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1bdf2
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0x8
	.word	0x471
	.byte	0x1f
	.long	0x5f3c
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x2d
	.quad	.LBB152
	.quad	.LBE152-.LBB152
	.uleb128 0x25
	.ascii "__q\0"
	.byte	0x8
	.word	0x475
	.byte	0x13
	.long	0x7192
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x21
	.secrel32	.LASF200
	.byte	0x8
	.word	0x477
	.byte	0xf
	.long	0x633f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.byte	0
	.uleb128 0x1d
	.long	0x117f6
	.quad	.LFB5900
	.quad	.LFE5900-.LFB5900
	.uleb128 0x1
	.byte	0x9c
	.long	0x1ee1c
	.uleb128 0x4
	.secrel32	.LASF98
	.long	0x5223
	.uleb128 0x9
	.ascii "__one\0"
	.byte	0x10
	.word	0x240
	.byte	0x1d
	.long	0x1bd70
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__two\0"
	.byte	0x10
	.word	0x240
	.byte	0x32
	.long	0x1bd6b
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x1d
	.long	0x1186d
	.quad	.LFB5899
	.quad	.LFE5899-.LFB5899
	.uleb128 0x1
	.byte	0x9c
	.long	0x1ee48
	.uleb128 0x1f
	.long	0x1bd6b
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1f
	.long	0x1bd6b
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x27
	.long	0x5a64
	.long	0x1ee67
	.quad	.LFB5898
	.quad	.LFE5898-.LFB5898
	.uleb128 0x1
	.byte	0x9c
	.long	0x1ee74
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1bdca
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0x2d82
	.quad	.LFB5897
	.quad	.LFE5897-.LFB5897
	.uleb128 0x1
	.byte	0x9c
	.long	0x1eee6
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x19287
	.uleb128 0x4
	.secrel32	.LASF32
	.long	0x191a1
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x13
	.word	0x253
	.byte	0x2d
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0x13
	.word	0x253
	.byte	0x3c
	.long	0x191a1
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x2d
	.quad	.LBB150
	.quad	.LBE150-.LBB150
	.uleb128 0x25
	.ascii "__val\0"
	.byte	0x13
	.word	0x257
	.byte	0x40
	.long	0x1eee6
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0xe
	.long	0xf5db
	.uleb128 0xc
	.long	0x118b0
	.quad	.LFB5896
	.quad	.LFE5896-.LFB5896
	.uleb128 0x1
	.byte	0x9c
	.long	0x1ef65
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x191dc
	.uleb128 0x5
	.ascii "_Up\0"
	.long	0x191dc
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x13
	.word	0x3ee
	.byte	0x19
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x13
	.word	0x3ee
	.byte	0x27
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x13
	.word	0x3ef
	.byte	0xb
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1f
	.long	0x1c5da
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x25
	.ascii "__count\0"
	.byte	0x13
	.word	0x3f1
	.byte	0x11
	.long	0x2b66
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x1d
	.long	0x1196b
	.quad	.LFB5895
	.quad	.LFE5895-.LFB5895
	.uleb128 0x1
	.byte	0x9c
	.long	0x1ef9a
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x19287
	.uleb128 0x6
	.secrel32	.LASF194
	.byte	0x3
	.word	0x139
	.byte	0x1c
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0x16a91
	.long	0x1efb9
	.quad	.LFB5893
	.quad	.LFE5893-.LFB5893
	.uleb128 0x1
	.byte	0x9c
	.long	0x1efe9
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c5b7
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__n\0"
	.byte	0x16
	.byte	0x67
	.byte	0x1a
	.long	0x16ae4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x1f
	.long	0x1a551
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x72
	.uleb128 0x73
	.ascii "__al\0"
	.long	0x48b
	.byte	0
	.byte	0
	.uleb128 0x27
	.long	0x16b40
	.long	0x1f008
	.quad	.LFB5894
	.quad	.LFE5894-.LFB5894
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f015
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c5c6
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0x119b6
	.quad	.LFB5892
	.quad	.LFE5892-.LFB5892
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f07d
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x3290
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x3290
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x20f
	.byte	0x17
	.long	0x3290
	.uleb128 0x2
	.byte	0x74
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x20f
	.byte	0x24
	.long	0x3290
	.uleb128 0x2
	.byte	0x75
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x20f
	.byte	0x30
	.long	0x3290
	.uleb128 0x2
	.byte	0x73
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0x11a66
	.quad	.LFB5891
	.quad	.LFE5891-.LFB5891
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f0db
	.uleb128 0x4
	.secrel32	.LASF150
	.long	0x3290
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x14cc6
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x3c8
	.byte	0x14
	.long	0x3290
	.uleb128 0x2
	.byte	0x74
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x3c8
	.byte	0x23
	.long	0x3290
	.uleb128 0x2
	.byte	0x73
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF188
	.byte	0x3
	.word	0x3c8
	.byte	0x36
	.long	0x1af3d
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x1d
	.long	0x11ae1
	.quad	.LFB5890
	.quad	.LFE5890-.LFB5890
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f118
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x3290
	.uleb128 0x1f
	.long	0x1af1a
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF193
	.byte	0x3
	.word	0x14f
	.byte	0x2e
	.long	0x3290
	.uleb128 0x2
	.byte	0x73
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0x11b53
	.quad	.LFB5889
	.quad	.LFE5889-.LFB5889
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f180
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x4
	.secrel32	.LASF9
	.long	0x3290
	.uleb128 0x4
	.secrel32	.LASF10
	.long	0x3290
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x300
	.byte	0x22
	.long	0x3290
	.uleb128 0x2
	.byte	0x73
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x300
	.byte	0x30
	.long	0x3290
	.uleb128 0x2
	.byte	0x75
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x300
	.byte	0x3d
	.long	0x3290
	.uleb128 0x2
	.byte	0x74
	.sleb128 0
	.byte	0
	.uleb128 0x1d
	.long	0x11c17
	.quad	.LFB5888
	.quad	.LFE5888-.LFB5888
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f1b5
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x3290
	.uleb128 0x6
	.secrel32	.LASF194
	.byte	0x3
	.word	0x139
	.byte	0x1c
	.long	0x3290
	.uleb128 0x2
	.byte	0x73
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0x11c7f
	.quad	.LFB5887
	.quad	.LFE5887-.LFB5887
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f21d
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x3524
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x3290
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x20f
	.byte	0x17
	.long	0x3524
	.uleb128 0x2
	.byte	0x74
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x20f
	.byte	0x24
	.long	0x3524
	.uleb128 0x2
	.byte	0x75
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x20f
	.byte	0x30
	.long	0x3290
	.uleb128 0x2
	.byte	0x73
	.sleb128 0
	.byte	0
	.uleb128 0x1d
	.long	0x11d49
	.quad	.LFB5886
	.quad	.LFE5886-.LFB5886
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f252
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x3524
	.uleb128 0x6
	.secrel32	.LASF194
	.byte	0x12
	.word	0x230
	.byte	0x1c
	.long	0x3524
	.uleb128 0x2
	.byte	0x73
	.sleb128 0
	.byte	0
	.uleb128 0xd
	.long	0x1bd52
	.uleb128 0x1d
	.long	0x11dbd
	.quad	.LFB5885
	.quad	.LFE5885-.LFB5885
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f294
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x1bd4d
	.uleb128 0x1f
	.long	0x1f252
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF193
	.byte	0x3
	.word	0x14f
	.byte	0x2e
	.long	0x1bd4d
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xc
	.long	0x11e20
	.quad	.LFB5884
	.quad	.LFE5884-.LFB5884
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f2fc
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x1bd4d
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x1bd4d
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x209
	.byte	0x18
	.long	0x1bd4d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x209
	.byte	0x25
	.long	0x1bd4d
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x209
	.byte	0x31
	.long	0x1bd4d
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x1d
	.long	0x11ec3
	.quad	.LFB5883
	.quad	.LFE5883-.LFB5883
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f331
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x1bd4d
	.uleb128 0x6
	.secrel32	.LASF194
	.byte	0x3
	.word	0x139
	.byte	0x1c
	.long	0x1bd4d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x52f4
	.long	0x1f33f
	.byte	0x3
	.long	0x1f355
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1bd66
	.uleb128 0x34
	.ascii "__n\0"
	.byte	0xc
	.byte	0xbf
	.byte	0x17
	.long	0x2f0
	.byte	0
	.uleb128 0x1d
	.long	0x11f1c
	.quad	.LFB5881
	.quad	.LFE5881-.LFB5881
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f389
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x191dc
	.uleb128 0x15
	.secrel32	.LASF201
	.byte	0x15
	.byte	0x50
	.byte	0x15
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0x16af0
	.long	0x1f3a8
	.quad	.LFB5880
	.quad	.LFE5880-.LFB5880
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f3d3
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c5b7
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__p\0"
	.byte	0x16
	.byte	0x84
	.byte	0x17
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x18
	.ascii "__t\0"
	.byte	0x16
	.byte	0x84
	.byte	0x26
	.long	0x16ae4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x11
	.long	0x154f6
	.long	0x1f3f2
	.quad	.LFB5879
	.quad	.LFE5879-.LFB5879
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f41d
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1bd43
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__p\0"
	.byte	0x16
	.byte	0x84
	.byte	0x17
	.long	0x1bd4d
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x18
	.ascii "__t\0"
	.byte	0x16
	.byte	0x84
	.byte	0x26
	.long	0x154ea
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0xc
	.long	0x11f5a
	.quad	.LFB5843
	.quad	.LFE5843-.LFB5843
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f485
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0x1
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x1c92b
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x1c92b
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x1e6
	.byte	0x18
	.long	0x1c92b
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x1e6
	.byte	0x25
	.long	0x1c92b
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x1e6
	.byte	0x31
	.long	0x1c92b
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0xc
	.long	0x11fe9
	.quad	.LFB5842
	.quad	.LFE5842-.LFB5842
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f4c8
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x1c92b
	.uleb128 0x15
	.secrel32	.LASF185
	.byte	0x15
	.byte	0xab
	.byte	0x1f
	.long	0x1c92b
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x15
	.secrel32	.LASF186
	.byte	0x15
	.byte	0xab
	.byte	0x39
	.long	0x1c92b
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xc
	.long	0x12032
	.quad	.LFB5841
	.quad	.LFE5841-.LFB5841
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f537
	.uleb128 0x4
	.secrel32	.LASF30
	.long	0x1c96c
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x1c92b
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1beba
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x13
	.word	0x14b
	.byte	0x2b
	.long	0x1c96c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x13
	.word	0x14b
	.byte	0x43
	.long	0x1c96c
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x13
	.word	0x14c
	.byte	0x18
	.long	0x1c92b
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1f
	.long	0x1c95d
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.byte	0
	.uleb128 0x1d
	.long	0x120e4
	.quad	.LFB5840
	.quad	.LFE5840-.LFB5840
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f575
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1beba
	.uleb128 0x4c
	.secrel32	.LASF155
	.long	0x1c96c
	.uleb128 0x9
	.ascii "__i\0"
	.byte	0xf
	.word	0x685
	.byte	0x2b
	.long	0x1c92b
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0xc9e8
	.quad	.LFB5839
	.quad	.LFE5839-.LFB5839
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f5da
	.uleb128 0x9
	.ascii "__a\0"
	.byte	0x10
	.word	0x1cb
	.byte	0x20
	.long	0x1c962
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0x10
	.word	0x1cb
	.byte	0x2f
	.long	0xca49
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x58
	.long	0x1e6a0
	.quad	.LBB147
	.quad	.LBE147-.LBB147
	.word	0x1cc
	.byte	0x1c
	.uleb128 0xf
	.long	0x1e6b7
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0xf
	.long	0x1e6ae
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x11
	.long	0xe12d
	.long	0x1f5f9
	.quad	.LFB5838
	.quad	.LFE5838-.LFB5838
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f606
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1ca02
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0x17a73
	.long	0x1f625
	.quad	.LFB5837
	.quad	.LFE5837-.LFB5837
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f650
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c93a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__p\0"
	.byte	0x16
	.byte	0x84
	.byte	0x17
	.long	0x1c92b
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x18
	.ascii "__t\0"
	.byte	0x16
	.byte	0x84
	.byte	0x26
	.long	0x17a67
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0xc
	.long	0x1216b
	.quad	.LFB5833
	.quad	.LFE5833-.LFB5833
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f6a0
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1c0ec
	.uleb128 0x31
	.secrel32	.LASF148
	.long	0x1f683
	.uleb128 0x32
	.long	0x1c8d4
	.byte	0
	.uleb128 0x18
	.ascii "__p\0"
	.byte	0x15
	.byte	0x6c
	.byte	0x15
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x5e
	.byte	0x15
	.byte	0x6c
	.byte	0x21
	.uleb128 0x1f
	.long	0x1c8d4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.byte	0
	.uleb128 0x49
	.long	0x1c287
	.byte	0xa
	.byte	0x32
	.byte	0x9
	.long	0x1f6b0
	.long	0x1f6bf
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c4e0
	.uleb128 0x1
	.long	0x1c901
	.byte	0
	.uleb128 0x23
	.long	0x1f6a0
	.ascii "_ZN3DDT4NodeC1ERKS0_\0"
	.long	0x1f6f3
	.quad	.LFB5836
	.quad	.LFE5836-.LFB5836
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f704
	.uleb128 0xf
	.long	0x1f6b0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0xf
	.long	0x1f6b9
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xc
	.long	0x945
	.quad	.LFB5830
	.quad	.LFE5830-.LFB5830
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f791
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x1c4db
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x1c4db
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x17c
	.byte	0xf
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x17c
	.byte	0x1c
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x17c
	.byte	0x28
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1a
	.secrel32	.LASF38
	.byte	0x3
	.word	0x17e
	.byte	0x3b
	.long	0xc831
	.uleb128 0x2d
	.quad	.LBB145
	.quad	.LBE145-.LBB145
	.uleb128 0x25
	.ascii "__n\0"
	.byte	0x3
	.word	0x17f
	.byte	0x12
	.long	0x1f761
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x74
	.long	0x1c2b5
	.byte	0xa
	.byte	0x32
	.byte	0x9
	.long	0x1f7b3
	.quad	.LFB5831
	.quad	.LFE5831-.LFB5831
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f7c8
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c4e0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1f
	.long	0x1c901
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xd
	.long	0x1c68e
	.uleb128 0xd
	.long	0x1c89d
	.uleb128 0x74
	.long	0x1c81f
	.byte	0x9
	.byte	0x7
	.byte	0x8
	.long	0x1f7f4
	.quad	.LFB5832
	.quad	.LFE5832-.LFB5832
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f809
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c8a7
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1f
	.long	0x1f7cd
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x11
	.long	0x161dc
	.long	0x1f828
	.quad	.LFB5829
	.quad	.LFE5829-.LFB5829
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f845
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c8ed
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0xf
	.word	0x431
	.byte	0x21
	.long	0x16166
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xc
	.long	0x121e5
	.quad	.LFB5828
	.quad	.LFE5828-.LFB5828
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f8ad
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x1c50d
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x1c4db
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x1e6
	.byte	0x18
	.long	0x1c50d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x1e6
	.byte	0x25
	.long	0x1c50d
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x1e6
	.byte	0x31
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0xc
	.long	0xf78d
	.quad	.LFB5825
	.quad	.LFE5825-.LFB5825
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f917
	.uleb128 0x4
	.secrel32	.LASF30
	.long	0x16399
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x1c4db
	.uleb128 0x15
	.secrel32	.LASF185
	.byte	0x13
	.byte	0x55
	.byte	0x26
	.long	0x16399
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x15
	.secrel32	.LASF186
	.byte	0x13
	.byte	0x55
	.byte	0x3e
	.long	0x16399
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x15
	.secrel32	.LASF187
	.byte	0x13
	.byte	0x56
	.byte	0x1a
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3d
	.secrel32	.LASF197
	.byte	0x13
	.byte	0x58
	.byte	0x15
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x27
	.long	0x165b7
	.long	0x1f936
	.quad	.LFB5827
	.quad	.LFE5827-.LFB5827
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f943
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1caa2
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x27
	.long	0x16977
	.long	0x1f962
	.quad	.LFB5826
	.quad	.LFE5826-.LFB5826
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f96f
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1cab1
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x72b7
	.long	0x1f97d
	.byte	0x3
	.long	0x1f993
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c4f4
	.uleb128 0x34
	.ascii "__n\0"
	.byte	0xc
	.byte	0xbf
	.byte	0x17
	.long	0x2f0
	.byte	0
	.uleb128 0xc
	.long	0x1228a
	.quad	.LFB5823
	.quad	.LFE5823-.LFB5823
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f9c7
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1c0ec
	.uleb128 0x15
	.secrel32	.LASF201
	.byte	0x15
	.byte	0x50
	.byte	0x15
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0x122d8
	.quad	.LFB5822
	.quad	.LFE5822-.LFB5822
	.uleb128 0x1
	.byte	0x9c
	.long	0x1fa36
	.uleb128 0x4
	.secrel32	.LASF30
	.long	0x1c50d
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x1c4db
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1c0ec
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x13
	.word	0x14b
	.byte	0x2b
	.long	0x1c50d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x13
	.word	0x14b
	.byte	0x43
	.long	0x1c50d
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x13
	.word	0x14c
	.byte	0x18
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1f
	.long	0x1c4fe
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.byte	0
	.uleb128 0x1d
	.long	0x1239b
	.quad	.LFB5821
	.quad	.LFE5821-.LFB5821
	.uleb128 0x1
	.byte	0x9c
	.long	0x1fa74
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1c0ec
	.uleb128 0x4c
	.secrel32	.LASF155
	.long	0x1c50d
	.uleb128 0x9
	.ascii "__i\0"
	.byte	0xf
	.word	0x685
	.byte	0x2b
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0x8c32
	.long	0x1fa93
	.quad	.LFB5820
	.quad	.LFE5820-.LFB5820
	.uleb128 0x1
	.byte	0x9c
	.long	0x1faa0
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c5a3
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0xb283
	.long	0x1fabf
	.quad	.LFB5815
	.quad	.LFE5815-.LFB5815
	.uleb128 0x1
	.byte	0x9c
	.long	0x1fb20
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c65c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__x\0"
	.byte	0xe
	.byte	0xc7
	.byte	0x2a
	.long	0x1c66b
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x2d
	.quad	.LBB142
	.quad	.LBE142-.LBB142
	.uleb128 0x37
	.ascii "__xlen\0"
	.byte	0xe
	.byte	0xdf
	.byte	0x14
	.long	0xafda
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2d
	.quad	.LBB144
	.quad	.LBE144-.LBB144
	.uleb128 0x3d
	.secrel32	.LASF189
	.byte	0xe
	.byte	0xe2
	.byte	0x10
	.long	0xadb0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xc
	.long	0x1242b
	.quad	.LFB5819
	.quad	.LFE5819-.LFB5819
	.uleb128 0x1
	.byte	0x9c
	.long	0x1fb7e
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x19287
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x19287
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x263
	.byte	0xe
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x263
	.byte	0x1b
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x263
	.byte	0x27
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x1d
	.long	0x12487
	.quad	.LFB5818
	.quad	.LFE5818-.LFB5818
	.uleb128 0x1
	.byte	0x9c
	.long	0x1fbaa
	.uleb128 0x1f
	.long	0x1c5d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1f
	.long	0x1c5d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x61
	.long	0x16d7c
	.quad	.LFB5817
	.quad	.LFE5817-.LFB5817
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x61
	.long	0x16c96
	.quad	.LFB5816
	.quad	.LFE5816-.LFB5816
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x11
	.long	0x61e0
	.long	0x1fbf7
	.quad	.LFB5813
	.quad	.LFE5813-.LFB5813
	.uleb128 0x1
	.byte	0x9c
	.long	0x1fc14
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1bdf2
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__x\0"
	.byte	0x8
	.word	0x2e0
	.byte	0x1f
	.long	0x1bdfc
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x61
	.long	0x156b8
	.quad	.LFB5814
	.quad	.LFE5814-.LFB5814
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0xc
	.long	0x124b3
	.quad	.LFB5812
	.quad	.LFE5812-.LFB5812
	.uleb128 0x1
	.byte	0x9c
	.long	0x1fc5f
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1c0ec
	.uleb128 0x15
	.secrel32	.LASF196
	.byte	0x15
	.byte	0x87
	.byte	0x13
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x1d
	.long	0x124fc
	.quad	.LFB5811
	.quad	.LFE5811-.LFB5811
	.uleb128 0x1
	.byte	0x9c
	.long	0x1fc93
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1c0ec
	.uleb128 0x18
	.ascii "__r\0"
	.byte	0x11
	.byte	0x31
	.byte	0x16
	.long	0x1c8d4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0x15956
	.long	0x1fcb2
	.quad	.LFB5810
	.quad	.LFE5810-.LFB5810
	.uleb128 0x1
	.byte	0x9c
	.long	0x1fcdd
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c0d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__p\0"
	.byte	0x16
	.byte	0x84
	.byte	0x17
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x18
	.ascii "__t\0"
	.byte	0x16
	.byte	0x84
	.byte	0x26
	.long	0x1594a
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0xc
	.long	0x12554
	.quad	.LFB5809
	.quad	.LFE5809-.LFB5809
	.uleb128 0x1
	.byte	0x9c
	.long	0x1fd43
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x19287
	.uleb128 0x4
	.secrel32	.LASF32
	.long	0x191a1
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x13
	.word	0x276
	.byte	0x30
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0x13
	.word	0x276
	.byte	0x3f
	.long	0x191a1
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0xc0
	.ascii "__can_fill\0"
	.byte	0x13
	.word	0x27b
	.byte	0x16
	.long	0x14cce
	.uleb128 0x2
	.byte	0x91
	.sleb128 -17
	.byte	0
	.uleb128 0xc
	.long	0x125e3
	.quad	.LFB5808
	.quad	.LFE5808-.LFB5808
	.uleb128 0x1
	.byte	0x9c
	.long	0x1fdba
	.uleb128 0x4
	.secrel32	.LASF30
	.long	0x19287
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x19287
	.uleb128 0x4
	.secrel32	.LASF156
	.long	0xa11e
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x13
	.word	0x410
	.byte	0x21
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x13
	.word	0x410
	.byte	0x39
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x13
	.word	0x411
	.byte	0x15
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x6
	.secrel32	.LASF202
	.byte	0x13
	.word	0x411
	.byte	0x2b
	.long	0x1c5da
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.byte	0
	.uleb128 0x17
	.long	0xa1e1
	.long	0x1fdc8
	.byte	0x3
	.long	0x1fdde
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c5d0
	.uleb128 0x34
	.ascii "__n\0"
	.byte	0xc
	.byte	0xbf
	.byte	0x17
	.long	0x2f0
	.byte	0
	.uleb128 0xc
	.long	0x1267d
	.quad	.LFB5806
	.quad	.LFE5806-.LFB5806
	.uleb128 0x1
	.byte	0x9c
	.long	0x1fe3c
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x3290
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x3290
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x263
	.byte	0xe
	.long	0x3290
	.uleb128 0x2
	.byte	0x73
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x263
	.byte	0x1b
	.long	0x3290
	.uleb128 0x2
	.byte	0x75
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x263
	.byte	0x27
	.long	0x3290
	.uleb128 0x2
	.byte	0x74
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0x7044
	.long	0x1fe5b
	.quad	.LFB5805
	.quad	.LFE5805-.LFB5805
	.uleb128 0x1
	.byte	0x9c
	.long	0x1fe98
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1bde8
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0x8
	.word	0x51b
	.byte	0x1e
	.long	0x5f3c
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x9
	.ascii "__s\0"
	.byte	0x8
	.word	0x51b
	.byte	0x2f
	.long	0x19524
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x21
	.secrel32	.LASF203
	.byte	0x8
	.word	0x520
	.byte	0x12
	.long	0x5f49
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0xc
	.long	0x12704
	.quad	.LFB5804
	.quad	.LFE5804-.LFB5804
	.uleb128 0x1
	.byte	0x9c
	.long	0x1fef6
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x3290
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x14cc6
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x3e0
	.byte	0x1b
	.long	0x3290
	.uleb128 0x2
	.byte	0x74
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x3e0
	.byte	0x35
	.long	0x3290
	.uleb128 0x2
	.byte	0x73
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF188
	.byte	0x3
	.word	0x3e0
	.byte	0x48
	.long	0x1af3d
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0xc
	.long	0x12777
	.quad	.LFB5803
	.quad	.LFE5803-.LFB5803
	.uleb128 0x1
	.byte	0x9c
	.long	0x1ff5e
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x3290
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x3290
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x31c
	.byte	0x20
	.long	0x3290
	.uleb128 0x2
	.byte	0x74
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x31c
	.byte	0x2d
	.long	0x3290
	.uleb128 0x2
	.byte	0x75
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x31c
	.byte	0x39
	.long	0x3290
	.uleb128 0x2
	.byte	0x73
	.sleb128 0
	.byte	0
	.uleb128 0x1d
	.long	0x12839
	.quad	.LFB5802
	.quad	.LFE5802-.LFB5802
	.uleb128 0x1
	.byte	0x9c
	.long	0x1ff93
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x3290
	.uleb128 0x6
	.secrel32	.LASF194
	.byte	0x12
	.word	0x230
	.byte	0x1c
	.long	0x3290
	.uleb128 0x2
	.byte	0x73
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0x128a1
	.quad	.LFB5801
	.quad	.LFE5801-.LFB5801
	.uleb128 0x1
	.byte	0x9c
	.long	0x1fff1
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x3524
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x3290
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x263
	.byte	0xe
	.long	0x3524
	.uleb128 0x2
	.byte	0x73
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x263
	.byte	0x1b
	.long	0x3524
	.uleb128 0x2
	.byte	0x75
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x263
	.byte	0x27
	.long	0x3290
	.uleb128 0x2
	.byte	0x74
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0x12942
	.quad	.LFB5799
	.quad	.LFE5799-.LFB5799
	.uleb128 0x1
	.byte	0x9c
	.long	0x20059
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x1bd4d
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x1bd4d
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x20f
	.byte	0x17
	.long	0x1bd4d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x20f
	.byte	0x24
	.long	0x1bd4d
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x20f
	.byte	0x30
	.long	0x1bd4d
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x1d
	.long	0x129e3
	.quad	.LFB5798
	.quad	.LFE5798-.LFB5798
	.uleb128 0x1
	.byte	0x9c
	.long	0x2008e
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x1bd4d
	.uleb128 0x6
	.secrel32	.LASF194
	.byte	0x12
	.word	0x230
	.byte	0x1c
	.long	0x1bd4d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0x53ac
	.quad	.LFB5797
	.quad	.LFE5797-.LFB5797
	.uleb128 0x1
	.byte	0x9c
	.long	0x200f3
	.uleb128 0x9
	.ascii "__a\0"
	.byte	0x10
	.word	0x1cb
	.byte	0x20
	.long	0x1bd75
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0x10
	.word	0x1cb
	.byte	0x2f
	.long	0x5408
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x58
	.long	0x1f331
	.quad	.LBB139
	.quad	.LBE139-.LBB139
	.word	0x1cc
	.byte	0x1c
	.uleb128 0xf
	.long	0x1f348
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0xf
	.long	0x1f33f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0xc
	.long	0x12a3c
	.quad	.LFB5796
	.quad	.LFE5796-.LFB5796
	.uleb128 0x1
	.byte	0x9c
	.long	0x20127
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x191dc
	.uleb128 0x15
	.secrel32	.LASF196
	.byte	0x15
	.byte	0x87
	.byte	0x13
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x1d
	.long	0x12a75
	.quad	.LFB5795
	.quad	.LFE5795-.LFB5795
	.uleb128 0x1
	.byte	0x9c
	.long	0x2015b
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x191dc
	.uleb128 0x18
	.ascii "__r\0"
	.byte	0x11
	.byte	0x31
	.byte	0x16
	.long	0x1c8bb
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0xa215
	.long	0x20169
	.byte	0x3
	.long	0x2018b
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c5d0
	.uleb128 0x34
	.ascii "__p\0"
	.byte	0xc
	.byte	0xca
	.byte	0x17
	.long	0x19287
	.uleb128 0x34
	.ascii "__n\0"
	.byte	0xc
	.byte	0xca
	.byte	0x23
	.long	0x2f0
	.byte	0
	.uleb128 0x17
	.long	0x5328
	.long	0x20199
	.byte	0x3
	.long	0x201bb
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1bd66
	.uleb128 0x34
	.ascii "__p\0"
	.byte	0xc
	.byte	0xca
	.byte	0x17
	.long	0x1bd4d
	.uleb128 0x34
	.ascii "__n\0"
	.byte	0xc
	.byte	0xca
	.byte	0x23
	.long	0x2f0
	.byte	0
	.uleb128 0xc
	.long	0x12abd
	.quad	.LFB5713
	.quad	.LFE5713-.LFB5713
	.uleb128 0x1
	.byte	0x9c
	.long	0x201ef
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1beba
	.uleb128 0x15
	.secrel32	.LASF201
	.byte	0x15
	.byte	0x50
	.byte	0x15
	.long	0x1c92b
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0x12b02
	.quad	.LFB5712
	.quad	.LFE5712-.LFB5712
	.uleb128 0x1
	.byte	0x9c
	.long	0x2023d
	.uleb128 0x4
	.secrel32	.LASF151
	.long	0x17e32
	.uleb128 0x5
	.ascii "_To\0"
	.long	0x1c92b
	.uleb128 0x6
	.secrel32	.LASF192
	.byte	0x3
	.word	0x148
	.byte	0x18
	.long	0x17e32
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF193
	.byte	0x3
	.word	0x148
	.byte	0x24
	.long	0x1c92b
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xc
	.long	0x12bd9
	.quad	.LFB5711
	.quad	.LFE5711-.LFB5711
	.uleb128 0x1
	.byte	0x9c
	.long	0x202a5
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0x1
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x1c92b
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x1c92b
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x209
	.byte	0x18
	.long	0x1c92b
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x209
	.byte	0x25
	.long	0x1c92b
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x209
	.byte	0x31
	.long	0x1c92b
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0xc
	.long	0x12c68
	.quad	.LFB5710
	.quad	.LFE5710-.LFB5710
	.uleb128 0x1
	.byte	0x9c
	.long	0x202e3
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x1c92b
	.uleb128 0x4
	.secrel32	.LASF152
	.long	0xd578
	.uleb128 0x6
	.secrel32	.LASF194
	.byte	0xf
	.word	0x4e9
	.byte	0x46
	.long	0x17e32
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0x12d11
	.quad	.LFB5709
	.quad	.LFE5709-.LFB5709
	.uleb128 0x1
	.byte	0x9c
	.long	0x20339
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x1c92b
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1beba
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x10
	.word	0x2e7
	.byte	0x1f
	.long	0x1c92b
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x10
	.word	0x2e7
	.byte	0x39
	.long	0x1c92b
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x1f
	.long	0x1c95d
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0xc
	.long	0x12d7c
	.quad	.LFB5708
	.quad	.LFE5708-.LFB5708
	.uleb128 0x1
	.byte	0x9c
	.long	0x203b0
	.uleb128 0x4
	.secrel32	.LASF30
	.long	0x1c92b
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x1c92b
	.uleb128 0x4
	.secrel32	.LASF156
	.long	0xc856
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x13
	.word	0x15d
	.byte	0x37
	.long	0x1c92b
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x13
	.word	0x15e
	.byte	0x1b
	.long	0x1c92b
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x13
	.word	0x15f
	.byte	0x1d
	.long	0x1c92b
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x6
	.secrel32	.LASF202
	.byte	0x13
	.word	0x160
	.byte	0x18
	.long	0x1c95d
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.byte	0
	.uleb128 0x27
	.long	0xd0c1
	.long	0x203cf
	.quad	.LFB5707
	.quad	.LFE5707-.LFB5707
	.uleb128 0x1
	.byte	0x9c
	.long	0x203dc
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c9bc
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0xd460
	.long	0x203fb
	.quad	.LFB5706
	.quad	.LFE5706-.LFB5706
	.uleb128 0x1
	.byte	0x9c
	.long	0x20418
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c9bc
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0xb
	.word	0x157
	.byte	0x1a
	.long	0x2f0
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xd
	.long	0x18426
	.uleb128 0xc
	.long	0x18cb6
	.quad	.LFB5705
	.quad	.LFE5705-.LFB5705
	.uleb128 0x1
	.byte	0x9c
	.long	0x2046b
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x1c92b
	.uleb128 0x4
	.secrel32	.LASF152
	.long	0xd578
	.uleb128 0x6
	.secrel32	.LASF190
	.byte	0xf
	.word	0x4d2
	.byte	0x3f
	.long	0x20418
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF191
	.byte	0xf
	.word	0x4d3
	.byte	0x38
	.long	0x20418
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x11
	.long	0xed38
	.long	0x2048a
	.quad	.LFB5704
	.quad	.LFE5704-.LFB5704
	.uleb128 0x1
	.byte	0x9c
	.long	0x204c7
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1ca02
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0xb
	.word	0x6dc
	.byte	0x1e
	.long	0xd932
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x9
	.ascii "__s\0"
	.byte	0xb
	.word	0x6dc
	.byte	0x2f
	.long	0x19524
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x21
	.secrel32	.LASF203
	.byte	0xb
	.word	0x6e1
	.byte	0x12
	.long	0xd93f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x17
	.long	0xc96a
	.long	0x204d5
	.byte	0x3
	.long	0x204f7
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c953
	.uleb128 0x34
	.ascii "__p\0"
	.byte	0xc
	.byte	0xca
	.byte	0x17
	.long	0x1c92b
	.uleb128 0x34
	.ascii "__n\0"
	.byte	0xc
	.byte	0xca
	.byte	0x23
	.long	0x2f0
	.byte	0
	.uleb128 0x17
	.long	0x14d2c
	.long	0x20505
	.byte	0x2
	.long	0x2051d
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1cade
	.uleb128 0xc1
	.secrel32	.LASF188
	.byte	0x17
	.word	0x106
	.byte	0x20
	.long	0x1af3d
	.byte	0
	.uleb128 0x38
	.long	0x204f7
	.ascii "_ZN9__gnu_cxx5__ops16_Iter_equals_valIKbEC1ERS2_\0"
	.long	0x2056d
	.quad	.LFB5702
	.quad	.LFE5702-.LFB5702
	.uleb128 0x1
	.byte	0x9c
	.long	0x2057e
	.uleb128 0xf
	.long	0x20505
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0xf
	.long	0x2050e
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xc
	.long	0xf8a4
	.quad	.LFB5699
	.quad	.LFE5699-.LFB5699
	.uleb128 0x1
	.byte	0x9c
	.long	0x205e8
	.uleb128 0x4
	.secrel32	.LASF30
	.long	0x1c4db
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x1c4db
	.uleb128 0x15
	.secrel32	.LASF185
	.byte	0x13
	.byte	0x55
	.byte	0x26
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x15
	.secrel32	.LASF186
	.byte	0x13
	.byte	0x55
	.byte	0x3e
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x15
	.secrel32	.LASF187
	.byte	0x13
	.byte	0x56
	.byte	0x1a
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3d
	.secrel32	.LASF197
	.byte	0x13
	.byte	0x58
	.byte	0x15
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0xc
	.long	0x12e4f
	.quad	.LFB5698
	.quad	.LFE5698-.LFB5698
	.uleb128 0x1
	.byte	0x9c
	.long	0x20650
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x1c4db
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x1c4db
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x1e6
	.byte	0x18
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x1e6
	.byte	0x25
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x1e6
	.byte	0x31
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0xc
	.long	0x29d8
	.quad	.LFB5695
	.quad	.LFE5695-.LFB5695
	.uleb128 0x1
	.byte	0x9c
	.long	0x20693
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x15d4e
	.uleb128 0x15
	.secrel32	.LASF185
	.byte	0x15
	.byte	0x95
	.byte	0x1d
	.long	0x15d4e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x15
	.secrel32	.LASF186
	.byte	0x15
	.byte	0x95
	.byte	0x37
	.long	0x15d4e
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xd
	.long	0x16394
	.uleb128 0xc
	.long	0x18d6d
	.quad	.LFB5697
	.quad	.LFE5697-.LFB5697
	.uleb128 0x1
	.byte	0x9c
	.long	0x206ef
	.uleb128 0x4
	.secrel32	.LASF171
	.long	0x1c4db
	.uleb128 0x4
	.secrel32	.LASF172
	.long	0x1c4db
	.uleb128 0x4
	.secrel32	.LASF152
	.long	0x7fc1
	.uleb128 0x6
	.secrel32	.LASF190
	.byte	0xf
	.word	0x451
	.byte	0x41
	.long	0x20693
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF191
	.byte	0xf
	.word	0x452
	.byte	0x3a
	.long	0x20693
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x27
	.long	0x15f62
	.long	0x2070e
	.quad	.LFB5696
	.quad	.LFE5696-.LFB5696
	.uleb128 0x1
	.byte	0x9c
	.long	0x2071b
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c8de
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0x12eec
	.quad	.LFB5694
	.quad	.LFE5694-.LFB5694
	.uleb128 0x1
	.byte	0x9c
	.long	0x20769
	.uleb128 0x4
	.secrel32	.LASF151
	.long	0x15d4e
	.uleb128 0x5
	.ascii "_To\0"
	.long	0x1c4db
	.uleb128 0x6
	.secrel32	.LASF192
	.byte	0x3
	.word	0x148
	.byte	0x18
	.long	0x15d4e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF193
	.byte	0x3
	.word	0x148
	.byte	0x24
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xc
	.long	0x12fd4
	.quad	.LFB5693
	.quad	.LFE5693-.LFB5693
	.uleb128 0x1
	.byte	0x9c
	.long	0x207d1
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x1c50d
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x1c4db
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x209
	.byte	0x18
	.long	0x1c50d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x209
	.byte	0x25
	.long	0x1c50d
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x209
	.byte	0x31
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0xc
	.long	0x13079
	.quad	.LFB5692
	.quad	.LFE5692-.LFB5692
	.uleb128 0x1
	.byte	0x9c
	.long	0x2080f
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x1c4db
	.uleb128 0x4
	.secrel32	.LASF152
	.long	0x7fc1
	.uleb128 0x6
	.secrel32	.LASF194
	.byte	0xf
	.word	0x4e9
	.byte	0x46
	.long	0x15d4e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0x1312f
	.quad	.LFB5691
	.quad	.LFE5691-.LFB5691
	.uleb128 0x1
	.byte	0x9c
	.long	0x2084d
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x1c50d
	.uleb128 0x4
	.secrel32	.LASF152
	.long	0x7fc1
	.uleb128 0x6
	.secrel32	.LASF194
	.byte	0xf
	.word	0x4e9
	.byte	0x46
	.long	0x16399
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0x131ec
	.quad	.LFB5690
	.quad	.LFE5690-.LFB5690
	.uleb128 0x1
	.byte	0x9c
	.long	0x208b7
	.uleb128 0x4
	.secrel32	.LASF30
	.long	0x16399
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x1c4db
	.uleb128 0x15
	.secrel32	.LASF185
	.byte	0x13
	.byte	0x7e
	.byte	0x27
	.long	0x16399
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x15
	.secrel32	.LASF186
	.byte	0x13
	.byte	0x7e
	.byte	0x3f
	.long	0x16399
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x15
	.secrel32	.LASF187
	.byte	0x13
	.byte	0x7f
	.byte	0x1b
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3d
	.secrel32	.LASF195
	.byte	0x13
	.byte	0x91
	.byte	0x12
	.long	0x14cce
	.uleb128 0x2
	.byte	0x91
	.sleb128 -17
	.byte	0
	.uleb128 0xc
	.long	0x737d
	.quad	.LFB5689
	.quad	.LFE5689-.LFB5689
	.uleb128 0x1
	.byte	0x9c
	.long	0x2091c
	.uleb128 0x9
	.ascii "__a\0"
	.byte	0x10
	.word	0x1cb
	.byte	0x20
	.long	0x1c503
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0x10
	.word	0x1cb
	.byte	0x2f
	.long	0x73e3
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x58
	.long	0x1f96f
	.quad	.LBB136
	.quad	.LBE136-.LBB136
	.word	0x1cc
	.byte	0x1c
	.uleb128 0xf
	.long	0x1f986
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0xf
	.long	0x1f97d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x27
	.long	0x15e8b
	.long	0x2093b
	.quad	.LFB5688
	.quad	.LFE5688-.LFB5688
	.uleb128 0x1
	.byte	0x9c
	.long	0x20948
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c8ed
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0x162af
	.long	0x20967
	.quad	.LFB5687
	.quad	.LFE5687-.LFB5687
	.uleb128 0x1
	.byte	0x9c
	.long	0x20984
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c8ed
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0xf
	.word	0x43b
	.byte	0x21
	.long	0x16166
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xc
	.long	0x7587
	.quad	.LFB5686
	.quad	.LFE5686-.LFB5686
	.uleb128 0x1
	.byte	0x9c
	.long	0x209c9
	.uleb128 0x5
	.ascii "_Up\0"
	.long	0x1c0ec
	.uleb128 0x9
	.ascii "__a\0"
	.byte	0x10
	.word	0x20f
	.byte	0x1a
	.long	0x1c503
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__p\0"
	.byte	0x10
	.word	0x20f
	.byte	0x40
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xc
	.long	0x132ef
	.quad	.LFB5685
	.quad	.LFE5685-.LFB5685
	.uleb128 0x1
	.byte	0x9c
	.long	0x20a40
	.uleb128 0x4
	.secrel32	.LASF30
	.long	0x1c4db
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x1c4db
	.uleb128 0x4
	.secrel32	.LASF156
	.long	0x71c4
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x13
	.word	0x15d
	.byte	0x37
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x13
	.word	0x15e
	.byte	0x1b
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x13
	.word	0x15f
	.byte	0x1d
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x6
	.secrel32	.LASF202
	.byte	0x13
	.word	0x160
	.byte	0x18
	.long	0x1c4fe
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.byte	0
	.uleb128 0x27
	.long	0x16319
	.long	0x20a5f
	.quad	.LFB5684
	.quad	.LFE5684-.LFB5684
	.uleb128 0x1
	.byte	0x9c
	.long	0x20a6c
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c8ed
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0x18e43
	.quad	.LFB5683
	.quad	.LFE5683-.LFB5683
	.uleb128 0x1
	.byte	0x9c
	.long	0x20aba
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x1c4db
	.uleb128 0x4
	.secrel32	.LASF152
	.long	0x7fc1
	.uleb128 0x6
	.secrel32	.LASF190
	.byte	0xf
	.word	0x4d2
	.byte	0x3f
	.long	0x20693
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF191
	.byte	0xf
	.word	0x4d3
	.byte	0x38
	.long	0x20693
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x11
	.long	0x98f6
	.long	0x20ad9
	.quad	.LFB5682
	.quad	.LFE5682-.LFB5682
	.uleb128 0x1
	.byte	0x9c
	.long	0x20b16
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c5a3
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0xb
	.word	0x6dc
	.byte	0x1e
	.long	0x83b0
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x9
	.ascii "__s\0"
	.byte	0xb
	.word	0x6dc
	.byte	0x2f
	.long	0x19524
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x21
	.secrel32	.LASF203
	.byte	0xb
	.word	0x6e1
	.byte	0x12
	.long	0x83bd
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x17
	.long	0x1c731
	.long	0x20b24
	.byte	0x2
	.long	0x20b3b
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c8a7
	.uleb128 0x34
	.ascii "copy\0"
	.byte	0x9
	.byte	0x15
	.byte	0x16
	.long	0x1c8ac
	.byte	0
	.uleb128 0x23
	.long	0x20b16
	.ascii "_ZN7OptimapIhiEC1ERKS0_\0"
	.long	0x20b72
	.quad	.LFB5681
	.quad	.LFE5681-.LFB5681
	.uleb128 0x1
	.byte	0x9c
	.long	0x20b83
	.uleb128 0xf
	.long	0x20b24
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0xf
	.long	0x20b2d
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xc
	.long	0x2ab0
	.quad	.LFB5678
	.quad	.LFE5678-.LFB5678
	.uleb128 0x1
	.byte	0x9c
	.long	0x20bc6
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x1c4db
	.uleb128 0x15
	.secrel32	.LASF185
	.byte	0x15
	.byte	0x95
	.byte	0x1d
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x15
	.secrel32	.LASF186
	.byte	0x15
	.byte	0x95
	.byte	0x37
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x17
	.long	0x72f5
	.long	0x20bd4
	.byte	0x3
	.long	0x20bf6
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c4f4
	.uleb128 0x34
	.ascii "__p\0"
	.byte	0xc
	.byte	0xca
	.byte	0x17
	.long	0x1c4db
	.uleb128 0x34
	.ascii "__n\0"
	.byte	0xc
	.byte	0xca
	.byte	0x23
	.long	0x2f0
	.byte	0
	.uleb128 0x11
	.long	0xc1e3
	.long	0x20c15
	.quad	.LFB5676
	.quad	.LFE5676-.LFB5676
	.uleb128 0x1
	.byte	0x9c
	.long	0x20c52
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c67f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0xb
	.word	0x6dc
	.byte	0x1e
	.long	0xafcd
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x9
	.ascii "__s\0"
	.byte	0xb
	.word	0x6dc
	.byte	0x2f
	.long	0x19524
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x21
	.secrel32	.LASF203
	.byte	0xb
	.word	0x6e1
	.byte	0x12
	.long	0xafda
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0xc
	.long	0x133d3
	.quad	.LFB5675
	.quad	.LFE5675-.LFB5675
	.uleb128 0x1
	.byte	0x9c
	.long	0x20cb1
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x19287
	.uleb128 0x4
	.secrel32	.LASF32
	.long	0x191a1
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x191dc
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x13
	.word	0x2be
	.byte	0x32
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0x13
	.word	0x2be
	.byte	0x41
	.long	0x191a1
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x1f
	.long	0x1c5da
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0xc
	.long	0xadbd
	.quad	.LFB5674
	.quad	.LFE5674-.LFB5674
	.uleb128 0x1
	.byte	0x9c
	.long	0x20d15
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0xb
	.word	0x1c5
	.byte	0x1e
	.long	0xadb0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0xb
	.word	0x1c5
	.byte	0x2f
	.long	0xadb0
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0xb
	.word	0x1c5
	.byte	0x3f
	.long	0xadb0
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x6
	.secrel32	.LASF202
	.byte	0xb
	.word	0x1c6
	.byte	0x18
	.long	0x1c652
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x1f
	.long	0x2b7e
	.uleb128 0x2
	.byte	0x91
	.sleb128 32
	.byte	0
	.uleb128 0xc
	.long	0xa28b
	.quad	.LFB5673
	.quad	.LFE5673-.LFB5673
	.uleb128 0x1
	.byte	0x9c
	.long	0x20d7a
	.uleb128 0x9
	.ascii "__a\0"
	.byte	0x10
	.word	0x1cb
	.byte	0x20
	.long	0x1c5df
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0x10
	.word	0x1cb
	.byte	0x2f
	.long	0xa2e7
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x58
	.long	0x1fdba
	.quad	.LBB132
	.quad	.LBE132-.LBB132
	.word	0x1cc
	.byte	0x1c
	.uleb128 0xf
	.long	0x1fdd1
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0xf
	.long	0x1fdc8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x27
	.long	0xa85e
	.long	0x20d99
	.quad	.LFB5672
	.quad	.LFE5672-.LFB5672
	.uleb128 0x1
	.byte	0x9c
	.long	0x20da6
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c643
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0xc27b
	.quad	.LFB5670
	.quad	.LFE5670-.LFB5670
	.uleb128 0x1
	.byte	0x9c
	.long	0x20df2
	.uleb128 0x9
	.ascii "__a\0"
	.byte	0xb
	.word	0x6f0
	.byte	0x29
	.long	0x1c689
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x21
	.secrel32	.LASF198
	.byte	0xb
	.word	0x6f5
	.byte	0xf
	.long	0x300
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x21
	.secrel32	.LASF199
	.byte	0xb
	.word	0x6f7
	.byte	0xf
	.long	0x300
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x1d
	.long	0xa39f
	.quad	.LFB5671
	.quad	.LFE5671-.LFB5671
	.uleb128 0x1
	.byte	0x9c
	.long	0x20e1e
	.uleb128 0x9
	.ascii "__a\0"
	.byte	0x10
	.word	0x21f
	.byte	0x26
	.long	0x1c5e4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0x6f81
	.long	0x20e3d
	.quad	.LFB5668
	.quad	.LFE5668-.LFB5668
	.uleb128 0x1
	.byte	0x9c
	.long	0x20edf
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1bdf2
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF204
	.byte	0xe
	.word	0x339
	.byte	0x1d
	.long	0x633f
	.uleb128 0x2
	.byte	0x73
	.sleb128 0
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0xe
	.word	0x339
	.byte	0x33
	.long	0x5f3c
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x9
	.ascii "__x\0"
	.byte	0xe
	.word	0x339
	.byte	0x3d
	.long	0x14cc6
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x2d
	.quad	.LBB131
	.quad	.LBE131-.LBB131
	.uleb128 0x21
	.secrel32	.LASF203
	.byte	0xe
	.word	0x346
	.byte	0x14
	.long	0x5f49
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x25
	.ascii "__q\0"
	.byte	0xe
	.word	0x348
	.byte	0x11
	.long	0x7192
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x21
	.secrel32	.LASF200
	.byte	0xe
	.word	0x349
	.byte	0xd
	.long	0x633f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -224
	.uleb128 0x25
	.ascii "__i\0"
	.byte	0xe
	.word	0x34a
	.byte	0xd
	.long	0x633f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -240
	.uleb128 0x21
	.secrel32	.LASF205
	.byte	0xe
	.word	0x34c
	.byte	0xd
	.long	0x633f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -256
	.byte	0
	.byte	0
	.uleb128 0xc
	.long	0x13482
	.quad	.LFB5669
	.quad	.LFE5669-.LFB5669
	.uleb128 0x1
	.byte	0x9c
	.long	0x20f3d
	.uleb128 0x4
	.secrel32	.LASF9
	.long	0x3290
	.uleb128 0x4
	.secrel32	.LASF10
	.long	0x3290
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x350
	.byte	0x18
	.long	0x3290
	.uleb128 0x2
	.byte	0x73
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x350
	.byte	0x26
	.long	0x3290
	.uleb128 0x2
	.byte	0x75
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x350
	.byte	0x33
	.long	0x3290
	.uleb128 0x2
	.byte	0x74
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0x653b
	.long	0x20f5c
	.quad	.LFB5667
	.quad	.LFE5667-.LFB5667
	.uleb128 0x1
	.byte	0x9c
	.long	0x20f69
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1bde8
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x11
	.long	0x6403
	.long	0x20f88
	.quad	.LFB5666
	.quad	.LFE5666-.LFB5666
	.uleb128 0x1
	.byte	0x9c
	.long	0x20f95
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1bde8
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x1d
	.long	0x5d8e
	.quad	.LFB5665
	.quad	.LFE5665-.LFB5665
	.uleb128 0x1
	.byte	0x9c
	.long	0x20fc1
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0x8
	.word	0x23c
	.byte	0x17
	.long	0x2f0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0x6d76
	.long	0x20fe0
	.quad	.LFB5663
	.quad	.LFE5663-.LFB5663
	.uleb128 0x1
	.byte	0x9c
	.long	0x2102d
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1bdf2
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x8
	.word	0x468
	.byte	0x26
	.long	0x6385
	.uleb128 0x2
	.byte	0x74
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x8
	.word	0x468
	.byte	0x3e
	.long	0x6385
	.uleb128 0x2
	.byte	0x73
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x8
	.word	0x469
	.byte	0x12
	.long	0x633f
	.uleb128 0x2
	.byte	0x75
	.sleb128 0
	.uleb128 0x25
	.ascii "__q\0"
	.byte	0x8
	.word	0x46b
	.byte	0xd
	.long	0x1aec0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.uleb128 0xc
	.long	0x1351c
	.quad	.LFB5664
	.quad	.LFE5664-.LFB5664
	.uleb128 0x1
	.byte	0x9c
	.long	0x2108b
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x1bd4d
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x1bd4d
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x263
	.byte	0xe
	.long	0x1bd4d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x263
	.byte	0x1b
	.long	0x1bd4d
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x263
	.byte	0x27
	.long	0x1bd4d
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x1d
	.long	0x13594
	.quad	.LFB5662
	.quad	.LFE5662-.LFB5662
	.uleb128 0x1
	.byte	0x9c
	.long	0x210bf
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x19187
	.uleb128 0x18
	.ascii "__r\0"
	.byte	0x11
	.byte	0x31
	.byte	0x16
	.long	0x1cb0b
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0x5cb1
	.long	0x210de
	.quad	.LFB5661
	.quad	.LFE5661-.LFB5661
	.uleb128 0x1
	.byte	0x9c
	.long	0x210fb
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1bdca
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0x8
	.word	0x225
	.byte	0x1a
	.long	0x2f0
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x27
	.long	0x5ab3
	.long	0x2111a
	.quad	.LFB5660
	.quad	.LFE5660-.LFB5660
	.uleb128 0x1
	.byte	0x9c
	.long	0x21127
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1bdd4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x1d
	.long	0x54c0
	.quad	.LFB5659
	.quad	.LFE5659-.LFB5659
	.uleb128 0x1
	.byte	0x9c
	.long	0x21153
	.uleb128 0x9
	.ascii "__a\0"
	.byte	0x10
	.word	0x21f
	.byte	0x26
	.long	0x1bd7a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x1d
	.long	0x288d
	.quad	.LFB5658
	.quad	.LFE5658-.LFB5658
	.uleb128 0x1
	.byte	0x9c
	.long	0x21188
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x19287
	.uleb128 0x1f
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1f
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xc
	.long	0x2b1a
	.quad	.LFB5657
	.quad	.LFE5657-.LFB5657
	.uleb128 0x1
	.byte	0x9c
	.long	0x211cb
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x19287
	.uleb128 0x15
	.secrel32	.LASF185
	.byte	0x15
	.byte	0x95
	.byte	0x1d
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x15
	.secrel32	.LASF186
	.byte	0x15
	.byte	0x95
	.byte	0x37
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xc
	.long	0xa353
	.quad	.LFB5656
	.quad	.LFE5656-.LFB5656
	.uleb128 0x1
	.byte	0x9c
	.long	0x21248
	.uleb128 0x9
	.ascii "__a\0"
	.byte	0x10
	.word	0x1eb
	.byte	0x22
	.long	0x1c5df
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__p\0"
	.byte	0x10
	.word	0x1eb
	.byte	0x2f
	.long	0xa27e
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0x10
	.word	0x1eb
	.byte	0x3e
	.long	0xa2e7
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x58
	.long	0x2015b
	.quad	.LBB128
	.quad	.LBE128-.LBB128
	.word	0x1ec
	.byte	0x17
	.uleb128 0xf
	.long	0x2017e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0xf
	.long	0x20172
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0xf
	.long	0x20169
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x17
	.long	0x16a14
	.long	0x21256
	.byte	0x2
	.long	0x21260
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c5b7
	.byte	0
	.uleb128 0x38
	.long	0x21248
	.ascii "_ZN9__gnu_cxx13new_allocatorIiEC2Ev\0"
	.long	0x212a3
	.quad	.LFB5654
	.quad	.LFE5654-.LFB5654
	.uleb128 0x1
	.byte	0x9c
	.long	0x212ac
	.uleb128 0xf
	.long	0x21256
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0x5778
	.long	0x212cb
	.quad	.LFB5652
	.quad	.LFE5652-.LFB5652
	.uleb128 0x1
	.byte	0x9c
	.long	0x212d8
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1bd89
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0x5474
	.quad	.LFB5651
	.quad	.LFE5651-.LFB5651
	.uleb128 0x1
	.byte	0x9c
	.long	0x21355
	.uleb128 0x9
	.ascii "__a\0"
	.byte	0x10
	.word	0x1eb
	.byte	0x22
	.long	0x1bd75
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__p\0"
	.byte	0x10
	.word	0x1eb
	.byte	0x2f
	.long	0x539f
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0x10
	.word	0x1eb
	.byte	0x3e
	.long	0x5408
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x58
	.long	0x2018b
	.quad	.LBB126
	.quad	.LBE126-.LBB126
	.word	0x1ec
	.byte	0x17
	.uleb128 0xf
	.long	0x201ae
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0xf
	.long	0x201a2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0xf
	.long	0x20199
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x11
	.long	0x5994
	.long	0x21374
	.quad	.LFB5650
	.quad	.LFE5650-.LFB5650
	.uleb128 0x1
	.byte	0x9c
	.long	0x21381
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1bdbb
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x1541a
	.long	0x2138f
	.byte	0x2
	.long	0x21399
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1bd43
	.byte	0
	.uleb128 0x38
	.long	0x21381
	.ascii "_ZN9__gnu_cxx13new_allocatorImEC2Ev\0"
	.long	0x213dc
	.quad	.LFB5648
	.quad	.LFE5648-.LFB5648
	.uleb128 0x1
	.byte	0x9c
	.long	0x213e5
	.uleb128 0xf
	.long	0x2138f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0xcbd9
	.quad	.LFB5569
	.quad	.LFE5569-.LFB5569
	.uleb128 0x1
	.byte	0x9c
	.long	0x2142a
	.uleb128 0x5
	.ascii "_Up\0"
	.long	0x1beba
	.uleb128 0x9
	.ascii "__a\0"
	.byte	0x10
	.word	0x20f
	.byte	0x1a
	.long	0x1c962
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__p\0"
	.byte	0x10
	.word	0x20f
	.byte	0x40
	.long	0x1c92b
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xc
	.long	0x135ea
	.quad	.LFB5568
	.quad	.LFE5568-.LFB5568
	.uleb128 0x1
	.byte	0x9c
	.long	0x21492
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0x1
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x17e32
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x17e32
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x20f
	.byte	0x17
	.long	0x17e32
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x20f
	.byte	0x24
	.long	0x17e32
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x20f
	.byte	0x30
	.long	0x17e32
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x1d
	.long	0x13714
	.quad	.LFB5567
	.quad	.LFE5567-.LFB5567
	.uleb128 0x1
	.byte	0x9c
	.long	0x214c7
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x17e32
	.uleb128 0x6
	.secrel32	.LASF194
	.byte	0x12
	.word	0x230
	.byte	0x1c
	.long	0x17e32
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0x18f07
	.quad	.LFB5566
	.quad	.LFE5566-.LFB5566
	.uleb128 0x1
	.byte	0x9c
	.long	0x2151e
	.uleb128 0x4
	.secrel32	.LASF171
	.long	0x1c92b
	.uleb128 0x4
	.secrel32	.LASF172
	.long	0x1c92b
	.uleb128 0x4
	.secrel32	.LASF152
	.long	0xd578
	.uleb128 0x6
	.secrel32	.LASF190
	.byte	0xf
	.word	0x451
	.byte	0x41
	.long	0x20418
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF191
	.byte	0xf
	.word	0x452
	.byte	0x3a
	.long	0x20418
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x27
	.long	0x189bc
	.long	0x2153d
	.quad	.LFB5565
	.quad	.LFE5565-.LFB5565
	.uleb128 0x1
	.byte	0x9c
	.long	0x2154a
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1ca93
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x184ea
	.long	0x21558
	.byte	0x2
	.long	0x2156f
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1ca84
	.uleb128 0x4f
	.ascii "__i\0"
	.byte	0xf
	.word	0x3f2
	.byte	0x2a
	.long	0x1ca89
	.byte	0
	.uleb128 0x38
	.long	0x2154a
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPK5BlorbSt6vectorIS1_SaIS1_EEEC1ERKS3_\0"
	.long	0x215d6
	.quad	.LFB5564
	.quad	.LFE5564-.LFB5564
	.uleb128 0x1
	.byte	0x9c
	.long	0x215e7
	.uleb128 0xf
	.long	0x21558
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0xf
	.long	0x21561
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x11
	.long	0xf031
	.long	0x21615
	.quad	.LFB5558
	.quad	.LFE5558-.LFB5558
	.uleb128 0x1
	.byte	0x9c
	.long	0x216a3
	.uleb128 0x31
	.secrel32	.LASF148
	.long	0x21615
	.uleb128 0x32
	.long	0x1beba
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c9df
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF204
	.byte	0xe
	.word	0x1ab
	.byte	0x22
	.long	0xddb2
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x93
	.long	0x21640
	.uleb128 0x1f
	.long	0x1e580
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x21
	.secrel32	.LASF203
	.byte	0xe
	.word	0x1b3
	.byte	0x17
	.long	0xd93f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x21
	.secrel32	.LASF206
	.byte	0xe
	.word	0x1b5
	.byte	0xf
	.long	0xd6e5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x21
	.secrel32	.LASF207
	.byte	0xe
	.word	0x1b6
	.byte	0xf
	.long	0xd6e5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x21
	.secrel32	.LASF208
	.byte	0xe
	.word	0x1b7
	.byte	0x17
	.long	0xd93f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x21
	.secrel32	.LASF209
	.byte	0xe
	.word	0x1b8
	.byte	0xf
	.long	0xd6e5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x21
	.secrel32	.LASF210
	.byte	0xe
	.word	0x1b9
	.byte	0xf
	.long	0xd6e5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0xc
	.long	0xcc3f
	.quad	.LFB5553
	.quad	.LFE5553-.LFB5553
	.uleb128 0x1
	.byte	0x9c
	.long	0x21702
	.uleb128 0x5
	.ascii "_Up\0"
	.long	0x1beba
	.uleb128 0x31
	.secrel32	.LASF148
	.long	0x216d6
	.uleb128 0x32
	.long	0x1beba
	.byte	0
	.uleb128 0x9
	.ascii "__a\0"
	.byte	0x10
	.word	0x1fb
	.byte	0x1c
	.long	0x1c962
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__p\0"
	.byte	0x10
	.word	0x1fb
	.byte	0x42
	.long	0x1c92b
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x94
	.uleb128 0x1f
	.long	0x1e580
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.byte	0
	.uleb128 0xc
	.long	0x137d0
	.quad	.LFB5554
	.quad	.LFE5554-.LFB5554
	.uleb128 0x1
	.byte	0x9c
	.long	0x21752
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1beba
	.uleb128 0x31
	.secrel32	.LASF148
	.long	0x21735
	.uleb128 0x32
	.long	0x1beba
	.byte	0
	.uleb128 0x15
	.secrel32	.LASF201
	.byte	0x15
	.byte	0x5e
	.byte	0x17
	.long	0x1c92b
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x5e
	.byte	0x15
	.byte	0x5e
	.byte	0x2a
	.uleb128 0x1f
	.long	0x1e580
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.byte	0
	.uleb128 0x49
	.long	0x1bfbd
	.byte	0xa
	.byte	0x9a
	.byte	0x8
	.long	0x21762
	.long	0x21771
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c930
	.uleb128 0x1
	.long	0x1e580
	.byte	0
	.uleb128 0x23
	.long	0x21752
	.ascii "_ZN5BlorbC1EOS_\0"
	.long	0x217a0
	.quad	.LFB5557
	.quad	.LFE5557-.LFB5557
	.uleb128 0x1
	.byte	0x9c
	.long	0x217b1
	.uleb128 0xf
	.long	0x21762
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0xf
	.long	0x2176b
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xd
	.long	0xf58b
	.uleb128 0x1d
	.long	0x1386b
	.quad	.LFB5552
	.quad	.LFE5552-.LFB5552
	.uleb128 0x1
	.byte	0x9c
	.long	0x217ea
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1beba
	.uleb128 0x18
	.ascii "__t\0"
	.byte	0x11
	.byte	0x4d
	.byte	0x38
	.long	0x217b1
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0xcaba
	.quad	.LFB5551
	.quad	.LFE5551-.LFB5551
	.uleb128 0x1
	.byte	0x9c
	.long	0x21867
	.uleb128 0x9
	.ascii "__a\0"
	.byte	0x10
	.word	0x1eb
	.byte	0x22
	.long	0x1c962
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__p\0"
	.byte	0x10
	.word	0x1eb
	.byte	0x2f
	.long	0xc9db
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0x10
	.word	0x1eb
	.byte	0x3e
	.long	0xca49
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x58
	.long	0x204c7
	.quad	.LBB122
	.quad	.LBE122-.LBB122
	.word	0x1ec
	.byte	0x17
	.uleb128 0xf
	.long	0x204ea
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0xf
	.long	0x204de
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0xf
	.long	0x204d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x17
	.long	0x17988
	.long	0x21875
	.byte	0x2
	.long	0x2187f
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c93a
	.byte	0
	.uleb128 0x38
	.long	0x21867
	.ascii "_ZN9__gnu_cxx13new_allocatorI5BlorbEC2Ev\0"
	.long	0x218c7
	.quad	.LFB5549
	.quad	.LFE5549-.LFB5549
	.uleb128 0x1
	.byte	0x9c
	.long	0x218d0
	.uleb128 0xf
	.long	0x21875
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0x138ce
	.quad	.LFB5542
	.quad	.LFE5542-.LFB5542
	.uleb128 0x1
	.byte	0x9c
	.long	0x21941
	.uleb128 0x4
	.secrel32	.LASF30
	.long	0x173e1
	.uleb128 0x4
	.secrel32	.LASF157
	.long	0x14cf2
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x849
	.byte	0x1f
	.long	0x173e1
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x849
	.byte	0x37
	.long	0x173e1
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x9
	.ascii "__pred\0"
	.byte	0x3
	.word	0x849
	.byte	0x4a
	.long	0x14cf2
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x25
	.ascii "__n\0"
	.byte	0x3
	.word	0x84b
	.byte	0x41
	.long	0xf4a4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0xd
	.long	0x17965
	.uleb128 0xc
	.long	0x18fcc
	.quad	.LFB5547
	.quad	.LFE5547-.LFB5547
	.uleb128 0x1
	.byte	0x9c
	.long	0x2199d
	.uleb128 0x4
	.secrel32	.LASF171
	.long	0x1c5e9
	.uleb128 0x4
	.secrel32	.LASF172
	.long	0x1c5e9
	.uleb128 0x4
	.secrel32	.LASF152
	.long	0xac5c
	.uleb128 0x6
	.secrel32	.LASF190
	.byte	0xf
	.word	0x451
	.byte	0x41
	.long	0x21941
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF191
	.byte	0xf
	.word	0x452
	.byte	0x3a
	.long	0x21941
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x11
	.long	0x14d87
	.long	0x219c5
	.quad	.LFB5545
	.quad	.LFE5545-.LFB5545
	.uleb128 0x1
	.byte	0x9c
	.long	0x219e2
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x173e1
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1cade
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF194
	.byte	0x17
	.word	0x10d
	.byte	0x17
	.long	0x173e1
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x27
	.long	0x174f8
	.long	0x21a01
	.quad	.LFB5546
	.quad	.LFE5546-.LFB5546
	.uleb128 0x1
	.byte	0x9c
	.long	0x21a0e
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1cacf
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x27
	.long	0x175b5
	.long	0x21a2d
	.quad	.LFB5544
	.quad	.LFE5544-.LFB5544
	.uleb128 0x1
	.byte	0x9c
	.long	0x21a3a
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1cac0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x27
	.long	0x178f7
	.long	0x21a59
	.quad	.LFB5543
	.quad	.LFE5543-.LFB5543
	.uleb128 0x1
	.byte	0x9c
	.long	0x21a66
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1cacf
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0x14e74
	.quad	.LFB5541
	.quad	.LFE5541-.LFB5541
	.uleb128 0x1
	.byte	0x9c
	.long	0x21a9d
	.uleb128 0x4
	.secrel32	.LASF158
	.long	0x14cce
	.uleb128 0x9
	.ascii "__val\0"
	.byte	0x17
	.word	0x114
	.byte	0x1f
	.long	0x1af3d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x17491
	.long	0x21aab
	.byte	0x2
	.long	0x21ac2
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1cac0
	.uleb128 0x4f
	.ascii "__i\0"
	.byte	0xf
	.word	0x3f2
	.byte	0x2a
	.long	0x1cac5
	.byte	0
	.uleb128 0x38
	.long	0x21a9d
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC1ERKS2_\0"
	.long	0x21b20
	.quad	.LFB5540
	.quad	.LFE5540-.LFB5540
	.uleb128 0x1
	.byte	0x9c
	.long	0x21b31
	.uleb128 0xf
	.long	0x21aab
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0xf
	.long	0x21ab4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xc
	.long	0x13a28
	.quad	.LFB5536
	.quad	.LFE5536-.LFB5536
	.uleb128 0x1
	.byte	0x9c
	.long	0x21b9b
	.uleb128 0x4
	.secrel32	.LASF30
	.long	0x1c4db
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x1c4db
	.uleb128 0x15
	.secrel32	.LASF185
	.byte	0x13
	.byte	0x7e
	.byte	0x27
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x15
	.secrel32	.LASF186
	.byte	0x13
	.byte	0x7e
	.byte	0x3f
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x15
	.secrel32	.LASF187
	.byte	0x13
	.byte	0x7f
	.byte	0x1b
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3d
	.secrel32	.LASF195
	.byte	0x13
	.byte	0x91
	.byte	0x12
	.long	0x14cce
	.uleb128 0x2
	.byte	0x91
	.sleb128 -17
	.byte	0
	.uleb128 0x1d
	.long	0x13ab6
	.quad	.LFB5535
	.quad	.LFE5535-.LFB5535
	.uleb128 0x1
	.byte	0x9c
	.long	0x21bd8
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x1c4db
	.uleb128 0x1f
	.long	0x1c8e3
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF193
	.byte	0x3
	.word	0x14f
	.byte	0x2e
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xc
	.long	0x13b1b
	.quad	.LFB5534
	.quad	.LFE5534-.LFB5534
	.uleb128 0x1
	.byte	0x9c
	.long	0x21c40
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x1c4db
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x1c4db
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x209
	.byte	0x18
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x209
	.byte	0x25
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x209
	.byte	0x31
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x1d
	.long	0x13bb8
	.quad	.LFB5533
	.quad	.LFE5533-.LFB5533
	.uleb128 0x1
	.byte	0x9c
	.long	0x21c75
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x1c4db
	.uleb128 0x6
	.secrel32	.LASF194
	.byte	0x3
	.word	0x139
	.byte	0x1c
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0x13c13
	.quad	.LFB5532
	.quad	.LFE5532-.LFB5532
	.uleb128 0x1
	.byte	0x9c
	.long	0x21cb8
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x15d4e
	.uleb128 0x15
	.secrel32	.LASF185
	.byte	0x15
	.byte	0xab
	.byte	0x1f
	.long	0x15d4e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x15
	.secrel32	.LASF186
	.byte	0x15
	.byte	0xab
	.byte	0x39
	.long	0x15d4e
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xc
	.long	0x13cd3
	.quad	.LFB5530
	.quad	.LFE5530-.LFB5530
	.uleb128 0x1
	.byte	0x9c
	.long	0x21d20
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x16399
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x15d4e
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x20f
	.byte	0x17
	.long	0x16399
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x20f
	.byte	0x24
	.long	0x16399
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x20f
	.byte	0x30
	.long	0x15d4e
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x1d
	.long	0x13e25
	.quad	.LFB5529
	.quad	.LFE5529-.LFB5529
	.uleb128 0x1
	.byte	0x9c
	.long	0x21d55
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x16399
	.uleb128 0x6
	.secrel32	.LASF194
	.byte	0x12
	.word	0x230
	.byte	0x1c
	.long	0x16399
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0x13ef5
	.quad	.LFB5528
	.quad	.LFE5528-.LFB5528
	.uleb128 0x1
	.byte	0x9c
	.long	0x21dc4
	.uleb128 0x4
	.secrel32	.LASF30
	.long	0x16399
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x1c4db
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1c0ec
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x13
	.word	0x14b
	.byte	0x2b
	.long	0x16399
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x13
	.word	0x14b
	.byte	0x43
	.long	0x16399
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x13
	.word	0x14c
	.byte	0x18
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1f
	.long	0x1c4fe
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.byte	0
	.uleb128 0x11
	.long	0x7e9a
	.long	0x21de3
	.quad	.LFB5527
	.quad	.LFE5527-.LFB5527
	.uleb128 0x1
	.byte	0x9c
	.long	0x21e00
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c55d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0xb
	.word	0x157
	.byte	0x1a
	.long	0x2f0
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x17
	.long	0x16469
	.long	0x21e0e
	.byte	0x2
	.long	0x21e25
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1caa2
	.uleb128 0x4f
	.ascii "__i\0"
	.byte	0xf
	.word	0x3f2
	.byte	0x2a
	.long	0x1caa7
	.byte	0
	.uleb128 0x38
	.long	0x21e00
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPKN3DDT4NodeESt6vectorIS2_SaIS2_EEEC1ERKS4_\0"
	.long	0x21e91
	.quad	.LFB5526
	.quad	.LFE5526-.LFB5526
	.uleb128 0x1
	.byte	0x9c
	.long	0x21ea2
	.uleb128 0xf
	.long	0x21e0e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0xf
	.long	0x21e17
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x11
	.long	0x99ef
	.long	0x21ec1
	.quad	.LFB5523
	.quad	.LFE5523-.LFB5523
	.uleb128 0x1
	.byte	0x9c
	.long	0x21f02
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c580
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__pos\0"
	.byte	0xb
	.word	0x700
	.byte	0x1f
	.long	0x8145
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x2d
	.quad	.LBB119
	.quad	.LBE119-.LBB119
	.uleb128 0x25
	.ascii "__n\0"
	.byte	0xb
	.word	0x702
	.byte	0x10
	.long	0x83b0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x11
	.long	0x9042
	.long	0x21f21
	.quad	.LFB5522
	.quad	.LFE5522-.LFB5522
	.uleb128 0x1
	.byte	0x9c
	.long	0x21f2e
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c580
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x2c
	.long	0x1c0ec
	.uleb128 0x11
	.long	0x9c17
	.long	0x21f61
	.quad	.LFB5519
	.quad	.LFE5519-.LFB5519
	.uleb128 0x1
	.byte	0x9c
	.long	0x21fef
	.uleb128 0x31
	.secrel32	.LASF148
	.long	0x21f61
	.uleb128 0x32
	.long	0x1c0ec
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c580
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF204
	.byte	0xe
	.word	0x1ab
	.byte	0x22
	.long	0x8876
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x93
	.long	0x21f8c
	.uleb128 0x1f
	.long	0x21f2e
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x21
	.secrel32	.LASF203
	.byte	0xe
	.word	0x1b3
	.byte	0x17
	.long	0x83bd
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x21
	.secrel32	.LASF206
	.byte	0xe
	.word	0x1b5
	.byte	0xf
	.long	0x8145
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x21
	.secrel32	.LASF207
	.byte	0xe
	.word	0x1b6
	.byte	0xf
	.long	0x8145
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x21
	.secrel32	.LASF208
	.byte	0xe
	.word	0x1b7
	.byte	0x17
	.long	0x83bd
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x21
	.secrel32	.LASF209
	.byte	0xe
	.word	0x1b8
	.byte	0xf
	.long	0x8145
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x21
	.secrel32	.LASF210
	.byte	0xe
	.word	0x1b9
	.byte	0xf
	.long	0x8145
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0xc
	.long	0x75f6
	.quad	.LFB5514
	.quad	.LFE5514-.LFB5514
	.uleb128 0x1
	.byte	0x9c
	.long	0x2204e
	.uleb128 0x5
	.ascii "_Up\0"
	.long	0x1c0ec
	.uleb128 0x31
	.secrel32	.LASF148
	.long	0x22022
	.uleb128 0x32
	.long	0x1c0ec
	.byte	0
	.uleb128 0x9
	.ascii "__a\0"
	.byte	0x10
	.word	0x1fb
	.byte	0x1c
	.long	0x1c503
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__p\0"
	.byte	0x10
	.word	0x1fb
	.byte	0x42
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x94
	.uleb128 0x1f
	.long	0x21f2e
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.byte	0
	.uleb128 0xc
	.long	0x14025
	.quad	.LFB5515
	.quad	.LFE5515-.LFB5515
	.uleb128 0x1
	.byte	0x9c
	.long	0x2209e
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1c0ec
	.uleb128 0x31
	.secrel32	.LASF148
	.long	0x22081
	.uleb128 0x32
	.long	0x1c0ec
	.byte	0
	.uleb128 0x15
	.secrel32	.LASF201
	.byte	0x15
	.byte	0x5e
	.byte	0x17
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x5e
	.byte	0x15
	.byte	0x5e
	.byte	0x2a
	.uleb128 0x1f
	.long	0x21f2e
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.byte	0
	.uleb128 0x49
	.long	0x1c2e6
	.byte	0xa
	.byte	0x32
	.byte	0x9
	.long	0x220ae
	.long	0x220bd
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c4e0
	.uleb128 0x1
	.long	0x21f2e
	.byte	0
	.uleb128 0x23
	.long	0x2209e
	.ascii "_ZN3DDT4NodeC1EOS0_\0"
	.long	0x220f0
	.quad	.LFB5518
	.quad	.LFE5518-.LFB5518
	.uleb128 0x1
	.byte	0x9c
	.long	0x22101
	.uleb128 0xf
	.long	0x220ae
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0xf
	.long	0x220b7
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xd
	.long	0xf552
	.uleb128 0x1d
	.long	0x140cd
	.quad	.LFB5513
	.quad	.LFE5513-.LFB5513
	.uleb128 0x1
	.byte	0x9c
	.long	0x2213a
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1c0ec
	.uleb128 0x18
	.ascii "__t\0"
	.byte	0x11
	.byte	0x4d
	.byte	0x38
	.long	0x22101
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0x14139
	.quad	.LFB5512
	.quad	.LFE5512-.LFB5512
	.uleb128 0x1
	.byte	0x9c
	.long	0x2217d
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x1c4db
	.uleb128 0x15
	.secrel32	.LASF185
	.byte	0x15
	.byte	0xab
	.byte	0x1f
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x15
	.secrel32	.LASF186
	.byte	0x15
	.byte	0xab
	.byte	0x39
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xc
	.long	0x7459
	.quad	.LFB5511
	.quad	.LFE5511-.LFB5511
	.uleb128 0x1
	.byte	0x9c
	.long	0x221fa
	.uleb128 0x9
	.ascii "__a\0"
	.byte	0x10
	.word	0x1eb
	.byte	0x22
	.long	0x1c503
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__p\0"
	.byte	0x10
	.word	0x1eb
	.byte	0x2f
	.long	0x7370
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0x10
	.word	0x1eb
	.byte	0x3e
	.long	0x73e3
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x58
	.long	0x20bc6
	.quad	.LBB116
	.quad	.LBE116-.LBB116
	.word	0x1ec
	.byte	0x17
	.uleb128 0xf
	.long	0x20be9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0xf
	.long	0x20bdd
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0xf
	.long	0x20bd4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x17
	.long	0x1585c
	.long	0x22208
	.byte	0x2
	.long	0x22212
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c0d5
	.byte	0
	.uleb128 0x38
	.long	0x221fa
	.ascii "_ZN9__gnu_cxx13new_allocatorIN3DDT4NodeEEC2Ev\0"
	.long	0x2225f
	.quad	.LFB5509
	.quad	.LFE5509-.LFB5509
	.uleb128 0x1
	.byte	0x9c
	.long	0x22268
	.uleb128 0xf
	.long	0x22208
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0x6392
	.long	0x22287
	.quad	.LFB5507
	.quad	.LFE5507-.LFB5507
	.uleb128 0x1
	.byte	0x9c
	.long	0x22294
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1bde8
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x11
	.long	0xc2b8
	.long	0x222b3
	.quad	.LFB5506
	.quad	.LFE5506-.LFB5506
	.uleb128 0x1
	.byte	0x9c
	.long	0x222f4
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c65c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__pos\0"
	.byte	0xb
	.word	0x700
	.byte	0x1f
	.long	0xadb0
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x2d
	.quad	.LBB115
	.quad	.LBE115-.LBB115
	.uleb128 0x25
	.ascii "__n\0"
	.byte	0xb
	.word	0x702
	.byte	0x10
	.long	0xafcd
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x11
	.long	0xc06d
	.long	0x22313
	.quad	.LFB5505
	.quad	.LFE5505-.LFB5505
	.uleb128 0x1
	.byte	0x9c
	.long	0x22384
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c65c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0xe
	.word	0x264
	.byte	0x21
	.long	0xafcd
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x69
	.secrel32	.LLRL3
	.uleb128 0x25
	.ascii "__size\0"
	.byte	0xe
	.word	0x268
	.byte	0x14
	.long	0xafda
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x25
	.ascii "__navail\0"
	.byte	0xe
	.word	0x269
	.byte	0xe
	.long	0xafcd
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x69
	.secrel32	.LLRL4
	.uleb128 0x21
	.secrel32	.LASF203
	.byte	0xe
	.word	0x279
	.byte	0x18
	.long	0xafda
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x21
	.secrel32	.LASF209
	.byte	0xe
	.word	0x27b
	.byte	0x10
	.long	0xadb0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xc
	.long	0xaec1
	.quad	.LFB5504
	.quad	.LFE5504-.LFB5504
	.uleb128 0x1
	.byte	0x9c
	.long	0x223e0
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0xb
	.word	0x1d1
	.byte	0x1b
	.long	0xadb0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0xb
	.word	0x1d1
	.byte	0x2c
	.long	0xadb0
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0xb
	.word	0x1d1
	.byte	0x3c
	.long	0xadb0
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x6
	.secrel32	.LASF202
	.byte	0xb
	.word	0x1d2
	.byte	0x15
	.long	0x1c652
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.byte	0
	.uleb128 0x11
	.long	0xab5b
	.long	0x223ff
	.quad	.LFB5503
	.quad	.LFE5503-.LFB5503
	.uleb128 0x1
	.byte	0x9c
	.long	0x2241c
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c639
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0xb
	.word	0x157
	.byte	0x1a
	.long	0x2f0
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x27
	.long	0xb6c8
	.long	0x2243b
	.quad	.LFB5502
	.quad	.LFE5502-.LFB5502
	.uleb128 0x1
	.byte	0x9c
	.long	0x22448
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c67f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x27
	.long	0xb7fa
	.long	0x22467
	.quad	.LFB5501
	.quad	.LFE5501-.LFB5501
	.uleb128 0x1
	.byte	0x9c
	.long	0x22474
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c67f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0xb701
	.long	0x22493
	.quad	.LFB5500
	.quad	.LFE5500-.LFB5500
	.uleb128 0x1
	.byte	0x9c
	.long	0x224a0
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c67f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0x6ad1
	.long	0x224bf
	.quad	.LFB5499
	.quad	.LFE5499-.LFB5499
	.uleb128 0x1
	.byte	0x9c
	.long	0x22511
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1bdf2
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF204
	.byte	0x8
	.word	0x40f
	.byte	0x1d
	.long	0x6385
	.uleb128 0x2
	.byte	0x73
	.sleb128 0
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0x8
	.word	0x40f
	.byte	0x33
	.long	0x5f3c
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x9
	.ascii "__x\0"
	.byte	0x8
	.word	0x40f
	.byte	0x44
	.long	0x1af3d
	.uleb128 0x2
	.byte	0x91
	.sleb128 32
	.uleb128 0x25
	.ascii "__offset\0"
	.byte	0x8
	.word	0x411
	.byte	0x12
	.long	0x719f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x27
	.long	0x63cc
	.long	0x22530
	.quad	.LFB5498
	.quad	.LFE5498-.LFB5498
	.uleb128 0x1
	.byte	0x9c
	.long	0x2253d
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1bdf2
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x11
	.long	0x634c
	.long	0x2255c
	.quad	.LFB5497
	.quad	.LFE5497-.LFB5497
	.uleb128 0x1
	.byte	0x9c
	.long	0x22569
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1bdf2
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x27
	.long	0x7093
	.long	0x22588
	.quad	.LFB5496
	.quad	.LFE5496-.LFB5496
	.uleb128 0x1
	.byte	0x9c
	.long	0x225a7
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1bdf2
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__pos\0"
	.byte	0x8
	.word	0x525
	.byte	0x20
	.long	0x633f
	.uleb128 0x2
	.byte	0x73
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0x6626
	.long	0x225c6
	.quad	.LFB5495
	.quad	.LFE5495-.LFB5495
	.uleb128 0x1
	.byte	0x9c
	.long	0x225d3
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1bde8
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0x6ea5
	.long	0x225f2
	.quad	.LFB5494
	.quad	.LFE5494-.LFB5494
	.uleb128 0x1
	.byte	0x9c
	.long	0x22641
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1bdf2
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0xe
	.word	0x32b
	.byte	0x1d
	.long	0x5f3c
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x25
	.ascii "__q\0"
	.byte	0xe
	.word	0x32d
	.byte	0x14
	.long	0x7192
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x21
	.secrel32	.LASF200
	.byte	0xe
	.word	0x32e
	.byte	0x10
	.long	0x633f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x21
	.secrel32	.LASF205
	.byte	0xe
	.word	0x32f
	.byte	0x10
	.long	0x633f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.byte	0
	.uleb128 0x11
	.long	0x669c
	.long	0x22660
	.quad	.LFB5493
	.quad	.LFE5493-.LFB5493
	.uleb128 0x1
	.byte	0x9c
	.long	0x2266d
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1bde8
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0x665f
	.long	0x2268c
	.quad	.LFB5492
	.quad	.LFE5492-.LFB5492
	.uleb128 0x1
	.byte	0x9c
	.long	0x226c1
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1bde8
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x25
	.ascii "__isize\0"
	.byte	0x8
	.word	0x377
	.byte	0x12
	.long	0x5f49
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x25
	.ascii "__asize\0"
	.byte	0x8
	.word	0x37a
	.byte	0x12
	.long	0x5f49
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0xc
	.long	0x1418b
	.quad	.LFB5491
	.quad	.LFE5491-.LFB5491
	.uleb128 0x1
	.byte	0x9c
	.long	0x22704
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x19287
	.uleb128 0x15
	.secrel32	.LASF185
	.byte	0x15
	.byte	0xab
	.byte	0x1f
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x15
	.secrel32	.LASF186
	.byte	0x15
	.byte	0xab
	.byte	0x39
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x11
	.long	0xaba6
	.long	0x22723
	.quad	.LFB5490
	.quad	.LFE5490-.LFB5490
	.uleb128 0x1
	.byte	0x9c
	.long	0x22750
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c639
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__p\0"
	.byte	0xb
	.word	0x15e
	.byte	0x1d
	.long	0xa61b
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0xb
	.word	0x15e
	.byte	0x29
	.long	0x2f0
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x17
	.long	0xa4c7
	.long	0x2275e
	.byte	0x2
	.long	0x22768
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c602
	.byte	0
	.uleb128 0x38
	.long	0x22750
	.ascii "_ZNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataC2Ev\0"
	.long	0x227ba
	.quad	.LFB5488
	.quad	.LFE5488-.LFB5488
	.uleb128 0x1
	.byte	0x9c
	.long	0x227c3
	.uleb128 0xf
	.long	0x2275e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0xa13c
	.long	0x227d1
	.byte	0x2
	.long	0x227db
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c5d0
	.byte	0
	.uleb128 0x23
	.long	0x227c3
	.ascii "_ZNSaIiEC2Ev\0"
	.long	0x22807
	.quad	.LFB5485
	.quad	.LFE5485-.LFB5485
	.uleb128 0x1
	.byte	0x9c
	.long	0x22810
	.uleb128 0xf
	.long	0x227d1
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0x5cfd
	.long	0x2282f
	.quad	.LFB5483
	.quad	.LFE5483-.LFB5483
	.uleb128 0x1
	.byte	0x9c
	.long	0x2285e
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1bdca
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.quad	.LBB101
	.quad	.LBE101-.LBB101
	.uleb128 0x25
	.ascii "__n\0"
	.byte	0x8
	.word	0x22d
	.byte	0x13
	.long	0x300
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x17
	.long	0x55cd
	.long	0x2286c
	.byte	0x2
	.long	0x22876
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1bd89
	.byte	0
	.uleb128 0x23
	.long	0x2285e
	.ascii "_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC1Ev\0"
	.long	0x228c9
	.quad	.LFB5482
	.quad	.LFE5482-.LFB5482
	.uleb128 0x1
	.byte	0x9c
	.long	0x228d2
	.uleb128 0xf
	.long	0x2286c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x23
	.long	0x2285e
	.ascii "_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC2Ev\0"
	.long	0x22925
	.quad	.LFB5481
	.quad	.LFE5481-.LFB5481
	.uleb128 0x1
	.byte	0x9c
	.long	0x2292e
	.uleb128 0xf
	.long	0x2286c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x524f
	.long	0x2293c
	.byte	0x2
	.long	0x22946
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1bd66
	.byte	0
	.uleb128 0x23
	.long	0x2292e
	.ascii "_ZNSaImEC2Ev\0"
	.long	0x22972
	.quad	.LFB5478
	.quad	.LFE5478-.LFB5478
	.uleb128 0x1
	.byte	0x9c
	.long	0x2297b
	.uleb128 0xf
	.long	0x2293c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0xee71
	.long	0x2299a
	.quad	.LFB5382
	.quad	.LFE5382-.LFB5382
	.uleb128 0x1
	.byte	0x9c
	.long	0x229b6
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c9df
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x15
	.secrel32	.LASF204
	.byte	0xe
	.byte	0xac
	.byte	0x17
	.long	0xddb2
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xc
	.long	0x141cd
	.quad	.LFB5383
	.quad	.LFE5383-.LFB5383
	.uleb128 0x1
	.byte	0x9c
	.long	0x22a14
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x17e32
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x17e32
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x284
	.byte	0xe
	.long	0x17e32
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x284
	.byte	0x1b
	.long	0x17e32
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x284
	.byte	0x27
	.long	0x17e32
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0xd
	.long	0x18b02
	.uleb128 0xc
	.long	0x190a5
	.quad	.LFB5381
	.quad	.LFE5381-.LFB5381
	.uleb128 0x1
	.byte	0x9c
	.long	0x22a67
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x1c96c
	.uleb128 0x4
	.secrel32	.LASF152
	.long	0xd578
	.uleb128 0x6
	.secrel32	.LASF190
	.byte	0xf
	.word	0x4d2
	.byte	0x3f
	.long	0x22a14
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF191
	.byte	0xf
	.word	0x4d3
	.byte	0x38
	.long	0x22a14
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x11
	.long	0xdfe6
	.long	0x22a86
	.quad	.LFB5380
	.quad	.LFE5380-.LFB5380
	.uleb128 0x1
	.byte	0x9c
	.long	0x22a93
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1ca02
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x17eea
	.long	0x22aa1
	.byte	0x2
	.long	0x22ab8
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1ca61
	.uleb128 0x4f
	.ascii "__i\0"
	.byte	0xf
	.word	0x3f2
	.byte	0x2a
	.long	0x1ca66
	.byte	0
	.uleb128 0x38
	.long	0x22a93
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIP5BlorbSt6vectorIS1_SaIS1_EEEC1ERKS2_\0"
	.long	0x22b1e
	.quad	.LFB5379
	.quad	.LFE5379-.LFB5379
	.uleb128 0x1
	.byte	0x9c
	.long	0x22b2f
	.uleb128 0xf
	.long	0x22aa1
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0xf
	.long	0x22aaa
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x27
	.long	0x17f59
	.long	0x22b4e
	.quad	.LFB5376
	.quad	.LFE5376-.LFB5376
	.uleb128 0x1
	.byte	0x9c
	.long	0x22b5b
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1ca70
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0x1834b
	.long	0x22b7a
	.quad	.LFB5375
	.quad	.LFE5375-.LFB5375
	.uleb128 0x1
	.byte	0x9c
	.long	0x22b97
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1ca70
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0xf
	.word	0x43b
	.byte	0x21
	.long	0x18211
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x11
	.long	0xde4d
	.long	0x22bb6
	.quad	.LFB5374
	.quad	.LFE5374-.LFB5374
	.uleb128 0x1
	.byte	0x9c
	.long	0x22bc3
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c9df
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0xf0dc
	.long	0x22bf1
	.quad	.LFB5372
	.quad	.LFE5372-.LFB5372
	.uleb128 0x1
	.byte	0x9c
	.long	0x22c0b
	.uleb128 0x31
	.secrel32	.LASF148
	.long	0x22bf1
	.uleb128 0x32
	.long	0x1beba
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c9df
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x5e
	.byte	0xe
	.byte	0x6e
	.byte	0x1b
	.uleb128 0x1f
	.long	0x1e580
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.byte	0
	.uleb128 0x2c
	.long	0xf4de
	.uleb128 0x1d
	.long	0x142cf
	.quad	.LFB5371
	.quad	.LFE5371-.LFB5371
	.uleb128 0x1
	.byte	0x9c
	.long	0x22c44
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1beb5
	.uleb128 0x18
	.ascii "__t\0"
	.byte	0x11
	.byte	0x68
	.byte	0x10
	.long	0x1beb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x27
	.long	0xf154
	.long	0x22c6c
	.quad	.LFB5370
	.quad	.LFE5370-.LFB5370
	.uleb128 0x1
	.byte	0x9c
	.long	0x22c8b
	.uleb128 0x5
	.ascii "_Up\0"
	.long	0x1beba
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1ca02
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__ptr\0"
	.byte	0xb
	.word	0x734
	.byte	0x13
	.long	0x1c92b
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x11
	.long	0xd4b2
	.long	0x22caa
	.quad	.LFB5369
	.quad	.LFE5369-.LFB5369
	.uleb128 0x1
	.byte	0x9c
	.long	0x22cd7
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c9bc
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__p\0"
	.byte	0xb
	.word	0x15e
	.byte	0x1d
	.long	0xcea2
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0xb
	.word	0x15e
	.byte	0x29
	.long	0x2f0
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x17
	.long	0xcd32
	.long	0x22ce5
	.byte	0x2
	.long	0x22cef
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c985
	.byte	0
	.uleb128 0x38
	.long	0x22cd7
	.ascii "_ZNSt12_Vector_baseI5BlorbSaIS0_EE17_Vector_impl_dataC2Ev\0"
	.long	0x22d48
	.quad	.LFB5367
	.quad	.LFE5367-.LFB5367
	.uleb128 0x1
	.byte	0x9c
	.long	0x22d51
	.uleb128 0xf
	.long	0x22ce5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0xc876
	.long	0x22d5f
	.byte	0x2
	.long	0x22d69
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c953
	.byte	0
	.uleb128 0x23
	.long	0x22d51
	.ascii "_ZNSaI5BlorbEC2Ev\0"
	.long	0x22d9a
	.quad	.LFB5364
	.quad	.LFE5364-.LFB5364
	.uleb128 0x1
	.byte	0x9c
	.long	0x22da3
	.uleb128 0xf
	.long	0x22d5f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x15e17
	.long	0x22db1
	.byte	0x2
	.long	0x22dc8
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c8de
	.uleb128 0x4f
	.ascii "__i\0"
	.byte	0xf
	.word	0x3f2
	.byte	0x2a
	.long	0x1c8e3
	.byte	0
	.uleb128 0x38
	.long	0x22da3
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPN3DDT4NodeESt6vectorIS2_SaIS2_EEEC1ERKS3_\0"
	.long	0x22e33
	.quad	.LFB5362
	.quad	.LFE5362-.LFB5362
	.uleb128 0x1
	.byte	0x9c
	.long	0x22e44
	.uleb128 0xf
	.long	0x22db1
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0xf
	.long	0x22dba
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xc
	.long	0x1432e
	.quad	.LFB5359
	.quad	.LFE5359-.LFB5359
	.uleb128 0x1
	.byte	0x9c
	.long	0x22ea5
	.uleb128 0x5
	.ascii "_IIter\0"
	.long	0x173e1
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x14cc6
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x14
	.word	0xfdb
	.byte	0x1a
	.long	0x173e1
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x14
	.word	0xfdb
	.byte	0x32
	.long	0x173e1
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF188
	.byte	0x14
	.word	0xfdb
	.byte	0x45
	.long	0x1af3d
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x11
	.long	0xb4a5
	.long	0x22ec4
	.quad	.LFB5358
	.quad	.LFE5358-.LFB5358
	.uleb128 0x1
	.byte	0x9c
	.long	0x22ed1
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c67f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0xb434
	.long	0x22ef0
	.quad	.LFB5357
	.quad	.LFE5357-.LFB5357
	.uleb128 0x1
	.byte	0x9c
	.long	0x22efd
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c67f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0x14437
	.quad	.LFB5356
	.quad	.LFE5356-.LFB5356
	.uleb128 0x1
	.byte	0x9c
	.long	0x22f6c
	.uleb128 0x4
	.secrel32	.LASF30
	.long	0x1c4db
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x1c4db
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1c0ec
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x13
	.word	0x14b
	.byte	0x2b
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x13
	.word	0x14b
	.byte	0x43
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x13
	.word	0x14c
	.byte	0x18
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1f
	.long	0x1c4fe
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.byte	0
	.uleb128 0xc
	.long	0x144f2
	.quad	.LFB5354
	.quad	.LFE5354-.LFB5354
	.uleb128 0x1
	.byte	0x9c
	.long	0x22fd4
	.uleb128 0x16
	.secrel32	.LASF6
	.long	0x14cc6
	.byte	0
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x1c4db
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x1c4db
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x20f
	.byte	0x17
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x20f
	.byte	0x24
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x20f
	.byte	0x30
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x1d
	.long	0x1458d
	.quad	.LFB5353
	.quad	.LFE5353-.LFB5353
	.uleb128 0x1
	.byte	0x9c
	.long	0x23009
	.uleb128 0x4
	.secrel32	.LASF61
	.long	0x1c4db
	.uleb128 0x6
	.secrel32	.LASF194
	.byte	0x12
	.word	0x230
	.byte	0x1c
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0x145e8
	.quad	.LFB5352
	.quad	.LFE5352-.LFB5352
	.uleb128 0x1
	.byte	0x9c
	.long	0x2305f
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x15d4e
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1c0ec
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x10
	.word	0x2e7
	.byte	0x1f
	.long	0x15d4e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x10
	.word	0x2e7
	.byte	0x39
	.long	0x15d4e
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x1f
	.long	0x1c4fe
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x11
	.long	0x891b
	.long	0x2307e
	.quad	.LFB5351
	.quad	.LFE5351-.LFB5351
	.uleb128 0x1
	.byte	0x9c
	.long	0x2308b
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c580
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0x146cd
	.quad	.LFB5350
	.quad	.LFE5350-.LFB5350
	.uleb128 0x1
	.byte	0x9c
	.long	0x230e9
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x16399
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x15d4e
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x263
	.byte	0xe
	.long	0x16399
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x263
	.byte	0x1b
	.long	0x16399
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x263
	.byte	0x27
	.long	0x15d4e
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x11
	.long	0x9ccb
	.long	0x23111
	.quad	.LFB5349
	.quad	.LFE5349-.LFB5349
	.uleb128 0x1
	.byte	0x9c
	.long	0x2315e
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x16399
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c580
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0xb
	.word	0x5e4
	.byte	0x21
	.long	0x83b0
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0xb
	.word	0x5e5
	.byte	0x1a
	.long	0x16399
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0xb
	.word	0x5e5
	.byte	0x34
	.long	0x16399
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x21
	.secrel32	.LASF187
	.byte	0xb
	.word	0x5e7
	.byte	0xc
	.long	0x8145
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x11
	.long	0x895e
	.long	0x2317d
	.quad	.LFB5348
	.quad	.LFE5348-.LFB5348
	.uleb128 0x1
	.byte	0x9c
	.long	0x2318a
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c5a3
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0x88d5
	.long	0x231a9
	.quad	.LFB5347
	.quad	.LFE5347-.LFB5347
	.uleb128 0x1
	.byte	0x9c
	.long	0x231b6
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c5a3
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x27
	.long	0x8d5d
	.long	0x231d5
	.quad	.LFB5346
	.quad	.LFE5346-.LFB5346
	.uleb128 0x1
	.byte	0x9c
	.long	0x231e2
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c5a3
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x1d
	.long	0x147f6
	.quad	.LFB5345
	.quad	.LFE5345-.LFB5345
	.uleb128 0x1
	.byte	0x9c
	.long	0x2322b
	.uleb128 0x4
	.secrel32	.LASF98
	.long	0x71c4
	.uleb128 0x9
	.ascii "__one\0"
	.byte	0x10
	.word	0x240
	.byte	0x1d
	.long	0x1c4fe
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__two\0"
	.byte	0x10
	.word	0x240
	.byte	0x32
	.long	0x1c4f9
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x11
	.long	0x9571
	.long	0x2324a
	.quad	.LFB5344
	.quad	.LFE5344-.LFB5344
	.uleb128 0x1
	.byte	0x9c
	.long	0x23257
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c580
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x27
	.long	0x7b19
	.long	0x23276
	.quad	.LFB5343
	.quad	.LFE5343-.LFB5343
	.uleb128 0x1
	.byte	0x9c
	.long	0x23283
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c567
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0x9dc7
	.long	0x232b1
	.quad	.LFB5341
	.quad	.LFE5341-.LFB5341
	.uleb128 0x1
	.byte	0x9c
	.long	0x232cb
	.uleb128 0x31
	.secrel32	.LASF148
	.long	0x232b1
	.uleb128 0x32
	.long	0x1c0ec
	.byte	0
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c580
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x5e
	.byte	0xe
	.byte	0x6e
	.byte	0x1b
	.uleb128 0x1f
	.long	0x21f2e
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.byte	0
	.uleb128 0x2c
	.long	0xf37e
	.uleb128 0x1d
	.long	0x1486f
	.quad	.LFB5340
	.quad	.LFE5340-.LFB5340
	.uleb128 0x1
	.byte	0x9c
	.long	0x23304
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1c8d4
	.uleb128 0x18
	.ascii "__t\0"
	.byte	0x11
	.byte	0x68
	.byte	0x10
	.long	0x1c8d4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.long	0x148d7
	.quad	.LFB5339
	.quad	.LFE5339-.LFB5339
	.uleb128 0x1
	.byte	0x9c
	.long	0x2335a
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x1c4db
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x1c0ec
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x10
	.word	0x2e7
	.byte	0x1f
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x10
	.word	0x2e7
	.byte	0x39
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x1f
	.long	0x1c4fe
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x27
	.long	0x7abf
	.long	0x23379
	.quad	.LFB5338
	.quad	.LFE5338-.LFB5338
	.uleb128 0x1
	.byte	0x9c
	.long	0x23386
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c55d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0x7ef1
	.long	0x233a5
	.quad	.LFB5337
	.quad	.LFE5337-.LFB5337
	.uleb128 0x1
	.byte	0x9c
	.long	0x233d2
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c55d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__p\0"
	.byte	0xb
	.word	0x15e
	.byte	0x1d
	.long	0x7882
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0xb
	.word	0x15e
	.byte	0x29
	.long	0x2f0
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x17
	.long	0x76fe
	.long	0x233e0
	.byte	0x2
	.long	0x233ea
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c526
	.byte	0
	.uleb128 0x38
	.long	0x233d2
	.ascii "_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE17_Vector_impl_dataC2Ev\0"
	.long	0x23448
	.quad	.LFB5335
	.quad	.LFE5335-.LFB5335
	.uleb128 0x1
	.byte	0x9c
	.long	0x23451
	.uleb128 0xf
	.long	0x233e0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x71e8
	.long	0x2345f
	.byte	0x2
	.long	0x23469
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c4f4
	.byte	0
	.uleb128 0x23
	.long	0x23451
	.ascii "_ZNSaIN3DDT4NodeEEC2Ev\0"
	.long	0x2349f
	.quad	.LFB5332
	.quad	.LFE5332-.LFB5332
	.uleb128 0x1
	.byte	0x9c
	.long	0x234a8
	.uleb128 0xf
	.long	0x2345f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0x6767
	.long	0x234c7
	.quad	.LFB5330
	.quad	.LFE5330-.LFB5330
	.uleb128 0x1
	.byte	0x9c
	.long	0x234e4
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1bde8
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0x8
	.word	0x38e
	.byte	0x1c
	.long	0x5f3c
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x27
	.long	0xb8b8
	.long	0x23503
	.quad	.LFB5329
	.quad	.LFE5329-.LFB5329
	.uleb128 0x1
	.byte	0x9c
	.long	0x23520
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c65c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0xb
	.word	0x413
	.byte	0x1c
	.long	0xafcd
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x11
	.long	0x6720
	.long	0x2353f
	.quad	.LFB5328
	.quad	.LFE5328-.LFB5328
	.uleb128 0x1
	.byte	0x9c
	.long	0x2355c
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1bdf2
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0x8
	.word	0x38a
	.byte	0x1c
	.long	0x5f3c
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x11
	.long	0xb73e
	.long	0x2357b
	.quad	.LFB5327
	.quad	.LFE5327-.LFB5327
	.uleb128 0x1
	.byte	0x9c
	.long	0x23598
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c65c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF211
	.byte	0xb
	.word	0x3a9
	.byte	0x18
	.long	0xafcd
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x11
	.long	0xb871
	.long	0x235b7
	.quad	.LFB5322
	.quad	.LFE5322-.LFB5322
	.uleb128 0x1
	.byte	0x9c
	.long	0x2360a
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c65c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__n\0"
	.byte	0xe
	.byte	0x43
	.byte	0x17
	.long	0xafcd
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x2d
	.quad	.LBB90
	.quad	.LBE90-.LBB90
	.uleb128 0x37
	.ascii "__old_size\0"
	.byte	0xe
	.byte	0x49
	.byte	0x14
	.long	0xafda
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x3d
	.secrel32	.LASF189
	.byte	0xe
	.byte	0x4a
	.byte	0xc
	.long	0xadb0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.byte	0
	.uleb128 0x11
	.long	0x6c8d
	.long	0x23629
	.quad	.LFB5321
	.quad	.LFE5321-.LFB5321
	.uleb128 0x1
	.byte	0x9c
	.long	0x23656
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1bdf2
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF211
	.byte	0x8
	.word	0x436
	.byte	0x18
	.long	0x5f3c
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x9
	.ascii "__x\0"
	.byte	0x8
	.word	0x436
	.byte	0x29
	.long	0x14cc6
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x11
	.long	0x685c
	.long	0x23675
	.quad	.LFB5320
	.quad	.LFE5320-.LFB5320
	.uleb128 0x1
	.byte	0x9c
	.long	0x23692
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1bdf2
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0x8
	.word	0x3a6
	.byte	0x19
	.long	0x5f3c
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xc
	.long	0x1494f
	.quad	.LFB5319
	.quad	.LFE5319-.LFB5319
	.uleb128 0x1
	.byte	0x9c
	.long	0x236e8
	.uleb128 0x4
	.secrel32	.LASF27
	.long	0x19287
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x191dc
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x10
	.word	0x2e7
	.byte	0x1f
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x10
	.word	0x2e7
	.byte	0x39
	.long	0x19287
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x1f
	.long	0x1c5da
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x27
	.long	0xa810
	.long	0x23707
	.quad	.LFB5318
	.quad	.LFE5318-.LFB5318
	.uleb128 0x1
	.byte	0x9c
	.long	0x23714
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c639
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0xab11
	.long	0x23722
	.byte	0x2
	.long	0x23735
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c639
	.uleb128 0x13
	.secrel32	.LASF184
	.long	0x191e3
	.byte	0
	.uleb128 0x23
	.long	0x23714
	.ascii "_ZNSt12_Vector_baseIiSaIiEED2Ev\0"
	.long	0x23774
	.quad	.LFB5316
	.quad	.LFE5316-.LFB5316
	.uleb128 0x1
	.byte	0x9c
	.long	0x2377d
	.uleb128 0xf
	.long	0x23722
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0xa1b9
	.long	0x2378b
	.byte	0x2
	.long	0x2379e
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c5d0
	.uleb128 0x13
	.secrel32	.LASF184
	.long	0x191e3
	.byte	0
	.uleb128 0x38
	.long	0x2377d
	.ascii "_ZNSaIiED2Ev\0"
	.long	0x237ca
	.quad	.LFB5313
	.quad	.LFE5313-.LFB5313
	.uleb128 0x1
	.byte	0x9c
	.long	0x237d3
	.uleb128 0xf
	.long	0x2378b
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0xa63e
	.long	0x237e1
	.byte	0x2
	.long	0x237eb
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c61b
	.byte	0
	.uleb128 0x23
	.long	0x237d3
	.ascii "_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC1Ev\0"
	.long	0x23838
	.quad	.LFB5311
	.quad	.LFE5311-.LFB5311
	.uleb128 0x1
	.byte	0x9c
	.long	0x23841
	.uleb128 0xf
	.long	0x237e1
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x5c5d
	.long	0x2384f
	.byte	0x2
	.long	0x23862
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1bdca
	.uleb128 0x13
	.secrel32	.LASF184
	.long	0x191e3
	.byte	0
	.uleb128 0x23
	.long	0x23841
	.ascii "_ZNSt13_Bvector_baseISaIbEED2Ev\0"
	.long	0x238a1
	.quad	.LFB5307
	.quad	.LFE5307-.LFB5307
	.uleb128 0x1
	.byte	0x9c
	.long	0x238aa
	.uleb128 0xf
	.long	0x2384f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x52cc
	.long	0x238b8
	.byte	0x2
	.long	0x238cb
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1bd66
	.uleb128 0x13
	.secrel32	.LASF184
	.long	0x191e3
	.byte	0
	.uleb128 0x38
	.long	0x238aa
	.ascii "_ZNSaImED2Ev\0"
	.long	0x238f7
	.quad	.LFB5304
	.quad	.LFE5304-.LFB5304
	.uleb128 0x1
	.byte	0x9c
	.long	0x23900
	.uleb128 0xf
	.long	0x238b8
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x5856
	.long	0x2390e
	.byte	0x2
	.long	0x23918
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1bda2
	.byte	0
	.uleb128 0x23
	.long	0x23900
	.ascii "_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC1Ev\0"
	.long	0x23966
	.quad	.LFB5302
	.quad	.LFE5302-.LFB5302
	.uleb128 0x1
	.byte	0x9c
	.long	0x2396f
	.uleb128 0xf
	.long	0x2390e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0xe8bb
	.long	0x2398e
	.quad	.LFB5152
	.quad	.LFE5152-.LFB5152
	.uleb128 0x1
	.byte	0x9c
	.long	0x239ab
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c9df
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF204
	.byte	0xb
	.word	0x596
	.byte	0x1c
	.long	0xddff
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x17
	.long	0x18a20
	.long	0x239c2
	.byte	0x2
	.long	0x239d9
	.uleb128 0x4
	.secrel32	.LASF154
	.long	0x1c92b
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1ca84
	.uleb128 0x4f
	.ascii "__i\0"
	.byte	0xf
	.word	0x3fb
	.byte	0x1f
	.long	0x20418
	.byte	0
	.uleb128 0x23
	.long	0x239ab
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPK5BlorbSt6vectorIS1_SaIS1_EEEC1IPS1_EERKNS0_IT_NS_11__enable_ifIXsrSt10__are_sameISA_S9_E7__valueES6_E6__typeEEE\0"
	.long	0x23a94
	.quad	.LFB5151
	.quad	.LFE5151-.LFB5151
	.uleb128 0x1
	.byte	0x9c
	.long	0x23aa5
	.uleb128 0x4
	.secrel32	.LASF154
	.long	0x1c92b
	.uleb128 0xf
	.long	0x239c2
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0xf
	.long	0x239cb
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x27
	.long	0x183b0
	.long	0x23ac4
	.quad	.LFB5149
	.quad	.LFE5149-.LFB5149
	.uleb128 0x1
	.byte	0x9c
	.long	0x23ad1
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1ca70
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0x18282
	.long	0x23af0
	.quad	.LFB5147
	.quad	.LFE5147-.LFB5147
	.uleb128 0x1
	.byte	0x9c
	.long	0x23b0d
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1ca70
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0xf
	.word	0x431
	.byte	0x21
	.long	0x18211
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x11
	.long	0xddbf
	.long	0x23b2c
	.quad	.LFB5146
	.quad	.LFE5146-.LFB5146
	.uleb128 0x1
	.byte	0x9c
	.long	0x23b39
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c9df
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x27
	.long	0xe317
	.long	0x23b58
	.quad	.LFB5145
	.quad	.LFE5145-.LFB5145
	.uleb128 0x1
	.byte	0x9c
	.long	0x23b75
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c9df
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0xb
	.word	0x413
	.byte	0x1c
	.long	0xd932
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x27
	.long	0xe0ed
	.long	0x23b94
	.quad	.LFB5144
	.quad	.LFE5144-.LFB5144
	.uleb128 0x1
	.byte	0x9c
	.long	0x23ba1
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1ca02
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0xe4f7
	.long	0x23bc0
	.quad	.LFB5143
	.quad	.LFE5143-.LFB5143
	.uleb128 0x1
	.byte	0x9c
	.long	0x23bcd
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c9df
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0xe63e
	.long	0x23bec
	.quad	.LFB5142
	.quad	.LFE5142-.LFB5142
	.uleb128 0x1
	.byte	0x9c
	.long	0x23c09
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c9df
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__x\0"
	.byte	0xb
	.word	0x4b3
	.byte	0x1e
	.long	0x1ca07
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x11
	.long	0xe576
	.long	0x23c28
	.quad	.LFB5141
	.quad	.LFE5141-.LFB5141
	.uleb128 0x1
	.byte	0x9c
	.long	0x23c35
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c9df
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0xd40f
	.long	0x23c43
	.byte	0x2
	.long	0x23c56
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c9bc
	.uleb128 0x13
	.secrel32	.LASF184
	.long	0x191e3
	.byte	0
	.uleb128 0x23
	.long	0x23c35
	.ascii "_ZNSt12_Vector_baseI5BlorbSaIS0_EED2Ev\0"
	.long	0x23c9c
	.quad	.LFB5139
	.quad	.LFE5139-.LFB5139
	.uleb128 0x1
	.byte	0x9c
	.long	0x23ca5
	.uleb128 0xf
	.long	0x23c43
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0xc904
	.long	0x23cb3
	.byte	0x2
	.long	0x23cc6
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c953
	.uleb128 0x13
	.secrel32	.LASF184
	.long	0x191e3
	.byte	0
	.uleb128 0x38
	.long	0x23ca5
	.ascii "_ZNSaI5BlorbED2Ev\0"
	.long	0x23cf7
	.quad	.LFB5136
	.quad	.LFE5136-.LFB5136
	.uleb128 0x1
	.byte	0x9c
	.long	0x23d00
	.uleb128 0xf
	.long	0x23cb3
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0xcec5
	.long	0x23d0e
	.byte	0x2
	.long	0x23d18
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c99e
	.byte	0
	.uleb128 0x23
	.long	0x23d00
	.ascii "_ZNSt12_Vector_baseI5BlorbSaIS0_EE12_Vector_implC1Ev\0"
	.long	0x23d6c
	.quad	.LFB5134
	.quad	.LFE5134-.LFB5134
	.uleb128 0x1
	.byte	0x9c
	.long	0x23d75
	.uleb128 0xf
	.long	0x23d0e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0x8883
	.long	0x23d94
	.quad	.LFB5131
	.quad	.LFE5131-.LFB5131
	.uleb128 0x1
	.byte	0x9c
	.long	0x23da1
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c580
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0x1c7ed
	.long	0x23dc0
	.quad	.LFB5130
	.quad	.LFE5130-.LFB5130
	.uleb128 0x1
	.byte	0x9c
	.long	0x23dcd
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c8b6
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x27
	.long	0x8e3f
	.long	0x23dec
	.quad	.LFB5129
	.quad	.LFE5129-.LFB5129
	.uleb128 0x1
	.byte	0x9c
	.long	0x23e09
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c580
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0xb
	.word	0x413
	.byte	0x1c
	.long	0x83b0
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x27
	.long	0x8bed
	.long	0x23e28
	.quad	.LFB5128
	.quad	.LFE5128-.LFB5128
	.uleb128 0x1
	.byte	0x9c
	.long	0x23e35
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c5a3
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0x86d6
	.long	0x23e54
	.quad	.LFB5123
	.quad	.LFE5123-.LFB5123
	.uleb128 0x1
	.byte	0x9c
	.long	0x23eb5
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c580
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__x\0"
	.byte	0xe
	.byte	0xc7
	.byte	0x2a
	.long	0x1c58f
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x2d
	.quad	.LBB79
	.quad	.LBE79-.LBB79
	.uleb128 0x37
	.ascii "__xlen\0"
	.byte	0xe
	.byte	0xdf
	.byte	0x14
	.long	0x83bd
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2d
	.quad	.LBB81
	.quad	.LBE81-.LBB81
	.uleb128 0x3d
	.secrel32	.LASF189
	.byte	0xe
	.byte	0xe2
	.byte	0x10
	.long	0x8145
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xc
	.long	0x149af
	.quad	.LFB5127
	.quad	.LFE5127-.LFB5127
	.uleb128 0x1
	.byte	0x9c
	.long	0x23f13
	.uleb128 0x5
	.ascii "_II\0"
	.long	0x1c4db
	.uleb128 0x5
	.ascii "_OI\0"
	.long	0x1c4db
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x3
	.word	0x263
	.byte	0xe
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x3
	.word	0x263
	.byte	0x1b
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF187
	.byte	0x3
	.word	0x263
	.byte	0x27
	.long	0x1c4db
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x1d
	.long	0x14a21
	.quad	.LFB5126
	.quad	.LFE5126-.LFB5126
	.uleb128 0x1
	.byte	0x9c
	.long	0x23f3f
	.uleb128 0x1f
	.long	0x1c4f9
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1f
	.long	0x1c4f9
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x61
	.long	0x15c40
	.quad	.LFB5125
	.quad	.LFE5125-.LFB5125
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x61
	.long	0x15b36
	.quad	.LFB5124
	.quad	.LFE5124-.LFB5124
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x11
	.long	0x91a2
	.long	0x23f8c
	.quad	.LFB5122
	.quad	.LFE5122-.LFB5122
	.uleb128 0x1
	.byte	0x9c
	.long	0x23fa9
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c580
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__x\0"
	.byte	0xb
	.word	0x4b3
	.byte	0x1e
	.long	0x1c5a8
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x17
	.long	0x8694
	.long	0x23fb7
	.byte	0x2
	.long	0x23fca
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c580
	.uleb128 0x13
	.secrel32	.LASF184
	.long	0x191e3
	.byte	0
	.uleb128 0x23
	.long	0x23fa9
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EED1Ev\0"
	.long	0x2400e
	.quad	.LFB5121
	.quad	.LFE5121-.LFB5121
	.uleb128 0x1
	.byte	0x9c
	.long	0x24017
	.uleb128 0xf
	.long	0x23fb7
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x7e44
	.long	0x24025
	.byte	0x2
	.long	0x24038
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c55d
	.uleb128 0x13
	.secrel32	.LASF184
	.long	0x191e3
	.byte	0
	.uleb128 0x23
	.long	0x24017
	.ascii "_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EED2Ev\0"
	.long	0x24083
	.quad	.LFB5117
	.quad	.LFE5117-.LFB5117
	.uleb128 0x1
	.byte	0x9c
	.long	0x2408c
	.uleb128 0xf
	.long	0x24025
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x7285
	.long	0x2409a
	.byte	0x2
	.long	0x240ad
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c4f4
	.uleb128 0x13
	.secrel32	.LASF184
	.long	0x191e3
	.byte	0
	.uleb128 0x38
	.long	0x2408c
	.ascii "_ZNSaIN3DDT4NodeEED2Ev\0"
	.long	0x240e3
	.quad	.LFB5114
	.quad	.LFE5114-.LFB5114
	.uleb128 0x1
	.byte	0x9c
	.long	0x240ec
	.uleb128 0xf
	.long	0x2409a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x78a5
	.long	0x240fa
	.byte	0x2
	.long	0x24104
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c53f
	.byte	0
	.uleb128 0x23
	.long	0x240ec
	.ascii "_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE12_Vector_implC1Ev\0"
	.long	0x2415d
	.quad	.LFB5112
	.quad	.LFE5112-.LFB5112
	.uleb128 0x1
	.byte	0x9c
	.long	0x24166
	.uleb128 0xf
	.long	0x240fa
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0x1c77a
	.long	0x24185
	.quad	.LFB5109
	.quad	.LFE5109-.LFB5109
	.uleb128 0x1
	.byte	0x9c
	.long	0x241a1
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c8b6
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "key\0"
	.byte	0x9
	.byte	0x1a
	.byte	0x1d
	.long	0x19160
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x11
	.long	0x1c7ba
	.long	0x241c0
	.quad	.LFB5108
	.quad	.LFE5108-.LFB5108
	.uleb128 0x1
	.byte	0x9c
	.long	0x241dc
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c8a7
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "key\0"
	.byte	0x9
	.byte	0x1e
	.byte	0x23
	.long	0x19160
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x11
	.long	0x1c6d0
	.long	0x241fb
	.quad	.LFB5107
	.quad	.LFE5107-.LFB5107
	.uleb128 0x1
	.byte	0x9c
	.long	0x24217
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c8a7
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x15
	.secrel32	.LASF59
	.byte	0x9
	.byte	0xd
	.byte	0x10
	.long	0x191dc
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x17
	.long	0xb24d
	.long	0x24225
	.byte	0x2
	.long	0x24238
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c65c
	.uleb128 0x13
	.secrel32	.LASF184
	.long	0x191e3
	.byte	0
	.uleb128 0x23
	.long	0x24217
	.ascii "_ZNSt6vectorIiSaIiEED1Ev\0"
	.long	0x24270
	.quad	.LFB5106
	.quad	.LFE5106-.LFB5106
	.uleb128 0x1
	.byte	0x9c
	.long	0x24279
	.uleb128 0xf
	.long	0x24225
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x61aa
	.long	0x24287
	.byte	0x2
	.long	0x2429a
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1bdf2
	.uleb128 0x13
	.secrel32	.LASF184
	.long	0x191e3
	.byte	0
	.uleb128 0x23
	.long	0x24279
	.ascii "_ZNSt6vectorIbSaIbEED1Ev\0"
	.long	0x242d2
	.quad	.LFB5103
	.quad	.LFE5103-.LFB5103
	.uleb128 0x1
	.byte	0x9c
	.long	0x242db
	.uleb128 0xf
	.long	0x24287
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x1c703
	.long	0x242e9
	.byte	0x2
	.long	0x242f3
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c8a7
	.byte	0
	.uleb128 0x23
	.long	0x242db
	.ascii "_ZN7OptimapIhiEC1Ev\0"
	.long	0x24326
	.quad	.LFB5100
	.quad	.LFE5100-.LFB5100
	.uleb128 0x1
	.byte	0x9c
	.long	0x2432f
	.uleb128 0xf
	.long	0x242e9
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0xaf16
	.long	0x2433d
	.byte	0x2
	.long	0x24347
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c65c
	.byte	0
	.uleb128 0x23
	.long	0x2432f
	.ascii "_ZNSt6vectorIiSaIiEEC1Ev\0"
	.long	0x2437f
	.quad	.LFB5098
	.quad	.LFE5098-.LFB5098
	.uleb128 0x1
	.byte	0x9c
	.long	0x24388
	.uleb128 0xf
	.long	0x2433d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0xa908
	.long	0x24396
	.byte	0x2
	.long	0x243a0
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c639
	.byte	0
	.uleb128 0x23
	.long	0x24388
	.ascii "_ZNSt12_Vector_baseIiSaIiEEC2Ev\0"
	.long	0x243df
	.quad	.LFB5095
	.quad	.LFE5095-.LFB5095
	.uleb128 0x1
	.byte	0x9c
	.long	0x243e8
	.uleb128 0xf
	.long	0x24396
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x49
	.long	0xa7bc
	.byte	0xb
	.byte	0x80
	.byte	0xe
	.long	0x243f8
	.long	0x2440b
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c61b
	.uleb128 0x13
	.secrel32	.LASF184
	.long	0x191e3
	.byte	0
	.uleb128 0x23
	.long	0x243e8
	.ascii "_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD1Ev\0"
	.long	0x24458
	.quad	.LFB5094
	.quad	.LFE5094-.LFB5094
	.uleb128 0x1
	.byte	0x9c
	.long	0x24461
	.uleb128 0xf
	.long	0x243f8
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x5e97
	.long	0x2446f
	.byte	0x2
	.long	0x24479
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1bdf2
	.byte	0
	.uleb128 0x23
	.long	0x24461
	.ascii "_ZNSt6vectorIbSaIbEEC1Ev\0"
	.long	0x244b1
	.quad	.LFB5088
	.quad	.LFE5088-.LFB5088
	.uleb128 0x1
	.byte	0x9c
	.long	0x244ba
	.uleb128 0xf
	.long	0x2446f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x5b5e
	.long	0x244c8
	.byte	0x2
	.long	0x244d2
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1bdca
	.byte	0
	.uleb128 0x23
	.long	0x244ba
	.ascii "_ZNSt13_Bvector_baseISaIbEEC2Ev\0"
	.long	0x24511
	.quad	.LFB5085
	.quad	.LFE5085-.LFB5085
	.uleb128 0x1
	.byte	0x9c
	.long	0x2451a
	.uleb128 0xf
	.long	0x244c8
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc2
	.long	0x59f2
	.byte	0x8
	.word	0x1dd
	.byte	0xe
	.long	0x2452d
	.byte	0x2
	.long	0x24540
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1bda2
	.uleb128 0x13
	.secrel32	.LASF184
	.long	0x191e3
	.byte	0
	.uleb128 0x23
	.long	0x2451a
	.ascii "_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD1Ev\0"
	.long	0x2458e
	.quad	.LFB5084
	.quad	.LFE5084-.LFB5084
	.uleb128 0x1
	.byte	0x9c
	.long	0x24597
	.uleb128 0xf
	.long	0x2452d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x1d
	.long	0x14a57
	.quad	.LFB5070
	.quad	.LFE5070-.LFB5070
	.uleb128 0x1
	.byte	0x9c
	.long	0x245da
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x191a1
	.uleb128 0x18
	.ascii "__a\0"
	.byte	0x3
	.byte	0xfe
	.byte	0x14
	.long	0x1b87f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__b\0"
	.byte	0x3
	.byte	0xfe
	.byte	0x24
	.long	0x1b87f
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xc3
	.ascii "main\0"
	.byte	0xa
	.byte	0xcb
	.byte	0x5
	.long	0x191dc
	.quad	.LFB4709
	.quad	.LFE4709-.LFB4709
	.uleb128 0x1
	.byte	0x9c
	.long	0x24642
	.uleb128 0x95
	.quad	.LBB62
	.quad	.LBE62-.LBB62
	.long	0x24622
	.uleb128 0x37
	.ascii "i\0"
	.byte	0xa
	.byte	0xd5
	.byte	0xb
	.long	0x191dc
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.byte	0
	.uleb128 0x2d
	.quad	.LBB64
	.quad	.LBE64-.LBB64
	.uleb128 0x37
	.ascii "i\0"
	.byte	0xa
	.byte	0xe3
	.byte	0xe
	.long	0x191dc
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.byte	0
	.uleb128 0x7d
	.ascii "spawnBlorb\0"
	.byte	0xa
	.byte	0xc2
	.ascii "_Z10spawnBlorbi\0"
	.quad	.LFB4705
	.quad	.LFE4705-.LFB4705
	.uleb128 0x1
	.byte	0x9c
	.long	0x246b6
	.uleb128 0x18
	.ascii "start_mutation_count\0"
	.byte	0xa
	.byte	0xc2
	.byte	0x15
	.long	0x191dc
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.quad	.LBB61
	.quad	.LBE61-.LBB61
	.uleb128 0x37
	.ascii "i\0"
	.byte	0xa
	.byte	0xc4
	.byte	0xa
	.long	0x191dc
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.byte	0
	.uleb128 0x49
	.long	0x1bfe6
	.byte	0xa
	.byte	0x9a
	.byte	0x8
	.long	0x246c6
	.long	0x246d9
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c930
	.uleb128 0x13
	.secrel32	.LASF184
	.long	0x191e3
	.byte	0
	.uleb128 0x23
	.long	0x246b6
	.ascii "_ZN5BlorbD1Ev\0"
	.long	0x24706
	.quad	.LFB4708
	.quad	.LFE4708-.LFB4708
	.uleb128 0x1
	.byte	0x9c
	.long	0x2470f
	.uleb128 0xf
	.long	0x246c6
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc4
	.ascii "f_ACT_MOVE_FORWARD\0"
	.byte	0xa
	.byte	0xbb
	.byte	0x1
	.ascii "_Z18f_ACT_MOVE_FORWARDR5Blorb\0"
	.long	0x1be8d
	.quad	.LFB4704
	.quad	.LFE4704-.LFB4704
	.uleb128 0x1
	.byte	0x9c
	.long	0x24783
	.uleb128 0x18
	.ascii "self\0"
	.byte	0xa
	.byte	0xbb
	.byte	0x1
	.long	0x1bea2
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x37
	.ascii "fwspeed\0"
	.byte	0xa
	.byte	0xbc
	.byte	0xe
	.long	0x19227
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.uleb128 0x62
	.ascii "f_ACT_NULL\0"
	.byte	0xa
	.byte	0xb7
	.byte	0x1
	.ascii "_Z10f_ACT_NULLR5Blorb\0"
	.long	0x1be8d
	.quad	.LFB4703
	.quad	.LFE4703-.LFB4703
	.uleb128 0x1
	.byte	0x9c
	.long	0x247d3
	.uleb128 0x18
	.ascii "self\0"
	.byte	0xa
	.byte	0xb7
	.byte	0x1
	.long	0x1bea2
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc5
	.long	0x1bf37
	.byte	0xa9
	.byte	0x5
	.long	0x247f5
	.quad	.LFB4702
	.quad	.LFE4702-.LFB4702
	.uleb128 0x1
	.byte	0x9c
	.long	0x24802
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c930
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0xd866
	.long	0x24810
	.byte	0x2
	.long	0x2481a
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c9df
	.byte	0
	.uleb128 0x23
	.long	0x24802
	.ascii "_ZNSt6vectorI5BlorbSaIS0_EEC1Ev\0"
	.long	0x24859
	.quad	.LFB4701
	.quad	.LFE4701-.LFB4701
	.uleb128 0x1
	.byte	0x9c
	.long	0x24862
	.uleb128 0xf
	.long	0x24810
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0xd1ce
	.long	0x24870
	.byte	0x2
	.long	0x2487a
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c9bc
	.byte	0
	.uleb128 0x23
	.long	0x24862
	.ascii "_ZNSt12_Vector_baseI5BlorbSaIS0_EEC2Ev\0"
	.long	0x248c0
	.quad	.LFB4698
	.quad	.LFE4698-.LFB4698
	.uleb128 0x1
	.byte	0x9c
	.long	0x248c9
	.uleb128 0xf
	.long	0x24870
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x49
	.long	0xd066
	.byte	0xb
	.byte	0x80
	.byte	0xe
	.long	0x248d9
	.long	0x248ec
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c99e
	.uleb128 0x13
	.secrel32	.LASF184
	.long	0x191e3
	.byte	0
	.uleb128 0x23
	.long	0x248c9
	.ascii "_ZNSt12_Vector_baseI5BlorbSaIS0_EE12_Vector_implD1Ev\0"
	.long	0x24940
	.quad	.LFB4697
	.quad	.LFE4697-.LFB4697
	.uleb128 0x1
	.byte	0x9c
	.long	0x24949
	.uleb128 0xf
	.long	0x248d9
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x1bf13
	.long	0x24957
	.byte	0x2
	.long	0x24961
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c930
	.byte	0
	.uleb128 0x23
	.long	0x24949
	.ascii "_ZN5BlorbC1Ev\0"
	.long	0x2498e
	.quad	.LFB4691
	.quad	.LFE4691-.LFB4691
	.uleb128 0x1
	.byte	0x9c
	.long	0x24997
	.uleb128 0xf
	.long	0x24957
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0x1c451
	.long	0x249b6
	.quad	.LFB4688
	.quad	.LFE4688-.LFB4688
	.uleb128 0x1
	.byte	0x9c
	.long	0x24a35
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c8c5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "pos\0"
	.byte	0xa
	.byte	0x81
	.byte	0x14
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x18
	.ascii "index\0"
	.byte	0xa
	.byte	0x81
	.byte	0x1d
	.long	0x191dc
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x37
	.ascii "n\0"
	.byte	0xa
	.byte	0x82
	.byte	0x9
	.long	0x1c8d4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2d
	.quad	.LBB54
	.quad	.LBE54-.LBB54
	.uleb128 0x37
	.ascii "i\0"
	.byte	0xa
	.byte	0x83
	.byte	0xc
	.long	0x191dc
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x2d
	.quad	.LBB55
	.quad	.LBE55-.LBB55
	.uleb128 0x37
	.ascii "next_pos\0"
	.byte	0xa
	.byte	0x84
	.byte	0x12
	.long	0x19ea8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x11
	.long	0x1c41c
	.long	0x24a54
	.quad	.LFB4687
	.quad	.LFE4687-.LFB4687
	.uleb128 0x1
	.byte	0x9c
	.long	0x24a70
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c8c5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x15
	.secrel32	.LASF114
	.byte	0xa
	.byte	0x7a
	.byte	0x19
	.long	0x1bea2
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x49
	.long	0x1c4b4
	.byte	0xa
	.byte	0x2f
	.byte	0x8
	.long	0x24a80
	.long	0x24a93
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c8c5
	.uleb128 0x13
	.secrel32	.LASF184
	.long	0x191e3
	.byte	0
	.uleb128 0x23
	.long	0x24a70
	.ascii "_ZN3DDTD1Ev\0"
	.long	0x24abe
	.quad	.LFB4686
	.quad	.LFE4686-.LFB4686
	.uleb128 0x1
	.byte	0x9c
	.long	0x24ac7
	.uleb128 0xf
	.long	0x24a80
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0x1c3ba
	.long	0x24ae6
	.quad	.LFB4682
	.quad	.LFE4682-.LFB4682
	.uleb128 0x1
	.byte	0x9c
	.long	0x24b63
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c8c5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x37
	.ascii "mutation_count\0"
	.byte	0xa
	.byte	0x60
	.byte	0x7
	.long	0x191dc
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x69
	.secrel32	.LLRL0
	.uleb128 0x37
	.ascii "tries\0"
	.byte	0xa
	.byte	0x61
	.byte	0xc
	.long	0x191dc
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x69
	.secrel32	.LLRL1
	.uleb128 0x37
	.ascii "selected\0"
	.byte	0xa
	.byte	0x62
	.byte	0xa
	.long	0x1c8d4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x37
	.ascii "outc\0"
	.byte	0xa
	.byte	0x63
	.byte	0xe
	.long	0x191e3
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x69
	.secrel32	.LLRL2
	.uleb128 0x37
	.ascii "aoi\0"
	.byte	0xa
	.byte	0x68
	.byte	0x16
	.long	0x1be8d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -41
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x17
	.long	0x1c390
	.long	0x24b71
	.byte	0x2
	.long	0x24b88
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c8c5
	.uleb128 0x34
	.ascii "copy\0"
	.byte	0xa
	.byte	0x59
	.byte	0x11
	.long	0x1c8ca
	.byte	0
	.uleb128 0x23
	.long	0x24b63
	.ascii "_ZN3DDTC1ERKS_\0"
	.long	0x24bb6
	.quad	.LFB4681
	.quad	.LFE4681-.LFB4681
	.uleb128 0x1
	.byte	0x9c
	.long	0x24bc7
	.uleb128 0xf
	.long	0x24b71
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0xf
	.long	0x24b7a
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x17
	.long	0x1c36e
	.long	0x24bd5
	.byte	0x2
	.long	0x24bdf
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c8c5
	.byte	0
	.uleb128 0x23
	.long	0x24bc7
	.ascii "_ZN3DDTC1Ev\0"
	.long	0x24c0a
	.quad	.LFB4678
	.quad	.LFE4678-.LFB4678
	.uleb128 0x1
	.byte	0x9c
	.long	0x24c13
	.uleb128 0xf
	.long	0x24bd5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x49
	.long	0x1c313
	.byte	0xa
	.byte	0x32
	.byte	0x9
	.long	0x24c23
	.long	0x24c36
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c4e0
	.uleb128 0x13
	.secrel32	.LASF184
	.long	0x191e3
	.byte	0
	.uleb128 0x23
	.long	0x24c13
	.ascii "_ZN3DDT4NodeD1Ev\0"
	.long	0x24c66
	.quad	.LFB4676
	.quad	.LFE4676-.LFB4676
	.uleb128 0x1
	.byte	0x9c
	.long	0x24c6f
	.uleb128 0xf
	.long	0x24c23
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x82d5
	.long	0x24c7d
	.byte	0x2
	.long	0x24c87
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c580
	.byte	0
	.uleb128 0x23
	.long	0x24c6f
	.ascii "_ZNSt6vectorIN3DDT4NodeESaIS1_EEC1Ev\0"
	.long	0x24ccb
	.quad	.LFB4673
	.quad	.LFE4673-.LFB4673
	.uleb128 0x1
	.byte	0x9c
	.long	0x24cd4
	.uleb128 0xf
	.long	0x24c7d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x7bdb
	.long	0x24ce2
	.byte	0x2
	.long	0x24cec
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c55d
	.byte	0
	.uleb128 0x23
	.long	0x24cd4
	.ascii "_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EEC2Ev\0"
	.long	0x24d37
	.quad	.LFB4670
	.quad	.LFE4670-.LFB4670
	.uleb128 0x1
	.byte	0x9c
	.long	0x24d40
	.uleb128 0xf
	.long	0x24ce2
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x49
	.long	0x7a5f
	.byte	0xb
	.byte	0x80
	.byte	0xe
	.long	0x24d50
	.long	0x24d63
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c53f
	.uleb128 0x13
	.secrel32	.LASF184
	.long	0x191e3
	.byte	0
	.uleb128 0x23
	.long	0x24d40
	.ascii "_ZNSt12_Vector_baseIN3DDT4NodeESaIS1_EE12_Vector_implD1Ev\0"
	.long	0x24dbc
	.quad	.LFB4669
	.quad	.LFE4669-.LFB4669
	.uleb128 0x1
	.byte	0x9c
	.long	0x24dc5
	.uleb128 0xf
	.long	0x24d50
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0x1c250
	.long	0x24de4
	.quad	.LFB4662
	.quad	.LFE4662-.LFB4662
	.uleb128 0x1
	.byte	0x9c
	.long	0x24e00
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c4e0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "pos\0"
	.byte	0xa
	.byte	0x4b
	.byte	0x15
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x11
	.long	0x1c1af
	.long	0x24e1f
	.quad	.LFB4661
	.quad	.LFE4661-.LFB4661
	.uleb128 0x1
	.byte	0x9c
	.long	0x24e5c
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c4e0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x15
	.secrel32	.LASF114
	.byte	0xa
	.byte	0x42
	.byte	0x24
	.long	0x1bea2
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x15
	.secrel32	.LASF60
	.byte	0xa
	.byte	0x42
	.byte	0x3b
	.long	0x1c237
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x37
	.ascii "output\0"
	.byte	0xa
	.byte	0x43
	.byte	0x11
	.long	0x1be8d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -17
	.byte	0
	.uleb128 0x11
	.long	0x1c173
	.long	0x24e7b
	.quad	.LFB4660
	.quad	.LFE4660-.LFB4660
	.uleb128 0x1
	.byte	0x9c
	.long	0x24ea7
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1c4e0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "aout\0"
	.byte	0xa
	.byte	0x3e
	.byte	0x1d
	.long	0x1be8d
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x15
	.secrel32	.LASF168
	.byte	0xa
	.byte	0x3e
	.byte	0x2d
	.long	0x1c340
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x17
	.long	0x1c140
	.long	0x24eb5
	.byte	0x2
	.long	0x24ecb
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c4e0
	.uleb128 0x34
	.ascii "act\0"
	.byte	0xa
	.byte	0x3c
	.byte	0xf
	.long	0x1c039
	.byte	0
	.uleb128 0x23
	.long	0x24ea7
	.ascii "_ZN3DDT4NodeC1E6Action\0"
	.long	0x24f01
	.quad	.LFB4659
	.quad	.LFE4659-.LFB4659
	.uleb128 0x1
	.byte	0x9c
	.long	0x24f12
	.uleb128 0xf
	.long	0x24eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0xf
	.long	0x24ebe
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x49
	.long	0x1c853
	.byte	0x9
	.byte	0x7
	.byte	0x8
	.long	0x24f22
	.long	0x24f35
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1c8a7
	.uleb128 0x13
	.secrel32	.LASF184
	.long	0x191e3
	.byte	0
	.uleb128 0x23
	.long	0x24f12
	.ascii "_ZN7OptimapIhiED1Ev\0"
	.long	0x24f68
	.quad	.LFB4654
	.quad	.LFE4654-.LFB4654
	.uleb128 0x1
	.byte	0x9c
	.long	0x24f71
	.uleb128 0xf
	.long	0x24f22
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x1d
	.long	0x14aa9
	.quad	.LFB4173
	.quad	.LFE4173-.LFB4173
	.uleb128 0x1
	.byte	0x9c
	.long	0x24fb4
	.uleb128 0x5
	.ascii "_Tp\0"
	.long	0x191a1
	.uleb128 0x18
	.ascii "__a\0"
	.byte	0x3
	.byte	0xe6
	.byte	0x14
	.long	0x1b87f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__b\0"
	.byte	0x3
	.byte	0xe6
	.byte	0x24
	.long	0x1b87f
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xc
	.long	0x14afb
	.quad	.LFB2000
	.quad	.LFE2000-.LFB2000
	.uleb128 0x1
	.byte	0x9c
	.long	0x2503a
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x8
	.word	0x542
	.byte	0x2b
	.long	0x3290
	.uleb128 0x2
	.byte	0x73
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x8
	.word	0x543
	.byte	0x24
	.long	0x3290
	.uleb128 0x2
	.byte	0x74
	.sleb128 0
	.uleb128 0x9
	.ascii "__x\0"
	.byte	0x8
	.word	0x543
	.byte	0x38
	.long	0x1af3d
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x28
	.byte	0x8
	.word	0x555
	.byte	0x3
	.long	0x2e63
	.uleb128 0x28
	.byte	0x8
	.word	0x555
	.byte	0x3
	.long	0x30a4
	.uleb128 0x2d
	.quad	.LBB34
	.quad	.LBE34-.LBB34
	.uleb128 0x25
	.ascii "__first_p\0"
	.byte	0x8
	.word	0x549
	.byte	0xd
	.long	0x1aec0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x1d
	.long	0x14b43
	.quad	.LFB1999
	.quad	.LFE1999-.LFB1999
	.uleb128 0x1
	.byte	0x9c
	.long	0x250e3
	.uleb128 0x9
	.ascii "__v\0"
	.byte	0x8
	.word	0x532
	.byte	0x2e
	.long	0x1aec0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF185
	.byte	0x8
	.word	0x533
	.byte	0x11
	.long	0x14cb6
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6
	.secrel32	.LASF186
	.byte	0x8
	.word	0x533
	.byte	0x27
	.long	0x14cb6
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x9
	.ascii "__x\0"
	.byte	0x8
	.word	0x533
	.byte	0x34
	.long	0x14cc6
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x28
	.byte	0x8
	.word	0x53f
	.byte	0x3
	.long	0x2e63
	.uleb128 0x28
	.byte	0x8
	.word	0x53f
	.byte	0x3
	.long	0x30a4
	.uleb128 0x25
	.ascii "__fmask\0"
	.byte	0x8
	.word	0x537
	.byte	0x15
	.long	0x30b6
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x25
	.ascii "__lmask\0"
	.byte	0x8
	.word	0x538
	.byte	0x15
	.long	0x30b6
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x25
	.ascii "__mask\0"
	.byte	0x8
	.word	0x539
	.byte	0x15
	.long	0x30b6
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.byte	0
	.uleb128 0xd
	.long	0x3699
	.uleb128 0xc
	.long	0x14b8a
	.quad	.LFB1899
	.quad	.LFE1899-.LFB1899
	.uleb128 0x1
	.byte	0x9c
	.long	0x25135
	.uleb128 0x9
	.ascii "__x\0"
	.byte	0x8
	.word	0x18f
	.byte	0x25
	.long	0x250e3
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0x8
	.word	0x18f
	.byte	0x3a
	.long	0x3111
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x21
	.secrel32	.LASF189
	.byte	0x8
	.word	0x191
	.byte	0x16
	.long	0x368c
	.uleb128 0x3
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0
	.uleb128 0x11
	.long	0x380e
	.long	0x25154
	.quad	.LFB1898
	.quad	.LFE1898-.LFB1898
	.uleb128 0x1
	.byte	0x9c
	.long	0x25171
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1af24
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__i\0"
	.byte	0x8
	.word	0x18b
	.byte	0x20
	.long	0x3111
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x11
	.long	0x3790
	.long	0x25190
	.quad	.LFB1896
	.quad	.LFE1896-.LFB1896
	.uleb128 0x1
	.byte	0x9c
	.long	0x251ad
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1af15
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__i\0"
	.byte	0x8
	.word	0x17d
	.byte	0x20
	.long	0x3111
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x11
	.long	0x369e
	.long	0x251cc
	.quad	.LFB1892
	.quad	.LFE1892-.LFB1892
	.uleb128 0x1
	.byte	0x9c
	.long	0x251d9
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1af15
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0x3651
	.long	0x251f8
	.quad	.LFB1891
	.quad	.LFE1891-.LFB1891
	.uleb128 0x1
	.byte	0x9c
	.long	0x25205
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1af24
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0x35fc
	.long	0x25224
	.quad	.LFB1890
	.quad	.LFE1890-.LFB1890
	.uleb128 0x1
	.byte	0x9c
	.long	0x25231
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1af24
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x17
	.long	0x35af
	.long	0x2523f
	.byte	0x2
	.long	0x25256
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1af15
	.uleb128 0x4f
	.ascii "__x\0"
	.byte	0x8
	.word	0x153
	.byte	0x2e
	.long	0x1af1a
	.byte	0
	.uleb128 0x23
	.long	0x25231
	.ascii "_ZNSt19_Bit_const_iteratorC1ERKSt13_Bit_iterator\0"
	.long	0x252a6
	.quad	.LFB1889
	.quad	.LFE1889-.LFB1889
	.uleb128 0x1
	.byte	0x9c
	.long	0x252b7
	.uleb128 0xf
	.long	0x2523f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0xf
	.long	0x25248
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x17
	.long	0x356d
	.long	0x252c5
	.byte	0x2
	.long	0x252e9
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1af15
	.uleb128 0x4f
	.ascii "__x\0"
	.byte	0x8
	.word	0x150
	.byte	0x25
	.long	0x1aec0
	.uleb128 0x4f
	.ascii "__y\0"
	.byte	0x8
	.word	0x150
	.byte	0x37
	.long	0x14cb6
	.byte	0
	.uleb128 0x23
	.long	0x252b7
	.ascii "_ZNSt19_Bit_const_iteratorC1EPmj\0"
	.long	0x25329
	.quad	.LFB1886
	.quad	.LFE1886-.LFB1886
	.uleb128 0x1
	.byte	0x9c
	.long	0x25342
	.uleb128 0xf
	.long	0x252c5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0xf
	.long	0x252ce
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0xf
	.long	0x252db
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0xd
	.long	0x3318
	.uleb128 0xc
	.long	0x14bc7
	.quad	.LFB1878
	.quad	.LFE1878-.LFB1878
	.uleb128 0x1
	.byte	0x9c
	.long	0x25394
	.uleb128 0x9
	.ascii "__x\0"
	.byte	0x8
	.word	0x12f
	.byte	0x1f
	.long	0x25342
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0x8
	.word	0x12f
	.byte	0x34
	.long	0x3111
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x21
	.secrel32	.LASF189
	.byte	0x8
	.word	0x131
	.byte	0x10
	.long	0x330c
	.uleb128 0x3
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0
	.uleb128 0x11
	.long	0x34e9
	.long	0x253b3
	.quad	.LFB1877
	.quad	.LFE1877-.LFB1877
	.uleb128 0x1
	.byte	0x9c
	.long	0x253d0
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1af06
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x9
	.ascii "__i\0"
	.byte	0x8
	.word	0x12b
	.byte	0x20
	.long	0x3111
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x11
	.long	0x3477
	.long	0x253ef
	.quad	.LFB1875
	.quad	.LFE1875-.LFB1875
	.uleb128 0x1
	.byte	0x9c
	.long	0x2540c
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1aefc
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "__i\0"
	.byte	0x8
	.word	0x11d
	.byte	0x20
	.long	0x3111
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x11
	.long	0x340a
	.long	0x2542b
	.quad	.LFB1873
	.quad	.LFE1873-.LFB1873
	.uleb128 0x1
	.byte	0x9c
	.long	0x25438
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1aefc
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0x339e
	.long	0x25457
	.quad	.LFB1871
	.quad	.LFE1871-.LFB1871
	.uleb128 0x1
	.byte	0x9c
	.long	0x25464
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1aefc
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x11
	.long	0x336a
	.long	0x25483
	.quad	.LFB1870
	.quad	.LFE1870-.LFB1870
	.uleb128 0x1
	.byte	0x9c
	.long	0x25490
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1af06
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x17
	.long	0x32d1
	.long	0x2549e
	.byte	0x2
	.long	0x254c0
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1aefc
	.uleb128 0x34
	.ascii "__x\0"
	.byte	0x8
	.byte	0xf3
	.byte	0x1f
	.long	0x1aec0
	.uleb128 0x34
	.ascii "__y\0"
	.byte	0x8
	.byte	0xf3
	.byte	0x31
	.long	0x14cb6
	.byte	0
	.uleb128 0x23
	.long	0x25490
	.ascii "_ZNSt13_Bit_iteratorC1EPmj\0"
	.long	0x254fa
	.quad	.LFB1868
	.quad	.LFE1868-.LFB1868
	.uleb128 0x1
	.byte	0x9c
	.long	0x25513
	.uleb128 0xf
	.long	0x2549e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0xf
	.long	0x254a7
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0xf
	.long	0x254b3
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x17
	.long	0x32a2
	.long	0x25521
	.byte	0x2
	.long	0x2552b
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1aefc
	.byte	0
	.uleb128 0x23
	.long	0x25513
	.ascii "_ZNSt13_Bit_iteratorC1Ev\0"
	.long	0x25563
	.quad	.LFB1865
	.quad	.LFE1865-.LFB1865
	.uleb128 0x1
	.byte	0x9c
	.long	0x2556c
	.uleb128 0xf
	.long	0x25521
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xd
	.long	0x328b
	.uleb128 0x1d
	.long	0x14bfe
	.quad	.LFB1862
	.quad	.LFE1862-.LFB1862
	.uleb128 0x1
	.byte	0x9c
	.long	0x255ab
	.uleb128 0x18
	.ascii "__x\0"
	.byte	0x8
	.byte	0xe0
	.byte	0x29
	.long	0x2556c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__y\0"
	.byte	0x8
	.byte	0xe0
	.byte	0x48
	.long	0x2556c
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x27
	.long	0x324c
	.long	0x255ca
	.quad	.LFB1859
	.quad	.LFE1859-.LFB1859
	.uleb128 0x1
	.byte	0x9c
	.long	0x255f5
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1aef2
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__i\0"
	.byte	0x8
	.byte	0xac
	.byte	0x17
	.long	0x2b66
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x37
	.ascii "__n\0"
	.byte	0x8
	.byte	0xae
	.byte	0x17
	.long	0x3111
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x27
	.long	0x3203
	.long	0x25614
	.quad	.LFB1858
	.quad	.LFE1858-.LFB1858
	.uleb128 0x1
	.byte	0x9c
	.long	0x25621
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1aef2
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x27
	.long	0x31be
	.long	0x25640
	.quad	.LFB1857
	.quad	.LFE1857-.LFB1857
	.uleb128 0x1
	.byte	0x9c
	.long	0x2564d
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1aef2
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x317e
	.long	0x2565b
	.byte	0x2
	.long	0x2567d
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1aef2
	.uleb128 0x34
	.ascii "__x\0"
	.byte	0x8
	.byte	0x94
	.byte	0x24
	.long	0x1aec0
	.uleb128 0x34
	.ascii "__y\0"
	.byte	0x8
	.byte	0x94
	.byte	0x36
	.long	0x14cb6
	.byte	0
	.uleb128 0x38
	.long	0x2564d
	.ascii "_ZNSt18_Bit_iterator_baseC2EPmj\0"
	.long	0x256bc
	.quad	.LFB1855
	.quad	.LFE1855-.LFB1855
	.uleb128 0x1
	.byte	0x9c
	.long	0x256d5
	.uleb128 0xf
	.long	0x2565b
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0xf
	.long	0x25664
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0xf
	.long	0x25670
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x11
	.long	0x2fb3
	.long	0x256f4
	.quad	.LFB1847
	.quad	.LFE1847-.LFB1847
	.uleb128 0x1
	.byte	0x9c
	.long	0x25710
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1aeca
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__x\0"
	.byte	0x8
	.byte	0x64
	.byte	0x25
	.long	0x1aecf
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x27
	.long	0x2f7a
	.long	0x2572f
	.quad	.LFB1846
	.quad	.LFE1846-.LFB1846
	.uleb128 0x1
	.byte	0x9c
	.long	0x2574b
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1aeca
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__x\0"
	.byte	0x8
	.byte	0x5a
	.byte	0x14
	.long	0x14cc6
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x27
	.long	0x2f44
	.long	0x2576a
	.quad	.LFB1845
	.quad	.LFE1845-.LFB1845
	.uleb128 0x1
	.byte	0x9c
	.long	0x25777
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1aed9
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x17
	.long	0x2e9e
	.long	0x25785
	.byte	0x2
	.long	0x257a7
	.uleb128 0x13
	.secrel32	.LASF183
	.long	0x1aeca
	.uleb128 0x34
	.ascii "__x\0"
	.byte	0x8
	.byte	0x4d
	.byte	0x20
	.long	0x1aec0
	.uleb128 0x34
	.ascii "__y\0"
	.byte	0x8
	.byte	0x4d
	.byte	0x2f
	.long	0x30a4
	.byte	0
	.uleb128 0x38
	.long	0x25777
	.ascii "_ZNSt14_Bit_referenceC1EPmm\0"
	.long	0x257e2
	.quad	.LFB1841
	.quad	.LFE1841-.LFB1841
	.uleb128 0x1
	.byte	0x9c
	.long	0x257fb
	.uleb128 0xf
	.long	0x25785
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0xf
	.long	0x2578e
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0xf
	.long	0x2579a
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x7d
	.ascii "__assertm\0"
	.byte	0x7
	.byte	0x3e
	.ascii "_Z9__assertmbPKciS0_S0_\0"
	.quad	.LFB1322
	.quad	.LFE1322-.LFB1322
	.uleb128 0x1
	.byte	0x9c
	.long	0x25888
	.uleb128 0x15
	.secrel32	.LASF212
	.byte	0x7
	.byte	0x3e
	.byte	0x15
	.long	0x14cc6
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "file\0"
	.byte	0x7
	.byte	0x3e
	.byte	0x2c
	.long	0x19524
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x18
	.ascii "line\0"
	.byte	0x7
	.byte	0x3e
	.byte	0x36
	.long	0x191dc
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x15
	.secrel32	.LASF213
	.byte	0x7
	.byte	0x3e
	.byte	0x48
	.long	0x19524
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x18
	.ascii "err_msg\0"
	.byte	0x7
	.byte	0x3e
	.byte	0x63
	.long	0x19524
	.uleb128 0x2
	.byte	0x91
	.sleb128 32
	.byte	0
	.uleb128 0x7d
	.ascii "__assert\0"
	.byte	0x7
	.byte	0x35
	.ascii "_Z8__assertbPKciS0_\0"
	.quad	.LFB1321
	.quad	.LFE1321-.LFB1321
	.uleb128 0x1
	.byte	0x9c
	.long	0x258fd
	.uleb128 0x15
	.secrel32	.LASF212
	.byte	0x7
	.byte	0x35
	.byte	0x14
	.long	0x14cc6
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "file\0"
	.byte	0x7
	.byte	0x35
	.byte	0x2b
	.long	0x19524
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x18
	.ascii "line\0"
	.byte	0x7
	.byte	0x35
	.byte	0x35
	.long	0x191dc
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x15
	.secrel32	.LASF213
	.byte	0x7
	.byte	0x35
	.byte	0x47
	.long	0x19524
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.byte	0
	.uleb128 0xc6
	.long	0x19e4e
	.byte	0x5
	.word	0x8a1
	.byte	0x9
	.long	0x25921
	.quad	.LFB1267
	.quad	.LFE1267-.LFB1267
	.uleb128 0x1
	.byte	0x9c
	.long	0x2592e
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x19e93
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x4a
	.long	0x19e10
	.word	0x89e
	.byte	0xa
	.long	0x25950
	.quad	.LFB1266
	.quad	.LFE1266-.LFB1266
	.uleb128 0x1
	.byte	0x9c
	.long	0x25982
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x19e93
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF174
	.byte	0x5
	.word	0x89e
	.byte	0x22
	.long	0x19b89
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x9
	.ascii "max_dist\0"
	.byte	0x5
	.word	0x89e
	.byte	0x30
	.long	0x1921e
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x4a
	.long	0x19dd3
	.word	0x89b
	.byte	0xa
	.long	0x259a4
	.quad	.LFB1265
	.quad	.LFE1265-.LFB1265
	.uleb128 0x1
	.byte	0x9c
	.long	0x259cd
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x19e93
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "m\0"
	.byte	0x5
	.word	0x89b
	.byte	0x21
	.long	0x19b89
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x9
	.ascii "M\0"
	.byte	0x5
	.word	0x89b
	.byte	0x2c
	.long	0x19b89
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x4a
	.long	0x19d98
	.word	0x898
	.byte	0xa
	.long	0x259ef
	.quad	.LFB1264
	.quad	.LFE1264-.LFB1264
	.uleb128 0x1
	.byte	0x9c
	.long	0x25a18
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x19e93
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "m\0"
	.byte	0x5
	.word	0x898
	.byte	0x1f
	.long	0x1921e
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x9
	.ascii "M\0"
	.byte	0x5
	.word	0x898
	.byte	0x28
	.long	0x1921e
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x4a
	.long	0x19d5d
	.word	0x893
	.byte	0xa
	.long	0x25a3a
	.quad	.LFB1263
	.quad	.LFE1263-.LFB1263
	.uleb128 0x1
	.byte	0x9c
	.long	0x25a65
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x19e93
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "val\0"
	.byte	0x5
	.word	0x893
	.byte	0x22
	.long	0x1921e
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x25
	.ascii "m\0"
	.byte	0x5
	.word	0x894
	.byte	0x11
	.long	0x19227
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.uleb128 0x4a
	.long	0x19d24
	.word	0x890
	.byte	0xa
	.long	0x25a87
	.quad	.LFB1262
	.quad	.LFE1262-.LFB1262
	.uleb128 0x1
	.byte	0x9c
	.long	0x25aa4
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x19e93
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "val\0"
	.byte	0x5
	.word	0x890
	.byte	0x21
	.long	0x1921e
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x4a
	.long	0x19cf1
	.word	0x88c
	.byte	0x7
	.long	0x25ac6
	.quad	.LFB1261
	.quad	.LFE1261-.LFB1261
	.uleb128 0x1
	.byte	0x9c
	.long	0x25ae1
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x19e84
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "v\0"
	.byte	0x5
	.word	0x88c
	.byte	0x1c
	.long	0x19b89
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x4a
	.long	0x19cb6
	.word	0x889
	.byte	0x7
	.long	0x25b03
	.quad	.LFB1260
	.quad	.LFE1260-.LFB1260
	.uleb128 0x1
	.byte	0x9c
	.long	0x25b1e
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x19e84
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "v\0"
	.byte	0x5
	.word	0x889
	.byte	0x20
	.long	0x19b89
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x4a
	.long	0x19c81
	.word	0x886
	.byte	0x7
	.long	0x25b40
	.quad	.LFB1259
	.quad	.LFE1259-.LFB1259
	.uleb128 0x1
	.byte	0x9c
	.long	0x25b5b
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x19e84
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "v\0"
	.byte	0x5
	.word	0x886
	.byte	0x1d
	.long	0x19b89
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x4a
	.long	0x19c50
	.word	0x87a
	.byte	0x7
	.long	0x25b7d
	.quad	.LFB1258
	.quad	.LFE1258-.LFB1258
	.uleb128 0x1
	.byte	0x9c
	.long	0x25ba6
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x19e84
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x25
	.ascii "m\0"
	.byte	0x5
	.word	0x87b
	.byte	0x11
	.long	0x19227
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x25
	.ascii "a\0"
	.byte	0x5
	.word	0x87c
	.byte	0x11
	.long	0x19227
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x4a
	.long	0x19c1b
	.word	0x877
	.byte	0x7
	.long	0x25bc8
	.quad	.LFB1257
	.quad	.LFE1257-.LFB1257
	.uleb128 0x1
	.byte	0x9c
	.long	0x25bd5
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x19e84
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x4a
	.long	0x19bec
	.word	0x874
	.byte	0x7
	.long	0x25bf7
	.quad	.LFB1256
	.quad	.LFE1256-.LFB1256
	.uleb128 0x1
	.byte	0x9c
	.long	0x25c04
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x19e84
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x96
	.long	0x19bcf
	.word	0x870
	.quad	.LFB1255
	.quad	.LFE1255-.LFB1255
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x96
	.long	0x19bb0
	.word	0x86d
	.quad	.LFB1254
	.quad	.LFE1254-.LFB1254
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x59
	.secrel32	.LASF36
	.byte	0x5
	.word	0x86a
	.byte	0x1
	.ascii "_Zeq7Vector2S_\0"
	.long	0x14cc6
	.quad	.LFB1253
	.quad	.LFE1253-.LFB1253
	.uleb128 0x1
	.byte	0x9c
	.long	0x25c87
	.uleb128 0x9
	.ascii "a\0"
	.byte	0x5
	.word	0x86a
	.byte	0x1
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "b\0"
	.byte	0x5
	.word	0x86a
	.byte	0x1
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x59
	.secrel32	.LASF46
	.byte	0x5
	.word	0x868
	.byte	0x1
	.ascii "_Zml7Vector2f\0"
	.long	0x19e98
	.quad	.LFB1252
	.quad	.LFE1252-.LFB1252
	.uleb128 0x1
	.byte	0x9c
	.long	0x25cd5
	.uleb128 0x9
	.ascii "a\0"
	.byte	0x5
	.word	0x868
	.byte	0x1
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "b\0"
	.byte	0x5
	.word	0x868
	.byte	0x1
	.long	0x1921e
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x59
	.secrel32	.LASF67
	.byte	0x5
	.word	0x867
	.byte	0x1
	.ascii "_Zmi7Vector2f\0"
	.long	0x19e98
	.quad	.LFB1251
	.quad	.LFE1251-.LFB1251
	.uleb128 0x1
	.byte	0x9c
	.long	0x25d23
	.uleb128 0x9
	.ascii "a\0"
	.byte	0x5
	.word	0x867
	.byte	0x1
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "b\0"
	.byte	0x5
	.word	0x867
	.byte	0x1
	.long	0x1921e
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x59
	.secrel32	.LASF66
	.byte	0x5
	.word	0x866
	.byte	0x1
	.ascii "_Zpl7Vector2f\0"
	.long	0x19e98
	.quad	.LFB1250
	.quad	.LFE1250-.LFB1250
	.uleb128 0x1
	.byte	0x9c
	.long	0x25d71
	.uleb128 0x9
	.ascii "a\0"
	.byte	0x5
	.word	0x866
	.byte	0x1
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "b\0"
	.byte	0x5
	.word	0x866
	.byte	0x1
	.long	0x1921e
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x5d
	.ascii "operator/\0"
	.byte	0x5
	.word	0x864
	.byte	0x1
	.ascii "_Zdv7Vector2S_\0"
	.long	0x19e98
	.quad	.LFB1249
	.quad	.LFE1249-.LFB1249
	.uleb128 0x1
	.byte	0x9c
	.long	0x25dc6
	.uleb128 0x9
	.ascii "a\0"
	.byte	0x5
	.word	0x864
	.byte	0x1
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "b\0"
	.byte	0x5
	.word	0x864
	.byte	0x1
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x59
	.secrel32	.LASF46
	.byte	0x5
	.word	0x863
	.byte	0x1
	.ascii "_Zml7Vector2S_\0"
	.long	0x19e98
	.quad	.LFB1248
	.quad	.LFE1248-.LFB1248
	.uleb128 0x1
	.byte	0x9c
	.long	0x25e15
	.uleb128 0x9
	.ascii "a\0"
	.byte	0x5
	.word	0x863
	.byte	0x1
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "b\0"
	.byte	0x5
	.word	0x863
	.byte	0x1
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x59
	.secrel32	.LASF67
	.byte	0x5
	.word	0x862
	.byte	0x1
	.ascii "_Zmi7Vector2S_\0"
	.long	0x19e98
	.quad	.LFB1247
	.quad	.LFE1247-.LFB1247
	.uleb128 0x1
	.byte	0x9c
	.long	0x25e64
	.uleb128 0x9
	.ascii "a\0"
	.byte	0x5
	.word	0x862
	.byte	0x1
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "b\0"
	.byte	0x5
	.word	0x862
	.byte	0x1
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x59
	.secrel32	.LASF66
	.byte	0x5
	.word	0x861
	.byte	0x1
	.ascii "_Zpl7Vector2S_\0"
	.long	0x19e98
	.quad	.LFB1246
	.quad	.LFE1246-.LFB1246
	.uleb128 0x1
	.byte	0x9c
	.long	0x25eb3
	.uleb128 0x9
	.ascii "a\0"
	.byte	0x5
	.word	0x861
	.byte	0x1
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "b\0"
	.byte	0x5
	.word	0x861
	.byte	0x1
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x7e
	.secrel32	.LASF67
	.byte	0x5
	.word	0x85d
	.byte	0x9
	.ascii "_Zng7Vector2\0"
	.long	0x19e98
	.quad	.LFB1245
	.quad	.LFE1245-.LFB1245
	.uleb128 0x1
	.byte	0x9c
	.long	0x25ef4
	.uleb128 0x9
	.ascii "vec\0"
	.byte	0x5
	.word	0x85d
	.byte	0x1c
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x52
	.ascii "Vector2Equals\0"
	.word	0x1fd
	.byte	0xb
	.ascii "_Z13Vector2Equals7Vector2S_\0"
	.long	0x191dc
	.quad	.LFB1165
	.quad	.LFE1165-.LFB1165
	.uleb128 0x1
	.byte	0x9c
	.long	0x25f69
	.uleb128 0x9
	.ascii "p\0"
	.byte	0x5
	.word	0x1fd
	.byte	0x21
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "q\0"
	.byte	0x5
	.word	0x1fd
	.byte	0x2c
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x21
	.secrel32	.LASF214
	.byte	0x5
	.word	0x1ff
	.byte	0x9
	.long	0x191dc
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x5d
	.ascii "Vector2ClampValue\0"
	.byte	0x5
	.word	0x1e2
	.byte	0xf
	.ascii "_Z17Vector2ClampValue7Vector2ff\0"
	.long	0x19e98
	.quad	.LFB1164
	.quad	.LFE1164-.LFB1164
	.uleb128 0x1
	.byte	0x9c
	.long	0x26059
	.uleb128 0x9
	.ascii "v\0"
	.byte	0x5
	.word	0x1e2
	.byte	0x29
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "min\0"
	.byte	0x5
	.word	0x1e2
	.byte	0x32
	.long	0x1921e
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x9
	.ascii "max\0"
	.byte	0x5
	.word	0x1e2
	.byte	0x3d
	.long	0x1921e
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x21
	.secrel32	.LASF214
	.byte	0x5
	.word	0x1e4
	.byte	0xd
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x25
	.ascii "length\0"
	.byte	0x5
	.word	0x1e6
	.byte	0xb
	.long	0x1921e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x95
	.quad	.LBB23
	.quad	.LBE23-.LBB23
	.long	0x26034
	.uleb128 0x25
	.ascii "scale\0"
	.byte	0x5
	.word	0x1ed
	.byte	0x13
	.long	0x1921e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.byte	0
	.uleb128 0x2d
	.quad	.LBB26
	.quad	.LBE26-.LBB26
	.uleb128 0x25
	.ascii "scale\0"
	.byte	0x5
	.word	0x1f3
	.byte	0x13
	.long	0x1921e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x52
	.ascii "Vector2Clamp\0"
	.word	0x1d7
	.byte	0xf
	.ascii "_Z12Vector2Clamp7Vector2S_S_\0"
	.long	0x19e98
	.quad	.LFB1163
	.quad	.LFE1163-.LFB1163
	.uleb128 0x1
	.byte	0x9c
	.long	0x260e0
	.uleb128 0x9
	.ascii "v\0"
	.byte	0x5
	.word	0x1d7
	.byte	0x24
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "min\0"
	.byte	0x5
	.word	0x1d7
	.byte	0x2f
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x9
	.ascii "max\0"
	.byte	0x5
	.word	0x1d7
	.byte	0x3c
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x21
	.secrel32	.LASF214
	.byte	0x5
	.word	0x1d9
	.byte	0xd
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x5d
	.ascii "Vector2MoveTowards\0"
	.byte	0x5
	.word	0x1bb
	.byte	0xf
	.ascii "_Z18Vector2MoveTowards7Vector2S_f\0"
	.long	0x19e98
	.quad	.LFB1161
	.quad	.LFE1161-.LFB1161
	.uleb128 0x1
	.byte	0x9c
	.long	0x261bc
	.uleb128 0x9
	.ascii "v\0"
	.byte	0x5
	.word	0x1bb
	.byte	0x2a
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.secrel32	.LASF174
	.byte	0x5
	.word	0x1bb
	.byte	0x35
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x9
	.ascii "maxDistance\0"
	.byte	0x5
	.word	0x1bb
	.byte	0x43
	.long	0x1921e
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x21
	.secrel32	.LASF214
	.byte	0x5
	.word	0x1bd
	.byte	0xd
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x25
	.ascii "dx\0"
	.byte	0x5
	.word	0x1bf
	.byte	0xb
	.long	0x1921e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x25
	.ascii "dy\0"
	.byte	0x5
	.word	0x1c0
	.byte	0xb
	.long	0x1921e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x25
	.ascii "value\0"
	.byte	0x5
	.word	0x1c1
	.byte	0xb
	.long	0x1921e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x25
	.ascii "dist\0"
	.byte	0x5
	.word	0x1c5
	.byte	0xb
	.long	0x1921e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x5d
	.ascii "Vector2Normalize\0"
	.byte	0x5
	.word	0x176
	.byte	0xf
	.ascii "_Z16Vector2Normalize7Vector2\0"
	.long	0x19e98
	.quad	.LFB1156
	.quad	.LFE1156-.LFB1156
	.uleb128 0x1
	.byte	0x9c
	.long	0x26261
	.uleb128 0x9
	.ascii "v\0"
	.byte	0x5
	.word	0x176
	.byte	0x28
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x21
	.secrel32	.LASF214
	.byte	0x5
	.word	0x178
	.byte	0xd
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x25
	.ascii "length\0"
	.byte	0x5
	.word	0x179
	.byte	0xb
	.long	0x1921e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x2d
	.quad	.LBB19
	.quad	.LBE19-.LBB19
	.uleb128 0x25
	.ascii "ilength\0"
	.byte	0x5
	.word	0x17d
	.byte	0xf
	.long	0x1921e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x52
	.ascii "Vector2Divide\0"
	.word	0x16e
	.byte	0xf
	.ascii "_Z13Vector2Divide7Vector2S_\0"
	.long	0x19e98
	.quad	.LFB1155
	.quad	.LFE1155-.LFB1155
	.uleb128 0x1
	.byte	0x9c
	.long	0x262d8
	.uleb128 0x9
	.ascii "v1\0"
	.byte	0x5
	.word	0x16e
	.byte	0x25
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "v2\0"
	.byte	0x5
	.word	0x16e
	.byte	0x31
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x21
	.secrel32	.LASF214
	.byte	0x5
	.word	0x170
	.byte	0xd
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x52
	.ascii "Vector2Multiply\0"
	.word	0x15e
	.byte	0xf
	.ascii "_Z15Vector2Multiply7Vector2S_\0"
	.long	0x19e98
	.quad	.LFB1153
	.quad	.LFE1153-.LFB1153
	.uleb128 0x1
	.byte	0x9c
	.long	0x26353
	.uleb128 0x9
	.ascii "v1\0"
	.byte	0x5
	.word	0x15e
	.byte	0x27
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "v2\0"
	.byte	0x5
	.word	0x15e
	.byte	0x33
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x21
	.secrel32	.LASF214
	.byte	0x5
	.word	0x160
	.byte	0xd
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x52
	.ascii "Vector2Scale\0"
	.word	0x156
	.byte	0xf
	.ascii "_Z12Vector2Scale7Vector2f\0"
	.long	0x19e98
	.quad	.LFB1152
	.quad	.LFE1152-.LFB1152
	.uleb128 0x1
	.byte	0x9c
	.long	0x263c9
	.uleb128 0x9
	.ascii "v\0"
	.byte	0x5
	.word	0x156
	.byte	0x24
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "scale\0"
	.byte	0x5
	.word	0x156
	.byte	0x2d
	.long	0x1921e
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x21
	.secrel32	.LASF214
	.byte	0x5
	.word	0x158
	.byte	0xd
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x52
	.ascii "Vector2DistanceSqr\0"
	.word	0x12f
	.byte	0xd
	.ascii "_Z18Vector2DistanceSqr7Vector2S_\0"
	.long	0x1921e
	.quad	.LFB1149
	.quad	.LFE1149-.LFB1149
	.uleb128 0x1
	.byte	0x9c
	.long	0x2644a
	.uleb128 0x9
	.ascii "v1\0"
	.byte	0x5
	.word	0x12f
	.byte	0x28
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "v2\0"
	.byte	0x5
	.word	0x12f
	.byte	0x34
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x21
	.secrel32	.LASF214
	.byte	0x5
	.word	0x131
	.byte	0xb
	.long	0x1921e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x5d
	.ascii "Vector2Distance\0"
	.byte	0x5
	.word	0x127
	.byte	0xd
	.ascii "_Z15Vector2Distance7Vector2S_\0"
	.long	0x1921e
	.quad	.LFB1148
	.quad	.LFE1148-.LFB1148
	.uleb128 0x1
	.byte	0x9c
	.long	0x264c6
	.uleb128 0x9
	.ascii "v1\0"
	.byte	0x5
	.word	0x127
	.byte	0x25
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "v2\0"
	.byte	0x5
	.word	0x127
	.byte	0x31
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x21
	.secrel32	.LASF214
	.byte	0x5
	.word	0x129
	.byte	0xb
	.long	0x1921e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x52
	.ascii "Vector2DotProduct\0"
	.word	0x11f
	.byte	0xd
	.ascii "_Z17Vector2DotProduct7Vector2S_\0"
	.long	0x1921e
	.quad	.LFB1147
	.quad	.LFE1147-.LFB1147
	.uleb128 0x1
	.byte	0x9c
	.long	0x26545
	.uleb128 0x9
	.ascii "v1\0"
	.byte	0x5
	.word	0x11f
	.byte	0x27
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "v2\0"
	.byte	0x5
	.word	0x11f
	.byte	0x33
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x21
	.secrel32	.LASF214
	.byte	0x5
	.word	0x121
	.byte	0xb
	.long	0x1921e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x52
	.ascii "Vector2LengthSqr\0"
	.word	0x117
	.byte	0xd
	.ascii "_Z16Vector2LengthSqr7Vector2\0"
	.long	0x1921e
	.quad	.LFB1146
	.quad	.LFE1146-.LFB1146
	.uleb128 0x1
	.byte	0x9c
	.long	0x265b0
	.uleb128 0x9
	.ascii "v\0"
	.byte	0x5
	.word	0x117
	.byte	0x26
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x21
	.secrel32	.LASF214
	.byte	0x5
	.word	0x119
	.byte	0xb
	.long	0x1921e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x5d
	.ascii "Vector2Length\0"
	.byte	0x5
	.word	0x10f
	.byte	0xd
	.ascii "_Z13Vector2Length7Vector2\0"
	.long	0x1921e
	.quad	.LFB1145
	.quad	.LFE1145-.LFB1145
	.uleb128 0x1
	.byte	0x9c
	.long	0x26616
	.uleb128 0x9
	.ascii "v\0"
	.byte	0x5
	.word	0x10f
	.byte	0x23
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x21
	.secrel32	.LASF214
	.byte	0x5
	.word	0x111
	.byte	0xb
	.long	0x1921e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x52
	.ascii "Vector2SubtractValue\0"
	.word	0x107
	.byte	0xf
	.ascii "_Z20Vector2SubtractValue7Vector2f\0"
	.long	0x19e98
	.quad	.LFB1144
	.quad	.LFE1144-.LFB1144
	.uleb128 0x1
	.byte	0x9c
	.long	0x2669a
	.uleb128 0x9
	.ascii "v\0"
	.byte	0x5
	.word	0x107
	.byte	0x2c
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "sub\0"
	.byte	0x5
	.word	0x107
	.byte	0x35
	.long	0x1921e
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x21
	.secrel32	.LASF214
	.byte	0x5
	.word	0x109
	.byte	0xd
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x62
	.ascii "Vector2Subtract\0"
	.byte	0x5
	.byte	0xff
	.byte	0xf
	.ascii "_Z15Vector2Subtract7Vector2S_\0"
	.long	0x19e98
	.quad	.LFB1143
	.quad	.LFE1143-.LFB1143
	.uleb128 0x1
	.byte	0x9c
	.long	0x26713
	.uleb128 0x18
	.ascii "v1\0"
	.byte	0x5
	.byte	0xff
	.byte	0x27
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "v2\0"
	.byte	0x5
	.byte	0xff
	.byte	0x33
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x21
	.secrel32	.LASF214
	.byte	0x5
	.word	0x101
	.byte	0xd
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x62
	.ascii "Vector2AddValue\0"
	.byte	0x5
	.byte	0xf7
	.byte	0xf
	.ascii "_Z15Vector2AddValue7Vector2f\0"
	.long	0x19e98
	.quad	.LFB1142
	.quad	.LFE1142-.LFB1142
	.uleb128 0x1
	.byte	0x9c
	.long	0x2678a
	.uleb128 0x18
	.ascii "v\0"
	.byte	0x5
	.byte	0xf7
	.byte	0x27
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "add\0"
	.byte	0x5
	.byte	0xf7
	.byte	0x30
	.long	0x1921e
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3d
	.secrel32	.LASF214
	.byte	0x5
	.byte	0xf9
	.byte	0xd
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x62
	.ascii "Vector2Add\0"
	.byte	0x5
	.byte	0xef
	.byte	0xf
	.ascii "_Z10Vector2Add7Vector2S_\0"
	.long	0x19e98
	.quad	.LFB1141
	.quad	.LFE1141-.LFB1141
	.uleb128 0x1
	.byte	0x9c
	.long	0x267f8
	.uleb128 0x18
	.ascii "v1\0"
	.byte	0x5
	.byte	0xef
	.byte	0x22
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "v2\0"
	.byte	0x5
	.byte	0xef
	.byte	0x2e
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3d
	.secrel32	.LASF214
	.byte	0x5
	.byte	0xf1
	.byte	0xd
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x62
	.ascii "Vector2One\0"
	.byte	0x5
	.byte	0xe7
	.byte	0xf
	.ascii "_Z10Vector2Onev\0"
	.long	0x19e98
	.quad	.LFB1140
	.quad	.LFE1140-.LFB1140
	.uleb128 0x1
	.byte	0x9c
	.long	0x26841
	.uleb128 0x3d
	.secrel32	.LASF214
	.byte	0x5
	.byte	0xe9
	.byte	0xd
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x62
	.ascii "Vector2Zero\0"
	.byte	0x5
	.byte	0xdf
	.byte	0xf
	.ascii "_Z11Vector2Zerov\0"
	.long	0x19e98
	.quad	.LFB1139
	.quad	.LFE1139-.LFB1139
	.uleb128 0x1
	.byte	0x9c
	.long	0x2688c
	.uleb128 0x3d
	.secrel32	.LASF214
	.byte	0x5
	.byte	0xe1
	.byte	0xd
	.long	0x19e98
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x97
	.long	0x1a132
	.word	0x69a
	.quad	.LFB1128
	.quad	.LFE1128-.LFB1128
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x97
	.long	0x1a10f
	.word	0x696
	.quad	.LFB1127
	.quad	.LFE1127-.LFB1127
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x98
	.long	0x1a0d5
	.word	0x692
	.byte	0x8
	.long	0x268e3
	.quad	.LFB1126
	.quad	.LFE1126-.LFB1126
	.uleb128 0x1
	.byte	0x9c
	.long	0x26902
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1a167
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "alpha\0"
	.byte	0x4
	.word	0x692
	.byte	0x1e
	.long	0x1921e
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x75
	.long	0x1a09f
	.word	0x690
	.quad	.LFB1125
	.quad	.LFE1125-.LFB1125
	.uleb128 0x1
	.byte	0x9c
	.long	0x26930
	.uleb128 0x9
	.ascii "vec\0"
	.byte	0x4
	.word	0x690
	.byte	0x1e
	.long	0x19ee0
	.uleb128 0x2
	.byte	0x73
	.sleb128 0
	.byte	0
	.uleb128 0x98
	.long	0x1a06f
	.word	0x68f
	.byte	0x9
	.long	0x26953
	.quad	.LFB1124
	.quad	.LFE1124-.LFB1124
	.uleb128 0x1
	.byte	0x9c
	.long	0x26960
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1a171
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x75
	.long	0x1a03f
	.word	0x689
	.quad	.LFB1123
	.quad	.LFE1123-.LFB1123
	.uleb128 0x1
	.byte	0x9c
	.long	0x2699e
	.uleb128 0x9
	.ascii "vec\0"
	.byte	0x4
	.word	0x689
	.byte	0x1b
	.long	0x19ee0
	.uleb128 0x2
	.byte	0x73
	.sleb128 0
	.uleb128 0x25
	.ascii "ret\0"
	.byte	0x4
	.word	0x68a
	.byte	0xb
	.long	0x19f3e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.uleb128 0x75
	.long	0x19fe6
	.word	0x685
	.quad	.LFB1122
	.quad	.LFE1122-.LFB1122
	.uleb128 0x1
	.byte	0x9c
	.long	0x269ca
	.uleb128 0x9
	.ascii "t\0"
	.byte	0x4
	.word	0x685
	.byte	0x19
	.long	0x1921e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x75
	.long	0x1a00f
	.word	0x681
	.quad	.LFB1121
	.quad	.LFE1121-.LFB1121
	.uleb128 0x1
	.byte	0x9c
	.long	0x269f8
	.uleb128 0x9
	.ascii "vec\0"
	.byte	0x4
	.word	0x681
	.byte	0x1b
	.long	0x19f2e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.uleb128 0x59
	.secrel32	.LASF46
	.byte	0x4
	.word	0x674
	.byte	0x7
	.ascii "_Zml\0"
	.long	0x1a176
	.quad	.LFB1120
	.quad	.LFE1120-.LFB1120
	.uleb128 0x1
	.byte	0x9c
	.long	0x26a3d
	.uleb128 0x9
	.ascii "a\0"
	.byte	0x4
	.word	0x674
	.byte	0x18
	.long	0x1a176
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "b\0"
	.byte	0x4
	.word	0x674
	.byte	0x21
	.long	0x1a176
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x7e
	.secrel32	.LASF67
	.byte	0x4
	.word	0x66e
	.byte	0x7
	.ascii "_Zmi\0"
	.long	0x1a176
	.quad	.LFB1119
	.quad	.LFE1119-.LFB1119
	.uleb128 0x1
	.byte	0x9c
	.long	0x26a82
	.uleb128 0x9
	.ascii "a\0"
	.byte	0x4
	.word	0x66e
	.byte	0x18
	.long	0x1a176
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "b\0"
	.byte	0x4
	.word	0x66e
	.byte	0x21
	.long	0x1a176
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x7e
	.secrel32	.LASF66
	.byte	0x4
	.word	0x66b
	.byte	0x7
	.ascii "_Zpl\0"
	.long	0x1a176
	.quad	.LFB1118
	.quad	.LFE1118-.LFB1118
	.uleb128 0x1
	.byte	0x9c
	.long	0x26ac7
	.uleb128 0x9
	.ascii "a\0"
	.byte	0x4
	.word	0x66b
	.byte	0x18
	.long	0x1a176
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "b\0"
	.byte	0x4
	.word	0x66b
	.byte	0x21
	.long	0x1a176
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x27
	.long	0x19fb1
	.long	0x26ae6
	.quad	.LFB1117
	.quad	.LFE1117-.LFB1117
	.uleb128 0x1
	.byte	0x9c
	.long	0x26b03
	.uleb128 0xb
	.secrel32	.LASF183
	.long	0x1a167
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.ascii "vec\0"
	.byte	0x4
	.word	0x10b
	.byte	0x1f
	.long	0x19ee0
	.uleb128 0x2
	.byte	0x73
	.sleb128 0
	.byte	0
	.uleb128 0x1d
	.long	0x14c3b
	.quad	.LFB704
	.quad	.LFE704-.LFB704
	.uleb128 0x1
	.byte	0x9c
	.long	0x26b2f
	.uleb128 0x9
	.ascii "__n\0"
	.byte	0x3
	.word	0x3f6
	.byte	0x28
	.long	0x191a1
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc7
	.secrel32	.LASF182
	.byte	0x2
	.byte	0xb4
	.byte	0xd
	.ascii "_ZdlPvS_\0"
	.quad	.LFB434
	.quad	.LFE434-.LFB434
	.uleb128 0x1
	.byte	0x9c
	.long	0x26b68
	.uleb128 0x1f
	.long	0x1a185
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1f
	.long	0x1a185
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xc8
	.secrel32	.LASF181
	.byte	0x2
	.byte	0xae
	.byte	0x21
	.ascii "_ZnwyPv\0"
	.long	0x1a185
	.quad	.LFB432
	.quad	.LFE432-.LFB432
	.uleb128 0x1
	.byte	0x9c
	.long	0x26bab
	.uleb128 0x1f
	.long	0x2f0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x18
	.ascii "__p\0"
	.byte	0x2
	.byte	0xae
	.byte	0x41
	.long	0x1a185
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x61
	.long	0x14c79
	.quad	.LFB270
	.quad	.LFE270-.LFB270
	.uleb128 0x1
	.byte	0x9c
	.byte	0
	.section	.debug_abbrev,"dr"
.Ldebug_abbrev0:
	.uleb128 0x1
	.uleb128 0x5
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x2
	.uleb128 0x5
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x34
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x18
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x4
	.uleb128 0x2f
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x5
	.uleb128 0x2f
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x7
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x8
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x9
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0xa
	.uleb128 0x26
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xb
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0xc
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xd
	.uleb128 0x10
	.byte	0
	.uleb128 0xb
	.uleb128 0x21
	.sleb128 8
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xe
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0x21
	.sleb128 8
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xf
	.uleb128 0x5
	.byte	0
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x10
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x11
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x12
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x13
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x34
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x14
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x15
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x16
	.uleb128 0x30
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1c
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x17
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x20
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x18
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x19
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x1a
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1b
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.byte	0
	.byte	0
	.uleb128 0x1c
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1d
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7a
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1e
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1f
	.uleb128 0x5
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x20
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x21
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x22
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x23
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x24
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x25
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x26
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x27
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7a
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x28
	.uleb128 0x8
	.byte	0
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x18
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x29
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x2a
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x2b
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x2c
	.uleb128 0x42
	.byte	0
	.uleb128 0xb
	.uleb128 0x21
	.sleb128 8
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x2d
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.byte	0
	.byte	0
	.uleb128 0x2e
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 13
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 27
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x2f
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x30
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x31
	.uleb128 0x4107
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x32
	.uleb128 0x2f
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x33
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0x34
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x35
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x36
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.byte	0
	.byte	0
	.uleb128 0x37
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x38
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7a
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x39
	.uleb128 0x1c
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0x21
	.sleb128 0
	.byte	0
	.byte	0
	.uleb128 0x3a
	.uleb128 0x2
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x3b
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 21
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x3c
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x3d
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x3e
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x3f
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x40
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x41
	.uleb128 0x18
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x42
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x43
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 7
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x44
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x45
	.uleb128 0x28
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x1c
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x46
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x47
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 53
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 5
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x48
	.uleb128 0x1c
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0x21
	.sleb128 0
	.uleb128 0x32
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x49
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x20
	.uleb128 0x21
	.sleb128 2
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x4a
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 5
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x4b
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x4c
	.uleb128 0x2f
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1e
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x4d
	.uleb128 0x2
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 11
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x4e
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x4f
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x50
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x51
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8b
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x52
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 5
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7a
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x53
	.uleb128 0x2
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x54
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 7
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8b
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x55
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x56
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x57
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 10
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x58
	.uleb128 0x1d
	.byte	0x1
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x58
	.uleb128 0x21
	.sleb128 16
	.uleb128 0x59
	.uleb128 0x5
	.uleb128 0x57
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x59
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x5a
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8b
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x5b
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x5c
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0x21
	.sleb128 0
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 2
	.byte	0
	.byte	0
	.uleb128 0x5d
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x5e
	.uleb128 0x4108
	.byte	0x1
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x5f
	.uleb128 0x39
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x60
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 11
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 7
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 2
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x61
	.uleb128 0x2e
	.byte	0
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7a
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x62
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7a
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x63
	.uleb128 0x39
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x64
	.uleb128 0x39
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x65
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 7
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x66
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 12
	.uleb128 0x3b
	.uleb128 0x21
	.sleb128 202
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 7
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x67
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 16
	.uleb128 0x3b
	.uleb128 0x21
	.sleb128 491
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 7
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x68
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x69
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x55
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0x6a
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6b
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6c
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6d
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 52
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6e
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 53
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1c
	.uleb128 0xa
	.uleb128 0x6c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x6f
	.uleb128 0x34
	.byte	0
	.uleb128 0x47
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x70
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x71
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 4
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 12
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x72
	.uleb128 0xb
	.byte	0x1
	.byte	0
	.byte	0
	.uleb128 0x73
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 22
	.uleb128 0x3b
	.uleb128 0x21
	.sleb128 123
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 23
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x74
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x75
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 7
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x76
	.uleb128 0x30
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1c
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x77
	.uleb128 0x39
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x89
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x78
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 11
	.uleb128 0x3b
	.uleb128 0x21
	.sleb128 117
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 2
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x79
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x7a
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 11
	.uleb128 0x3b
	.uleb128 0x21
	.sleb128 444
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 7
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x7b
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x7c
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x7d
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 6
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x7e
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7a
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x7f
	.uleb128 0x39
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 27
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 11
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x80
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 21
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x81
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 8
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 5
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x82
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 8
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 5
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x83
	.uleb128 0x2f
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.byte	0
	.byte	0
	.uleb128 0x84
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 15
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 17
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0x21
	.sleb128 0
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 2
	.byte	0
	.byte	0
	.uleb128 0x85
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 15
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 7
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x32
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x86
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x87
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x87
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 8
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x88
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 16
	.uleb128 0x3b
	.uleb128 0x21
	.sleb128 507
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 2
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x89
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 43
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 3
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x87
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x8a
	.uleb128 0x4107
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.byte	0
	.byte	0
	.uleb128 0x8b
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 5
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x8c
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 4
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 20
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x8d
	.uleb128 0x15
	.byte	0x1
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x8e
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x8f
	.uleb128 0x4
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3e
	.uleb128 0x21
	.sleb128 7
	.uleb128 0xb
	.uleb128 0x21
	.sleb128 4
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 10
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 6
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x90
	.uleb128 0x1
	.byte	0x1
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x91
	.uleb128 0x21
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0x21
	.sleb128 1
	.byte	0
	.byte	0
	.uleb128 0x92
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x93
	.uleb128 0x4108
	.byte	0x1
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 14
	.uleb128 0x3b
	.uleb128 0x21
	.sleb128 427
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 53
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x94
	.uleb128 0x4108
	.byte	0x1
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 16
	.uleb128 0x3b
	.uleb128 0x21
	.sleb128 508
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 12
	.byte	0
	.byte	0
	.uleb128 0x95
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x96
	.uleb128 0x2e
	.byte	0
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 5
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 9
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x97
	.uleb128 0x2e
	.byte	0
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x21
	.sleb128 7
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x98
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x99
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x25
	.uleb128 0x8
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x1f
	.uleb128 0x1b
	.uleb128 0x1f
	.uleb128 0x55
	.uleb128 0x17
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x10
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0x9a
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x9b
	.uleb128 0x39
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x89
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x9c
	.uleb128 0x39
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x9d
	.uleb128 0x39
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x9e
	.uleb128 0x13
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x9f
	.uleb128 0x4
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x6d
	.uleb128 0x19
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xa0
	.uleb128 0x4
	.byte	0x1
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xa1
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8b
	.uleb128 0xb
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xa2
	.uleb128 0x2
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xa3
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xa4
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xa5
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xa6
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xa7
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xa8
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x8b
	.uleb128 0xb
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xa9
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xaa
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xab
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xac
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xad
	.uleb128 0x15
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xae
	.uleb128 0x13
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xaf
	.uleb128 0x3a
	.byte	0
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x18
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xb0
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xb1
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xb2
	.uleb128 0x4
	.byte	0x1
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xb3
	.uleb128 0x3b
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0xb4
	.uleb128 0x26
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xb5
	.uleb128 0x48
	.byte	0
	.uleb128 0x7d
	.uleb128 0x1
	.uleb128 0x7f
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xb6
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xb7
	.uleb128 0x39
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xb8
	.uleb128 0x39
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x89
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xb9
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1c
	.uleb128 0xa
	.uleb128 0x6c
	.uleb128 0x19
	.uleb128 0x20
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xba
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xbb
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x87
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xbc
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xbd
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x87
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xbe
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xbf
	.uleb128 0x4108
	.byte	0
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xc0
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x6c
	.uleb128 0x19
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0xc1
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xc2
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x20
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xc3
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xc4
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xc5
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xc6
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7a
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xc7
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7a
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xc8
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7a
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_aranges,"dr"
	.long	0x1bcc
	.word	0x2
	.secrel32	.Ldebug_info0
	.byte	0x8
	.byte	0
	.word	0
	.word	0
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.quad	.LFB270
	.quad	.LFE270-.LFB270
	.quad	.LFB432
	.quad	.LFE432-.LFB432
	.quad	.LFB434
	.quad	.LFE434-.LFB434
	.quad	.LFB704
	.quad	.LFE704-.LFB704
	.quad	.LFB1117
	.quad	.LFE1117-.LFB1117
	.quad	.LFB1139
	.quad	.LFE1139-.LFB1139
	.quad	.LFB1140
	.quad	.LFE1140-.LFB1140
	.quad	.LFB1141
	.quad	.LFE1141-.LFB1141
	.quad	.LFB1142
	.quad	.LFE1142-.LFB1142
	.quad	.LFB1143
	.quad	.LFE1143-.LFB1143
	.quad	.LFB1144
	.quad	.LFE1144-.LFB1144
	.quad	.LFB1145
	.quad	.LFE1145-.LFB1145
	.quad	.LFB1146
	.quad	.LFE1146-.LFB1146
	.quad	.LFB1147
	.quad	.LFE1147-.LFB1147
	.quad	.LFB1148
	.quad	.LFE1148-.LFB1148
	.quad	.LFB1149
	.quad	.LFE1149-.LFB1149
	.quad	.LFB1152
	.quad	.LFE1152-.LFB1152
	.quad	.LFB1153
	.quad	.LFE1153-.LFB1153
	.quad	.LFB1155
	.quad	.LFE1155-.LFB1155
	.quad	.LFB1156
	.quad	.LFE1156-.LFB1156
	.quad	.LFB1161
	.quad	.LFE1161-.LFB1161
	.quad	.LFB1163
	.quad	.LFE1163-.LFB1163
	.quad	.LFB1164
	.quad	.LFE1164-.LFB1164
	.quad	.LFB1165
	.quad	.LFE1165-.LFB1165
	.quad	.LFB1277
	.quad	.LFE1277-.LFB1277
	.quad	.LFB1841
	.quad	.LFE1841-.LFB1841
	.quad	.LFB1845
	.quad	.LFE1845-.LFB1845
	.quad	.LFB1846
	.quad	.LFE1846-.LFB1846
	.quad	.LFB1847
	.quad	.LFE1847-.LFB1847
	.quad	.LFB1855
	.quad	.LFE1855-.LFB1855
	.quad	.LFB1857
	.quad	.LFE1857-.LFB1857
	.quad	.LFB1858
	.quad	.LFE1858-.LFB1858
	.quad	.LFB1859
	.quad	.LFE1859-.LFB1859
	.quad	.LFB1862
	.quad	.LFE1862-.LFB1862
	.quad	.LFB1865
	.quad	.LFE1865-.LFB1865
	.quad	.LFB1868
	.quad	.LFE1868-.LFB1868
	.quad	.LFB1870
	.quad	.LFE1870-.LFB1870
	.quad	.LFB1871
	.quad	.LFE1871-.LFB1871
	.quad	.LFB1873
	.quad	.LFE1873-.LFB1873
	.quad	.LFB1875
	.quad	.LFE1875-.LFB1875
	.quad	.LFB1877
	.quad	.LFE1877-.LFB1877
	.quad	.LFB1878
	.quad	.LFE1878-.LFB1878
	.quad	.LFB1886
	.quad	.LFE1886-.LFB1886
	.quad	.LFB1889
	.quad	.LFE1889-.LFB1889
	.quad	.LFB1890
	.quad	.LFE1890-.LFB1890
	.quad	.LFB1891
	.quad	.LFE1891-.LFB1891
	.quad	.LFB1892
	.quad	.LFE1892-.LFB1892
	.quad	.LFB1896
	.quad	.LFE1896-.LFB1896
	.quad	.LFB1898
	.quad	.LFE1898-.LFB1898
	.quad	.LFB1899
	.quad	.LFE1899-.LFB1899
	.quad	.LFB1999
	.quad	.LFE1999-.LFB1999
	.quad	.LFB2000
	.quad	.LFE2000-.LFB2000
	.quad	.LFB4173
	.quad	.LFE4173-.LFB4173
	.quad	.LFB4654
	.quad	.LFE4654-.LFB4654
	.quad	.LFB4659
	.quad	.LFE4659-.LFB4659
	.quad	.LFB4660
	.quad	.LFE4660-.LFB4660
	.quad	.LFB4661
	.quad	.LFE4661-.LFB4661
	.quad	.LFB4662
	.quad	.LFE4662-.LFB4662
	.quad	.LFB4669
	.quad	.LFE4669-.LFB4669
	.quad	.LFB4670
	.quad	.LFE4670-.LFB4670
	.quad	.LFB4673
	.quad	.LFE4673-.LFB4673
	.quad	.LFB4676
	.quad	.LFE4676-.LFB4676
	.quad	.LFB4678
	.quad	.LFE4678-.LFB4678
	.quad	.LFB4681
	.quad	.LFE4681-.LFB4681
	.quad	.LFB4682
	.quad	.LFE4682-.LFB4682
	.quad	.LFB4686
	.quad	.LFE4686-.LFB4686
	.quad	.LFB4687
	.quad	.LFE4687-.LFB4687
	.quad	.LFB4688
	.quad	.LFE4688-.LFB4688
	.quad	.LFB4691
	.quad	.LFE4691-.LFB4691
	.quad	.LFB4697
	.quad	.LFE4697-.LFB4697
	.quad	.LFB4698
	.quad	.LFE4698-.LFB4698
	.quad	.LFB4701
	.quad	.LFE4701-.LFB4701
	.quad	.LFB4708
	.quad	.LFE4708-.LFB4708
	.quad	.LFB5070
	.quad	.LFE5070-.LFB5070
	.quad	.LFB5084
	.quad	.LFE5084-.LFB5084
	.quad	.LFB5085
	.quad	.LFE5085-.LFB5085
	.quad	.LFB5088
	.quad	.LFE5088-.LFB5088
	.quad	.LFB5094
	.quad	.LFE5094-.LFB5094
	.quad	.LFB5095
	.quad	.LFE5095-.LFB5095
	.quad	.LFB5098
	.quad	.LFE5098-.LFB5098
	.quad	.LFB5100
	.quad	.LFE5100-.LFB5100
	.quad	.LFB5103
	.quad	.LFE5103-.LFB5103
	.quad	.LFB5106
	.quad	.LFE5106-.LFB5106
	.quad	.LFB5107
	.quad	.LFE5107-.LFB5107
	.quad	.LFB5108
	.quad	.LFE5108-.LFB5108
	.quad	.LFB5109
	.quad	.LFE5109-.LFB5109
	.quad	.LFB5112
	.quad	.LFE5112-.LFB5112
	.quad	.LFB5114
	.quad	.LFE5114-.LFB5114
	.quad	.LFB5117
	.quad	.LFE5117-.LFB5117
	.quad	.LFB5121
	.quad	.LFE5121-.LFB5121
	.quad	.LFB5122
	.quad	.LFE5122-.LFB5122
	.quad	.LFB5124
	.quad	.LFE5124-.LFB5124
	.quad	.LFB5125
	.quad	.LFE5125-.LFB5125
	.quad	.LFB5126
	.quad	.LFE5126-.LFB5126
	.quad	.LFB5127
	.quad	.LFE5127-.LFB5127
	.quad	.LFB5123
	.quad	.LFE5123-.LFB5123
	.quad	.LFB5128
	.quad	.LFE5128-.LFB5128
	.quad	.LFB5129
	.quad	.LFE5129-.LFB5129
	.quad	.LFB5130
	.quad	.LFE5130-.LFB5130
	.quad	.LFB5131
	.quad	.LFE5131-.LFB5131
	.quad	.LFB5134
	.quad	.LFE5134-.LFB5134
	.quad	.LFB5136
	.quad	.LFE5136-.LFB5136
	.quad	.LFB5139
	.quad	.LFE5139-.LFB5139
	.quad	.LFB5141
	.quad	.LFE5141-.LFB5141
	.quad	.LFB5142
	.quad	.LFE5142-.LFB5142
	.quad	.LFB5143
	.quad	.LFE5143-.LFB5143
	.quad	.LFB5144
	.quad	.LFE5144-.LFB5144
	.quad	.LFB5145
	.quad	.LFE5145-.LFB5145
	.quad	.LFB5146
	.quad	.LFE5146-.LFB5146
	.quad	.LFB5147
	.quad	.LFE5147-.LFB5147
	.quad	.LFB5149
	.quad	.LFE5149-.LFB5149
	.quad	.LFB5151
	.quad	.LFE5151-.LFB5151
	.quad	.LFB5152
	.quad	.LFE5152-.LFB5152
	.quad	.LFB5302
	.quad	.LFE5302-.LFB5302
	.quad	.LFB5304
	.quad	.LFE5304-.LFB5304
	.quad	.LFB5307
	.quad	.LFE5307-.LFB5307
	.quad	.LFB5311
	.quad	.LFE5311-.LFB5311
	.quad	.LFB5313
	.quad	.LFE5313-.LFB5313
	.quad	.LFB5316
	.quad	.LFE5316-.LFB5316
	.quad	.LFB5318
	.quad	.LFE5318-.LFB5318
	.quad	.LFB5319
	.quad	.LFE5319-.LFB5319
	.quad	.LFB5320
	.quad	.LFE5320-.LFB5320
	.quad	.LFB5321
	.quad	.LFE5321-.LFB5321
	.quad	.LFB5322
	.quad	.LFE5322-.LFB5322
	.quad	.LFB5327
	.quad	.LFE5327-.LFB5327
	.quad	.LFB5328
	.quad	.LFE5328-.LFB5328
	.quad	.LFB5329
	.quad	.LFE5329-.LFB5329
	.quad	.LFB5330
	.quad	.LFE5330-.LFB5330
	.quad	.LFB5332
	.quad	.LFE5332-.LFB5332
	.quad	.LFB5335
	.quad	.LFE5335-.LFB5335
	.quad	.LFB5337
	.quad	.LFE5337-.LFB5337
	.quad	.LFB5338
	.quad	.LFE5338-.LFB5338
	.quad	.LFB5339
	.quad	.LFE5339-.LFB5339
	.quad	.LFB5340
	.quad	.LFE5340-.LFB5340
	.quad	.LFB5341
	.quad	.LFE5341-.LFB5341
	.quad	.LFB5343
	.quad	.LFE5343-.LFB5343
	.quad	.LFB5344
	.quad	.LFE5344-.LFB5344
	.quad	.LFB5345
	.quad	.LFE5345-.LFB5345
	.quad	.LFB5346
	.quad	.LFE5346-.LFB5346
	.quad	.LFB5347
	.quad	.LFE5347-.LFB5347
	.quad	.LFB5348
	.quad	.LFE5348-.LFB5348
	.quad	.LFB5349
	.quad	.LFE5349-.LFB5349
	.quad	.LFB5350
	.quad	.LFE5350-.LFB5350
	.quad	.LFB5351
	.quad	.LFE5351-.LFB5351
	.quad	.LFB5352
	.quad	.LFE5352-.LFB5352
	.quad	.LFB5353
	.quad	.LFE5353-.LFB5353
	.quad	.LFB5354
	.quad	.LFE5354-.LFB5354
	.quad	.LFB5356
	.quad	.LFE5356-.LFB5356
	.quad	.LFB5357
	.quad	.LFE5357-.LFB5357
	.quad	.LFB5358
	.quad	.LFE5358-.LFB5358
	.quad	.LFB5359
	.quad	.LFE5359-.LFB5359
	.quad	.LFB5362
	.quad	.LFE5362-.LFB5362
	.quad	.LFB5364
	.quad	.LFE5364-.LFB5364
	.quad	.LFB5367
	.quad	.LFE5367-.LFB5367
	.quad	.LFB5369
	.quad	.LFE5369-.LFB5369
	.quad	.LFB5370
	.quad	.LFE5370-.LFB5370
	.quad	.LFB5371
	.quad	.LFE5371-.LFB5371
	.quad	.LFB5372
	.quad	.LFE5372-.LFB5372
	.quad	.LFB5374
	.quad	.LFE5374-.LFB5374
	.quad	.LFB5375
	.quad	.LFE5375-.LFB5375
	.quad	.LFB5376
	.quad	.LFE5376-.LFB5376
	.quad	.LFB5379
	.quad	.LFE5379-.LFB5379
	.quad	.LFB5380
	.quad	.LFE5380-.LFB5380
	.quad	.LFB5381
	.quad	.LFE5381-.LFB5381
	.quad	.LFB5383
	.quad	.LFE5383-.LFB5383
	.quad	.LFB5382
	.quad	.LFE5382-.LFB5382
	.quad	.LFB5478
	.quad	.LFE5478-.LFB5478
	.quad	.LFB5481
	.quad	.LFE5481-.LFB5481
	.quad	.LFB5482
	.quad	.LFE5482-.LFB5482
	.quad	.LFB5483
	.quad	.LFE5483-.LFB5483
	.quad	.LFB5485
	.quad	.LFE5485-.LFB5485
	.quad	.LFB5488
	.quad	.LFE5488-.LFB5488
	.quad	.LFB5490
	.quad	.LFE5490-.LFB5490
	.quad	.LFB5491
	.quad	.LFE5491-.LFB5491
	.quad	.LFB5492
	.quad	.LFE5492-.LFB5492
	.quad	.LFB5493
	.quad	.LFE5493-.LFB5493
	.quad	.LFB5494
	.quad	.LFE5494-.LFB5494
	.quad	.LFB5495
	.quad	.LFE5495-.LFB5495
	.quad	.LFB5496
	.quad	.LFE5496-.LFB5496
	.quad	.LFB5497
	.quad	.LFE5497-.LFB5497
	.quad	.LFB5498
	.quad	.LFE5498-.LFB5498
	.quad	.LFB5499
	.quad	.LFE5499-.LFB5499
	.quad	.LFB5500
	.quad	.LFE5500-.LFB5500
	.quad	.LFB5501
	.quad	.LFE5501-.LFB5501
	.quad	.LFB5502
	.quad	.LFE5502-.LFB5502
	.quad	.LFB5503
	.quad	.LFE5503-.LFB5503
	.quad	.LFB5504
	.quad	.LFE5504-.LFB5504
	.quad	.LFB5505
	.quad	.LFE5505-.LFB5505
	.quad	.LFB5506
	.quad	.LFE5506-.LFB5506
	.quad	.LFB5507
	.quad	.LFE5507-.LFB5507
	.quad	.LFB5509
	.quad	.LFE5509-.LFB5509
	.quad	.LFB5511
	.quad	.LFE5511-.LFB5511
	.quad	.LFB5512
	.quad	.LFE5512-.LFB5512
	.quad	.LFB5513
	.quad	.LFE5513-.LFB5513
	.quad	.LFB5518
	.quad	.LFE5518-.LFB5518
	.quad	.LFB5515
	.quad	.LFE5515-.LFB5515
	.quad	.LFB5514
	.quad	.LFE5514-.LFB5514
	.quad	.LFB5519
	.quad	.LFE5519-.LFB5519
	.quad	.LFB5522
	.quad	.LFE5522-.LFB5522
	.quad	.LFB5523
	.quad	.LFE5523-.LFB5523
	.quad	.LFB5526
	.quad	.LFE5526-.LFB5526
	.quad	.LFB5527
	.quad	.LFE5527-.LFB5527
	.quad	.LFB5528
	.quad	.LFE5528-.LFB5528
	.quad	.LFB5529
	.quad	.LFE5529-.LFB5529
	.quad	.LFB5530
	.quad	.LFE5530-.LFB5530
	.quad	.LFB5532
	.quad	.LFE5532-.LFB5532
	.quad	.LFB5533
	.quad	.LFE5533-.LFB5533
	.quad	.LFB5534
	.quad	.LFE5534-.LFB5534
	.quad	.LFB5535
	.quad	.LFE5535-.LFB5535
	.quad	.LFB5536
	.quad	.LFE5536-.LFB5536
	.quad	.LFB5540
	.quad	.LFE5540-.LFB5540
	.quad	.LFB5541
	.quad	.LFE5541-.LFB5541
	.quad	.LFB5543
	.quad	.LFE5543-.LFB5543
	.quad	.LFB5544
	.quad	.LFE5544-.LFB5544
	.quad	.LFB5546
	.quad	.LFE5546-.LFB5546
	.quad	.LFB5545
	.quad	.LFE5545-.LFB5545
	.quad	.LFB5547
	.quad	.LFE5547-.LFB5547
	.quad	.LFB5542
	.quad	.LFE5542-.LFB5542
	.quad	.LFB5549
	.quad	.LFE5549-.LFB5549
	.quad	.LFB5551
	.quad	.LFE5551-.LFB5551
	.quad	.LFB5552
	.quad	.LFE5552-.LFB5552
	.quad	.LFB5557
	.quad	.LFE5557-.LFB5557
	.quad	.LFB5554
	.quad	.LFE5554-.LFB5554
	.quad	.LFB5553
	.quad	.LFE5553-.LFB5553
	.quad	.LFB5558
	.quad	.LFE5558-.LFB5558
	.quad	.LFB5564
	.quad	.LFE5564-.LFB5564
	.quad	.LFB5565
	.quad	.LFE5565-.LFB5565
	.quad	.LFB5566
	.quad	.LFE5566-.LFB5566
	.quad	.LFB5567
	.quad	.LFE5567-.LFB5567
	.quad	.LFB5568
	.quad	.LFE5568-.LFB5568
	.quad	.LFB5569
	.quad	.LFE5569-.LFB5569
	.quad	.LFB5648
	.quad	.LFE5648-.LFB5648
	.quad	.LFB5650
	.quad	.LFE5650-.LFB5650
	.quad	.LFB5651
	.quad	.LFE5651-.LFB5651
	.quad	.LFB5652
	.quad	.LFE5652-.LFB5652
	.quad	.LFB5654
	.quad	.LFE5654-.LFB5654
	.quad	.LFB5656
	.quad	.LFE5656-.LFB5656
	.quad	.LFB5657
	.quad	.LFE5657-.LFB5657
	.quad	.LFB5658
	.quad	.LFE5658-.LFB5658
	.quad	.LFB5659
	.quad	.LFE5659-.LFB5659
	.quad	.LFB5660
	.quad	.LFE5660-.LFB5660
	.quad	.LFB5661
	.quad	.LFE5661-.LFB5661
	.quad	.LFB5662
	.quad	.LFE5662-.LFB5662
	.quad	.LFB5664
	.quad	.LFE5664-.LFB5664
	.quad	.LFB5663
	.quad	.LFE5663-.LFB5663
	.quad	.LFB5665
	.quad	.LFE5665-.LFB5665
	.quad	.LFB5666
	.quad	.LFE5666-.LFB5666
	.quad	.LFB5667
	.quad	.LFE5667-.LFB5667
	.quad	.LFB5669
	.quad	.LFE5669-.LFB5669
	.quad	.LFB5668
	.quad	.LFE5668-.LFB5668
	.quad	.LFB5671
	.quad	.LFE5671-.LFB5671
	.quad	.LFB5670
	.quad	.LFE5670-.LFB5670
	.quad	.LFB5672
	.quad	.LFE5672-.LFB5672
	.quad	.LFB5673
	.quad	.LFE5673-.LFB5673
	.quad	.LFB5674
	.quad	.LFE5674-.LFB5674
	.quad	.LFB5675
	.quad	.LFE5675-.LFB5675
	.quad	.LFB5676
	.quad	.LFE5676-.LFB5676
	.quad	.LFB5678
	.quad	.LFE5678-.LFB5678
	.quad	.LFB5681
	.quad	.LFE5681-.LFB5681
	.quad	.LFB5682
	.quad	.LFE5682-.LFB5682
	.quad	.LFB5683
	.quad	.LFE5683-.LFB5683
	.quad	.LFB5684
	.quad	.LFE5684-.LFB5684
	.quad	.LFB5685
	.quad	.LFE5685-.LFB5685
	.quad	.LFB5686
	.quad	.LFE5686-.LFB5686
	.quad	.LFB5687
	.quad	.LFE5687-.LFB5687
	.quad	.LFB5688
	.quad	.LFE5688-.LFB5688
	.quad	.LFB5689
	.quad	.LFE5689-.LFB5689
	.quad	.LFB5690
	.quad	.LFE5690-.LFB5690
	.quad	.LFB5691
	.quad	.LFE5691-.LFB5691
	.quad	.LFB5692
	.quad	.LFE5692-.LFB5692
	.quad	.LFB5693
	.quad	.LFE5693-.LFB5693
	.quad	.LFB5694
	.quad	.LFE5694-.LFB5694
	.quad	.LFB5696
	.quad	.LFE5696-.LFB5696
	.quad	.LFB5697
	.quad	.LFE5697-.LFB5697
	.quad	.LFB5695
	.quad	.LFE5695-.LFB5695
	.quad	.LFB5698
	.quad	.LFE5698-.LFB5698
	.quad	.LFB5699
	.quad	.LFE5699-.LFB5699
	.quad	.LFB5702
	.quad	.LFE5702-.LFB5702
	.quad	.LFB5704
	.quad	.LFE5704-.LFB5704
	.quad	.LFB5705
	.quad	.LFE5705-.LFB5705
	.quad	.LFB5706
	.quad	.LFE5706-.LFB5706
	.quad	.LFB5707
	.quad	.LFE5707-.LFB5707
	.quad	.LFB5708
	.quad	.LFE5708-.LFB5708
	.quad	.LFB5709
	.quad	.LFE5709-.LFB5709
	.quad	.LFB5710
	.quad	.LFE5710-.LFB5710
	.quad	.LFB5711
	.quad	.LFE5711-.LFB5711
	.quad	.LFB5712
	.quad	.LFE5712-.LFB5712
	.quad	.LFB5713
	.quad	.LFE5713-.LFB5713
	.quad	.LFB5795
	.quad	.LFE5795-.LFB5795
	.quad	.LFB5796
	.quad	.LFE5796-.LFB5796
	.quad	.LFB5797
	.quad	.LFE5797-.LFB5797
	.quad	.LFB5798
	.quad	.LFE5798-.LFB5798
	.quad	.LFB5799
	.quad	.LFE5799-.LFB5799
	.quad	.LFB5801
	.quad	.LFE5801-.LFB5801
	.quad	.LFB5802
	.quad	.LFE5802-.LFB5802
	.quad	.LFB5803
	.quad	.LFE5803-.LFB5803
	.quad	.LFB5804
	.quad	.LFE5804-.LFB5804
	.quad	.LFB5805
	.quad	.LFE5805-.LFB5805
	.quad	.LFB5806
	.quad	.LFE5806-.LFB5806
	.quad	.LFB5808
	.quad	.LFE5808-.LFB5808
	.quad	.LFB5809
	.quad	.LFE5809-.LFB5809
	.quad	.LFB5810
	.quad	.LFE5810-.LFB5810
	.quad	.LFB5811
	.quad	.LFE5811-.LFB5811
	.quad	.LFB5812
	.quad	.LFE5812-.LFB5812
	.quad	.LFB5814
	.quad	.LFE5814-.LFB5814
	.quad	.LFB5813
	.quad	.LFE5813-.LFB5813
	.quad	.LFB5816
	.quad	.LFE5816-.LFB5816
	.quad	.LFB5817
	.quad	.LFE5817-.LFB5817
	.quad	.LFB5818
	.quad	.LFE5818-.LFB5818
	.quad	.LFB5819
	.quad	.LFE5819-.LFB5819
	.quad	.LFB5815
	.quad	.LFE5815-.LFB5815
	.quad	.LFB5820
	.quad	.LFE5820-.LFB5820
	.quad	.LFB5821
	.quad	.LFE5821-.LFB5821
	.quad	.LFB5822
	.quad	.LFE5822-.LFB5822
	.quad	.LFB5823
	.quad	.LFE5823-.LFB5823
	.quad	.LFB5826
	.quad	.LFE5826-.LFB5826
	.quad	.LFB5827
	.quad	.LFE5827-.LFB5827
	.quad	.LFB5825
	.quad	.LFE5825-.LFB5825
	.quad	.LFB5828
	.quad	.LFE5828-.LFB5828
	.quad	.LFB5829
	.quad	.LFE5829-.LFB5829
	.quad	.LFB5832
	.quad	.LFE5832-.LFB5832
	.quad	.LFB5831
	.quad	.LFE5831-.LFB5831
	.quad	.LFB5830
	.quad	.LFE5830-.LFB5830
	.quad	.LFB5836
	.quad	.LFE5836-.LFB5836
	.quad	.LFB5833
	.quad	.LFE5833-.LFB5833
	.quad	.LFB5837
	.quad	.LFE5837-.LFB5837
	.quad	.LFB5838
	.quad	.LFE5838-.LFB5838
	.quad	.LFB5839
	.quad	.LFE5839-.LFB5839
	.quad	.LFB5840
	.quad	.LFE5840-.LFB5840
	.quad	.LFB5841
	.quad	.LFE5841-.LFB5841
	.quad	.LFB5842
	.quad	.LFE5842-.LFB5842
	.quad	.LFB5843
	.quad	.LFE5843-.LFB5843
	.quad	.LFB5879
	.quad	.LFE5879-.LFB5879
	.quad	.LFB5880
	.quad	.LFE5880-.LFB5880
	.quad	.LFB5881
	.quad	.LFE5881-.LFB5881
	.quad	.LFB5883
	.quad	.LFE5883-.LFB5883
	.quad	.LFB5884
	.quad	.LFE5884-.LFB5884
	.quad	.LFB5885
	.quad	.LFE5885-.LFB5885
	.quad	.LFB5886
	.quad	.LFE5886-.LFB5886
	.quad	.LFB5887
	.quad	.LFE5887-.LFB5887
	.quad	.LFB5888
	.quad	.LFE5888-.LFB5888
	.quad	.LFB5889
	.quad	.LFE5889-.LFB5889
	.quad	.LFB5890
	.quad	.LFE5890-.LFB5890
	.quad	.LFB5891
	.quad	.LFE5891-.LFB5891
	.quad	.LFB5892
	.quad	.LFE5892-.LFB5892
	.quad	.LFB5894
	.quad	.LFE5894-.LFB5894
	.quad	.LFB5893
	.quad	.LFE5893-.LFB5893
	.quad	.LFB5895
	.quad	.LFE5895-.LFB5895
	.quad	.LFB5896
	.quad	.LFE5896-.LFB5896
	.quad	.LFB5897
	.quad	.LFE5897-.LFB5897
	.quad	.LFB5898
	.quad	.LFE5898-.LFB5898
	.quad	.LFB5899
	.quad	.LFE5899-.LFB5899
	.quad	.LFB5900
	.quad	.LFE5900-.LFB5900
	.quad	.LFB5901
	.quad	.LFE5901-.LFB5901
	.quad	.LFB5902
	.quad	.LFE5902-.LFB5902
	.quad	.LFB5903
	.quad	.LFE5903-.LFB5903
	.quad	.LFB5904
	.quad	.LFE5904-.LFB5904
	.quad	.LFB5905
	.quad	.LFE5905-.LFB5905
	.quad	.LFB5906
	.quad	.LFE5906-.LFB5906
	.quad	.LFB5907
	.quad	.LFE5907-.LFB5907
	.quad	.LFB5908
	.quad	.LFE5908-.LFB5908
	.quad	.LFB5909
	.quad	.LFE5909-.LFB5909
	.quad	.LFB5910
	.quad	.LFE5910-.LFB5910
	.quad	.LFB5911
	.quad	.LFE5911-.LFB5911
	.quad	.LFB5913
	.quad	.LFE5913-.LFB5913
	.quad	.LFB5912
	.quad	.LFE5912-.LFB5912
	.quad	.LFB5914
	.quad	.LFE5914-.LFB5914
	.quad	.LFB5916
	.quad	.LFE5916-.LFB5916
	.quad	.LFB5915
	.quad	.LFE5915-.LFB5915
	.quad	.LFB5917
	.quad	.LFE5917-.LFB5917
	.quad	.LFB5918
	.quad	.LFE5918-.LFB5918
	.quad	.LFB5919
	.quad	.LFE5919-.LFB5919
	.quad	.LFB5920
	.quad	.LFE5920-.LFB5920
	.quad	.LFB5921
	.quad	.LFE5921-.LFB5921
	.quad	.LFB5923
	.quad	.LFE5923-.LFB5923
	.quad	.LFB5922
	.quad	.LFE5922-.LFB5922
	.quad	.LFB5924
	.quad	.LFE5924-.LFB5924
	.quad	.LFB5926
	.quad	.LFE5926-.LFB5926
	.quad	.LFB5928
	.quad	.LFE5928-.LFB5928
	.quad	.LFB5931
	.quad	.LFE5931-.LFB5931
	.quad	.LFB5930
	.quad	.LFE5930-.LFB5930
	.quad	.LFB5929
	.quad	.LFE5929-.LFB5929
	.quad	.LFB5949
	.quad	.LFE5949-.LFB5949
	.quad	.LFB5948
	.quad	.LFE5948-.LFB5948
	.quad	.LFB5950
	.quad	.LFE5950-.LFB5950
	.quad	.LFB5951
	.quad	.LFE5951-.LFB5951
	.quad	.LFB5952
	.quad	.LFE5952-.LFB5952
	.quad	.LFB5953
	.quad	.LFE5953-.LFB5953
	.quad	.LFB5954
	.quad	.LFE5954-.LFB5954
	.quad	.LFB5955
	.quad	.LFE5955-.LFB5955
	.quad	.LFB5956
	.quad	.LFE5956-.LFB5956
	.quad	.LFB5957
	.quad	.LFE5957-.LFB5957
	.quad	.LFB5960
	.quad	.LFE5960-.LFB5960
	.quad	.LFB5961
	.quad	.LFE5961-.LFB5961
	.quad	.LFB5962
	.quad	.LFE5962-.LFB5962
	.quad	.LFB5964
	.quad	.LFE5964-.LFB5964
	.quad	.LFB5965
	.quad	.LFE5965-.LFB5965
	.quad	.LFB5966
	.quad	.LFE5966-.LFB5966
	.quad	.LFB5967
	.quad	.LFE5967-.LFB5967
	.quad	.LFB5969
	.quad	.LFE5969-.LFB5969
	.quad	.LFB5970
	.quad	.LFE5970-.LFB5970
	.quad	.LFB5972
	.quad	.LFE5972-.LFB5972
	.quad	.LFB5971
	.quad	.LFE5971-.LFB5971
	.quad	.LFB5973
	.quad	.LFE5973-.LFB5973
	.quad	.LFB5974
	.quad	.LFE5974-.LFB5974
	.quad	.LFB5975
	.quad	.LFE5975-.LFB5975
	.quad	.LFB5984
	.quad	.LFE5984-.LFB5984
	.quad	.LFB5985
	.quad	.LFE5985-.LFB5985
	.quad	.LFB5987
	.quad	.LFE5987-.LFB5987
	.quad	.LFB5988
	.quad	.LFE5988-.LFB5988
	.quad	.LFB5989
	.quad	.LFE5989-.LFB5989
	.quad	.LFB5990
	.quad	.LFE5990-.LFB5990
	.quad	.LFB5991
	.quad	.LFE5991-.LFB5991
	.quad	.LFB5992
	.quad	.LFE5992-.LFB5992
	.quad	.LFB5993
	.quad	.LFE5993-.LFB5993
	.quad	.LFB5994
	.quad	.LFE5994-.LFB5994
	.quad	.LFB5995
	.quad	.LFE5995-.LFB5995
	.quad	.LFB5996
	.quad	.LFE5996-.LFB5996
	.quad	.LFB5998
	.quad	.LFE5998-.LFB5998
	.quad	.LFB5999
	.quad	.LFE5999-.LFB5999
	.quad	.LFB6000
	.quad	.LFE6000-.LFB6000
	.quad	.LFB5997
	.quad	.LFE5997-.LFB5997
	.quad	.LFB6001
	.quad	.LFE6001-.LFB6001
	.quad	.LFB6002
	.quad	.LFE6002-.LFB6002
	.quad	.LFB6003
	.quad	.LFE6003-.LFB6003
	.quad	.LFB6007
	.quad	.LFE6007-.LFB6007
	.quad	.LFB6004
	.quad	.LFE6004-.LFB6004
	.quad	.LFB6008
	.quad	.LFE6008-.LFB6008
	.quad	.LFB6009
	.quad	.LFE6009-.LFB6009
	.quad	.LFB6010
	.quad	.LFE6010-.LFB6010
	.quad	.LFB6011
	.quad	.LFE6011-.LFB6011
	.quad	.LFB6012
	.quad	.LFE6012-.LFB6012
	.quad	.LFB6013
	.quad	.LFE6013-.LFB6013
	.quad	.LFB6014
	.quad	.LFE6014-.LFB6014
	.quad	.LFB6015
	.quad	.LFE6015-.LFB6015
	.quad	.LFB6016
	.quad	.LFE6016-.LFB6016
	.quad	.LFB6017
	.quad	.LFE6017-.LFB6017
	.quad	.LFB6018
	.quad	.LFE6018-.LFB6018
	.quad	.LFB6019
	.quad	.LFE6019-.LFB6019
	.quad	.LFB6020
	.quad	.LFE6020-.LFB6020
	.quad	.LFB6021
	.quad	.LFE6021-.LFB6021
	.quad	.LFB6026
	.quad	.LFE6026-.LFB6026
	.quad	0
	.quad	0
	.section	.debug_rnglists,"dr"
.Ldebug_ranges0:
	.long	.Ldebug_ranges3-.Ldebug_ranges2
.Ldebug_ranges2:
	.word	0x5
	.byte	0x8
	.byte	0
	.long	0
.LLRL0:
	.byte	0x5
	.quad	.LBB47
	.byte	0x4
	.uleb128 .LBB47-.LBB47
	.uleb128 .LBE47-.LBB47
	.byte	0x4
	.uleb128 .LBB52-.LBB47
	.uleb128 .LBE52-.LBB47
	.byte	0
.LLRL1:
	.byte	0x5
	.quad	.LBB48
	.byte	0x4
	.uleb128 .LBB48-.LBB48
	.uleb128 .LBE48-.LBB48
	.byte	0x4
	.uleb128 .LBB51-.LBB48
	.uleb128 .LBE51-.LBB48
	.byte	0
.LLRL2:
	.byte	0x5
	.quad	.LBB49
	.byte	0x4
	.uleb128 .LBB49-.LBB49
	.uleb128 .LBE49-.LBB49
	.byte	0x4
	.uleb128 .LBB50-.LBB49
	.uleb128 .LBE50-.LBB49
	.byte	0
.LLRL3:
	.byte	0x5
	.quad	.LBB105
	.byte	0x4
	.uleb128 .LBB105-.LBB105
	.uleb128 .LBE105-.LBB105
	.byte	0x4
	.uleb128 .LBB111-.LBB105
	.uleb128 .LBE111-.LBB105
	.byte	0x4
	.uleb128 .LBB112-.LBB105
	.uleb128 .LBE112-.LBB105
	.byte	0
.LLRL4:
	.byte	0x5
	.quad	.LBB107
	.byte	0x4
	.uleb128 .LBB107-.LBB107
	.uleb128 .LBE107-.LBB107
	.byte	0x4
	.uleb128 .LBB108-.LBB107
	.uleb128 .LBE108-.LBB107
	.byte	0
.LLRL5:
	.byte	0x7
	.quad	.Ltext0
	.uleb128 .Letext0-.Ltext0
	.byte	0x7
	.quad	.LFB270
	.uleb128 .LFE270-.LFB270
	.byte	0x7
	.quad	.LFB432
	.uleb128 .LFE432-.LFB432
	.byte	0x7
	.quad	.LFB434
	.uleb128 .LFE434-.LFB434
	.byte	0x7
	.quad	.LFB704
	.uleb128 .LFE704-.LFB704
	.byte	0x7
	.quad	.LFB1117
	.uleb128 .LFE1117-.LFB1117
	.byte	0x7
	.quad	.LFB1139
	.uleb128 .LFE1139-.LFB1139
	.byte	0x7
	.quad	.LFB1140
	.uleb128 .LFE1140-.LFB1140
	.byte	0x7
	.quad	.LFB1141
	.uleb128 .LFE1141-.LFB1141
	.byte	0x7
	.quad	.LFB1142
	.uleb128 .LFE1142-.LFB1142
	.byte	0x7
	.quad	.LFB1143
	.uleb128 .LFE1143-.LFB1143
	.byte	0x7
	.quad	.LFB1144
	.uleb128 .LFE1144-.LFB1144
	.byte	0x7
	.quad	.LFB1145
	.uleb128 .LFE1145-.LFB1145
	.byte	0x7
	.quad	.LFB1146
	.uleb128 .LFE1146-.LFB1146
	.byte	0x7
	.quad	.LFB1147
	.uleb128 .LFE1147-.LFB1147
	.byte	0x7
	.quad	.LFB1148
	.uleb128 .LFE1148-.LFB1148
	.byte	0x7
	.quad	.LFB1149
	.uleb128 .LFE1149-.LFB1149
	.byte	0x7
	.quad	.LFB1152
	.uleb128 .LFE1152-.LFB1152
	.byte	0x7
	.quad	.LFB1153
	.uleb128 .LFE1153-.LFB1153
	.byte	0x7
	.quad	.LFB1155
	.uleb128 .LFE1155-.LFB1155
	.byte	0x7
	.quad	.LFB1156
	.uleb128 .LFE1156-.LFB1156
	.byte	0x7
	.quad	.LFB1161
	.uleb128 .LFE1161-.LFB1161
	.byte	0x7
	.quad	.LFB1163
	.uleb128 .LFE1163-.LFB1163
	.byte	0x7
	.quad	.LFB1164
	.uleb128 .LFE1164-.LFB1164
	.byte	0x7
	.quad	.LFB1165
	.uleb128 .LFE1165-.LFB1165
	.byte	0x7
	.quad	.LFB1277
	.uleb128 .LFE1277-.LFB1277
	.byte	0x7
	.quad	.LFB1841
	.uleb128 .LFE1841-.LFB1841
	.byte	0x7
	.quad	.LFB1845
	.uleb128 .LFE1845-.LFB1845
	.byte	0x7
	.quad	.LFB1846
	.uleb128 .LFE1846-.LFB1846
	.byte	0x7
	.quad	.LFB1847
	.uleb128 .LFE1847-.LFB1847
	.byte	0x7
	.quad	.LFB1855
	.uleb128 .LFE1855-.LFB1855
	.byte	0x7
	.quad	.LFB1857
	.uleb128 .LFE1857-.LFB1857
	.byte	0x7
	.quad	.LFB1858
	.uleb128 .LFE1858-.LFB1858
	.byte	0x7
	.quad	.LFB1859
	.uleb128 .LFE1859-.LFB1859
	.byte	0x7
	.quad	.LFB1862
	.uleb128 .LFE1862-.LFB1862
	.byte	0x7
	.quad	.LFB1865
	.uleb128 .LFE1865-.LFB1865
	.byte	0x7
	.quad	.LFB1868
	.uleb128 .LFE1868-.LFB1868
	.byte	0x7
	.quad	.LFB1870
	.uleb128 .LFE1870-.LFB1870
	.byte	0x7
	.quad	.LFB1871
	.uleb128 .LFE1871-.LFB1871
	.byte	0x7
	.quad	.LFB1873
	.uleb128 .LFE1873-.LFB1873
	.byte	0x7
	.quad	.LFB1875
	.uleb128 .LFE1875-.LFB1875
	.byte	0x7
	.quad	.LFB1877
	.uleb128 .LFE1877-.LFB1877
	.byte	0x7
	.quad	.LFB1878
	.uleb128 .LFE1878-.LFB1878
	.byte	0x7
	.quad	.LFB1886
	.uleb128 .LFE1886-.LFB1886
	.byte	0x7
	.quad	.LFB1889
	.uleb128 .LFE1889-.LFB1889
	.byte	0x7
	.quad	.LFB1890
	.uleb128 .LFE1890-.LFB1890
	.byte	0x7
	.quad	.LFB1891
	.uleb128 .LFE1891-.LFB1891
	.byte	0x7
	.quad	.LFB1892
	.uleb128 .LFE1892-.LFB1892
	.byte	0x7
	.quad	.LFB1896
	.uleb128 .LFE1896-.LFB1896
	.byte	0x7
	.quad	.LFB1898
	.uleb128 .LFE1898-.LFB1898
	.byte	0x7
	.quad	.LFB1899
	.uleb128 .LFE1899-.LFB1899
	.byte	0x7
	.quad	.LFB1999
	.uleb128 .LFE1999-.LFB1999
	.byte	0x7
	.quad	.LFB2000
	.uleb128 .LFE2000-.LFB2000
	.byte	0x7
	.quad	.LFB4173
	.uleb128 .LFE4173-.LFB4173
	.byte	0x7
	.quad	.LFB4654
	.uleb128 .LFE4654-.LFB4654
	.byte	0x7
	.quad	.LFB4659
	.uleb128 .LFE4659-.LFB4659
	.byte	0x7
	.quad	.LFB4660
	.uleb128 .LFE4660-.LFB4660
	.byte	0x7
	.quad	.LFB4661
	.uleb128 .LFE4661-.LFB4661
	.byte	0x7
	.quad	.LFB4662
	.uleb128 .LFE4662-.LFB4662
	.byte	0x7
	.quad	.LFB4669
	.uleb128 .LFE4669-.LFB4669
	.byte	0x7
	.quad	.LFB4670
	.uleb128 .LFE4670-.LFB4670
	.byte	0x7
	.quad	.LFB4673
	.uleb128 .LFE4673-.LFB4673
	.byte	0x7
	.quad	.LFB4676
	.uleb128 .LFE4676-.LFB4676
	.byte	0x7
	.quad	.LFB4678
	.uleb128 .LFE4678-.LFB4678
	.byte	0x7
	.quad	.LFB4681
	.uleb128 .LFE4681-.LFB4681
	.byte	0x7
	.quad	.LFB4682
	.uleb128 .LFE4682-.LFB4682
	.byte	0x7
	.quad	.LFB4686
	.uleb128 .LFE4686-.LFB4686
	.byte	0x7
	.quad	.LFB4687
	.uleb128 .LFE4687-.LFB4687
	.byte	0x7
	.quad	.LFB4688
	.uleb128 .LFE4688-.LFB4688
	.byte	0x7
	.quad	.LFB4691
	.uleb128 .LFE4691-.LFB4691
	.byte	0x7
	.quad	.LFB4697
	.uleb128 .LFE4697-.LFB4697
	.byte	0x7
	.quad	.LFB4698
	.uleb128 .LFE4698-.LFB4698
	.byte	0x7
	.quad	.LFB4701
	.uleb128 .LFE4701-.LFB4701
	.byte	0x7
	.quad	.LFB4708
	.uleb128 .LFE4708-.LFB4708
	.byte	0x7
	.quad	.LFB5070
	.uleb128 .LFE5070-.LFB5070
	.byte	0x7
	.quad	.LFB5084
	.uleb128 .LFE5084-.LFB5084
	.byte	0x7
	.quad	.LFB5085
	.uleb128 .LFE5085-.LFB5085
	.byte	0x7
	.quad	.LFB5088
	.uleb128 .LFE5088-.LFB5088
	.byte	0x7
	.quad	.LFB5094
	.uleb128 .LFE5094-.LFB5094
	.byte	0x7
	.quad	.LFB5095
	.uleb128 .LFE5095-.LFB5095
	.byte	0x7
	.quad	.LFB5098
	.uleb128 .LFE5098-.LFB5098
	.byte	0x7
	.quad	.LFB5100
	.uleb128 .LFE5100-.LFB5100
	.byte	0x7
	.quad	.LFB5103
	.uleb128 .LFE5103-.LFB5103
	.byte	0x7
	.quad	.LFB5106
	.uleb128 .LFE5106-.LFB5106
	.byte	0x7
	.quad	.LFB5107
	.uleb128 .LFE5107-.LFB5107
	.byte	0x7
	.quad	.LFB5108
	.uleb128 .LFE5108-.LFB5108
	.byte	0x7
	.quad	.LFB5109
	.uleb128 .LFE5109-.LFB5109
	.byte	0x7
	.quad	.LFB5112
	.uleb128 .LFE5112-.LFB5112
	.byte	0x7
	.quad	.LFB5114
	.uleb128 .LFE5114-.LFB5114
	.byte	0x7
	.quad	.LFB5117
	.uleb128 .LFE5117-.LFB5117
	.byte	0x7
	.quad	.LFB5121
	.uleb128 .LFE5121-.LFB5121
	.byte	0x7
	.quad	.LFB5122
	.uleb128 .LFE5122-.LFB5122
	.byte	0x7
	.quad	.LFB5124
	.uleb128 .LFE5124-.LFB5124
	.byte	0x7
	.quad	.LFB5125
	.uleb128 .LFE5125-.LFB5125
	.byte	0x7
	.quad	.LFB5126
	.uleb128 .LFE5126-.LFB5126
	.byte	0x7
	.quad	.LFB5127
	.uleb128 .LFE5127-.LFB5127
	.byte	0x7
	.quad	.LFB5123
	.uleb128 .LFE5123-.LFB5123
	.byte	0x7
	.quad	.LFB5128
	.uleb128 .LFE5128-.LFB5128
	.byte	0x7
	.quad	.LFB5129
	.uleb128 .LFE5129-.LFB5129
	.byte	0x7
	.quad	.LFB5130
	.uleb128 .LFE5130-.LFB5130
	.byte	0x7
	.quad	.LFB5131
	.uleb128 .LFE5131-.LFB5131
	.byte	0x7
	.quad	.LFB5134
	.uleb128 .LFE5134-.LFB5134
	.byte	0x7
	.quad	.LFB5136
	.uleb128 .LFE5136-.LFB5136
	.byte	0x7
	.quad	.LFB5139
	.uleb128 .LFE5139-.LFB5139
	.byte	0x7
	.quad	.LFB5141
	.uleb128 .LFE5141-.LFB5141
	.byte	0x7
	.quad	.LFB5142
	.uleb128 .LFE5142-.LFB5142
	.byte	0x7
	.quad	.LFB5143
	.uleb128 .LFE5143-.LFB5143
	.byte	0x7
	.quad	.LFB5144
	.uleb128 .LFE5144-.LFB5144
	.byte	0x7
	.quad	.LFB5145
	.uleb128 .LFE5145-.LFB5145
	.byte	0x7
	.quad	.LFB5146
	.uleb128 .LFE5146-.LFB5146
	.byte	0x7
	.quad	.LFB5147
	.uleb128 .LFE5147-.LFB5147
	.byte	0x7
	.quad	.LFB5149
	.uleb128 .LFE5149-.LFB5149
	.byte	0x7
	.quad	.LFB5151
	.uleb128 .LFE5151-.LFB5151
	.byte	0x7
	.quad	.LFB5152
	.uleb128 .LFE5152-.LFB5152
	.byte	0x7
	.quad	.LFB5302
	.uleb128 .LFE5302-.LFB5302
	.byte	0x7
	.quad	.LFB5304
	.uleb128 .LFE5304-.LFB5304
	.byte	0x7
	.quad	.LFB5307
	.uleb128 .LFE5307-.LFB5307
	.byte	0x7
	.quad	.LFB5311
	.uleb128 .LFE5311-.LFB5311
	.byte	0x7
	.quad	.LFB5313
	.uleb128 .LFE5313-.LFB5313
	.byte	0x7
	.quad	.LFB5316
	.uleb128 .LFE5316-.LFB5316
	.byte	0x7
	.quad	.LFB5318
	.uleb128 .LFE5318-.LFB5318
	.byte	0x7
	.quad	.LFB5319
	.uleb128 .LFE5319-.LFB5319
	.byte	0x7
	.quad	.LFB5320
	.uleb128 .LFE5320-.LFB5320
	.byte	0x7
	.quad	.LFB5321
	.uleb128 .LFE5321-.LFB5321
	.byte	0x7
	.quad	.LFB5322
	.uleb128 .LFE5322-.LFB5322
	.byte	0x7
	.quad	.LFB5327
	.uleb128 .LFE5327-.LFB5327
	.byte	0x7
	.quad	.LFB5328
	.uleb128 .LFE5328-.LFB5328
	.byte	0x7
	.quad	.LFB5329
	.uleb128 .LFE5329-.LFB5329
	.byte	0x7
	.quad	.LFB5330
	.uleb128 .LFE5330-.LFB5330
	.byte	0x7
	.quad	.LFB5332
	.uleb128 .LFE5332-.LFB5332
	.byte	0x7
	.quad	.LFB5335
	.uleb128 .LFE5335-.LFB5335
	.byte	0x7
	.quad	.LFB5337
	.uleb128 .LFE5337-.LFB5337
	.byte	0x7
	.quad	.LFB5338
	.uleb128 .LFE5338-.LFB5338
	.byte	0x7
	.quad	.LFB5339
	.uleb128 .LFE5339-.LFB5339
	.byte	0x7
	.quad	.LFB5340
	.uleb128 .LFE5340-.LFB5340
	.byte	0x7
	.quad	.LFB5341
	.uleb128 .LFE5341-.LFB5341
	.byte	0x7
	.quad	.LFB5343
	.uleb128 .LFE5343-.LFB5343
	.byte	0x7
	.quad	.LFB5344
	.uleb128 .LFE5344-.LFB5344
	.byte	0x7
	.quad	.LFB5345
	.uleb128 .LFE5345-.LFB5345
	.byte	0x7
	.quad	.LFB5346
	.uleb128 .LFE5346-.LFB5346
	.byte	0x7
	.quad	.LFB5347
	.uleb128 .LFE5347-.LFB5347
	.byte	0x7
	.quad	.LFB5348
	.uleb128 .LFE5348-.LFB5348
	.byte	0x7
	.quad	.LFB5349
	.uleb128 .LFE5349-.LFB5349
	.byte	0x7
	.quad	.LFB5350
	.uleb128 .LFE5350-.LFB5350
	.byte	0x7
	.quad	.LFB5351
	.uleb128 .LFE5351-.LFB5351
	.byte	0x7
	.quad	.LFB5352
	.uleb128 .LFE5352-.LFB5352
	.byte	0x7
	.quad	.LFB5353
	.uleb128 .LFE5353-.LFB5353
	.byte	0x7
	.quad	.LFB5354
	.uleb128 .LFE5354-.LFB5354
	.byte	0x7
	.quad	.LFB5356
	.uleb128 .LFE5356-.LFB5356
	.byte	0x7
	.quad	.LFB5357
	.uleb128 .LFE5357-.LFB5357
	.byte	0x7
	.quad	.LFB5358
	.uleb128 .LFE5358-.LFB5358
	.byte	0x7
	.quad	.LFB5359
	.uleb128 .LFE5359-.LFB5359
	.byte	0x7
	.quad	.LFB5362
	.uleb128 .LFE5362-.LFB5362
	.byte	0x7
	.quad	.LFB5364
	.uleb128 .LFE5364-.LFB5364
	.byte	0x7
	.quad	.LFB5367
	.uleb128 .LFE5367-.LFB5367
	.byte	0x7
	.quad	.LFB5369
	.uleb128 .LFE5369-.LFB5369
	.byte	0x7
	.quad	.LFB5370
	.uleb128 .LFE5370-.LFB5370
	.byte	0x7
	.quad	.LFB5371
	.uleb128 .LFE5371-.LFB5371
	.byte	0x7
	.quad	.LFB5372
	.uleb128 .LFE5372-.LFB5372
	.byte	0x7
	.quad	.LFB5374
	.uleb128 .LFE5374-.LFB5374
	.byte	0x7
	.quad	.LFB5375
	.uleb128 .LFE5375-.LFB5375
	.byte	0x7
	.quad	.LFB5376
	.uleb128 .LFE5376-.LFB5376
	.byte	0x7
	.quad	.LFB5379
	.uleb128 .LFE5379-.LFB5379
	.byte	0x7
	.quad	.LFB5380
	.uleb128 .LFE5380-.LFB5380
	.byte	0x7
	.quad	.LFB5381
	.uleb128 .LFE5381-.LFB5381
	.byte	0x7
	.quad	.LFB5383
	.uleb128 .LFE5383-.LFB5383
	.byte	0x7
	.quad	.LFB5382
	.uleb128 .LFE5382-.LFB5382
	.byte	0x7
	.quad	.LFB5478
	.uleb128 .LFE5478-.LFB5478
	.byte	0x7
	.quad	.LFB5481
	.uleb128 .LFE5481-.LFB5481
	.byte	0x7
	.quad	.LFB5482
	.uleb128 .LFE5482-.LFB5482
	.byte	0x7
	.quad	.LFB5483
	.uleb128 .LFE5483-.LFB5483
	.byte	0x7
	.quad	.LFB5485
	.uleb128 .LFE5485-.LFB5485
	.byte	0x7
	.quad	.LFB5488
	.uleb128 .LFE5488-.LFB5488
	.byte	0x7
	.quad	.LFB5490
	.uleb128 .LFE5490-.LFB5490
	.byte	0x7
	.quad	.LFB5491
	.uleb128 .LFE5491-.LFB5491
	.byte	0x7
	.quad	.LFB5492
	.uleb128 .LFE5492-.LFB5492
	.byte	0x7
	.quad	.LFB5493
	.uleb128 .LFE5493-.LFB5493
	.byte	0x7
	.quad	.LFB5494
	.uleb128 .LFE5494-.LFB5494
	.byte	0x7
	.quad	.LFB5495
	.uleb128 .LFE5495-.LFB5495
	.byte	0x7
	.quad	.LFB5496
	.uleb128 .LFE5496-.LFB5496
	.byte	0x7
	.quad	.LFB5497
	.uleb128 .LFE5497-.LFB5497
	.byte	0x7
	.quad	.LFB5498
	.uleb128 .LFE5498-.LFB5498
	.byte	0x7
	.quad	.LFB5499
	.uleb128 .LFE5499-.LFB5499
	.byte	0x7
	.quad	.LFB5500
	.uleb128 .LFE5500-.LFB5500
	.byte	0x7
	.quad	.LFB5501
	.uleb128 .LFE5501-.LFB5501
	.byte	0x7
	.quad	.LFB5502
	.uleb128 .LFE5502-.LFB5502
	.byte	0x7
	.quad	.LFB5503
	.uleb128 .LFE5503-.LFB5503
	.byte	0x7
	.quad	.LFB5504
	.uleb128 .LFE5504-.LFB5504
	.byte	0x7
	.quad	.LFB5505
	.uleb128 .LFE5505-.LFB5505
	.byte	0x7
	.quad	.LFB5506
	.uleb128 .LFE5506-.LFB5506
	.byte	0x7
	.quad	.LFB5507
	.uleb128 .LFE5507-.LFB5507
	.byte	0x7
	.quad	.LFB5509
	.uleb128 .LFE5509-.LFB5509
	.byte	0x7
	.quad	.LFB5511
	.uleb128 .LFE5511-.LFB5511
	.byte	0x7
	.quad	.LFB5512
	.uleb128 .LFE5512-.LFB5512
	.byte	0x7
	.quad	.LFB5513
	.uleb128 .LFE5513-.LFB5513
	.byte	0x7
	.quad	.LFB5518
	.uleb128 .LFE5518-.LFB5518
	.byte	0x7
	.quad	.LFB5515
	.uleb128 .LFE5515-.LFB5515
	.byte	0x7
	.quad	.LFB5514
	.uleb128 .LFE5514-.LFB5514
	.byte	0x7
	.quad	.LFB5519
	.uleb128 .LFE5519-.LFB5519
	.byte	0x7
	.quad	.LFB5522
	.uleb128 .LFE5522-.LFB5522
	.byte	0x7
	.quad	.LFB5523
	.uleb128 .LFE5523-.LFB5523
	.byte	0x7
	.quad	.LFB5526
	.uleb128 .LFE5526-.LFB5526
	.byte	0x7
	.quad	.LFB5527
	.uleb128 .LFE5527-.LFB5527
	.byte	0x7
	.quad	.LFB5528
	.uleb128 .LFE5528-.LFB5528
	.byte	0x7
	.quad	.LFB5529
	.uleb128 .LFE5529-.LFB5529
	.byte	0x7
	.quad	.LFB5530
	.uleb128 .LFE5530-.LFB5530
	.byte	0x7
	.quad	.LFB5532
	.uleb128 .LFE5532-.LFB5532
	.byte	0x7
	.quad	.LFB5533
	.uleb128 .LFE5533-.LFB5533
	.byte	0x7
	.quad	.LFB5534
	.uleb128 .LFE5534-.LFB5534
	.byte	0x7
	.quad	.LFB5535
	.uleb128 .LFE5535-.LFB5535
	.byte	0x7
	.quad	.LFB5536
	.uleb128 .LFE5536-.LFB5536
	.byte	0x7
	.quad	.LFB5540
	.uleb128 .LFE5540-.LFB5540
	.byte	0x7
	.quad	.LFB5541
	.uleb128 .LFE5541-.LFB5541
	.byte	0x7
	.quad	.LFB5543
	.uleb128 .LFE5543-.LFB5543
	.byte	0x7
	.quad	.LFB5544
	.uleb128 .LFE5544-.LFB5544
	.byte	0x7
	.quad	.LFB5546
	.uleb128 .LFE5546-.LFB5546
	.byte	0x7
	.quad	.LFB5545
	.uleb128 .LFE5545-.LFB5545
	.byte	0x7
	.quad	.LFB5547
	.uleb128 .LFE5547-.LFB5547
	.byte	0x7
	.quad	.LFB5542
	.uleb128 .LFE5542-.LFB5542
	.byte	0x7
	.quad	.LFB5549
	.uleb128 .LFE5549-.LFB5549
	.byte	0x7
	.quad	.LFB5551
	.uleb128 .LFE5551-.LFB5551
	.byte	0x7
	.quad	.LFB5552
	.uleb128 .LFE5552-.LFB5552
	.byte	0x7
	.quad	.LFB5557
	.uleb128 .LFE5557-.LFB5557
	.byte	0x7
	.quad	.LFB5554
	.uleb128 .LFE5554-.LFB5554
	.byte	0x7
	.quad	.LFB5553
	.uleb128 .LFE5553-.LFB5553
	.byte	0x7
	.quad	.LFB5558
	.uleb128 .LFE5558-.LFB5558
	.byte	0x7
	.quad	.LFB5564
	.uleb128 .LFE5564-.LFB5564
	.byte	0x7
	.quad	.LFB5565
	.uleb128 .LFE5565-.LFB5565
	.byte	0x7
	.quad	.LFB5566
	.uleb128 .LFE5566-.LFB5566
	.byte	0x7
	.quad	.LFB5567
	.uleb128 .LFE5567-.LFB5567
	.byte	0x7
	.quad	.LFB5568
	.uleb128 .LFE5568-.LFB5568
	.byte	0x7
	.quad	.LFB5569
	.uleb128 .LFE5569-.LFB5569
	.byte	0x7
	.quad	.LFB5648
	.uleb128 .LFE5648-.LFB5648
	.byte	0x7
	.quad	.LFB5650
	.uleb128 .LFE5650-.LFB5650
	.byte	0x7
	.quad	.LFB5651
	.uleb128 .LFE5651-.LFB5651
	.byte	0x7
	.quad	.LFB5652
	.uleb128 .LFE5652-.LFB5652
	.byte	0x7
	.quad	.LFB5654
	.uleb128 .LFE5654-.LFB5654
	.byte	0x7
	.quad	.LFB5656
	.uleb128 .LFE5656-.LFB5656
	.byte	0x7
	.quad	.LFB5657
	.uleb128 .LFE5657-.LFB5657
	.byte	0x7
	.quad	.LFB5658
	.uleb128 .LFE5658-.LFB5658
	.byte	0x7
	.quad	.LFB5659
	.uleb128 .LFE5659-.LFB5659
	.byte	0x7
	.quad	.LFB5660
	.uleb128 .LFE5660-.LFB5660
	.byte	0x7
	.quad	.LFB5661
	.uleb128 .LFE5661-.LFB5661
	.byte	0x7
	.quad	.LFB5662
	.uleb128 .LFE5662-.LFB5662
	.byte	0x7
	.quad	.LFB5664
	.uleb128 .LFE5664-.LFB5664
	.byte	0x7
	.quad	.LFB5663
	.uleb128 .LFE5663-.LFB5663
	.byte	0x7
	.quad	.LFB5665
	.uleb128 .LFE5665-.LFB5665
	.byte	0x7
	.quad	.LFB5666
	.uleb128 .LFE5666-.LFB5666
	.byte	0x7
	.quad	.LFB5667
	.uleb128 .LFE5667-.LFB5667
	.byte	0x7
	.quad	.LFB5669
	.uleb128 .LFE5669-.LFB5669
	.byte	0x7
	.quad	.LFB5668
	.uleb128 .LFE5668-.LFB5668
	.byte	0x7
	.quad	.LFB5671
	.uleb128 .LFE5671-.LFB5671
	.byte	0x7
	.quad	.LFB5670
	.uleb128 .LFE5670-.LFB5670
	.byte	0x7
	.quad	.LFB5672
	.uleb128 .LFE5672-.LFB5672
	.byte	0x7
	.quad	.LFB5673
	.uleb128 .LFE5673-.LFB5673
	.byte	0x7
	.quad	.LFB5674
	.uleb128 .LFE5674-.LFB5674
	.byte	0x7
	.quad	.LFB5675
	.uleb128 .LFE5675-.LFB5675
	.byte	0x7
	.quad	.LFB5676
	.uleb128 .LFE5676-.LFB5676
	.byte	0x7
	.quad	.LFB5678
	.uleb128 .LFE5678-.LFB5678
	.byte	0x7
	.quad	.LFB5681
	.uleb128 .LFE5681-.LFB5681
	.byte	0x7
	.quad	.LFB5682
	.uleb128 .LFE5682-.LFB5682
	.byte	0x7
	.quad	.LFB5683
	.uleb128 .LFE5683-.LFB5683
	.byte	0x7
	.quad	.LFB5684
	.uleb128 .LFE5684-.LFB5684
	.byte	0x7
	.quad	.LFB5685
	.uleb128 .LFE5685-.LFB5685
	.byte	0x7
	.quad	.LFB5686
	.uleb128 .LFE5686-.LFB5686
	.byte	0x7
	.quad	.LFB5687
	.uleb128 .LFE5687-.LFB5687
	.byte	0x7
	.quad	.LFB5688
	.uleb128 .LFE5688-.LFB5688
	.byte	0x7
	.quad	.LFB5689
	.uleb128 .LFE5689-.LFB5689
	.byte	0x7
	.quad	.LFB5690
	.uleb128 .LFE5690-.LFB5690
	.byte	0x7
	.quad	.LFB5691
	.uleb128 .LFE5691-.LFB5691
	.byte	0x7
	.quad	.LFB5692
	.uleb128 .LFE5692-.LFB5692
	.byte	0x7
	.quad	.LFB5693
	.uleb128 .LFE5693-.LFB5693
	.byte	0x7
	.quad	.LFB5694
	.uleb128 .LFE5694-.LFB5694
	.byte	0x7
	.quad	.LFB5696
	.uleb128 .LFE5696-.LFB5696
	.byte	0x7
	.quad	.LFB5697
	.uleb128 .LFE5697-.LFB5697
	.byte	0x7
	.quad	.LFB5695
	.uleb128 .LFE5695-.LFB5695
	.byte	0x7
	.quad	.LFB5698
	.uleb128 .LFE5698-.LFB5698
	.byte	0x7
	.quad	.LFB5699
	.uleb128 .LFE5699-.LFB5699
	.byte	0x7
	.quad	.LFB5702
	.uleb128 .LFE5702-.LFB5702
	.byte	0x7
	.quad	.LFB5704
	.uleb128 .LFE5704-.LFB5704
	.byte	0x7
	.quad	.LFB5705
	.uleb128 .LFE5705-.LFB5705
	.byte	0x7
	.quad	.LFB5706
	.uleb128 .LFE5706-.LFB5706
	.byte	0x7
	.quad	.LFB5707
	.uleb128 .LFE5707-.LFB5707
	.byte	0x7
	.quad	.LFB5708
	.uleb128 .LFE5708-.LFB5708
	.byte	0x7
	.quad	.LFB5709
	.uleb128 .LFE5709-.LFB5709
	.byte	0x7
	.quad	.LFB5710
	.uleb128 .LFE5710-.LFB5710
	.byte	0x7
	.quad	.LFB5711
	.uleb128 .LFE5711-.LFB5711
	.byte	0x7
	.quad	.LFB5712
	.uleb128 .LFE5712-.LFB5712
	.byte	0x7
	.quad	.LFB5713
	.uleb128 .LFE5713-.LFB5713
	.byte	0x7
	.quad	.LFB5795
	.uleb128 .LFE5795-.LFB5795
	.byte	0x7
	.quad	.LFB5796
	.uleb128 .LFE5796-.LFB5796
	.byte	0x7
	.quad	.LFB5797
	.uleb128 .LFE5797-.LFB5797
	.byte	0x7
	.quad	.LFB5798
	.uleb128 .LFE5798-.LFB5798
	.byte	0x7
	.quad	.LFB5799
	.uleb128 .LFE5799-.LFB5799
	.byte	0x7
	.quad	.LFB5801
	.uleb128 .LFE5801-.LFB5801
	.byte	0x7
	.quad	.LFB5802
	.uleb128 .LFE5802-.LFB5802
	.byte	0x7
	.quad	.LFB5803
	.uleb128 .LFE5803-.LFB5803
	.byte	0x7
	.quad	.LFB5804
	.uleb128 .LFE5804-.LFB5804
	.byte	0x7
	.quad	.LFB5805
	.uleb128 .LFE5805-.LFB5805
	.byte	0x7
	.quad	.LFB5806
	.uleb128 .LFE5806-.LFB5806
	.byte	0x7
	.quad	.LFB5808
	.uleb128 .LFE5808-.LFB5808
	.byte	0x7
	.quad	.LFB5809
	.uleb128 .LFE5809-.LFB5809
	.byte	0x7
	.quad	.LFB5810
	.uleb128 .LFE5810-.LFB5810
	.byte	0x7
	.quad	.LFB5811
	.uleb128 .LFE5811-.LFB5811
	.byte	0x7
	.quad	.LFB5812
	.uleb128 .LFE5812-.LFB5812
	.byte	0x7
	.quad	.LFB5814
	.uleb128 .LFE5814-.LFB5814
	.byte	0x7
	.quad	.LFB5813
	.uleb128 .LFE5813-.LFB5813
	.byte	0x7
	.quad	.LFB5816
	.uleb128 .LFE5816-.LFB5816
	.byte	0x7
	.quad	.LFB5817
	.uleb128 .LFE5817-.LFB5817
	.byte	0x7
	.quad	.LFB5818
	.uleb128 .LFE5818-.LFB5818
	.byte	0x7
	.quad	.LFB5819
	.uleb128 .LFE5819-.LFB5819
	.byte	0x7
	.quad	.LFB5815
	.uleb128 .LFE5815-.LFB5815
	.byte	0x7
	.quad	.LFB5820
	.uleb128 .LFE5820-.LFB5820
	.byte	0x7
	.quad	.LFB5821
	.uleb128 .LFE5821-.LFB5821
	.byte	0x7
	.quad	.LFB5822
	.uleb128 .LFE5822-.LFB5822
	.byte	0x7
	.quad	.LFB5823
	.uleb128 .LFE5823-.LFB5823
	.byte	0x7
	.quad	.LFB5826
	.uleb128 .LFE5826-.LFB5826
	.byte	0x7
	.quad	.LFB5827
	.uleb128 .LFE5827-.LFB5827
	.byte	0x7
	.quad	.LFB5825
	.uleb128 .LFE5825-.LFB5825
	.byte	0x7
	.quad	.LFB5828
	.uleb128 .LFE5828-.LFB5828
	.byte	0x7
	.quad	.LFB5829
	.uleb128 .LFE5829-.LFB5829
	.byte	0x7
	.quad	.LFB5832
	.uleb128 .LFE5832-.LFB5832
	.byte	0x7
	.quad	.LFB5831
	.uleb128 .LFE5831-.LFB5831
	.byte	0x7
	.quad	.LFB5830
	.uleb128 .LFE5830-.LFB5830
	.byte	0x7
	.quad	.LFB5836
	.uleb128 .LFE5836-.LFB5836
	.byte	0x7
	.quad	.LFB5833
	.uleb128 .LFE5833-.LFB5833
	.byte	0x7
	.quad	.LFB5837
	.uleb128 .LFE5837-.LFB5837
	.byte	0x7
	.quad	.LFB5838
	.uleb128 .LFE5838-.LFB5838
	.byte	0x7
	.quad	.LFB5839
	.uleb128 .LFE5839-.LFB5839
	.byte	0x7
	.quad	.LFB5840
	.uleb128 .LFE5840-.LFB5840
	.byte	0x7
	.quad	.LFB5841
	.uleb128 .LFE5841-.LFB5841
	.byte	0x7
	.quad	.LFB5842
	.uleb128 .LFE5842-.LFB5842
	.byte	0x7
	.quad	.LFB5843
	.uleb128 .LFE5843-.LFB5843
	.byte	0x7
	.quad	.LFB5879
	.uleb128 .LFE5879-.LFB5879
	.byte	0x7
	.quad	.LFB5880
	.uleb128 .LFE5880-.LFB5880
	.byte	0x7
	.quad	.LFB5881
	.uleb128 .LFE5881-.LFB5881
	.byte	0x7
	.quad	.LFB5883
	.uleb128 .LFE5883-.LFB5883
	.byte	0x7
	.quad	.LFB5884
	.uleb128 .LFE5884-.LFB5884
	.byte	0x7
	.quad	.LFB5885
	.uleb128 .LFE5885-.LFB5885
	.byte	0x7
	.quad	.LFB5886
	.uleb128 .LFE5886-.LFB5886
	.byte	0x7
	.quad	.LFB5887
	.uleb128 .LFE5887-.LFB5887
	.byte	0x7
	.quad	.LFB5888
	.uleb128 .LFE5888-.LFB5888
	.byte	0x7
	.quad	.LFB5889
	.uleb128 .LFE5889-.LFB5889
	.byte	0x7
	.quad	.LFB5890
	.uleb128 .LFE5890-.LFB5890
	.byte	0x7
	.quad	.LFB5891
	.uleb128 .LFE5891-.LFB5891
	.byte	0x7
	.quad	.LFB5892
	.uleb128 .LFE5892-.LFB5892
	.byte	0x7
	.quad	.LFB5894
	.uleb128 .LFE5894-.LFB5894
	.byte	0x7
	.quad	.LFB5893
	.uleb128 .LFE5893-.LFB5893
	.byte	0x7
	.quad	.LFB5895
	.uleb128 .LFE5895-.LFB5895
	.byte	0x7
	.quad	.LFB5896
	.uleb128 .LFE5896-.LFB5896
	.byte	0x7
	.quad	.LFB5897
	.uleb128 .LFE5897-.LFB5897
	.byte	0x7
	.quad	.LFB5898
	.uleb128 .LFE5898-.LFB5898
	.byte	0x7
	.quad	.LFB5899
	.uleb128 .LFE5899-.LFB5899
	.byte	0x7
	.quad	.LFB5900
	.uleb128 .LFE5900-.LFB5900
	.byte	0x7
	.quad	.LFB5901
	.uleb128 .LFE5901-.LFB5901
	.byte	0x7
	.quad	.LFB5902
	.uleb128 .LFE5902-.LFB5902
	.byte	0x7
	.quad	.LFB5903
	.uleb128 .LFE5903-.LFB5903
	.byte	0x7
	.quad	.LFB5904
	.uleb128 .LFE5904-.LFB5904
	.byte	0x7
	.quad	.LFB5905
	.uleb128 .LFE5905-.LFB5905
	.byte	0x7
	.quad	.LFB5906
	.uleb128 .LFE5906-.LFB5906
	.byte	0x7
	.quad	.LFB5907
	.uleb128 .LFE5907-.LFB5907
	.byte	0x7
	.quad	.LFB5908
	.uleb128 .LFE5908-.LFB5908
	.byte	0x7
	.quad	.LFB5909
	.uleb128 .LFE5909-.LFB5909
	.byte	0x7
	.quad	.LFB5910
	.uleb128 .LFE5910-.LFB5910
	.byte	0x7
	.quad	.LFB5911
	.uleb128 .LFE5911-.LFB5911
	.byte	0x7
	.quad	.LFB5913
	.uleb128 .LFE5913-.LFB5913
	.byte	0x7
	.quad	.LFB5912
	.uleb128 .LFE5912-.LFB5912
	.byte	0x7
	.quad	.LFB5914
	.uleb128 .LFE5914-.LFB5914
	.byte	0x7
	.quad	.LFB5916
	.uleb128 .LFE5916-.LFB5916
	.byte	0x7
	.quad	.LFB5915
	.uleb128 .LFE5915-.LFB5915
	.byte	0x7
	.quad	.LFB5917
	.uleb128 .LFE5917-.LFB5917
	.byte	0x7
	.quad	.LFB5918
	.uleb128 .LFE5918-.LFB5918
	.byte	0x7
	.quad	.LFB5919
	.uleb128 .LFE5919-.LFB5919
	.byte	0x7
	.quad	.LFB5920
	.uleb128 .LFE5920-.LFB5920
	.byte	0x7
	.quad	.LFB5921
	.uleb128 .LFE5921-.LFB5921
	.byte	0x7
	.quad	.LFB5923
	.uleb128 .LFE5923-.LFB5923
	.byte	0x7
	.quad	.LFB5922
	.uleb128 .LFE5922-.LFB5922
	.byte	0x7
	.quad	.LFB5924
	.uleb128 .LFE5924-.LFB5924
	.byte	0x7
	.quad	.LFB5926
	.uleb128 .LFE5926-.LFB5926
	.byte	0x7
	.quad	.LFB5928
	.uleb128 .LFE5928-.LFB5928
	.byte	0x7
	.quad	.LFB5931
	.uleb128 .LFE5931-.LFB5931
	.byte	0x7
	.quad	.LFB5930
	.uleb128 .LFE5930-.LFB5930
	.byte	0x7
	.quad	.LFB5929
	.uleb128 .LFE5929-.LFB5929
	.byte	0x7
	.quad	.LFB5949
	.uleb128 .LFE5949-.LFB5949
	.byte	0x7
	.quad	.LFB5948
	.uleb128 .LFE5948-.LFB5948
	.byte	0x7
	.quad	.LFB5950
	.uleb128 .LFE5950-.LFB5950
	.byte	0x7
	.quad	.LFB5951
	.uleb128 .LFE5951-.LFB5951
	.byte	0x7
	.quad	.LFB5952
	.uleb128 .LFE5952-.LFB5952
	.byte	0x7
	.quad	.LFB5953
	.uleb128 .LFE5953-.LFB5953
	.byte	0x7
	.quad	.LFB5954
	.uleb128 .LFE5954-.LFB5954
	.byte	0x7
	.quad	.LFB5955
	.uleb128 .LFE5955-.LFB5955
	.byte	0x7
	.quad	.LFB5956
	.uleb128 .LFE5956-.LFB5956
	.byte	0x7
	.quad	.LFB5957
	.uleb128 .LFE5957-.LFB5957
	.byte	0x7
	.quad	.LFB5960
	.uleb128 .LFE5960-.LFB5960
	.byte	0x7
	.quad	.LFB5961
	.uleb128 .LFE5961-.LFB5961
	.byte	0x7
	.quad	.LFB5962
	.uleb128 .LFE5962-.LFB5962
	.byte	0x7
	.quad	.LFB5964
	.uleb128 .LFE5964-.LFB5964
	.byte	0x7
	.quad	.LFB5965
	.uleb128 .LFE5965-.LFB5965
	.byte	0x7
	.quad	.LFB5966
	.uleb128 .LFE5966-.LFB5966
	.byte	0x7
	.quad	.LFB5967
	.uleb128 .LFE5967-.LFB5967
	.byte	0x7
	.quad	.LFB5969
	.uleb128 .LFE5969-.LFB5969
	.byte	0x7
	.quad	.LFB5970
	.uleb128 .LFE5970-.LFB5970
	.byte	0x7
	.quad	.LFB5972
	.uleb128 .LFE5972-.LFB5972
	.byte	0x7
	.quad	.LFB5971
	.uleb128 .LFE5971-.LFB5971
	.byte	0x7
	.quad	.LFB5973
	.uleb128 .LFE5973-.LFB5973
	.byte	0x7
	.quad	.LFB5974
	.uleb128 .LFE5974-.LFB5974
	.byte	0x7
	.quad	.LFB5975
	.uleb128 .LFE5975-.LFB5975
	.byte	0x7
	.quad	.LFB5984
	.uleb128 .LFE5984-.LFB5984
	.byte	0x7
	.quad	.LFB5985
	.uleb128 .LFE5985-.LFB5985
	.byte	0x7
	.quad	.LFB5987
	.uleb128 .LFE5987-.LFB5987
	.byte	0x7
	.quad	.LFB5988
	.uleb128 .LFE5988-.LFB5988
	.byte	0x7
	.quad	.LFB5989
	.uleb128 .LFE5989-.LFB5989
	.byte	0x7
	.quad	.LFB5990
	.uleb128 .LFE5990-.LFB5990
	.byte	0x7
	.quad	.LFB5991
	.uleb128 .LFE5991-.LFB5991
	.byte	0x7
	.quad	.LFB5992
	.uleb128 .LFE5992-.LFB5992
	.byte	0x7
	.quad	.LFB5993
	.uleb128 .LFE5993-.LFB5993
	.byte	0x7
	.quad	.LFB5994
	.uleb128 .LFE5994-.LFB5994
	.byte	0x7
	.quad	.LFB5995
	.uleb128 .LFE5995-.LFB5995
	.byte	0x7
	.quad	.LFB5996
	.uleb128 .LFE5996-.LFB5996
	.byte	0x7
	.quad	.LFB5998
	.uleb128 .LFE5998-.LFB5998
	.byte	0x7
	.quad	.LFB5999
	.uleb128 .LFE5999-.LFB5999
	.byte	0x7
	.quad	.LFB6000
	.uleb128 .LFE6000-.LFB6000
	.byte	0x7
	.quad	.LFB5997
	.uleb128 .LFE5997-.LFB5997
	.byte	0x7
	.quad	.LFB6001
	.uleb128 .LFE6001-.LFB6001
	.byte	0x7
	.quad	.LFB6002
	.uleb128 .LFE6002-.LFB6002
	.byte	0x7
	.quad	.LFB6003
	.uleb128 .LFE6003-.LFB6003
	.byte	0x7
	.quad	.LFB6007
	.uleb128 .LFE6007-.LFB6007
	.byte	0x7
	.quad	.LFB6004
	.uleb128 .LFE6004-.LFB6004
	.byte	0x7
	.quad	.LFB6008
	.uleb128 .LFE6008-.LFB6008
	.byte	0x7
	.quad	.LFB6009
	.uleb128 .LFE6009-.LFB6009
	.byte	0x7
	.quad	.LFB6010
	.uleb128 .LFE6010-.LFB6010
	.byte	0x7
	.quad	.LFB6011
	.uleb128 .LFE6011-.LFB6011
	.byte	0x7
	.quad	.LFB6012
	.uleb128 .LFE6012-.LFB6012
	.byte	0x7
	.quad	.LFB6013
	.uleb128 .LFE6013-.LFB6013
	.byte	0x7
	.quad	.LFB6014
	.uleb128 .LFE6014-.LFB6014
	.byte	0x7
	.quad	.LFB6015
	.uleb128 .LFE6015-.LFB6015
	.byte	0x7
	.quad	.LFB6016
	.uleb128 .LFE6016-.LFB6016
	.byte	0x7
	.quad	.LFB6017
	.uleb128 .LFE6017-.LFB6017
	.byte	0x7
	.quad	.LFB6018
	.uleb128 .LFE6018-.LFB6018
	.byte	0x7
	.quad	.LFB6019
	.uleb128 .LFE6019-.LFB6019
	.byte	0x7
	.quad	.LFB6020
	.uleb128 .LFE6020-.LFB6020
	.byte	0x7
	.quad	.LFB6021
	.uleb128 .LFE6021-.LFB6021
	.byte	0x7
	.quad	.LFB6026
	.uleb128 .LFE6026-.LFB6026
	.byte	0
.Ldebug_ranges3:
	.section	.debug_line,"dr"
.Ldebug_line0:
	.section	.debug_str,"dr"
.LASF17:
	.ascii "isless\0"
.LASF31:
	.ascii "_TrivialValueTypes\0"
.LASF136:
	.ascii "_M_create_storage\0"
.LASF141:
	.ascii "_M_default_initialize\0"
.LASF196:
	.ascii "__pointer\0"
.LASF124:
	.ascii "_M_fill_insert\0"
.LASF199:
	.ascii "__allocmax\0"
.LASF43:
	.ascii "iterator\0"
.LASF108:
	.ascii "capacity\0"
.LASF101:
	.ascii "assign\0"
.LASF23:
	.ascii "nearbyint\0"
.LASF97:
	.ascii "_M_deallocate\0"
.LASF13:
	.ascii "isnormal\0"
.LASF194:
	.ascii "__it\0"
.LASF139:
	.ascii "_S_relocate\0"
.LASF164:
	.ascii "_S_propagate_on_move_assign\0"
.LASF20:
	.ascii "isunordered\0"
.LASF68:
	.ascii "iter_reference_t\0"
.LASF161:
	.ascii "_S_select_on_copy\0"
.LASF140:
	.ascii "_M_fill_initialize\0"
.LASF86:
	.ascii "_M_finish\0"
.LASF178:
	.ascii "__allow_vector\0"
.LASF55:
	.ascii "_M_array\0"
.LASF7:
	.ascii "_IsSimple\0"
.LASF198:
	.ascii "__diffmax\0"
.LASF87:
	.ascii "_M_end_of_storage\0"
.LASF127:
	.ascii "_M_erase\0"
.LASF146:
	.ascii "_S_max_size\0"
.LASF154:
	.ascii "_Iter\0"
.LASF131:
	.ascii "~_Vector_impl\0"
.LASF80:
	.ascii "const_void_pointer\0"
.LASF45:
	.ascii "reference\0"
.LASF26:
	.ascii "remainder\0"
.LASF82:
	.ascii "select_on_container_copy_construction\0"
.LASF168:
	.ascii "other\0"
.LASF3:
	.ascii "operator()\0"
.LASF113:
	.ascii "back\0"
.LASF160:
	.ascii "_M_max_size\0"
.LASF18:
	.ascii "islessequal\0"
.LASF206:
	.ascii "__old_start\0"
.LASF130:
	.ascii "_Vector_impl\0"
.LASF210:
	.ascii "__new_finish\0"
.LASF120:
	.ascii "shrink_to_fit\0"
.LASF203:
	.ascii "__len\0"
.LASF64:
	.ascii "base\0"
.LASF79:
	.ascii "allocator_type\0"
.LASF11:
	.ascii "fpclassify\0"
.LASF95:
	.ascii "_M_impl\0"
.LASF214:
	.ascii "result\0"
.LASF24:
	.ascii "nextafter\0"
.LASF173:
	.ascii "Camera2D\0"
.LASF99:
	.ascii "vector\0"
.LASF118:
	.ascii "erase\0"
.LASF115:
	.ascii "push_back\0"
.LASF125:
	.ascii "_M_check_len\0"
.LASF201:
	.ascii "__location\0"
.LASF61:
	.ascii "_Iterator\0"
.LASF132:
	.ascii "_Tp_alloc_type\0"
.LASF134:
	.ascii "_Vector_base\0"
.LASF211:
	.ascii "__new_size\0"
.LASF117:
	.ascii "pop_back\0"
.LASF152:
	.ascii "_Container\0"
.LASF186:
	.ascii "__last\0"
.LASF192:
	.ascii "__from\0"
.LASF22:
	.ascii "hypot\0"
.LASF39:
	.ascii "_Pointer\0"
.LASF195:
	.ascii "__assignable\0"
.LASF74:
	.ascii "allocator\0"
.LASF85:
	.ascii "_M_start\0"
.LASF77:
	.ascii "deallocate\0"
.LASF103:
	.ascii "const_reverse_iterator\0"
.LASF96:
	.ascii "_M_allocate\0"
.LASF47:
	.ascii "operator++\0"
.LASF27:
	.ascii "_ForwardIterator\0"
.LASF119:
	.ascii "resize\0"
.LASF188:
	.ascii "__value\0"
.LASF9:
	.ascii "_BI1\0"
.LASF10:
	.ascii "_BI2\0"
.LASF41:
	.ascii "_Bit_iterator_base\0"
.LASF49:
	.ascii "operator+=\0"
.LASF137:
	.ascii "_S_nothrow_relocate\0"
.LASF105:
	.ascii "cbegin\0"
.LASF143:
	.ascii "_M_insert_rval\0"
.LASF111:
	.ascii "reserve\0"
.LASF25:
	.ascii "nexttoward\0"
.LASF190:
	.ascii "__lhs\0"
.LASF148:
	.ascii "_Args\0"
.LASF114:
	.ascii "data\0"
.LASF100:
	.ascii "~vector\0"
.LASF102:
	.ascii "rbegin\0"
.LASF167:
	.ascii "_S_nothrow_move\0"
.LASF162:
	.ascii "_S_on_swap\0"
.LASF32:
	.ascii "_Size\0"
.LASF73:
	.ascii "swap\0"
.LASF72:
	.ascii "exception_ptr\0"
.LASF93:
	.ascii "get_allocator\0"
.LASF37:
	.ascii "difference_type\0"
.LASF53:
	.ascii "const_reference\0"
.LASF19:
	.ascii "islessgreater\0"
.LASF48:
	.ascii "operator--\0"
.LASF207:
	.ascii "__old_finish\0"
.LASF128:
	.ascii "_Vector_impl_data\0"
.LASF175:
	.ascii "swprintf\0"
.LASF112:
	.ascii "front\0"
.LASF110:
	.ascii "_M_range_check\0"
.LASF29:
	.ascii "__destroy<int*>\0"
.LASF57:
	.ascii "_M_len\0"
.LASF46:
	.ascii "operator*\0"
.LASF66:
	.ascii "operator+\0"
.LASF67:
	.ascii "operator-\0"
.LASF91:
	.ascii "_Bvector_impl\0"
.LASF147:
	.ascii "_M_move_assign\0"
.LASF159:
	.ascii "new_allocator\0"
.LASF63:
	.ascii "iterator_type\0"
.LASF35:
	.ascii "operator=\0"
.LASF180:
	.ascii "Blorb\0"
.LASF59:
	.ascii "size\0"
.LASF89:
	.ascii "_M_swap_data\0"
.LASF84:
	.ascii "_Bvector_impl_data\0"
.LASF36:
	.ascii "operator==\0"
.LASF52:
	.ascii "_Bit_const_iterator\0"
.LASF158:
	.ascii "_Value\0"
.LASF133:
	.ascii "_M_get_Tp_allocator\0"
.LASF165:
	.ascii "_S_propagate_on_swap\0"
.LASF104:
	.ascii "rend\0"
.LASF50:
	.ascii "operator-=\0"
.LASF193:
	.ascii "__res\0"
.LASF65:
	.ascii "operator->\0"
.LASF182:
	.ascii "operator delete\0"
.LASF56:
	.ascii "size_type\0"
.LASF181:
	.ascii "operator new\0"
.LASF14:
	.ascii "signbit\0"
.LASF179:
	.ascii "__allow_parallel\0"
.LASF204:
	.ascii "__position\0"
.LASF144:
	.ascii "_M_emplace_aux\0"
.LASF183:
	.ascii "this\0"
.LASF166:
	.ascii "_S_always_equal\0"
.LASF187:
	.ascii "__result\0"
.LASF54:
	.ascii "const_iterator\0"
.LASF121:
	.ascii "clear\0"
.LASF202:
	.ascii "__alloc\0"
.LASF106:
	.ascii "crbegin\0"
.LASF69:
	.ascii "iter_difference_t\0"
.LASF126:
	.ascii "_M_erase_at_end\0"
.LASF4:
	.ascii "__detail\0"
.LASF42:
	.ascii "_Bit_iterator\0"
.LASF150:
	.ascii "_FIte\0"
.LASF12:
	.ascii "isfinite\0"
.LASF197:
	.ascii "__cur\0"
.LASF92:
	.ascii "_M_get_Bit_allocator\0"
.LASF51:
	.ascii "operator[]\0"
.LASF116:
	.ascii "insert\0"
.LASF157:
	.ascii "_Predicate\0"
.LASF213:
	.ascii "condition_str\0"
.LASF78:
	.ascii "pointer\0"
.LASF33:
	.ascii "_Bit_reference\0"
.LASF174:
	.ascii "target\0"
.LASF44:
	.ascii "_M_const_cast\0"
.LASF184:
	.ascii "__in_chrg\0"
.LASF34:
	.ascii "operator bool\0"
.LASF28:
	.ascii "__destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >\0"
.LASF81:
	.ascii "max_size\0"
.LASF40:
	.ascii "_Reference\0"
.LASF16:
	.ascii "isgreaterequal\0"
.LASF109:
	.ascii "empty\0"
.LASF8:
	.ascii "_Category\0"
.LASF155:
	.ascii "_ReturnType\0"
.LASF191:
	.ascii "__rhs\0"
.LASF205:
	.ascii "__finish\0"
.LASF163:
	.ascii "_S_propagate_on_copy_assign\0"
.LASF71:
	.ascii "type\0"
.LASF21:
	.ascii "copysign\0"
.LASF90:
	.ascii "_Bit_pointer\0"
.LASF151:
	.ascii "_From\0"
.LASF6:
	.ascii "_IsMove\0"
.LASF185:
	.ascii "__first\0"
.LASF200:
	.ascii "__start\0"
.LASF177:
	.ascii "__allow_unsequenced\0"
.LASF75:
	.ascii "~allocator\0"
.LASF107:
	.ascii "crend\0"
.LASF169:
	.ascii "_M_current\0"
.LASF98:
	.ascii "_Alloc\0"
.LASF171:
	.ascii "_IteratorL\0"
.LASF76:
	.ascii "allocate\0"
.LASF208:
	.ascii "__elems_before\0"
.LASF172:
	.ascii "_IteratorR\0"
.LASF129:
	.ascii "_M_copy_data\0"
.LASF149:
	.ascii "_S_use_relocate\0"
.LASF5:
	.ascii "__iter_diff_t\0"
.LASF2:
	.ascii "value_type\0"
.LASF209:
	.ascii "__new_start\0"
.LASF122:
	.ascii "_M_shrink_to_fit\0"
.LASF30:
	.ascii "_InputIterator\0"
.LASF15:
	.ascii "isgreater\0"
.LASF58:
	.ascii "initializer_list\0"
.LASF60:
	.ascii "begin\0"
.LASF189:
	.ascii "__tmp\0"
.LASF170:
	.ascii "__normal_iterator\0"
.LASF70:
	.ascii "current\0"
.LASF123:
	.ascii "_M_fill_assign\0"
.LASF145:
	.ascii "_S_check_init_len\0"
.LASF62:
	.ascii "reverse_iterator\0"
.LASF94:
	.ascii "_Bvector_base\0"
.LASF135:
	.ascii "~_Vector_base\0"
.LASF38:
	.ascii "_Distance\0"
.LASF142:
	.ascii "_M_default_append\0"
.LASF176:
	.ascii "vswprintf\0"
.LASF153:
	.ascii "_OutputIterator\0"
.LASF156:
	.ascii "_Allocator\0"
.LASF212:
	.ascii "condition\0"
.LASF83:
	.ascii "rebind_alloc\0"
.LASF88:
	.ascii "_M_move_data\0"
.LASF138:
	.ascii "_S_do_relocate\0"
	.section	.debug_line_str,"dr"
.LASF1:
	.ascii "C:\\Users\\pluto\\Desktop\\tmpc\\not_temp\\3738\0"
.LASF0:
	.ascii "main.cpp\0"
	.ident	"GCC: (GNU) 11.2.0"
	.def	ColorTint;	.scl	2;	.type	32;	.endef
	.def	ColorFromNormalized;	.scl	2;	.type	32;	.endef
	.def	sinf;	.scl	2;	.type	32;	.endef
	.def	ColorToHSV;	.scl	2;	.type	32;	.endef
	.def	ColorFromHSV;	.scl	2;	.type	32;	.endef
	.def	ColorAlpha;	.scl	2;	.type	32;	.endef
	.def	GetRandomValue;	.scl	2;	.type	32;	.endef
	.def	sqrtf;	.scl	2;	.type	32;	.endef
	.def	atan2f;	.scl	2;	.type	32;	.endef
	.def	cosf;	.scl	2;	.type	32;	.endef
	.def	__mingw_vfprintf;	.scl	2;	.type	32;	.endef
	.def	exit;	.scl	2;	.type	32;	.endef
	.def	memset;	.scl	2;	.type	32;	.endef
	.def	_Unwind_Resume;	.scl	2;	.type	32;	.endef
	.def	DrawCircleV;	.scl	2;	.type	32;	.endef
	.def	TextFormat;	.scl	2;	.type	32;	.endef
	.def	DrawText;	.scl	2;	.type	32;	.endef
	.def	rand;	.scl	2;	.type	32;	.endef
	.def	DrawLineV;	.scl	2;	.type	32;	.endef
	.def	SetTargetFPS;	.scl	2;	.type	32;	.endef
	.def	InitWindow;	.scl	2;	.type	32;	.endef
	.def	IsMouseButtonDown;	.scl	2;	.type	32;	.endef
	.def	BeginDrawing;	.scl	2;	.type	32;	.endef
	.def	ClearBackground;	.scl	2;	.type	32;	.endef
	.def	BeginMode2D;	.scl	2;	.type	32;	.endef
	.def	EndMode2D;	.scl	2;	.type	32;	.endef
	.def	DrawFPS;	.scl	2;	.type	32;	.endef
	.def	EndDrawing;	.scl	2;	.type	32;	.endef
	.def	GetMousePosition;	.scl	2;	.type	32;	.endef
	.def	GetScreenToWorld2D;	.scl	2;	.type	32;	.endef
	.def	GetMouseDelta;	.scl	2;	.type	32;	.endef
	.def	GetFrameTime;	.scl	2;	.type	32;	.endef
	.def	WindowShouldClose;	.scl	2;	.type	32;	.endef
	.def	CloseWindow;	.scl	2;	.type	32;	.endef
	.def	_ZSt20__throw_length_errorPKc;	.scl	2;	.type	32;	.endef
	.def	__cxa_begin_catch;	.scl	2;	.type	32;	.endef
	.def	__cxa_rethrow;	.scl	2;	.type	32;	.endef
	.def	__cxa_end_catch;	.scl	2;	.type	32;	.endef
	.def	_ZdlPv;	.scl	2;	.type	32;	.endef
	.def	_Znwy;	.scl	2;	.type	32;	.endef
	.def	_ZdlPvy;	.scl	2;	.type	32;	.endef
	.def	_ZSt28__throw_bad_array_new_lengthv;	.scl	2;	.type	32;	.endef
	.def	_ZSt17__throw_bad_allocv;	.scl	2;	.type	32;	.endef
	.def	memmove;	.scl	2;	.type	32;	.endef
	.def	atexit;	.scl	2;	.type	32;	.endef
